////////////////////////////////////////////////////////////////////////////////
// Процедуры, используемые для локализации документа "Ввод остатков внеоборотных активов".
// 
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

#Область ФормаРедактированияСтрокиОС

Процедура ФормаРедактированияСтрокиОС_НастроитьЗависимыеЭлементыФормы(Форма, СтруктураИзмененныхРеквизитов, ПараметрыРеквизитовОбъекта) Экспорт

	//++ Локализация

	Элементы = Форма.Элементы;

	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;

	ПараметрыВводаОстатковОС = ВнеоборотныеАктивыКлиентСервер.ПараметрыВводаОстатковОС(Форма, Форма.ВспомогательныеРеквизиты);
	
	СтоимостьБУДоступна = Форма.ОтражатьВРеглУчете;
	
	АмортизацияДоступна = ПараметрыВводаОстатковОС.АмортизацияБУДоступна; 
							
	#Область СтраницаУчет

	Если ОбновитьВсе Тогда
		
		Если Форма.ОтражатьВРеглУчете И Форма.ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА Тогда
			Элементы.ДатаПринятияКУчетуБУ.Заголовок = НСтр("ru='Принят к учету (регл. учет)';uk='Прийнятий до обліку (регл. облік)'");
			Элементы.ДатаПринятияКУчетуУУ.Заголовок = НСтр("ru='Принят к учету (упр. учет)';uk='Прийнятий до обліку (упр. облік)'");
			Элементы.ГруппаПоследняяМодернизацияУпр.Заголовок = НСтр("ru='Модернизация (управленческий учет)';uk='Модернізація (управлінський облік)'");
			Элементы.ГруппаОтражениеАмортизационныхРасходовУУ.Заголовок = НСтр("ru='Амортизация (управленческий учет)';uk='Амортизація (управлінський облік)'");
			Элементы.ГруппаПорядокУчета.ОтображатьЗаголовок = Истина;
			Элементы.ГруппаПостоянныеСведения.ОтображатьЗаголовок = Истина;
		Иначе
			Элементы.ДатаПринятияКУчетуБУ.Заголовок = НСтр("ru='Принят к учету';uk='Прийнятий до обліку'");
			Элементы.ДатаПринятияКУчетуУУ.Заголовок = НСтр("ru='Принят к учету';uk='Прийнятий до обліку'");
			Элементы.ГруппаПоследняяМодернизацияУпр.Заголовок = НСтр("ru='Модернизация';uk='Модернізація'");
			Элементы.ГруппаОтражениеАмортизационныхРасходовУУ.Заголовок = НСтр("ru='Амортизация';uk='Амортизація'");
			Элементы.ГруппаПорядокУчета.ОтображатьЗаголовок = Ложь;
			Элементы.ГруппаПостоянныеСведения.ОтображатьЗаголовок = Ложь;
		КонецЕсли; 
		
	КонецЕсли;
	

	#КонецОбласти

	#Область СтраницаСтоимость

	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		//
	КонецЕсли;

	Если ОбновитьВсе Тогда
			
		Элементы.ГруппаНакопленнаяАмортизация.Заголовок = НСтр("ru='Накопленная амортизация';uk='Накопичена амортизація'");
		ВидимостьЭлементов = 
			АмортизацияДоступна
			ИЛИ ПараметрыВводаОстатковОС.АмортизацияУУДоступна 
				И Форма.ОтражатьВРеглУчете
				И Форма.ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА;
		Элементы.ОстаточнаяСтоимостьНУ.Видимость = ВидимостьЭлементов;
		Элементы.ОстаточнаяСтоимостьУУ.Видимость = ПараметрыВводаОстатковОС.АмортизацияУУДоступна;
		
	КонецЕсли;
			
	Элементы.ДекорацияЗаголовокБУ.Видимость = Элементы.ТекущаяСтоимостьБУ.Видимость;

	//
	Элементы.ОстаточнаяСтоимостьБУ.Видимость = Элементы.НакопленнаяАмортизацияБУ.Видимость;
	Элементы.ОстаточнаяСтоимостьНУ.Видимость = Элементы.НакопленнаяАмортизацияНУ.Видимость;
	Элементы.ОстаточнаяСтоимостьУУ.Видимость = Элементы.НакопленнаяАмортизацияУУ.Видимость;

	Элементы.ГруппаОстаточнаяСтоимостьЗаголовок.Видимость = 
		Элементы.ОстаточнаяСтоимостьБУ.Видимость
		ИЛИ Элементы.ОстаточнаяСтоимостьНУ.Видимость
		ИЛИ Элементы.ОстаточнаяСтоимостьУУ.Видимость;
		
	//
	Элементы.ОстаточнаяСтоимостьБУЦФ.Видимость = Элементы.НакопленнаяАмортизацияБУЦФ.Видимость;
	Элементы.ОстаточнаяСтоимостьНУЦФ.Видимость = Элементы.НакопленнаяАмортизацияНУЦФ.Видимость;
	Элементы.ГруппаОстаточнаяСтоимостьЗаголовокЦФ.Видимость = Элементы.ОстаточнаяСтоимостьБУЦФ.Видимость;
		
	#КонецОбласти

	#Область СтраницаСобытия
	Если ОбновитьВсе Тогда
			
		Если ПараметрыВводаОстатковОС.ДоступныПараметрыАмортизацииНУ Тогда
			ЗаголовокГруппы = НСтр("ru='Модернизация (бухгалтерский и налоговый учет)';uk='Модернізація (бухгалтерський і податковий облік)'");
		Иначе
			ЗаголовокГруппы = НСтр("ru='Модернизация (бухгалтерский учет)';uk='Модернізація (бухгалтерський облік)'");
		КонецЕсли; 
		Элементы.ГруппаПоследняяМодернизацияРегл.Заголовок = ЗаголовокГруппы;
		
	КонецЕсли;

	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВОперативномУчете")
		ИЛИ ОбновитьВсе Тогда
		
		Элементы.ГруппаПереоценкаРегл.Заголовок = 
			?(Форма.ОтражатьВУпрУчете,
				НСтр("ru='Переоценка (бухгалтерский учет)';uk='Переоцінка (бухгалтерський облік)'"),
				НСтр("ru='Переоценка';uk='Переоцінка'"));
		
		ЗначениеСвойства =
			Форма.ОтражатьВУпрУчете
			ИЛИ НЕ Форма.ОтражатьВОперативномУчете
				И Форма.ОтражатьВУУ;
			
		Элементы.РезервПереоценкиЗнак.Видимость = ЗначениеСвойства;
		Элементы.РезервПереоценкиСтоимостиСумма.Видимость = ЗначениеСвойства;
		Элементы.РезервПереоценкиАмортизацииСумма.Видимость = ЗначениеСвойства;
		
	КонецЕсли;

	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		Элементы.ГруппаПереоценкаУпр.Заголовок = 
			?(Форма.ОтражатьВРеглУчете И Форма.ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА,
				НСтр("ru='Переоценка (управленческий учет)';uk='Переоцінка (управлінський облік)'"),
				НСтр("ru='Переоценка';uk='Переоцінка'"));
		
	КонецЕсли;
	

	#КонецОбласти

	#Область СтраницаАмортизация

	Элементы.СрокИспользованияБУРасшифровка.Видимость = Элементы.СрокИспользованияБУ.Видимость;
	Элементы.СрокИспользованияБУОстаточныйРасшифровка.Видимость = Элементы.СрокИспользованияБУОстаточный.Видимость;

	Если СтруктураИзмененныхРеквизитов.Свойство("СрокИспользованияБУ")
		ИЛИ ОбновитьВсе Тогда
		
		Форма.СрокИспользованияБУРасшифровка = ВнеоборотныеАктивыКлиентСервер.РасшифровкаСрокаПолезногоИспользования(
			Форма.СрокИспользованияБУ);
			
	КонецЕсли;

	Если СтруктураИзмененныхРеквизитов.Свойство("СрокИспользованияБУОстаточный")
		ИЛИ ОбновитьВсе Тогда
		
		Форма.СрокИспользованияБУОстаточныйРасшифровка = ВнеоборотныеАктивыКлиентСервер.РасшифровкаСрокаПолезногоИспользования(
			Форма.СрокИспользованияБУОстаточный);
			
	КонецЕсли;

	Если СтруктураИзмененныхРеквизитов.Свойство("СрокИспользованияНУ")
		ИЛИ ОбновитьВсе Тогда
		
		Форма.СрокИспользованияНУРасшифровка = ВнеоборотныеАктивыКлиентСервер.РасшифровкаСрокаПолезногоИспользования(
			Форма.СрокИспользованияНУ);
			
	КонецЕсли;

	Если СтруктураИзмененныхРеквизитов.Свойство("ЕстьИзменениеПараметровАмортизацииБУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ЕстьРезервПереоценкиРегл") 
		ИЛИ ОбновитьВсе Тогда
		
		Если Форма.ЕстьИзменениеПараметровАмортизацииБУ И Форма.ЕстьРезервПереоценкиРегл Тогда
			Элементы.СтоимостьДляВычисленияАмортизацииБУ.Подсказка = НСтр("ru='Остаточная стоимость после модернизации и переоценки.';uk='Залишкова вартість після модернізації і переоцінки.'");
			Элементы.СтоимостьДляВычисленияАмортизацииЦФ.Подсказка = НСтр("ru='Целевые средства в остаточной стоимость на дату последней модернизации и переоценки.';uk='Цільові кошти в залишкової вартість на дату останньої модернізації та переоцінки.'");
		ИначеЕсли Форма.ЕстьИзменениеПараметровАмортизацииБУ Тогда
			Элементы.СтоимостьДляВычисленияАмортизацииБУ.Подсказка = НСтр("ru='Остаточная стоимость на дату последней модернизации.';uk='Залишкова вартість на дату останньої модернізації.'");
			Элементы.СтоимостьДляВычисленияАмортизацииЦФ.Подсказка = НСтр("ru='Целевые средства в остаточной стоимость на дату последней модернизации.';uk='Цільові кошти в залишкової вартість на дату останньої модернізації.'");
		КонецЕсли;
		
	КонецЕсли;
	

	Если ОбновитьВсе Тогда
		Элементы.СтраницаАмортизация.Заголовок = НСтр("ru='Амортизация';uk='Амортизація'");
		Если Форма.Дата < Форма.ВспомогательныеРеквизиты.ДатаНачалаУчета 
			И Форма.УпрУчетПоДаннымБУ
			И Форма.ОтражатьВУпрУчете Тогда
			Элементы.СрокИспользованияУУ.Заголовок = НСтр("ru='Остаточный срок';uk='Залишковий термін'");
			Элементы.СрокИспользованияУУ.Подсказка = НСтр("ru='Остаточный срок на дату перехода';uk='Залишковий строк на дату переходу'");
			Элементы.СрокИспользованияУУ.ОтображениеПодсказки = ОтображениеПодсказки.Кнопка;
		КонецЕсли; 
	КонецЕсли;

	Элементы.ГруппаНакопленнаяАмортизацияЗаголовок.Видимость = 
		Элементы.НакопленнаяАмортизацияУУ.Видимость 
		ИЛИ Элементы.НакопленнаяАмортизацияБУ.Видимость;

	#КонецОбласти

	#Область СтраницаОтражениеРасходов

	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("СтатьяРасходовУУ")
		ИЛИ ОбновитьВсе Тогда
		
		Если ПараметрыВводаОстатковОС.СтатьяРасходовУУОбязательна 
			ИЛИ ЗначениеЗаполнено(Форма.СтатьяРасходовУУ) Тогда
			
			Элементы.СтатьяРасходовУУ.ПодсказкаВвода = "";
			Элементы.АналитикаРасходовУУ.ПодсказкаВвода = "";
			
		ИначеЕсли НЕ ПараметрыВводаОстатковОС.СтатьяРасходовУУОбязательна Тогда
			
			Если ПараметрыВводаОстатковОС.ДоступноОтражениеРасходовБУ Тогда
				ПодсказкаВводаСтатьи = НСтр("ru='совпадает с бухгалтерским учетом';uk='збігається з бухгалтерським обліком'");
			Иначе
				ПодсказкаВводаСтатьи = НСтр("ru='совпадает с налоговым учетом';uk='збігається з податковим обліком'");
			КонецЕсли;
			
			Элементы.СтатьяРасходовУУ.ПодсказкаВвода = ПодсказкаВводаСтатьи;
			Элементы.АналитикаРасходовУУ.ПодсказкаВвода = ПодсказкаВводаСтатьи;
			
		КонецЕсли; 
		
	КонецЕсли;

	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("СтатьяРасходовНУ")
		ИЛИ ОбновитьВсе Тогда
		
		Если ПараметрыВводаОстатковОС.СтатьяРасходовНУОбязательна 
			ИЛИ ЗначениеЗаполнено(Форма.СтатьяРасходовНУ) Тогда
			
			Элементы.СтатьяРасходовНУ.ПодсказкаВвода = "";
			Элементы.АналитикаРасходовНУ.ПодсказкаВвода = "";
			
		Иначе
			
			ПодсказкаВводаСтатьи = НСтр("ru='совпадает с бухгалтерским учетом';uk='збігається з бухгалтерським обліком'");
			Элементы.СтатьяРасходовНУ.ПодсказкаВвода = ПодсказкаВводаСтатьи;
			Элементы.АналитикаРасходовНУ.ПодсказкаВвода = ПодсказкаВводаСтатьи;
			
		КонецЕсли; 
		
	КонецЕсли;

	Если СтруктураИзмененныхРеквизитов.Свойство("ПрименениеЦелевогоФинансирования")
		ИЛИ ОбновитьВсе Тогда
		Элементы.СтраницаОтражениеРасходов.Заголовок = 
			?(Форма.ПрименениеЦелевогоФинансирования, 
				НСтр("ru='Отражение доходов и расходов';uk='Відображення доходів і витрат'"), 
				НСтр("ru='Отражение расходов';uk='Відображення витрат'"));
	КонецЕсли;

	#КонецОбласти

	//-- Локализация
	
КонецПроцедуры

Функция ФормаРедактированияСтрокиОС_ТребуетсяПересчитатьЗависимыеСуммы(СтруктураИзмененныхРеквизитов) Экспорт

	ТребуетсяПересчитатьЗависимыеСуммы = Ложь;
	
	//++ Локализация

	ТребуетсяПересчитатьЗависимыеСуммы = 
		СтруктураИзмененныхРеквизитов.Свойство("ТекущаяСтоимостьБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ТекущаяСтоимостьНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПервоначальнаяСтоимостьБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПервоначальнаяСтоимостьНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("НакопленнаяАмортизацияБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("НакопленнаяАмортизацияНУ");
				
	//-- Локализация
	
	Возврат ТребуетсяПересчитатьЗависимыеСуммы;

КонецФункции

Процедура ФормаРедактированияСтрокиОС_ПриИзмененииРеквизитов(Объект, СписокРеквизитов) Экспорт

	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

Процедура ФормаРедактированияСтрокиОС_ПересчитатьЗависимыеСуммы(Форма) Экспорт
	
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

Процедура ФормаРедактированияСтрокиОС_ПересчитатьИтоговыеСуммы(Форма) Экспорт

	//++ Локализация


	// Остаточная стоимость не редактируется
	Если Форма.ОтражатьВРеглУчете Тогда
		Форма.ОстаточнаяСтоимостьБУ   = Форма.ТекущаяСтоимостьБУ   - Форма.НакопленнаяАмортизацияБУ;
		Форма.ОстаточнаяСтоимостьНУ   = Форма.ТекущаяСтоимостьНУ   - Форма.НакопленнаяАмортизацияНУ;
	Иначе	
		Форма.ОстаточнаяСтоимостьБУ = 0;
		Форма.ОстаточнаяСтоимостьНУ   = 0;
		
	КонецЕсли; 
	
	//-- Локализация
	
КонецПроцедуры

Процедура ФормаРедактированияСтрокиОС_ДополнитьЗначенияРеквизитовДоИзменения(Форма, ЗначенияРеквизитовДоИзменения) Экспорт

	//++ Локализация

	СписокРеквизитов = "ДатаПринятияКУчетуБУ,
						|СрокИспользованияНУ,СрокИспользованияБУ,
						|ТекущаяСтоимостьНУ,
						|НакопленнаяАмортизацияНУ,
						|ПервоначальнаяСтоимостьНУ,
						|СтатьяРасходовБУ,АналитикаРасходовБУ";

	ЗначенияРеквизитовДоИзмененияЛокализация = Новый Структура(СписокРеквизитов);
	ЗаполнитьЗначенияСвойств(ЗначенияРеквизитовДоИзмененияЛокализация, Форма);

	ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(ЗначенияРеквизитовДоИзменения, ЗначенияРеквизитовДоИзмененияЛокализация, Истина);

	//-- Локализация
	
КонецПроцедуры
 
#КонецОбласти

#Область ФормаРедактированияСтрокиНМА

Процедура ФормаРедактированияСтрокиНМА_НастроитьЗависимыеЭлементыФормы(Форма, СтруктураИзмененныхРеквизитов, ПараметрыПринятияКУчетуНМА, ПараметрыРеквизитовОбъекта) Экспорт

	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

Функция ФормаРедактированияСтрокиНМА_ТребуетсяПересчитатьЗависимыеСуммы(СтруктураИзмененныхРеквизитов) Экспорт

	ТребуетсяПересчитатьЗависимыеСуммы = Ложь;
	
	//++ Локализация
	//-- Локализация
	
	Возврат ТребуетсяПересчитатьЗависимыеСуммы;

КонецФункции

Процедура ФормаРедактированияСтрокиНМА_ДополнитьЗначенияРеквизитовДоИзменения(Форма, ЗначенияРеквизитовДоИзменения) Экспорт

	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

Процедура ФормаРедактированияСтрокиНМА_ПересчитатьЗависимыеСуммы(Форма) Экспорт
	
	МножительЦФ = ?(Форма.ПрименениеЦелевогоФинансирования, 1, 0);
	
	
	// Остаточная стоимость не редактируется
	Форма.ОстаточнаяСтоимостьНУ   = Форма.ТекущаяСтоимостьНУ   - Форма.НакопленнаяАмортизацияНУ;
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

Процедура ДополнитьЗначенияСвойствЗависимыхРеквизитов_ВводОстатков_ОС(Объект, ВспомогательныеРеквизиты, ПараметрыВводаОстатковОС, СтруктураИзмененныхРеквизитов, ПараметрыРеквизитовОбъекта) Экспорт

	//++ Локализация

	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	#Область Стоимость
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ВспомогательныеРеквизиты.ОтражатьВРеглУчете
			И ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль
			И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА;
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ТекущаяСтоимостьНУ", 
			"ТекущаяСтоимостьНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		КонецЕсли;
		
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ВспомогательныеРеквизиты.ОтражатьВРеглУчете
			И ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль
			И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета;
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПервоначальнаяСтоимостьНУ", 
			"ПервоначальнаяСтоимостьНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;


	Если СтруктураИзмененныхРеквизитов.Свойство("ПрименениеЦелевогоФинансирования")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ПрименениеЦелевогоФинансирования;
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ТекущаяСтоимостьБУЦФ", 
			"ТекущаяСтоимостьБУЦФ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
	КонецЕсли; 
			
	Если СтруктураИзмененныхРеквизитов.Свойство("ПрименениеЦелевогоФинансирования")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ПрименениеЦелевогоФинансирования
			И ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль;
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ТекущаяСтоимостьНУЦФ", 
			"ТекущаяСтоимостьНУЦФ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли; 
	
	
		

	Если СтруктураИзмененныхРеквизитов.Свойство("ПервоначальнаяСтоимостьОтличается")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = НЕ Объект.ПервоначальнаяСтоимостьОтличается;
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПервоначальнаяСтоимостьНУ", 
			"ПервоначальнаяСтоимостьНУ", 
			"ТолькоПросмотрБезОтметкиНезаполненногоБезОчистки", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;

	#КонецОбласти

	#Область События

	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства =
			ВспомогательныеРеквизиты.ОтражатьВРеглУчете
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета;
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НазваниеДокументаПринятияКУчету", 
			"НазваниеДокументаПринятияКУчету", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НомерДокументаПринятияКУчету", 
			"НомерДокументаПринятияКУчету", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;

	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства =
			ВспомогательныеРеквизиты.ОтражатьВРеглУчете
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета
			И (ВспомогательныеРеквизиты.Дата < ВспомогательныеРеквизиты.ДатаНачалаУчета);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ДокументВводаВЭксплуатациюБУ", 
			"ДокументВводаВЭксплуатациюБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;

	#КонецОбласти
	#Область ОтражениеРасходов


		
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("СтатьяРасходовУУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ПараметрыВводаОстатковОС.СтатьяРасходовУУОбязательна
			И (ВспомогательныеРеквизиты.Дата >= ВспомогательныеРеквизиты.ДатаНачалаУчета)
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета;
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовУУ", 
			"СтатьяРасходовУУ", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;

	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ПараметрыВводаОстатковОС.ДоступныПараметрыУчета
			И ПараметрыВводаОстатковОС.ДоступноОтражениеРасходовБУ;
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовБУ", 
			"СтатьяРасходовБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АналитикаРасходовБУ", 
			"АналитикаРасходовБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		//
		ЗначениеСвойства = 
			ПараметрыВводаОстатковОС.ДоступноОтражениеРасходовБУ
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета
			И ВспомогательныеРеквизиты.Дата >= ВспомогательныеРеквизиты.ДатаНачалаУчета;
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовБУ", 
			"СтатьяРасходовБУ", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;

	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства =
			ПараметрыВводаОстатковОС.ДоступноОтражениеРасходовНУ
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета;
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовНУ", 
			"СтатьяРасходовНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АналитикаРасходовНУ", 
			"АналитикаРасходовНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		//
		ЗначениеСвойства = 
			ПараметрыВводаОстатковОС.СтатьяРасходовНУОбязательна
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета
			И (ВспомогательныеРеквизиты.Дата >= ВспомогательныеРеквизиты.ДатаНачалаУчета);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовНУ", 
			"СтатьяРасходовНУ", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;

	#КонецОбласти

	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьЗначенияСвойствЗависимыхРеквизитов_ВводОстатков_НМА(Объект, ВспомогательныеРеквизиты, ПараметрыВводаОстатковНМА, СтруктураИзмененныхРеквизитов, ПараметрыРеквизитовОбъекта) Экспорт

	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьПараметрыВводаОстатковОС(Объект, ВспомогательныеРеквизиты, ПараметрыВводаОстатковОС) Экспорт
	
	//++ Локализация

	ПараметрыВводаОстатковОС.ДоступноОтражениеРасходовНУ = 
		ВспомогательныеРеквизиты.ОтражатьВРеглУчете
		И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА
		И ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль;

	ПараметрыВводаОстатковОС.СтатьяРасходовУУОбязательна = 
		ВспомогательныеРеквизиты.ОтражатьВУпрУчете 
		И НЕ ПараметрыВводаОстатковОС.ДоступноОтражениеРасходовБУ 
		И НЕ ПараметрыВводаОстатковОС.ДоступноОтражениеРасходовНУ;

	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьПараметрыВводаОстатковНМА(Объект, ВспомогательныеРеквизиты, ПараметрыВводаОстатковНМА) Экспорт
	
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
