
#Область ПрограммныйИнтерфейс

// Определяет объекты метаданных и отдельные реквизиты, которые исключаются из результатов поиска ссылок,
// не учитываются при монопольном удалении помеченных, замене ссылок и в отчете по местам использования.
//
// См. ОбщегоНазначения.ПриДобавленииИсключенийПоискаСсылок().
//
Процедура ПриДобавленииИсключенийПоискаСсылок(ИсключенияПоискаСсылок) Экспорт
	
	//++ НЕ БЗК
	//++ Локализация
	ИсключенияПоискаСсылок.Добавить(Метаданные.РегистрыСведений.ЗаданияКФормированиюИсходящихНалоговыхДокументов.ПолноеИмя());
	ИсключенияПоискаСсылок.Добавить(Метаданные.РегистрыСведений.ЗаданияКРасчетуНалоговыхОбязательствДополнительно.ПолноеИмя());
	//-- Локализация
	//-- НЕ БЗК
	
КонецПроцедуры

// Определяет соответствие имен параметров сеанса и обработчиков для их установки.
//
// В указанных модулях должна быть размещена процедура обработчика, в которую передаются параметры
//  ИмяПараметра           - Строка - имя параметра сеанса, который требуется установить.
//  УстановленныеПараметры - Массив - имена параметров, которые уже установлены.
// 
// Далее пример процедуры обработчика для копирования в указанные модули.
//
//// См. ОбщегоНазначенияПереопределяемый.ПриДобавленииОбработчиковУстановкиПараметровСеанса.
//
Процедура ПриДобавленииОбработчиковУстановкиПараметровСеанса(Обработчики) Экспорт
	
	//++ Локализация
	
	//++ НЕ ГОСИС
	
	// ИнтернетПоддержкаПользователей
	ИнтеграцияПодсистемБИП.ПриДобавленииОбработчиковУстановкиПараметровСеанса(Обработчики);
	// Конец ИнтернетПоддержкаПользователей
	
	//++ НЕ УТ
	// ЗарплатаКадрыРасширенный
	ЗарплатаКадрыРасширенный.ПриДобавленииОбработчиковУстановкиПараметровСеанса(Обработчики);
	// Конец ЗарплатаКадрыРасширенный
	
	//-- НЕ УТ
	
	
	//++ НЕ БЗК
	// ИнтеграцияС1СДокументооборотом
	ИнтеграцияС1СДокументооборот.ПриДобавленииОбработчиковУстановкиПараметровСеанса(Обработчики);
	// Конец ИнтеграцияС1СДокументооборотом
	//-- НЕ БЗК
	
	//-- НЕ ГОСИС
    
	Обработчики.Вставить("ПараметрыВнешнихРегламентированныхОтчетов", "РегламентированнаяОтчетностьВызовСервера.УстановитьПараметрыВнешнихРегламентированныхОтчетов");
    
	//-- Локализация
	Возврат;
	
КонецПроцедуры

// Позволяет задать значения параметров, необходимых для работы клиентского кода
// конфигурации без дополнительных серверных вызовов.
// 
// см. ОбщегоНазначенияПереопределяемый.ПриДобавленииПараметровРаботыКлиента()
//
Процедура ПриДобавленииПараметровРаботыКлиента(Параметры) Экспорт
	
	//++ Локализация
	// ИнтернетПоддержкаПользователей
	ИнтеграцияПодсистемБИП.ПриДобавленииПараметровРаботыКлиента(Параметры);
	// Конец ИнтернетПоддержкаПользователей
	//-- Локализация
	Возврат;
	
КонецПроцедуры

// Позволяет задать значения параметров, необходимых для работы клиентского кода
// при запуске конфигурации (в обработчиках событий ПередНачаломРаботыСистемы и ПриНачалеРаботыСистемы) 
// без дополнительных серверных вызовов. 
// 
// см. ОбщегоНазначенияПереопределяемый.ПриДобавленииПараметровРаботыКлиентаПриЗапуске()
//
Процедура ПриДобавленииПараметровРаботыКлиентаПриЗапуске(Параметры) Экспорт
	
	//++ Локализация
	// ИнтернетПоддержкаПользователей
	ИнтеграцияПодсистемБИП.ПриДобавленииПараметровРаботыКлиентаПриЗапуске(Параметры);
	// Конец ИнтернетПоддержкаПользователей
	
	
	//++ НЕ УТ
	
	//-- НЕ УТ          

	// Путеводитель по демо-базе
	ИмяОбработкиПутеводительПоДемоБазе = ИмяОбработкиПутеводительПоДемоБазе();
	ПоказатьПутеводительПоДемоБазе = ИмяОбработкиПутеводительПоДемоБазе <> Неопределено;
	Параметры.Вставить("ПоказатьПутеводительПоДемоБазе",     ПоказатьПутеводительПоДемоБазе);
	Параметры.Вставить("ИмяОбработкиПутеводительПоДемоБазе", ИмяОбработкиПутеводительПоДемоБазе);
	//-- Локализация
	Возврат;
	
КонецПроцедуры

// Вызывается при обновлении информационной базы для учета переименований подсистем и ролей в конфигурации.
//  
// см. ОбщегоНазначенияПереопределяемый.ПриДобавленииПереименованийОбъектовМетаданных()
//
Процедура ПриДобавленииПереименованийОбъектовМетаданных(Итог) Экспорт

	//++ Локализация
	//++ НЕ УТ
	ЗарплатаКадры.ЗаполнитьТаблицуПереименованияОбъектовМетаданных(Итог);	
	//-- НЕ УТ
	
	// ИнтернетПоддержкаПользователей
	ИнтеграцияПодсистемБИП.ПриДобавленииПереименованийОбъектовМетаданных(Итог);
	// Конец ИнтернетПоддержкаПользователей
	
	//-- Локализация
	Возврат;

КонецПроцедуры

// Определяет список версий программных интерфейсов, доступных через web-сервис InterfaceVersion.
// 
// См. ОбщегоНазначенияПереопределяемый.ПриОпределенииПоддерживаемыхВерсийПрограммныхИнтерфейсов()
//
Процедура ПриОпределенииПоддерживаемыхВерсийПрограммныхИнтерфейсов(ПоддерживаемыеВерсии) Экспорт

	//++ Локализация
	//++ НЕ УТ
	//-- НЕ УТ
	//-- Локализация
	Возврат;
	
КонецПроцедуры

#Область УстаревшиеПроцедурыИФункции

// Устарела. Следует использовать ПриДобавленииПараметровРаботыКлиентаПриЗапуске.
//
// Позволяет задать значения параметров, необходимых для работы клиентского кода
// при запуске конфигурации (в обработчиках событий ПередНачаломРаботыСистемы и ПриНачалеРаботыСистемы) 
// без дополнительных серверных вызовов. 
// Для получения значений этих параметров из клиентского кода
// см. СтандартныеПодсистемыКлиент.ПараметрыРаботыКлиентаПриЗапуске.
//
// Важно: недопустимо использовать команды сброса кэша повторно используемых модулей, 
// иначе запуск может привести к непредсказуемым ошибкам и лишним серверным вызовам.
//
// Параметры:
//   Параметры - Структура - имена и значения параметров работы клиента при запуске, которые необходимо задать.
//                           Для установки параметров работы клиента при запуске:
//                           Параметры.Вставить(<ИмяПараметра>, <код получения значения параметра>);
//
Процедура ПараметрыРаботыКлиентаПриЗапуске(Параметры) Экспорт

	//++ Локализация
	// ИнтернетПоддержкаПользователей
	ИнтеграцияПодсистемБИП.ПриДобавленииПараметровРаботыКлиентаПриЗапуске(Параметры);
	// Конец ИнтернетПоддержкаПользователей
	
	//++ НЕ УТ
	//-- НЕ УТ
	//-- Локализация

КонецПроцедуры

// Устарела. Следует использовать ПриДобавленииПараметровРаботыКлиента.
//
// см. ОбщегоНазначенияПереопределяемый.ПараметрыРаботыКлиента()
//
Процедура ПараметрыРаботыКлиента(Параметры) Экспорт
	
	//++ Локализация
	// ИнтернетПоддержкаПользователей
	ИнтеграцияПодсистемБИП.ПриДобавленииПараметровРаботыКлиента(Параметры);
	// Конец ИнтернетПоддержкаПользователей
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает имя внешней обработки путеводителя по демо-базе или пустое значение, если путеводитель запускать не требуется
// 
Функция ИмяОбработкиПутеводительПоДемоБазе()
	
	Если ОбщегоНазначения.РазделениеВключено() Тогда
		Возврат Неопределено;
	КонецЕсли;               
	
	Если НЕ ПравоДоступа("Чтение", Метаданные.Справочники.ДополнительныеОтчетыИОбработки) Тогда
		Возврат Неопределено;
	КонецЕсли;               

	ПоказыватьПриСтарте = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("ПутеводительПоДемоБазе", "Показывать", Истина);
	
	Если НЕ ПоказыватьПриСтарте Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ВнешниеОбработки.Ссылка
	|ИЗ
	|	Справочник.ДополнительныеОтчетыИОбработки КАК ВнешниеОбработки
	|ГДЕ
	|	ВнешниеОбработки.ИмяОбъекта = &ИмяОбъекта";
	
	Запрос.УстановитьПараметр("ИмяОбъекта", "ПутеводительПоДемонстрационнойБазе");
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат ДополнительныеОтчетыИОбработки.ПодключитьВнешнююОбработку(Выборка.Ссылка);
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

#КонецОбласти
