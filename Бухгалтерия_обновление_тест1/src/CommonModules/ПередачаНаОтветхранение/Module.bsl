
#Область ПрограммныйИнтерфейс

#Область Проведение

// Формирует параметры для проведения документа по регистрам учетного механизма через общий механизм проведения.
//
// Параметры:
//  Документ - ДокументОбъект - записываемый документ
//  Свойства - ФиксированнаяСтруктура - свойства документа (См. ПроведениеДокументов.СвойстваДокумента).
//
// Возвращаемое значение:
//  Структура - параметры учетного механизма (См. ПроведениеДокументов.ПараметрыУчетногоМеханизма()).
//
Функция ПараметрыДляПроведенияДокумента(Документ, Свойства) Экспорт
	
	Параметры = ПроведениеДокументов.ПараметрыУчетногоМеханизма();
	
	// Проведение
	Если Свойства.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		
		Параметры.ПодчиненныеРегистры.Добавить(Метаданные.РегистрыНакопления.ПереданнаяВозвратнаяТара);
		//++ НЕ УТ
		Параметры.ПодчиненныеРегистры.Добавить(Метаданные.РегистрыНакопления.ТоварыПереданныеПереработчику);
		Параметры.ПодчиненныеРегистры.Добавить(Метаданные.РегистрыНакопления.ТоварыПолученныеОтПереработчика);
		//-- НЕ УТ
		Параметры.ПодчиненныеРегистры.Добавить(Метаданные.РегистрыНакопления.ТоварыПереданныеНаКомиссию);
		
		Параметры.НезависимыеРегистры.Добавить(Метаданные.РегистрыСведений.ДатыПередачиТоваровНаКомиссию);
		
	КонецЕсли;
	
	// Контроль
	Если Свойства.РежимЗаписи <> РежимЗаписиДокумента.Запись Тогда
		
		ТипДокумента = ТипЗнч(Документ);
		
		Если Свойства.РежимЗаписи = РежимЗаписиДокумента.Проведение
				И (ТипДокумента = Тип("ДокументОбъект.ВозвратТоваровОтКлиента")
				//++ НЕ УТ
				Или ТипДокумента = Тип("ДокументОбъект.ВозвратСырьяОтПереработчика")
				//-- НЕ УТ
				Или ТипДокумента = Тип("ДокументОбъект.ВыкупВозвратнойТарыКлиентом")
				Или ТипДокумента = Тип("ДокументОбъект.КорректировкаРеализации"))
			Или Не Свойства.ЭтоНовый
				И (
				//++ НЕ УТ
				ТипДокумента = Тип("ДокументОбъект.ПередачаСырьяПереработчику")
				Или 
				//-- НЕ УТ
				ТипДокумента = Тип("ДокументОбъект.РеализацияТоваровУслуг")) Тогда
			Параметры.КонтрольныеРегистрыИзменений.Добавить(Метаданные.РегистрыНакопления.ПереданнаяВозвратнаяТара);
		КонецЕсли;
		
		//++ НЕ УТ
		Если Свойства.РежимЗаписи = РежимЗаписиДокумента.Проведение
				И ТипДокумента = Тип("ДокументОбъект.ВозвратСырьяОтПереработчика")
			Или Не Свойства.ЭтоНовый
				И ТипДокумента = Тип("ДокументОбъект.ПередачаСырьяПереработчику") Тогда
			Параметры.КонтрольныеРегистрыИзменений.Добавить(Метаданные.РегистрыНакопления.ТоварыПереданныеПереработчику);
		КонецЕсли;
		//-- НЕ УТ
		
		Параметры.КонтрольныеРегистрыЗаданий.Добавить(Метаданные.РегистрыНакопления.ТоварыПереданныеНаКомиссию);
		
	КонецЕсли;
	
	Возврат Параметры;
	
КонецФункции

// Процедура формирования движений по подчиненным регистрам передачи на ответхранение.
//
// Параметры:
//	ТаблицыДляДвижений - Структура - таблицы данных документа
//	Движения - КоллекцияДвижений - коллекция наборов записей движений документа
//	Отказ - Булево - признак отказа от проведения документа.
//
Процедура ОтразитьДвижения(ТаблицыДляДвижений, Движения, Отказ) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ПроведениеДокументов.ОтразитьДвижения(ТаблицыДляДвижений, Движения, "ПереданнаяВозвратнаяТара");
	ПроведениеДокументов.ОтразитьДвижения(ТаблицыДляДвижений, Движения, "ТоварыПереданныеПереработчику");
	ПроведениеДокументов.ОтразитьДвижения(ТаблицыДляДвижений, Движения, "ТоварыПолученныеОтПереработчика");
	ПроведениеДокументов.ОтразитьДвижения(ТаблицыДляДвижений, Движения, "ТоварыПереданныеНаКомиссию");
	
КонецПроцедуры

// Процедура формирования движений по независимым регистрам передачи на ответхранение.
//
// Параметры:
//	ТаблицыДляДвижений - Структура - таблицы данных документа
//	Документ - ДокументСсылка - ссылка на документ
//	Отказ - Булево - признак отказа от проведения документа.
//
Процедура ЗаписатьДанные(ТаблицыДляДвижений, Документ, Отказ) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если ТаблицыДляДвижений.Свойство("ТаблицаДатыПередачиТоваровНаКомиссию")
		И ЗначениеЗаполнено(ТаблицыДляДвижений.ТаблицаДатыПередачиТоваровНаКомиссию) Тогда
		
		Для Каждого СтрокаТаблицы Из ТаблицыДляДвижений.ТаблицаДатыПередачиТоваровНаКомиссию Цикл
			МенеджерЗаписи = РегистрыСведений.ДатыПередачиТоваровНаКомиссию.СоздатьМенеджерЗаписи();
			ЗаполнитьЗначенияСвойств(МенеджерЗаписи, СтрокаТаблицы);
			МенеджерЗаписи.Записать(Истина);
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

// Формирует тексты запросов для контроля изменений записанных движений регистров.
//
// Параметры:
//  Запрос - Запрос - запрос, хранящий параметры используемые в списке запросов
//  ТекстыЗапроса - СписокЗначений - список текстов запросов и их имен.
//  Документ - ДокументОбъект - записываемый документ.
//
Процедура ИнициализироватьДанныеКонтроляИзменений(Запрос, ТекстыЗапроса, Документ) Экспорт
	
	#Область ПереданнаяВозвратнаяТара
	
	Если ПроведениеДокументов.ЕстьЗаписиВТаблице(Документ, "ДвиженияПереданнаяВозвратнаяТараИзменение") Тогда
		
		ТекстЗапроса =
			"ВЫБРАТЬ
			|	ТаблицаОстатков.Партнер                        КАК Партнер,
			|	ТаблицаОстатков.Номенклатура                   КАК Номенклатура,
			|	ТаблицаОстатков.Номенклатура.ЕдиницаИзмерения  КАК ЕдиницаИзмерения,
			|	ТаблицаОстатков.Характеристика                 КАК Характеристика,
			|	ТаблицаОстатков.ДокументПередачи               КАК ДокументПередачи,
			|	ТаблицаОстатков.ПредусмотренЗалог              КАК ПредусмотренЗалог,
			|	ТаблицаОстатков.ВидЗапасов                     КАК ВидЗапасов,
			|	ТаблицаОстатков.НомерГТД                       КАК НомерГТД,
			|	ТаблицаОстатков.КоличествоОстаток              КАК Количество,
			|	ТаблицаОстатков.СуммаОстаток                   КАК Сумма
			|ИЗ
			|	РегистрНакопления.ПереданнаяВозвратнаяТара.Остатки(,
			|			(Партнер, Номенклатура, Характеристика, ДокументПередачи, ВидЗапасов, НомерГТД, ПредусмотренЗалог) В
			|				(ВЫБРАТЬ
			|					Таблица.Партнер,
			|					Таблица.Номенклатура,
			|					Таблица.Характеристика,
			|					Таблица.ДокументПередачи,
			|					Таблица.ВидЗапасов,
			|					Таблица.НомерГТД,
			|					Таблица.ПредусмотренЗалог
			|				ИЗ
			|					ДвиженияПереданнаяВозвратнаяТараИзменение КАК Таблица)
			|	) КАК ТаблицаОстатков
			|
			|ГДЕ
			|	ТаблицаОстатков.КоличествоОстаток < 0";
		
		ТекстыЗапроса.Добавить(ТекстЗапроса, "ОшибкиПереданнаяВозвратнаяТара");
		
	КонецЕсли;
	
	#КонецОбласти
	
	//++ НЕ УТ
	#Область ТоварыПереданныеПереработчику
	
	Если ПроведениеДокументов.ЕстьЗаписиВТаблице(Документ, "ДвиженияТоварыПереданныеПереработчикуИзменение") Тогда
		
		ТекстЗапроса =
			"ВЫБРАТЬ
			|	ТаблицаОстатков.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
			|	ТаблицаОстатков.АналитикаУчетаНоменклатуры.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
			|	ТаблицаОстатков.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
			|	ТаблицаОстатков.КоличествоОстаток КАК Количество
			|ИЗ
			|	РегистрНакопления.ТоварыПереданныеПереработчику.Остатки(,
			|			АналитикаУчетаНоменклатуры В
			|				(ВЫБРАТЬ
			|					Таблица.АналитикаУчетаНоменклатуры
			|				ИЗ
			|					ДвиженияТоварыПереданныеПереработчикуИзменение КАК Таблица)
			|	) КАК ТаблицаОстатков
			|
			|ГДЕ
			|	ТаблицаОстатков.КоличествоОстаток < 0";
		
		ТекстыЗапроса.Добавить(ТекстЗапроса, "ОшибкиТоварыПереданныеПереработчику");
		
	КонецЕсли;
	
	#КонецОбласти
	//-- НЕ УТ
	
КонецПроцедуры

// Выводит сообщения пользователю при наличии ошибок контроля изменений записанных движений регистров.
//
// Параметры:
//  РезультатыКонтроля - Структура - таблицы с результатами контроля изменений
//  Документ - ДокументОбъект - записываемый документ
//  Отказ - Булево - признак отказа от проведения документа.
//
Процедура СообщитьОРезультатахКонтроляИзменений(РезультатыКонтроля, Документ, Отказ) Экспорт
	
	#Область ПереданнаяВозвратнаяТара
	
	Если ПроведениеДокументов.ЕстьЗаписиВТаблице(Документ, "ДвиженияПереданнаяВозвратнаяТараИзменение") Тогда
		
		ШаблонСообщения = НСтр("ru='Номенклатура %1. Возвращается (выкупается) больше на %2 %3, чем передано. %4.';uk='Номенклатура %1. Повертається (викуповується) більше на %2 %3, ніж передано.  %4.'");
		
		Для каждого СтрокаОшибки Из РезультатыКонтроля.ОшибкиПереданнаяВозвратнаяТара Цикл
			
			ПредставлениеНоменклатуры = НоменклатураКлиентСервер.ПредставлениеНоменклатуры(СтрокаОшибки.Номенклатура,
				СтрокаОшибки.Характеристика);
			
			АналитикаПередачи = Новый Массив;
			
			Если ЗначениеЗаполнено(СтрокаОшибки.ДокументПередачи) Тогда 
				АналитикаПередачиСтрока = СтрШаблон(НСтр("ru='Документ: %1';uk='Документ: %1'"), СтрокаОшибки.ДокументПередачи);
				АналитикаПередачи.Добавить(АналитикаПередачиСтрока);
			КонецЕсли;
			
			Если ЗначениеЗаполнено(СтрокаОшибки.ВидЗапасов) Тогда
				АналитикаПередачиСтрока = СтрШаблон(НСтр("ru='Вид запасов: %1';uk='Вид запасів: %1'"), СтрокаОшибки.ВидЗапасов);
				АналитикаПередачи.Добавить(АналитикаПередачиСтрока);
			КонецЕсли;
			
			Если ЗначениеЗаполнено(СтрокаОшибки.НомерГТД) Тогда
				АналитикаПередачиСтрока = СтрШаблон(НСтр("ru='Номер ГТД: %1';uk='Номер ВМД: %1'"), СтрокаОшибки.НомерГТД);
				АналитикаПередачи.Добавить(АналитикаПередачиСтрока);
			КонецЕсли;
			
			Если СтрокаОшибки.ПредусмотренЗалог Тогда
				АналитикаПередачи.Добавить(НСтр("ru='Под залог';uk='Під заставу'"));
			КонецЕсли;
			
			АналитикаПередачиСтрока = СтрСоединить(АналитикаПередачи, ", ");
			
			ТекстСообщения = СтрШаблон(ШаблонСообщения, ПредставлениеНоменклатуры,
				-СтрокаОшибки.Количество, СтрокаОшибки.ЕдиницаИзмерения, АналитикаПередачиСтрока);
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Документ,,, Отказ);
			
		КонецЦикла;
		
	КонецЕсли;
	
	#КонецОбласти
	
	//++ НЕ УТ
	
	#Область ТоварыПереданныеПереработчику
	
	Если ПроведениеДокументов.ЕстьЗаписиВТаблице(Документ, "ДвиженияТоварыПереданныеПереработчикуИзменение") Тогда
		
		Если ТипЗнч(Документ) = Тип("ДокументОбъект.ПередачаСырьяПереработчику") Тогда
			ШаблонСообщения = НСтр("ru='Номенклатура %1
|По материалу оформлен отчет переработчика или возврат сырья и материалов на %2 %3'
|;uk='Номенклатура %1 
|По матеріалу оформлений звіт переробника або повернення сировини і матеріалів на %2 %3'");
		Иначе
			ШаблонСообщения = НСтр("ru='Номенклатура %1
|Превышен остаток сырья и материалов переданных переработчику на %2 %3'
|;uk='Номенклатура %1 
|Перевищено залишок сировини і матеріалів переданих переробнику на %2 %3'");
		КонецЕсли;
		
		Для каждого СтрокаОшибки Из РезультатыКонтроля.ОшибкиТоварыПереданныеПереработчику Цикл
			
			ПредставлениеНоменклатуры = НоменклатураКлиентСервер.ПредставлениеНоменклатуры(СтрокаОшибки.Номенклатура,
				СтрокаОшибки.Характеристика);
			
			ТекстСообщения = СтрШаблон(ШаблонСообщения, ПредставлениеНоменклатуры,
				-СтрокаОшибки.Количество ,СтрокаОшибки.ЕдиницаИзмерения);
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Документ,,, Отказ);
			
		КонецЦикла;
		
	КонецЕсли;
	
	#КонецОбласти
	
	//-- НЕ УТ
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти