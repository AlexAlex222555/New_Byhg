
#Область ПрограммныйИнтерфейс

#Область ПодключаемыеКоманды
// Определяет список команд создания на основании.
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//  Параметры - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.Параметры
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	
КонецПроцедуры

// Добавляет команду создания документа "Авансовый отчет".
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//
Процедура ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	
	
КонецПроцедуры

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//   Параметры - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.Параметры
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	//++ Локализация
	//-- Локализация
КонецПроцедуры

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#Область ОбработчикиСобытийФормы

// Обработчик события ПриСозданииНаСервере форм элемента справочника ДоговорыКонтрагентов.
//
// Параметры:
//  Форма                - ФормаКлиентскогоПриложения - форма, для которой выполняется обработчик.
//  Отказ                - Булево - признак отказа от создания формы.
//  СтандартнаяОбработка - Булево - признак выполнения стандартной (системной) обработки события.
//
Процедура ПриСозданииНаСервереФормаЭлемента(Форма, Отказ, СтандартнаяОбработка) Экспорт
	НастройкиСистемыЛокализация.УстановитьВидимостьЭлементовЛокализации(Форма);
	//++ Локализация
	//-- Локализация
КонецПроцедуры

// Обработчик события ОбработкаПроверкиЗаполненияНаСервере
// 
// Параметры:
// 	Отказ - Булево - признак отказа.
// 	ПроверяемыеРеквизиты - Массив - массив путей к проверяемым реквизитам.
// 	Форма - ФормаКлиентскогоПриложения - форма обработчика.
//
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты, Форма) Экспорт
	//++ Локализация
	//-- Локализация
	Возврат
КонецПроцедуры

// Вызывается при создании/чтении формы на сервере
// 
// Параметры:
// 	Форма - ФормаКлиентскогоПриложения - форма обработчика
//
Процедура ПриЧтенииСозданииНаСервере(Форма) Экспорт
	//++ Локализация
	//-- Локализация
КонецПроцедуры

// Обработчик события ПослеЗаписиНаСервере формы элемента справочника ДоговорыКонтрагентов
//
// Параметры:
//  ТекущийОбъект   - СправочникОбъект.* - объект, который будет прочитан.
//  ПараметрыЗаписи - Структура - структура, содержащая параметры записи.
//  Форма           - ФормаКлиентскогоПриложения - форма, для которой выполняется обработчик.
//
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи, Форма) Экспорт
	//++ Локализация
	//-- Локализация
КонецПроцедуры

// Обработчик события ПередЗаписьюНаСервере формы элемента справочника ДоговорыКонтрагентов
//
// Параметры:
//  Отказ           - Булево - признак отказа.
//  ТекущийОбъект   - СправочникОбъект.* - объект, который будет прочитан.
//  ПараметрыЗаписи - Структура - структура, содержащая параметры записи.
//  Форма           - ФормаКлиентскогоПриложения - форма, для которой выполняется обработчик.
//
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи, Форма) Экспорт
	//++ Локализация
	//-- Локализация
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

Процедура ПриОкончанииИзмененияРеквизита(ИмяЭлемента, Форма, ПараметрыОбработки) Экспорт
	Если ТипЗнч(ИмяЭлемента) = Тип("Массив") Тогда
		Для каждого ТекЭлемент Из ИмяЭлемента Цикл
			ПриОкончанииИзмененияРеквизита(ТекЭлемент, Форма, ПараметрыОбработки);
		КонецЦикла;
	КонецЕсли;
	//++ Локализация
	//-- Локализация
КонецПроцедуры

Процедура ВыполнитьКомандуЛокализации(Форма, ИмяКоманды, ПараметрыОбработки) Экспорт
	
	Если ТипЗнч(ИмяКоманды) = Тип("Массив") Тогда
		Для каждого ТекЭлемент Из ИмяКоманды Цикл
			ВыполнитьКомандуЛокализации(Форма, ТекЭлемент, ПараметрыОбработки);
		КонецЦикла;
	КонецЕсли;
	//++ Локализация
	//-- Локализация
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийМодуляОбъекта

// Обработчик события ОбработкаПроверкиЗаполнения объекта справочника ДоговорыКонтрагентов.
// См. описание платформенного метода ОбработкаПроверкиЗаполнения.
// 
// Параметры:
//   Отказ - Булево
//   ПроверяемыеРеквизиты - Массив из Строка
//   МассивНепроверяемыхРеквизитов - Массив из Строка
//   СправочникОбъект - СправочникОбъект.ДоговорыКонтрагентов
//
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов, СправочникОбъект) Экспорт
	//++ Локализация
	//-- Локализация
КонецПроцедуры

// Обработчик события ПередЗаписью объекта справочника ДоговорыКонтрагентов
//
// Параметры:
//  см. описание платформенного метода ПередЗаписью
//
Процедура ПередЗаписью(Отказ, СправочникОбъект) Экспорт
	//++ Локализация
    Если Не Справочники.ДоговорыКонтрагентов.ИспользоватьНоменклатуруЗаполненияНалоговыхНаАванс(СправочникОбъект) Тогда
		СправочникОбъект.НоменклатураЗаполненияНалоговыхНаАванс = Неопределено;
	КонецЕсли;
	
	// Если для данного типа договора МоментОпределенияБазыНДС в договоре не используется, очищаем реквизит
	Если Справочники.ДоговорыКонтрагентов.ПолучитьМоментОпределенияБазыНДСПоУмолчанию(СправочникОбъект) = Неопределено Тогда
		СправочникОбъект.МоментОпределенияБазыНДС = Неопределено;
	КонецЕсли;
	//-- Локализация	
КонецПроцедуры

// Обработчик события ПриКопировании объекта справочника ДоговорыКонтрагентов
//
// Параметры:
//  см. описание платформенного метода ПриКопировании
//
Процедура ПриКопировании(ОбъектКопирования, СправочникОбъект) Экспорт
	//++ Локализация
	//-- Локализация
КонецПроцедуры

#КонецОбласти

#Область УсловноеОформление

// Устанавливает условное оформление формы
// 
// Параметры:
// 	Форма - ФормаКлиентскогоПриложения - форма обработчика
//
Процедура УстановитьУсловноеОформление(Форма) Экспорт
	УсловноеОформление = Форма.УсловноеОформление;
	Элементы =  Форма.Элементы;
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбработчикиСобытийЭлементовШапкиФормы_Служебные
//++ Локализация

//++ НЕ УТ



//-- НЕ УТ



//-- Локализация

#КонецОбласти

#Область ПрочиеСлужебныеПроцедуры

//++ Локализация


//-- НЕ УТ

//-- Локализация
#КонецОбласти

#КонецОбласти