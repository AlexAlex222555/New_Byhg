
#Область ПрограммныйИнтерфейс

// Возвращает признак доступности выполнения операций по закрытию месяца в текущей ИБ.
//
// Параметры:
//   Отказ - Булево - признак отказа от выполнения операции.
//
// Возвращаемое значение:
//   Булево - Истина, если выполнение операций по закрытию месяца доступно в данной ИБ,
//            Ложь - в противном случае.
//
Функция ВЭтомУзлеДоступноВыполнениеОперацийЗакрытияМесяца(Отказ) Экспорт
	
	Если ПланыОбмена.ГлавныйУзел() <> Неопределено Тогда
		
		Отказ = Истина;
		
		СообщениеПользователю = 
			НСтр("ru='Выполнять регламентные операции связанные с закрытием месяца
|в подчиненном узле распределенной информационной базы не требуется,
|они выполняются только в центральном узле информационной базы.'
|;uk='Виконувати регламентні операції пов''язані з закриттям місяця
|в підпорядкованому вузлі розподіленої інформаційної бази не потрібно,
|вони виконуються тільки в центральному вузлі інформаційної бази.'");
			
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СообщениеПользователю);
		
		Возврат Ложь;
		
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

// Определяет перечень доступных версий универсального формата EnterpriseData.
//
// Параметры:
//  ВерсииФормата - Соответствие - Соответствие номера версии формата общему модулю,
//                  в котором находятся обработчики выгрузки/загрузки для данной версии.
//
Процедура ДоступныеВерсииУниверсальногоФормата(ВерсииФормата) Экспорт
	//++ Локализация
	//-- Локализация
КонецПроцедуры

// Обработчик после загрузки данных.
// Используется в типовых правилах конвертации при обменах и переносах данных.
// Вызывается из соответствующего обработчика событий "После загрузки данных" правил конвертации.
//
// Параметры:
//  Параметры - Структура - структура со свойствами:
//            * ПроверятьНаИспользованиеИмпортныхТоваров - Булево - Если Истина - будет включено использование
//              импортных товаров при необходимости (если в базе есть элементы справочника "Номера ГТД").
//            * ПроверятьНаИспользованиеИмпортныхЗакупок - Булево - Если Истина - будет включено использование
//              импортных закупок (если в базе есть соответствующие операции).
//            * ПроверятьНаИспользованиеКомиссииПриЗакупках - Булево - Если Истина - будет включено использование
//              комиссии при закупках (если в базе есть соответствующие операции).
//            * ПроверятьНаИспользованиеКомиссииПриПродажах - Булево - Если Истина - будет включено использование
//              комиссии при продажах (если в базе есть соответствующие операции).
//            * ПроверятьНаИспользованиеДоговоров - Булево - Если Истина - будет включено использование
//              договоров контрагентов (если в базе есть хотя бы один договор с покупателем).
//            * ПроверятьНаИспользованиеРозничныхПродаж - Булево - Если Истина - будет включено использование
//              розничных продаж (если в базе есть соответствующие операции).
//            * ПроверятьНаИспользованиеПеремещений - Булево - Если Истина - будет включено использование
//              перемещений товаров (если в базе есть соответствующие операции).
//            * ПроверятьНаИспользованиеНесколькихВидовНоменклатуры - Булево - Если Истина - будет включено использование
//              нескольких видов номенклатуры (если видов номенклатуры от 3 и более).
//            * ПроверятьНаИспользованиеАлкогольнойПродукцииВРознице - Булево - Если Истина - будет включено
//              использование розничных продаж алкогольной продукции (если в базе есть виды номенклатуры с.
//              признаком "Алкогольная продукция").
//            * ПроверятьНаИспользованиеОтгрузкиБезПереходаПраваСобственности - Булево - Если Истина - будет включено
//              использование операций отгрузки без перехода права собственности (если в базе есть соответствующие
//              операции.
//
Процедура ПослеЗагрузкиДанных(Параметры) Экспорт
	//++ Локализация
	//-- Локализация
КонецПроцедуры

#Область ВыгрузкаЗагрузкаДанныхВСервисе

// Процедура-обработчик события "ПередЗагрузкойОбъекта" для механизма выгрузки/загрузки данных в сервисе.
// 
// Параметры:
//   Контейнер - ОбработкаОбъект.ВыгрузкаЗагрузкаДанныхМенеджерКонтейнера - менеджер
//               контейнера, используемый в процессе загрузки данных.
//   Объект    - КонстантаМенеджерЗначения.*, СправочникОбъект.*, ДокументОбъект.*,
//               БизнесПроцессОбъект.*, ЗадачаОбъект.*, ПланСчетовОбъект.*, ПланОбменаОбъект.*,
//               ПланВидовХарактеристикОбъект.*, ПланВидовРасчетаОбъект.*, РегистрСведенийНаборЗаписей.*,
//               РегистрНакопленияНаборЗаписей.*, РегистрБухгалтерииНаборЗаписей.*,
//               РегистрРасчетаНаборЗаписей.*, ПоследовательностьНаборЗаписей.*, ПерерасчетНаборЗаписей.* -
//               объект данных информационной базы, перед загрузкой которого был вызван обработчик.
//               Значение, переданное в процедуру ПередЗагрузкойОбъекта() в качестве значения параметра
//               Объект может быть модифицировано внутри процедуры обработчика ПередЗагрузкойОбъекта().
//   Артефакты - Массив(ОбъектXDTO) - дополнительные данные, логически неразрывно связанные
//               с объектом данных, но не являющиеся его частью. Сформированы в экспортируемых процедурах
//               ПередВыгрузкойОбъекта() обработчиков выгрузки данных (см. комментарий к процедуре
//               ПриРегистрацииОбработчиковВыгрузкиДанных(). Каждый артефакт должен являться XDTO-объектом,
//               для типа которого в качестве базового типа используется абстрактный XDTO-тип
//               {http://www.1c.ru/1cFresh/Data/Dump/1.0.2.1}Artefact. Допускается использовать XDTO-пакеты,
//               помимо изначально поставляемых в составе подсистемы ВыгрузкаЗагрузкаДанных.
//   Отказ     - Булево. Если в процедуре ПередЗагрузкойОбъекта() установить значение данного
//               параметра равным Истина - загрузка объекта данных выполняться не будет.
//
Процедура ПередЗагрузкойОбъекта(Контейнер, Объект, Артефакты, Отказ) Экспорт
	
	Объект.ДополнительныеСвойства.Вставить("РегистрироватьДанныеПервичныхДокументов", Ложь);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
// Функция готовит структуру параметров, которые используются при синхронизации данных через универсальный формат.
Функция ПараметрыПослеЗагрузкиДанных() Экспорт
	
	Параметры = Новый Структура;
	Параметры.Вставить("ПроверятьНаИспользованиеИмпортныхТоваров", Истина);
	Параметры.Вставить("ПроверятьНаИспользованиеИмпортныхЗакупок", Истина);
	Параметры.Вставить("ПроверятьНаИспользованиеКомиссииПриЗакупках", Истина);
	Параметры.Вставить("ПроверятьНаИспользованиеКомиссииПриПродажах", Истина);
	Параметры.Вставить("ПроверятьНаИспользованиеДоговоров", Истина);
	Параметры.Вставить("ПроверятьНаИспользованиеРозничныхПродаж", Истина);
	Параметры.Вставить("ПроверятьНаИспользованиеПеремещений", Истина);
	Параметры.Вставить("ПроверятьНаИспользованиеНесколькихВидовНоменклатуры", Истина);
	Параметры.Вставить("ПроверятьНаИспользованиеАлкогольнойПродукцииВРознице", Истина);
	Параметры.Вставить("ПроверятьНаИспользованиеОтгрузкиБезПереходаПраваСобственности", Истина);
	
	Возврат Параметры;
	
КонецФункции

//++ Локализация
//-- Локализация

// Вызывается перед записью настройки синхронизации данных, которая выполняет обмен с бухгалтерией.
// В случае необходимости меняется значение константы ИспользуетсяОбменСБухгалтериейПредприятия.
//
// Параметры:
//    ПланОбменаОбъект - записываемый узел плана обмена, предназначенный для обмена с бухгалтерией.
//    ЭтоУдаление - булево, признак того, что выполняется пометка на удаление или непосредственное удаление узла.
Процедура АктуализироватьПризнакИспользованияОбменаСБухгалтерией(ПланОбменаОбъект, ЭтоУдаление) Экспорт
	//++ Локализация
	//-- Локализация
КонецПроцедуры

//++ НЕ БЗК
#Область РасчетСебестоимости

// При получении из периферийного узла данных, требующих перерасчета себестоимости, добавляет запись в регистр ЗаданияКРасчетуСебестоимости.
//
// Параметры:
//	ПолученныеДанные - Произвольный - это параметр ЭлементДанных одноименного события плана обмена.
//
// Возвращаемое значение:
//	Булево - признак того, что ПолученныеДанные - это данные, относящиеся к механизму расчета себестоимости.
//
Функция СоздатьЗаданиеКРасчетуСебестоимостиПриОбменеДанными(ПолученныеДанные) Экспорт
	
	Возврат РасчетСебестоимостиПрикладныеАлгоритмы.СоздатьЗаданиеКРасчетуСебестоимостиПриОбменеДанными(ПолученныеДанные);
	
КонецФункции

#КонецОбласти
//-- НЕ БЗК

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

// Параметры:
// 	Параметры - см. ОбновлениеИнформационнойБазы.ОсновныеПараметрыОтметкиКОбработке
//
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт 
	Возврат;
КонецПроцедуры


Процедура ЗаменитьПрикладныеРолиДоступаКПланамОбменов() Экспорт
	
	Если Не ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		Возврат;
	КонецЕсли;
	
	МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
	
	НовыеРоли = Новый Массив;
	НовыеРоли.Добавить(Метаданные.Роли.ВыполнениеСинхронизацииДанных.Имя);
	ЗаменяемыеРоли = Новый Соответствие;
	ЗаменяемыеРоли.Вставить("? ЧтениеУзловПлановОбмена", НовыеРоли);
	ЗаменяемыеРоли.Вставить("? ДобавлениеИзменениеУзловПлановОбмена", НовыеРоли);
	
	МодульУправлениеДоступом.ЗаменитьРолиВПрофилях(ЗаменяемыеРоли);
	
КонецПроцедуры


#КонецОбласти