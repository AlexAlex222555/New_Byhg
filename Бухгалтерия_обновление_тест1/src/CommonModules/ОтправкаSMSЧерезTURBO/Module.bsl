////////////////////////////////////////////////////////////////////////////////
// Подсистема "Отправка SMS"
//
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныеПроцедурыИФункции
                            
&НаСервере
Функция ОтправитьSMS(НомераПолучателей, Текст, ИмяОтправителя, Логин, Знач Пароль) Экспорт
	
	Авторизация = АвторизацияНаСайте(Логин, Пароль);
	
	Результат = Новый Структура("ОтправленныеСообщения,ОписаниеОшибки", Новый Массив, "");
	
	Для Каждого Элемент Из НомераПолучателей Цикл
		НомерПолучателя = ФорматироватьНомер(Элемент);
		Если Не ПустаяСтрока(НомерПолучателя) Тогда
			Попытка
				sXML =
				"<soapenv:Envelope xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"" xmlns:tur=""http://turbosms.in.ua/api/Turbo"">
				|   <soapenv:Header/>
				|   <soapenv:Body>
				|      <tur:SendSMS>
				|           <!--Optional:-->
				|           <tur:sender>" + ИмяОтправителя + "</tur:sender>
				|           <!--Optional:-->
				|           <tur:destination>" + НомерПолучателя + "</tur:destination>
				|              <!--Optional:-->
				|              <tur:text>" + СокрЛП(Текст) + "</tur:text>
				|        </tur:SendSMS>
				|   </soapenv:Body>
				|</soapenv:Envelope>";
				
				Соединение = Новый HTTPСоединение("turbosms.in.ua", 80);
				Заголовки = Новый Соответствие();
				Заголовки.Вставить("COOKIE", Авторизация);
				Запрос = Новый HTTPЗапрос("/api/soap.html", Заголовки);
				Запрос.УстановитьТелоИзСтроки(sXML);
				ФайлОтвета = ПолучитьИмяВременногоФайла();
				Ответ = Соединение.ОтправитьДляОбработки(Запрос,ФайлОтвета);
				Если Ответ.КодСостояния <> 200 Тогда
					Возврат Ответ.КодСостояния;
				КонецЕсли;    
				
				Ответ = Неопределено;
				Запрос = Неопределено;
				Соединение = Неопределено;
								
				Ответ = ПреобразоватьОтвет(ФайлОтвета, "ns1:ResultArray");
				//ИдентификаторСообщения = Ответ.id;
				
				Результат.ОтправленныеСообщения.Добавить(Новый Структура("НомерПолучателя,ИдентификаторСообщения",	
																  НомерПолучателя));
				
				Если ЗначениеЗаполнено(Ответ) Тогда
					Результат.ОписаниеОшибки = Результат.ОписаниеОшибки 
					+ СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='SMS на номер %1 не отправлено';uk='SMS на номер %1 не відправлено'"), Элемент)
					+ ": " + Ответ
					+ Символы.ПС;
				КонецЕсли;									
			Исключение
				ЗаписьЖурналаРегистрации(
				НСтр("ru='Отправка SMS';uk='Отправка SMS'"),
				УровеньЖурналаРегистрации.Ошибка,
				,
				,
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
				Результат.ОписаниеОшибки = Результат.ОписаниеОшибки 
				+ СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='SMS на номер %1 не отправлено';uk='SMS на номер %1 не відправлено'"), Элемент)
				+ ": " + КраткоеПредставлениеОшибки(ИнформацияОбОшибке())
				+ Символы.ПС;
			КонецПопытки;
		КонецЕсли;
	КонецЦикла;
	
	Результат.ОписаниеОшибки = СокрП(Результат.ОписаниеОшибки);	
	УдалитьФайлы(ФайлОтвета);
	
	Возврат Результат;
	
КонецФункции

// Возвращает текстовое представление статуса доставки сообщения.
//
// Параметры:
//  ИдентификаторСообщения - Строка - идентификатор, присвоенный sms при отправке;
//  Логин                  - Строка - логин пользователя услуги отправки sms;
//  Пароль                 - Строка - пароль пользователя услуги отправки sms.
//
// Возвращаемое значение:
//  Строка - статус доставки. См. описание функции ОтправкаSMS.СтатусДоставки.
Функция СтатусДоставки(ИдентификаторСообщения, Логин, Знач Пароль) Экспорт
	
	Авторизация = АвторизацияНаСайте(Логин, Пароль);
	
	sXML =
	"<soapenv:Envelope xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"" xmlns:tur=""http://turbosms.in.ua/api/Turbo"">
	|   <soapenv:Header/>
	|   <soapenv:Body>
	|      <tur:GetMessageStatusResult>
	|           <!--Optional:-->
	|           <tur:MessageId>" + ИдентификаторСообщения + "</tur:MessageId>
	|      </tur:GetMessageStatusResult>
	|   </soapenv:Body>
	|</soapenv:Envelope>";

	Соединение = Новый HTTPСоединение("turbosms.in.ua", 80);
	Заголовки = Новый Соответствие();
	Заголовки.Вставить("COOKIE", Авторизация);
	Запрос = Новый HTTPЗапрос("/api/soap.html", Заголовки);
	Запрос.УстановитьТелоИзСтроки(sXML);
	ФайлОтвета = ПолучитьИмяВременногоФайла();
	Ответ = Соединение.ОтправитьДляОбработки(Запрос, ФайлОтвета);
	Если Ответ.КодСостояния <> 200 Тогда
		Возврат Ответ.КодСостояния;
	КонецЕсли;

	Баланс = ПреобразоватьОтвет(ФайлОтвета, "ns1:GetCreditBalanceResult");
	УдалитьФайлы(ФайлОтвета);

	Ответ = Неопределено;
	Запрос = Неопределено;
	Соединение = Неопределено;

	Возврат Баланс;

КонецФункции

Функция ФорматироватьНомер(Номер)
	
	Результат = "";
	ДопустимыеСимволы = "1234567890";
	Для Позиция = 1 По СтрДлина(Номер) Цикл
		Символ = Сред(Номер,Позиция,1);
		Если СтрНайти(ДопустимыеСимволы, Символ) > 0 Тогда
			Результат = Результат + Символ;
		КонецЕсли;
	КонецЦикла;
	Возврат Результат;	
	
КонецФункции

Функция АвторизацияНаСайте(Логин, Пароль) Экспорт

    sXML =
	"<soapenv:Envelope xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"" xmlns:tur=""http://turbosms.in.ua/api/Turbo"">
	|   <soapenv:Header/>
	|   <soapenv:Body>
	|      <tur:Auth>
	|         <!--Optional:-->
	|         <tur:login>" + Логин + "</tur:login>
	|         <!--Optional:-->
	|         <tur:password>" + Пароль + "</tur:password>
	|      </tur:Auth>
	|   </soapenv:Body>
	|</soapenv:Envelope>";

	Соединение = Новый HTTPСоединение("turbosms.in.ua", 80);
	Запрос = Новый HTTPЗапрос("/api/soap.html");
	Запрос.УстановитьТелоИзСтроки(sXML);
	Ответ = Соединение.ОтправитьДляОбработки(Запрос);

	Авторизация = Ответ.Заголовки.Получить("Set-Cookie");

	Ответ = Неопределено;
	Запрос = Неопределено;
	Соединение = Неопределено;

	Возврат Авторизация;
	
КонецФункции

Функция ПреобразоватьОтвет(ИмяФайла, Тег = "")

	ЗначениеВозврата = "";

	ЧтениеХМЛ = Новый ЧтениеXML;
	ЧтениеХМЛ.ОткрытьФайл(ИмяФайла);

	Пока ЧтениеХМЛ.Прочитать() Цикл

		Если Тег = "" Тогда

			//Сообщить("" + ЧтениеХМЛ.ТипУзла + " : " + ЧтениеХМЛ.Имя + " = " + ЧтениеХМЛ.Значение);

		Иначе

			Если СокрЛП(ЧтениеХМЛ.Имя) <> Тег и ЧтениеХМЛ.ТипУзла <> ТипУзлаXML.Текст Тогда
				Продолжить;
			ИначеЕсли ЧтениеХМЛ.ТипУзла = ТипУзлаXML.Текст и СокрЛП(ЧтениеХМЛ.Имя) = "#text" Тогда
				ЗначениеВозврата = СокрЛП(ЧтениеХМЛ.Значение);
				Прервать;
			КонецЕсли;

		КонецЕсли;

	КонецЦикла;

	ЧтениеХМЛ.Закрыть();

	Возврат ЗначениеВозврата;

КонецФункции

// Возвращает список разрешений для отправки SMS с использованием всех доступных провайдеров.
//
// Возвращаемое значение:
//  Массив.
//
Функция Разрешения() Экспорт
	Протокол = "HTTP";
	Адрес = "turbosms.in.ua";
	Порт = Неопределено;
	Описание = НСтр("ru='Отправка SMS через TURBO.';uk='Відправлення SMS через TURBO.'");
	
	Разрешения = Новый Массив;
	Разрешения.Добавить(
		РаботаВБезопасномРежиме.РазрешениеНаИспользованиеИнтернетРесурса(Протокол, Адрес, Порт, Описание));
	
	Возврат Разрешения;
КонецФункции

Процедура ПриОпределенииНастроек(Настройки) Экспорт
	
	Настройки.АдресОписанияУслугиВИнтернете = "https://turbosms.ua";
	
КонецПроцедуры

#КонецОбласти
