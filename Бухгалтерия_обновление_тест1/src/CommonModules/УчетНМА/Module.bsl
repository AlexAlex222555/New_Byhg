
#Область ПрограммныйИнтерфейс

// Возвращает текст запроса с временной таблицей амортизации
//
// Возвращаемое значение:
// 		Строка - Текст запроса для получения пустой временной таблицы "втТаблицаАмортизации".
//
Функция ТекстЗапросаПустаяВременнаяТаблицаАмортизации() Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация,
	|	0 КАК ОбъектУчета,
	|	0 КАК НаправлениеДеятельности,
	|	0 КАК НаправлениеДеятельностиАмортизации,
	|	0 КАК Подразделение,
	|	0 КАК СуммаБУ,
	|	0 КАК СуммаНУ,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
	|	0 КАК АналитикаРасходов,
	|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначение
	|ПОМЕСТИТЬ втТаблицаАмортизации
	|ГДЕ
	|	ЛОЖЬ";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Возвращает текст запроса с временной таблицей ВтКорректировкаАмортизации
//
// Возвращаемое значение:
// 		Строка - Текст запроса для получения пустой временной таблицы "ВтРасходыПоАренднымПлатежам".
//
Функция ТекстЗапросаПустаяВременнаяТаблицаКорректировкаАмортизации() Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.ОбъектыЭксплуатации.ПустаяСсылка) КАК ОсновноеСредство,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК Контрагент,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыЛизинга.ПустаяСсылка) КАК ДоговорКонтрагента,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеЗатрат,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
	|	0 КАК КорректировкаАмортизацииНУ,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиЗатрат,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий
	|ПОМЕСТИТЬ ВтКорректировкаАмортизации
	|ГДЕ
	|	ЛОЖЬ";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Выполняет проверку ошибок в заполнении способов отражения расходов по амортизации.
//
// Параметры:
// 		ЭтотОбъект - ДокументОбъект.АмортизацияНМА - Объект документа амортизации
// 		Отказ - Булево - Возврат, признак ошибки при выполнения проверки.
//
Процедура ПроверитьСпособыОтраженияРасходовНаПрочиеАктивы(ЭтотОбъект, Отказ) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПорядокУчетаНМАБУ.НематериальныйАктив КАК ОбъектУчета,
	|	ЕСТЬNULL(ТаблицаИзменениеПараметровНМА.СтатьяРасходов, ПорядокУчетаНМАБУ.СтатьяРасходовБУ) КАК СтатьяРасходов
	|ПОМЕСТИТЬ втСтатьиАмортизации
	|ИЗ
	|	РегистрСведений.ПорядокУчетаНМАБУ.СрезПоследних(&Дата, Организация В (&Организация)) КАК ПорядокУчетаНМАБУ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИзменениеПараметровНМА.ОтражениеАмортизационныхРасходов КАК ТаблицаИзменениеПараметровНМА
	|		ПО ТаблицаИзменениеПараметровНМА.Ссылка = ПорядокУчетаНМАБУ.СпособОтраженияРасходовБУ
	|ГДЕ
	|	ПорядокУчетаНМАБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.ПринятКУчету)
	|	И (ПорядокУчетаНМАБУ.НачислятьАмортизациюБУ
	|		ИЛИ ПорядокУчетаНМАБУ.НачислятьАмортизациюНУ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтатьиРасходов.Ссылка КАК СтатьяРасходов,
	|	втСтатьиАмортизации.ОбъектУчета КАК ОбъектУчета
	|ИЗ
	|	ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСтатьиАмортизации КАК втСтатьиАмортизации
	|		ПО (втСтатьиАмортизации.СтатьяРасходов = СтатьиРасходов.Ссылка)
	|ГДЕ
	|	СтатьиРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Дата", КонецМесяца(ЭтотОбъект.Дата));
	Запрос.УстановитьПараметр("Организация", ЭтотОбъект.Организация);
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		СообщениеОбОшибке =
		НСтр("ru='В способе отражения расходов по амортизации для ""%1"" использована статья ""%2"" с не поддерживаемым вариантом распределения расходов ""На прочие активы""
|Измените способ отражения расходов для данного актива с помощью документа ""Изменение параметров НМА""'
|;uk='У способі відображення витрат по амортизації для ""%1"" використана стаття ""%2"" з варіантом розподілу витрат ""На інші активи"", що не підтримується 
|Змінить спосіб відображення витрат для даного активу за допомогою документа ""Зміна параметрів НМА""'");
		
		СообщениеОбОшибке = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			СообщениеОбОшибке,
			Выборка.ОбъектУчета,
			Выборка.СтатьяРасходов);
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СообщениеОбОшибке,,,,
			Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

// Возвращает текст запроса временных таблиц для отражения амортизации в регламентированном учете.
//
// Параметры:
// 		ИмяДокумента - Строка - Строка имени метаданных.
//
// Возвращаемое значение:
// 		Строка - Текст запроса.
//
Функция ТекстЗапросаВТОтраженияВРеглУчетеНачисленнойАмортизации(ИмяДокумента) Экспорт
	
	Возврат ТекстЗапросаВТОтраженияВРеглУчетеНачисленнойАмортизацииУКР(ИмяДокумента);
		
КонецФункции

Функция ТекстЗапросаВТОтраженияВРеглУчетеНачисленнойАмортизацииУКР(ИмяДокумента) Экспорт
	
	ТекстыВременныхТаблиц = Новый Массив;
	ТекстыВременныхТаблиц.Добавить(ТекстЗапросаВТНачисленнаяАмортизация(ИмяДокумента));
	ТекстыВременныхТаблиц.Добавить(ТекстЗапросаВТОбъектыДокумента(ИмяДокумента));
	ТекстыВременныхТаблиц.Добавить(ТекстЗапросаВТСчетаОтражения());
	ТекстыВременныхТаблиц.Добавить(ТекстЗапросаВТМестонахожденияНМА());
	ТекстыВременныхТаблиц.Добавить(ТекстЗапросаВТПорядокУчетаНМА());
	ТекстыВременныхТаблиц.Добавить(ТекстЗапросаВТПорядокУчетаНМАБУ());
	
	Возврат СтрСоединить(ТекстыВременныхТаблиц, ОбщегоНазначения.РазделительПакетаЗапросов());
		
КонецФункции

// Возвращает текст запроса временной таблицы остатков по счетам учета
//
// Возвращаемое значение:
// 		Строка - Текст запроса
//
Функция ТекстЗапросаВТОтраженияВРеглУчетеОстаткиПоСчетам() Экспорт
	
	Возврат
	"ВЫБРАТЬ
	|	втНачисленнаяАмортизация.ОбъектУчета КАК ОбъектУчета,
	|	СУММА(ЕСТЬNULL(втНачисленнаяАмортизация.СуммаБУ, 0)) КАК СуммаБУ,
	|	СУММА(ЕСТЬNULL(втНачисленнаяАмортизация.СуммаНУ, 0)) КАК СуммаНУ
	|ПОМЕСТИТЬ втАмортизацияСгруппированная
	|ИЗ
	|	втНачисленнаяАмортизация КАК втНачисленнаяАмортизация
	|
	|СГРУППИРОВАТЬ ПО
	|	втНачисленнаяАмортизация.ОбъектУчета
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектУчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	втСчетаОтражения.СчетУчета КАК Счет
	|ПОМЕСТИТЬ втВсеСчета
	|ИЗ
	|	втСчетаОтражения КАК втСчетаОтражения
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втСчетаОтражения.СчетНачисленияАмортизации
	|ИЗ
	|	втСчетаОтражения КАК втСчетаОтражения
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	втОбъектыДокумента.Организация КАК Организация,
	|	Местонахождение.Подразделение КАК Подразделение,
	|	втОбъектыДокумента.ОбъектУчета КАК ОбъектУчета
	|ПОМЕСТИТЬ втОбъектыСгруппированные
	|ИЗ
	|	втОбъектыДокумента КАК втОбъектыДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ втМестонахожденияНМА КАК Местонахождение
	|		ПО втОбъектыДокумента.ОбъектУчета = Местонахождение.ОбъектУчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НематериальныеАктивы КАК ОбъектыУчета
	|		ПО втОбъектыДокумента.ОбъектУчета = ОбъектыУчета.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Субконто1 КАК ОбъектУчета,
	|	ХозрасчетныйОстатки.Счет КАК Счет,
	|	ХозрасчетныйОстатки.СуммаОстаток КАК СуммаБУ,
	|	ХозрасчетныйОстатки.СуммаНУОстаток КАК СуммаНУ
	|ПОМЕСТИТЬ втХозрасчетныйОстатки
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&ГраницаМесяцОкончание,
	|			Счет В
	|				(ВЫБРАТЬ
	|					Т.Счет
	|				ИЗ
	|					втВсеСчета КАК Т),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.НематериальныеАктивы),
	|			(Организация, Подразделение, Субконто1) В
	|				(ВЫБРАТЬ
	|					Т.Организация,
	|					Т.Подразделение,
	|					Т.ОбъектУчета
	|				ИЗ
	|					втОбъектыСгруппированные КАК Т)) КАК ХозрасчетныйОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втОбъектыСгруппированные.ОбъектУчета КАК ОбъектУчета,
	|	ЕСТЬNULL(втОстаткиСчетУчета.СуммаБУ, 0) КАК ВосстановительнаяСтоимостьБУ,
	|	ЕСТЬNULL(втОстаткиСчетУчета.СуммаНУ, 0) КАК ВосстановительнаяСтоимостьНУ,
	|	
	|	ЕСТЬNULL(-втОстаткиСчетАмортизации.СуммаБУ, 0) + ЕСТЬNULL(втАмортизация.СуммаБУ, 0) КАК НакопленнаяАмортизацияБУ,
	|	ЕСТЬNULL(-втОстаткиСчетАмортизации.СуммаНУ, 0) + ЕСТЬNULL(втАмортизация.СуммаНУ, 0) КАК НакопленнаяАмортизацияНУ,
	|	
	|	ЕСТЬNULL(втОстаткиСчетУчета.СуммаБУ, 0) - (-ЕСТЬNULL(втОстаткиСчетАмортизации.СуммаБУ, 0) + ЕСТЬNULL(втАмортизация.СуммаБУ, 0)) КАК ОстаточнаяСтоимостьБУ,
	|	ЕСТЬNULL(втОстаткиСчетУчета.СуммаНУ, 0) - (-ЕСТЬNULL(втОстаткиСчетАмортизации.СуммаНУ, 0) + ЕСТЬNULL(втАмортизация.СуммаНУ, 0)) КАК ОстаточнаяСтоимостьНУ
	|	
	|	
	|ПОМЕСТИТЬ втОстаткиПоСчетам
	|ИЗ
	|	втОбъектыСгруппированные КАК втОбъектыСгруппированные
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСчетаОтражения КАК втСчетаОтражения
	|		ПО втОбъектыСгруппированные.ОбъектУчета = втСчетаОтражения.ОбъектУчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ втАмортизацияСгруппированная КАК втАмортизация
	|		ПО втОбъектыСгруппированные.ОбъектУчета = втАмортизация.ОбъектУчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ втХозрасчетныйОстатки КАК втОстаткиСчетУчета
	|		ПО втОбъектыСгруппированные.ОбъектУчета = втОстаткиСчетУчета.ОбъектУчета
	|			И (втСчетаОтражения.СчетУчета = втОстаткиСчетУчета.Счет)
	|		ЛЕВОЕ СОЕДИНЕНИЕ втХозрасчетныйОстатки КАК втОстаткиСчетАмортизации
	|		ПО втОбъектыСгруппированные.ОбъектУчета = втОстаткиСчетАмортизации.ОбъектУчета
	|			И (втСчетаОтражения.СчетНачисленияАмортизации = втОстаткиСчетАмортизации.Счет)
	
	|ГДЕ
	|	НЕ (
	|		втОстаткиСчетУчета.ОбъектУчета ЕСТЬ NULL
	|		И втОстаткиСчетАмортизации.ОбъектУчета ЕСТЬ NULL
	|	)";
	
КонецФункции

// Возвращает текст запроса временной таблицы остатков резерва переоценки
//
// Возвращаемое значение:
// 		Строка - Текст запроса
//
Функция ТекстЗапросаВТОтраженияВРеглУчетеОстаткиРезерваПереоценки() Экспорт
	
	Возврат
	"ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ПОМЕСТИТЬ втСчетаДооценки
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ(ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДооценкаНематериальныхАктивов))
	
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Субконто1 КАК ОбъектУчета,
	|	ХозрасчетныйОстатки.Счет КАК Счет,
	|	ХозрасчетныйОстатки.СуммаОстатокКт КАК СуммаБУ,
	|	ХозрасчетныйОстатки.СуммаНУОстатокКт КАК СуммаНУ,
	|	0 КАК СуммаПР,
	|	0 КАК СуммаВР
	|ПОМЕСТИТЬ втОстаткиДооценкиИДвиженияДокумента
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&ГраницаМесяцОкончание,
	|			Счет В
	|				(ВЫБРАТЬ
	|					Т.Счет
	|				ИЗ
	|					втСчетаДооценки КАК Т),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.НематериальныеАктивы),
	|			(Организация, Субконто1) В
	|				(ВЫБРАТЬ
	|					Т.Организация,
	|					Т.ОбъектУчета
	|				ИЗ
	|					втОбъектыСгруппированные КАК Т)) КАК ХозрасчетныйОстатки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйСубконто.Значение,
	|	Хозрасчетный.СчетДт,
	|	Хозрасчетный.Сумма,
	|	Хозрасчетный.СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный КАК Хозрасчетный
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСчетаДооценки КАК втВсеСчета
	|		ПО Хозрасчетный.СчетДт = втВсеСчета.Счет
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втОбъектыСгруппированные КАК втОбъектыСгруппированные
	|		ПО Хозрасчетный.Организация = втОбъектыСгруппированные.Организация
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Субконто КАК ХозрасчетныйСубконто
	|		ПО Хозрасчетный.Регистратор = ХозрасчетныйСубконто.Регистратор
	|			И Хозрасчетный.НомерСтроки = ХозрасчетныйСубконто.НомерСтроки
	|			И (втОбъектыСгруппированные.ОбъектУчета = ХозрасчетныйСубконто.Значение)
	|			И (ХозрасчетныйСубконто.Вид = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.НематериальныеАктивы))
	|			И (ХозрасчетныйСубконто.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияБухгалтерии.Дебет))
	|ГДЕ
	|	Хозрасчетный.Регистратор = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйСубконто.Значение,
	|	Хозрасчетный.СчетКт,
	|	-Хозрасчетный.Сумма,
	|	-Хозрасчетный.СуммаНУКт,
    |	0,
	|	0
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный КАК Хозрасчетный
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСчетаДооценки КАК втВсеСчета
	|		ПО Хозрасчетный.СчетКт = втВсеСчета.Счет
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втОбъектыСгруппированные КАК втОбъектыСгруппированные
	|		ПО Хозрасчетный.Организация = втОбъектыСгруппированные.Организация
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Субконто КАК ХозрасчетныйСубконто
	|		ПО Хозрасчетный.Регистратор = ХозрасчетныйСубконто.Регистратор
	|			И Хозрасчетный.НомерСтроки = ХозрасчетныйСубконто.НомерСтроки
	|			И (втОбъектыСгруппированные.ОбъектУчета = ХозрасчетныйСубконто.Значение)
	|			И (ХозрасчетныйСубконто.Вид = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.НематериальныеАктивы))
	|			И (ХозрасчетныйСубконто.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияБухгалтерии.Кредит))
	|ГДЕ
	|	Хозрасчетный.Регистратор = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втОстаткиДооценкиИДвиженияДокумента.ОбъектУчета КАК ОбъектУчета,
	|	втОстаткиДооценкиИДвиженияДокумента.Счет КАК Счет,
	|	СУММА(втОстаткиДооценкиИДвиженияДокумента.СуммаБУ) КАК СуммаБУ,
	|	СУММА(втОстаткиДооценкиИДвиженияДокумента.СуммаНУ) КАК СуммаНУ,
	|	СУММА(втОстаткиДооценкиИДвиженияДокумента.СуммаПР) КАК СуммаПР,
	|	СУММА(втОстаткиДооценкиИДвиженияДокумента.СуммаВР) КАК СуммаВР
	|ПОМЕСТИТЬ втОстаткиРезерваДооценки
	|ИЗ
	|	втОстаткиДооценкиИДвиженияДокумента КАК втОстаткиДооценкиИДвиженияДокумента
	|
	|СГРУППИРОВАТЬ ПО
	|	втОстаткиДооценкиИДвиженияДокумента.ОбъектУчета,
	|	втОстаткиДооценкиИДвиженияДокумента.Счет";
	
КонецФункции

// Возвращает текст запроса для отражения амортизации по документу в регламентированном учете.
//
// Возвращаемое значение:
// 		Строка - Текст запроса
//
Функция ТекстОтраженияВРеглУчетеНачисленнойАмортизации() Экспорт
	Возврат ТекстОтраженияВРеглУчетеНачисленнойАмортизацииУКР();
КонецФункции

Функция ТекстОтраженияВРеглУчетеНачисленнойАмортизацииУКР() Экспорт
	
	ТекстыОтражения = Новый Массив;
	ТекстыОтражения.Добавить(ТекстОтраженияАмортизация());
	ТекстыОтражения.Добавить(ТекстОтраженияАмортизацияНаПрочиеОперации());
	
	Возврат СтрСоединить(ТекстыОтражения, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
КонецФункции


// Возвращает таблицу начисленной амортизации
//
// Параметры:
// 		ТаблицаОбъектовУчета - ТаблицаЗначений - Таблица объектов для начисления амортизации
// 		ТаблицаРеквизитов - ТаблицаЗначений - Таблица реквизитов документа
// 		Отказ - Булево - Признак удачного завершения функции начисления амортизации.
//
// Возвращаемое значение:
// 		ТаблицаЗначений - Таблица начисленных расходов по амортизации (формат представлен в функции УчетОСВызовСервера.ПустаяТаблицаЗначенийНачисленнойАмортизации).
//
Функция НачисленнаяАмортизация(ТаблицаОбъектовУчета, ТаблицаРеквизитов, ТаблицаПараметровРасчетаАмортизации = Неопределено, Отказ) Экспорт
	
	Возврат ПодготовитьТаблицуАмортизацияНМА(ТаблицаОбъектовУчета, ТаблицаРеквизитов, ТаблицаПараметровРасчетаАмортизации, Отказ);
	
КонецФункции

#Область БлокировкаПриОбновленииИБ

// Заполняет входящие данные расчета и отражения амортизации, необходимые для проверки выполненных обновлений ИБ.
//
// Параметры:
// 		ВходящиеДанные - Соответствие - Данные расчета и отражения амортизации
// 			* Ключ - Строка, ОбъектМетаданныхКонфигурации - входящие данные, используемые  операцией
// 			* Значение - см. ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки, параметр Отбор.
//
Процедура ЗаполнитьВходящиеДанныеАмортизации(ВходящиеДанные) Экспорт
	
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ПрочиеРасходы);
	
	ВходящиеДанные.Вставить(Метаданные.РегистрыБухгалтерии.Хозрасчетный);
	
	ВходящиеДанные.Вставить(Метаданные.РегистрыСведений.ПервоначальныеСведенияНМА);
	ВходящиеДанные.Вставить(Метаданные.РегистрыСведений.ПорядокУчетаНМА);
	ВходящиеДанные.Вставить(Метаданные.РегистрыСведений.ПорядокУчетаНМАБУ);
	ВходящиеДанные.Вставить(Метаданные.РегистрыСведений.ПараметрыАмортизацииНМАБУ);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ВыработкаНМА);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОтражениеАмортизацииВРегламентированномУчете

Функция ТекстЗапросаВТНачисленнаяАмортизация(ИмяДокумента)
	
	ТекстЗапроса = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втНачисленнаяАмортизация
	|"+
	"ВЫБРАТЬ
	|	ТаблицаАмортизации.Ссылка.Организация КАК Организация,
	|	ТаблицаАмортизации.ОбъектУчета КАК ОбъектУчета,
	|	ТаблицаАмортизации.НаправлениеДеятельности КАК НаправлениеДеятельностиАмортизации,
	|	ТаблицаАмортизации.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ТаблицаАмортизации.Подразделение КАК Подразделение,
	|	ТаблицаАмортизации.СуммаБУ КАК СуммаБУ,
	|	ТаблицаАмортизации.СуммаНУ КАК СуммаНУ,
	|	ТаблицаАмортизации.СтатьяРасходов КАК СтатьяРасходов,
	|	ТаблицаАмортизации.АналитикаРасходов КАК АналитикаРасходов,
	|	ТаблицаАмортизации.НалоговоеНазначение КАК НалоговоеНазначение
	|ПОМЕСТИТЬ втНачисленнаяАмортизация
	|ИЗ
	|	Документ.СписаниеНМА.НачисленнаяАмортизация КАК ТаблицаАмортизации
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НематериальныеАктивы КАК СправочникОбъектыУчета
	|		ПО ТаблицаАмортизации.ОбъектУчета = СправочникОбъектыУчета.Ссылка
	|ГДЕ
	|	ТаблицаАмортизации.Ссылка = &Ссылка";
	
	ТекстыЗапроса = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ТекстЗапроса);
	
	Если ИмяДокумента = "АмортизацияНМА" Тогда
		
		ТекстВыборкиТаблицыПараметра = 
		"ВЫБРАТЬ
		|	ТаблицаАмортизации.Организация КАК Организация,
		|	ТаблицаАмортизации.ОбъектУчета КАК ОбъектУчета,
		|	ТаблицаАмортизации.НаправлениеДеятельности КАК НаправлениеДеятельностиАмортизации,
		|	ТаблицаАмортизации.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	ТаблицаАмортизации.Подразделение КАК Подразделение,
		|	ТаблицаАмортизации.СуммаБУ КАК СуммаБУ,
		|	ТаблицаАмортизации.СуммаНУ КАК СуммаНУ,
		|	ТаблицаАмортизации.СтатьяРасходов КАК СтатьяРасходов,
		|	ТаблицаАмортизации.АналитикаРасходов КАК АналитикаРасходов,
		|	ТаблицаАмортизации.НалоговоеНазначение КАК НалоговоеНазначение
		|ИЗ
		|	втТаблицаАмортизации КАК ТаблицаАмортизации
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НематериальныеАктивы КАК СправочникОбъектыУчета
		|		ПО ТаблицаАмортизации.ОбъектУчета = СправочникОбъектыУчета.Ссылка";
		
		ТекстыЗапроса.Добавить(ТекстВыборкиТаблицыПараметра);
		
	КонецЕсли;
	
	ТекстЗапроса = СтрСоединить(ТекстыЗапроса, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Документ.СписаниеНМА", "Документ."+ИмяДокумента);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВТОбъектыДокумента(ИмяДокумента)
	
	ТекстЗапросаВТВсеОбъектыДокумента = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втВсеОбъектыДокумента
	|"+
	"ВЫБРАТЬ
	|	ТаблицаАмортизации.Организация КАК Организация,
	|	ТаблицаАмортизации.ОбъектУчета КАК ОбъектУчета
	|ПОМЕСТИТЬ втВсеОбъектыДокумента
	|ИЗ
	|	втНачисленнаяАмортизация КАК ТаблицаАмортизации";
	ТекстыЗапроса = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ТекстЗапросаВТВсеОбъектыДокумента);

	Если ИмяДокумента = "ИзменениеПараметровНМА" Тогда
	
		ТекстВыборкиТаблицыПараметра = 
		"ВЫБРАТЬ
		|	ТаблицаДокумента.Ссылка.Организация КАК Организация,
		|	ТаблицаДокумента.НематериальныйАктив КАК ОбъектУчета
		|ИЗ
		|	Документ.ИзменениеПараметровНМА.НМА КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &Ссылка";
		
		ТекстыЗапроса.Добавить(ТекстВыборкиТаблицыПараметра);
	
	ИначеЕсли ИмяДокумента <> "АмортизацияНМА" Тогда
		
		ТекстВыборкиТаблицыПараметра = 
		"ВЫБРАТЬ
		|	ТаблицаДокумента.Организация КАК Организация,
		|	ТаблицаДокумента.НематериальныйАктив КАК ОбъектУчета
		|ИЗ
		|	Документ.СписаниеНМА КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &Ссылка";
		
		ТекстыЗапроса.Добавить(ТекстВыборкиТаблицыПараметра);
		
	КонецЕсли;
	
	ТекстЗапросаВТВсеОбъектыДокумента = СтрСоединить(ТекстыЗапроса, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
	ТекстыЗапроса = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ТекстЗапросаВТВсеОбъектыДокумента);
	
	ТекстЗапросаВТОбъектыДокумента = 
	"// Временная таблица втОбъектыДокумента
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	втВсеОбъектыДокумента.Организация КАК Организация,
	|	втВсеОбъектыДокумента.ОбъектУчета КАК ОбъектУчета
	|ПОМЕСТИТЬ втОбъектыДокумента
	|ИЗ
	|	втВсеОбъектыДокумента КАК втВсеОбъектыДокумента";
	
	ТекстыЗапроса.Добавить(ТекстЗапросаВТОбъектыДокумента);
	ТекстЗапроса = СтрСоединить(ТекстыЗапроса, ОбщегоНазначенияУТ.РазделительЗапросовВПакете());
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Документ.СписаниеНМА", "Документ."+ИмяДокумента);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВТСчетаОтражения()
	
	Возврат "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица ВТСчетаОтражения
	|"+
	"ВЫБРАТЬ
	|	втОбъектыДокумента.ОбъектУчета КАК ОбъектУчета,
	|	ЕСТЬNULL(СчетаОтражения.СчетУчета, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)) КАК СчетУчета,
	|	ЕСТЬNULL(СчетаОтражения.СчетНачисленияАмортизации, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)) КАК СчетНачисленияАмортизации
	|ПОМЕСТИТЬ втСчетаОтражения
	|ИЗ
	|	втОбъектыДокумента КАК втОбъектыДокумента
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаНМА.СрезПоследних(
	|			&Дата,
	|			Регистратор <> &Ссылка
	|			И НЕ Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4
	|			И (Организация, НематериальныйАктив) В
	|				(ВЫБРАТЬ
	|					Т.Организация, Т.ОбъектУчета
	|				ИЗ
	|					втОбъектыДокумента КАК Т)) КАК СчетаОтражения
	|		ПО втОбъектыДокумента.ОбъектУчета = СчетаОтражения.НематериальныйАктив
	|			И втОбъектыДокумента.Организация = СчетаОтражения.Организация
	|";
	
	
КонецФункции

Функция ТекстЗапросаВТМестонахожденияНМА()
	
	Возврат "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица ВТМестонахожденияНМА
	|"+
	"ВЫБРАТЬ
	|	втОбъектыДокумента.ОбъектУчета КАК ОбъектУчета,
	|	ЕСТЬNULL(ДанныеСчетУчета.Подразделение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)) КАК Подразделение
	|ПОМЕСТИТЬ втМестонахожденияНМА
	|ИЗ
	|	втОбъектыДокумента КАК втОбъектыДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ втСчетаОтражения КАК втСчетаОтражения
	|		ПО втОбъектыДокумента.ОбъектУчета = втСчетаОтражения.ОбъектУчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Остатки(
	|				&Дата,
	|				Счет В
	|					(ВЫБРАТЬ
	|						Т.СчетУчета
	|					ИЗ
	|						втСчетаОтражения КАК Т),
	|				ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.НематериальныеАктивы),
	|				(Организация, Субконто1) В
	|					(ВЫБРАТЬ
	|						Т.Организация,
	|						Т.ОбъектУчета
	|					ИЗ
	|						втОбъектыДокумента КАК Т)) КАК ДанныеСчетУчета
	|		ПО втОбъектыДокумента.ОбъектУчета = ДанныеСчетУчета.Субконто1
	|			И (втСчетаОтражения.СчетУчета = ДанныеСчетУчета.Счет)
	|";
	
	
КонецФункции

Функция ТекстЗапросаВТПорядокУчетаНМА()
	
	Возврат "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица втПорядокУчетаНМА
	|"+
	"ВЫБРАТЬ
	|	втОбъектыДокумента.ОбъектУчета КАК ОбъектУчета,
	|	ПорядокУчетаНМА.НаправлениеДеятельности КАК НаправлениеДеятельности
	|ПОМЕСТИТЬ втПорядокУчетаНМА
	|ИЗ
	|	втОбъектыДокумента КАК втОбъектыДокумента
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаНМА.СрезПоследних(
	|			&Дата,
	|			Регистратор <> &Ссылка
	|			И (НематериальныйАктив, Организация) В
	|				(ВЫБРАТЬ
	|					Т.ОбъектУчета,
	|					Т.Организация
	|				ИЗ
	|					втОбъектыДокумента КАК Т)) КАК ПорядокУчетаНМА
	|		ПО втОбъектыДокумента.Организация = ПорядокУчетаНМА.Организация
	|			И втОбъектыДокумента.ОбъектУчета = ПорядокУчетаНМА.НематериальныйАктив";
	
КонецФункции

Функция ТекстЗапросаВТПорядокУчетаНМАБУ()
	
	Возврат "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица втПорядокУчетаНМА
	|"+
	"ВЫБРАТЬ
	|	втОбъектыДокумента.ОбъектУчета КАК ОбъектУчета,
	|	ПорядокУчетаНМАБУ.НалоговоеНазначение КАК НалоговоеНазначение
	|ПОМЕСТИТЬ втПорядокУчетаНМАБУ
	|ИЗ
	|	втОбъектыДокумента КАК втОбъектыДокумента
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаНМАБУ.СрезПоследних(
	|			&Дата,
	|			Регистратор <> &Ссылка
	|			И (НематериальныйАктив, Организация) В
	|				(ВЫБРАТЬ
	|					Т.ОбъектУчета,
	|					Т.Организация
	|				ИЗ
	|					втОбъектыДокумента КАК Т)) КАК ПорядокУчетаНМАБУ
	|		ПО втОбъектыДокумента.Организация = ПорядокУчетаНМАБУ.Организация
	|			И втОбъектыДокумента.ОбъектУчета = ПорядокУчетаНМАБУ.НематериальныйАктив";
	
КонецФункции


Функция ТекстОтраженияАмортизация()

	
	ЯзыкСодержания = МультиязычностьУкр.КодЯзыкаИнформационнойБазы();
	
	ТекстЗапроса = "
	|////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Амортизация НМА (Дт СчетУчетаЗатрат :: Кт СчетАмортизации)
	|ВЫБРАТЬ
	|	
	|	&Ссылка КАК Ссылка,
	|	&Дата КАК Период,
	|	Строки.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	Строки.СуммаБУ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Строки.СтатьяРасходов КАК АналитикаУчетаДт,
	|	Строки.Подразделение КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельностиАмортизации КАК НаправлениеДеятельностиДт,
	|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|   ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее) КАК СубконтоДт1,
	|	Строки.СтатьяРасходов КАК СубконтоДт2,
	|	Строки.АналитикаРасходов КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СуммаНУ КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Местонахождения.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|   Строки.НалоговоеНазначение КАК НалоговоеНазначениеКт,
	|
	|	СчетаОтражения.СчетНачисленияАмортизации  КАК СчетКт,
	|	Строки.ОбъектУчета КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СуммаНУ КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	""%1"" КАК Содержание
	|ИЗ
	|	втНачисленнаяАмортизация КАК Строки
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втСчетаОтражения КАК СчетаОтражения
	|		ПО Строки.ОбъектУчета = СчетаОтражения.ОбъектУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втМестонахожденияНМА КАК Местонахождения                          
	|		ПО Строки.ОбъектУчета = Местонахождения.ОбъектУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиСтроительства
	|	ПО Строки.СтатьяРасходов = СтатьиСтроительства.Ссылка
	|		И СтатьиСтроительства.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|ГДЕ
	|	Строки.СтатьяРасходов.ВариантРаспределенияРасходовРегл <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|";
	

	ТекстЗапроса = СтрШаблон(ТекстЗапроса, 
		НСтр("ru='Начисление амортизации';uk='Нарахування амортизації'",ЯзыкСодержания));

	Возврат ТекстЗапроса;    

КонецФункции

Функция ТекстОтраженияАмортизацияНаПрочиеОперации()


	ЯзыкСодержания = МультиязычностьУкр.КодЯзыкаИнформационнойБазы();

	ТекстЗапроса = "
	|////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Амортизация НМА (Дт СчетУчетаЗатрат :: Кт СчетАмортизации)
	|ВЫБРАТЬ
	|	
	|	&Ссылка КАК Ссылка,
	|	&Дата КАК Период,
	|	Строки.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	Строки.СуммаБУ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеОперации) КАК ВидСчетаДт,
	|	Строки.СтатьяРасходов КАК АналитикаУчетаДт,
	|	Строки.Подразделение КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СуммаНУ КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Местонахождения.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|   Строки.НалоговоеНазначение КАК НалоговоеНазначениеКт,
	|
	|	СчетаОтражения.СчетНачисленияАмортизации КАК СчетКт,
	|	Строки.ОбъектУчета КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СуммаНУ КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	""%1"" КАК Содержание
	|ИЗ
	|	втНачисленнаяАмортизация КАК Строки
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьяПрочиеОперации
	|	ПО Строки.СтатьяРасходов = СтатьяПрочиеОперации.Ссылка
	|		И СтатьяПрочиеОперации.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втСчетаОтражения КАК СчетаОтражения
	|		ПО Строки.ОбъектУчета = СчетаОтражения.ОбъектУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втМестонахожденияНМА КАК Местонахождения
	|		ПО Строки.ОбъектУчета = Местонахождения.ОбъектУчета
	|	
	|ГДЕ
	|	Строки.СуммаБУ > 0
	|	ИЛИ Строки.СуммаНУ > 0
	|";

	ТекстЗапроса = СтрШаблон(ТекстЗапроса, 
		НСтр("ru='Начисление амортизации';uk='Нарахування амортизації'",ЯзыкСодержания)); 
		
	Возврат ТекстЗапроса;
 	
КонецФункции


#КонецОбласти

#Область ОбщиеПроцедуры

// АМОРТИЗАЦИЯ НМА

Функция ПолучитьТекстЗапросаАмортизацияНМАПринятыКУчетуНМАВсе()

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПорядокУчетаНМАБУ.НематериальныйАктив КАК НематериальныйАктив
	|ПОМЕСТИТЬ СписокНМА
	|ИЗ
	|	РегистрСведений.ПорядокУчетаНМАБУ.СрезПоследних(&НачалоПериода, Организация = &Организация) КАК ПорядокУчетаНМАБУ
	|ГДЕ
	|	ПорядокУчетаНМАБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.ПринятКУчету)";

	Возврат ТекстЗапроса;

КонецФункции

Функция ПолучитьТекстЗапросаАмортизацияНМАПринятыКУчетуНМАПоТаблице()

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаНМА.НематериальныйАктив КАК НематериальныйАктив
	|ПОМЕСТИТЬ ТаблицаНМА
	|ИЗ
	|	&ТаблицаНМА КАК ТаблицаНМА
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НематериальныйАктив
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПорядокУчетаНМАБУ.НематериальныйАктив КАК НематериальныйАктив
	|ПОМЕСТИТЬ СписокНМА
	|ИЗ
	|	РегистрСведений.ПорядокУчетаНМАБУ.СрезПоследних(
	|			&НачалоПериода,
	|			НематериальныйАктив В
	|					(ВЫБРАТЬ
	|						ТаблицаНМА.НематериальныйАктив
	|					ИЗ
	|						ТаблицаНМА КАК ТаблицаНМА)
	|				И Организация = &Организация) КАК ПорядокУчетаНМАБУ
	|ГДЕ
	|	ПорядокУчетаНМАБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.ПринятКУчету)";

	Возврат ТекстЗапроса;

КонецФункции

Функция ПолучитьТекстЗапросаАмортизацияНМАПринятыКУчетуНМАВМесяцАмортизацииВсе()

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПорядокУчетаНМАБУ.НематериальныйАктив КАК НематериальныйАктив
	|ПОМЕСТИТЬ НМАПринятыеКУчетуВМесяцАмортизации
	|ИЗ
	|	РегистрСведений.ПорядокУчетаНМАБУ КАК ПорядокУчетаНМАБУ
	|ГДЕ
	|	ПорядокУчетаНМАБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.ПринятКУчету)
	|	И ПорядокУчетаНМАБУ.Организация = &Организация
	|	И ПорядокУчетаНМАБУ.Период МЕЖДУ &НачалоПериодаДата И &КонецПериода
	|	И ПорядокУчетаНМАБУ.Активность
	|
	|СГРУППИРОВАТЬ ПО
	|	ПорядокУчетаНМАБУ.НематериальныйАктив
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПорядокУчетаНМАБУ.НематериальныйАктив";

	Возврат ТекстЗапроса;

КонецФункции

Функция ПолучитьТекстЗапросаАмортизацияНМАПринятыКУчетуНМАВМесяцАмортизацииПоТаблице()

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПорядокУчетаНМАБУ.НематериальныйАктив КАК НематериальныйАктив
	|ПОМЕСТИТЬ НМАПринятыеКУчетуВМесяцАмортизации
	|ИЗ
	|	ТаблицаНМА КАК ТаблицаНМА
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаНМАБУ КАК ПорядокУчетаНМАБУ
	|		ПО (ПорядокУчетаНМАБУ.НематериальныйАктив = ТаблицаНМА.НематериальныйАктив)
	|			И (ПорядокУчетаНМАБУ.Организация = &Организация)
	|			И (ПорядокУчетаНМАБУ.Активность)
	|ГДЕ
	|	ПорядокУчетаНМАБУ.Период МЕЖДУ &НачалоПериодаДата И &КонецПериода
	|	И ПорядокУчетаНМАБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.ПринятКУчету)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПорядокУчетаНМАБУ.НематериальныйАктив
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПорядокУчетаНМАБУ.НематериальныйАктив";

	Возврат ТекстЗапроса;

КонецФункции

Функция ПолучитьТекстЗапросаАмортизируемыеНМАПринятыеКУчетуВМесяцАмортизации()

	ТекстЗапроса =
	
	"ВЫБРАТЬ
	|	СписокНМАПервоначальныеСведенияНМА.НематериальныйАктив КАК НематериальныйАктив
	|ПОМЕСТИТЬ СписокНМАПринятыеКУчетуВМесяцАмортизации
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияНМА.СрезПоследних(
	|			&КонецПериода,
	|			Организация = &Организация
	|				И НематериальныйАктив В
	|					(ВЫБРАТЬ
	|						НМАПринятыеКУчетуВМесяцАмортизации.НематериальныйАктив
	|					ИЗ
	|						НМАПринятыеКУчетуВМесяцАмортизации КАК НМАПринятыеКУчетуВМесяцАмортизации)) КАК СписокНМАПервоначальныеСведенияНМА
	|ГДЕ
	|	СписокНМАПервоначальныеСведенияНМА.МетодНачисленияАмортизацииБУ = ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииНМА.ПропорциональноОбъемуПродукции)
	|
	|СГРУППИРОВАТЬ ПО
	|	СписокНМАПервоначальныеСведенияНМА.НематериальныйАктив
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НематериальныйАктив";

	Возврат ТекстЗапроса;

КонецФункции

Функция ПолучитьТекстЗапросаСчетаУчета()
	
	Возврат
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПорядокУчетаНМАБУ.НематериальныйАктив КАК НематериальныйАктив,
	|
	|	ПорядокУчетаНМАБУ.НачислятьАмортизациюБУ КАК НачислятьАмортизациюБУ,
	|	ПорядокУчетаНМАБУ.НачислятьАмортизациюНУ КАК НачислятьАмортизациюНУ,
	|
	|	ПорядокУчетаНМАБУ.СтатьяРасходовБУ КАК СтатьяРасходов,
	|	ПорядокУчетаНМАБУ.АналитикаРасходовБУ КАК АналитикаРасходов,
	|
	|	ПорядокУчетаНМАБУ.СпособОтраженияРасходовБУ КАК СпособОтраженияРасходов,
	|	НЕ ПорядокУчетаНМАБУ.СпособОтраженияРасходовБУ В (
	|			ЗНАЧЕНИЕ(Документ.ИзменениеПараметровНМА.ПустаяСсылка),
	|			ЗНАЧЕНИЕ(Документ.ИзменениеПараметровНМА2_4.ПустаяСсылка),
	|			НЕОПРЕДЕЛЕНО) КАК СпособОтраженияРасходовЗаданДокументом,
	|
	|	ПорядокУчетаНМАБУ.НалоговоеНазначение КАК НалоговоеНазначение
	|ПОМЕСТИТЬ ПорядокУчетаНМАБУ
	|ИЗ
	|	РегистрСведений.ПорядокУчетаНМАБУ.СрезПоследних(
	|			&НачалоПериода,
	|			Организация = &Организация
	|				И Регистратор <> &Регистратор
	|				И НематериальныйАктив В
	|					(ВЫБРАТЬ
	|						СписокНМА.НематериальныйАктив
	|					ИЗ
	|						СписокНМА КАК СписокНМА)) КАК ПорядокУчетаНМАБУ
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ 
	|	ПорядокУчетаНМАБУПринятыеКУчетуВМесяцАмортизации.НематериальныйАктив,
	|
	|	ПорядокУчетаНМАБУПринятыеКУчетуВМесяцАмортизации.НачислятьАмортизациюБУ,
	|	ПорядокУчетаНМАБУПринятыеКУчетуВМесяцАмортизации.НачислятьАмортизациюНУ,
	|
	|	ПорядокУчетаНМАБУПринятыеКУчетуВМесяцАмортизации.СтатьяРасходовБУ,
	|	ПорядокУчетаНМАБУПринятыеКУчетуВМесяцАмортизации.АналитикаРасходовБУ,
	|
	|	ПорядокУчетаНМАБУПринятыеКУчетуВМесяцАмортизации.СпособОтраженияРасходовБУ КАК СпособОтраженияРасходов,
	|	НЕ ПорядокУчетаНМАБУПринятыеКУчетуВМесяцАмортизации.СпособОтраженияРасходовБУ В (
	|			ЗНАЧЕНИЕ(Документ.ИзменениеПараметровНМА.ПустаяСсылка),
	|			ЗНАЧЕНИЕ(Документ.ИзменениеПараметровНМА2_4.ПустаяСсылка),
	|			НЕОПРЕДЕЛЕНО) КАК СпособОтраженияРасходовЗаданДокументом,
	|
	|	ПорядокУчетаНМАБУПринятыеКУчетуВМесяцАмортизации.НалоговоеНазначение
	|ИЗ
	|	РегистрСведений.ПорядокУчетаНМАБУ.СрезПоследних(
	|			&КонецПериода,
	|			Организация = &Организация
	|				И Регистратор <> &Регистратор
	|				И НематериальныйАктив В
	|					(ВЫБРАТЬ
	|						СписокНМАПринятыеКУчетуВМесяцАмортизации.НематериальныйАктив
	|					ИЗ
	|						СписокНМАПринятыеКУчетуВМесяцАмортизации КАК СписокНМАПринятыеКУчетуВМесяцАмортизации)) КАК ПорядокУчетаНМАБУПринятыеКУчетуВМесяцАмортизации
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НематериальныйАктив
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПорядокУчетаНМА.НематериальныйАктив КАК НематериальныйАктив,
	|	ПорядокУчетаНМА.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ПорядокУчетаНМА.ОбъемНаработки КАК ОбъемНаработки,
	|	ПорядокУчетаНМА.СчетУчета КАК СчетУчета,
	|	ПорядокУчетаНМА.СчетНачисленияАмортизации КАК СчетНачисленияАмортизации
	|ПОМЕСТИТЬ ПорядокУчетаНМА
	|ИЗ
	|	РегистрСведений.ПорядокУчетаНМА.СрезПоследних(
	|			&НачалоПериода,
	|			Организация = &Организация
	|				И НематериальныйАктив В
	|					(ВЫБРАТЬ
	|						СписокНМА.НематериальныйАктив
	|					ИЗ
	|						СписокНМА КАК СписокНМА)) КАК ПорядокУчетаНМА
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПорядокУчетаНМАПринятыеКУчетуВМесяцАмортизации.НематериальныйАктив,
	|	ПорядокУчетаНМАПринятыеКУчетуВМесяцАмортизации.НаправлениеДеятельности,
	|	ПорядокУчетаНМАПринятыеКУчетуВМесяцАмортизации.ОбъемНаработки,
	|	ПорядокУчетаНМАПринятыеКУчетуВМесяцАмортизации.СчетУчета,
	|	ПорядокУчетаНМАПринятыеКУчетуВМесяцАмортизации.СчетНачисленияАмортизации
	|ИЗ
	|	РегистрСведений.ПорядокУчетаНМА.СрезПоследних(
	|			&КонецПериода,
	|			Организация = &Организация
	|				И НематериальныйАктив В
	|					(ВЫБРАТЬ
	|						СписокНМАПринятыеКУчетуВМесяцАмортизации.НематериальныйАктив
	|					ИЗ
	|						СписокНМАПринятыеКУчетуВМесяцАмортизации КАК СписокНМАПринятыеКУчетуВМесяцАмортизации)) КАК ПорядокУчетаНМАПринятыеКУчетуВМесяцАмортизации
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НематериальныйАктив
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПорядокУчетаНМА.НематериальныйАктив КАК НематериальныйАктив,
	|	ПорядокУчетаНМА.СчетУчета КАК Счет
	|ПОМЕСТИТЬ втВсеСчета
	|ИЗ
	|	ПорядокУчетаНМА КАК ПорядокУчетаНМА
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПорядокУчетаНМА.НематериальныйАктив,
	|	ПорядокУчетаНМА.СчетНачисленияАмортизации
	|ИЗ
	|	ПорядокУчетаНМА КАК ПорядокУчетаНМА
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПорядокУчетаНМА.НематериальныйАктив КАК НематериальныйАктив,
	|	ПорядокУчетаНМА.СчетУчета КАК Счет
	|ПОМЕСТИТЬ втВсеСчетаУчетаСтоимости
	|ИЗ
	|	ПорядокУчетаНМА КАК ПорядокУчетаНМА
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПорядокУчетаНМА.НематериальныйАктив КАК НематериальныйАктив,
	|	ПорядокУчетаНМА.СчетНачисленияАмортизации КАК Счет
	|ПОМЕСТИТЬ втВсеСчетаНакопленнойАмортизации
	|ИЗ
	|	ПорядокУчетаНМА КАК ПорядокУчетаНМА
	 |";
	
	
КонецФункции

Функция ПолучитьТекстЗапросаНачисленнаяАмортизацияЗаПериод(ДоначислениеВНУ = Ложь)
	
	ТекстЗапроса ="
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.ОбъектУчета КАК НМА
	|ПОМЕСТИТЬ втАктивыВДокументахЗаПериод
	|ИЗ
	|	Документ.АмортизацияНМА КАК Документ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.АмортизацияНМА.НачисленнаяАмортизация КАК ТабличнаяЧасть
	|		ПО Документ.Ссылка = ТабличнаяЧасть.Ссылка
	|ГДЕ
	|	Документ.Дата МЕЖДУ &НачалоПериодаДата И &КонецПериода
	|	И Документ.Проведен
	|	И НЕ Документ.ПометкаУдаления
	|	И Документ.Ссылка <> &Регистратор
	|	//УсловиеДокументАмортизация
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.ОбъектУчета КАК НМА
	|ИЗ
	|	Документ.ПереоценкаНМА КАК Документ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПереоценкаНМА.НачисленнаяАмортизация КАК ТабличнаяЧасть
	|		ПО Документ.Ссылка = ТабличнаяЧасть.Ссылка
	|ГДЕ
	|	Документ.Дата МЕЖДУ &НачалоПериодаДата И &КонецПериода
	|	И Документ.Проведен
	|	И НЕ Документ.ПометкаУдаления
	|	И Документ.Ссылка <> &Регистратор
	|	//УсловиеПрочиеДокументы
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.ОбъектУчета
	|ИЗ
	|	Документ.ПодготовкаКПередачеНМА КАК Документ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПодготовкаКПередачеНМА.НачисленнаяАмортизация КАК ТабличнаяЧасть
	|		ПО Документ.Ссылка = ТабличнаяЧасть.Ссылка
	|ГДЕ
	|	Документ.Дата МЕЖДУ &НачалоПериодаДата И &КонецПериода
	|	И Документ.Проведен
	|	И НЕ Документ.ПометкаУдаления
	|	И Документ.Ссылка <> &Регистратор
	|	//УсловиеПрочиеДокументы
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.ОбъектУчета
	|ИЗ
	|	Документ.СписаниеНМА КАК Документ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеНМА.НачисленнаяАмортизация КАК ТабличнаяЧасть
	|		ПО Документ.Ссылка = ТабличнаяЧасть.Ссылка
	|ГДЕ
	|	Документ.Дата МЕЖДУ &НачалоПериодаДата И &КонецПериода
	|	И Документ.Проведен
	|	И НЕ Документ.ПометкаУдаления
	|	И Документ.Ссылка <> &Регистратор
	|	//УсловиеПрочиеДокументы
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.ОбъектУчета
	|ИЗ
	|	Документ.МодернизацияНМА КАК Документ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.МодернизацияНМА.НачисленнаяАмортизация КАК ТабличнаяЧасть
	|		ПО Документ.Ссылка = ТабличнаяЧасть.Ссылка
	|ГДЕ
	|	Документ.Дата МЕЖДУ &НачалоПериодаДата И &КонецПериода
	|	И Документ.Проведен
	|	И НЕ Документ.ПометкаУдаления
	|	И Документ.Ссылка <> &Регистратор
	|	//УсловиеПрочиеДокументы
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.ОбъектУчета
	|ИЗ
	|	Документ.ПеремещениеНМА КАК Документ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПеремещениеНМА.НачисленнаяАмортизация КАК ТабличнаяЧасть
	|		ПО Документ.Ссылка = ТабличнаяЧасть.Ссылка
	|ГДЕ
	|	Документ.Дата МЕЖДУ &НачалоПериодаДата И &КонецПериода
	|	И Документ.Проведен
	|	И НЕ Документ.ПометкаУдаления
	|	И Документ.Ссылка <> &Регистратор
	|	//УсловиеПрочиеДокументы
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.ОбъектУчета
	|ИЗ
	|	Документ.ИзменениеПараметровНМА КАК Документ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ИзменениеПараметровНМА.НачисленнаяАмортизация КАК ТабличнаяЧасть
	|		ПО Документ.Ссылка = ТабличнаяЧасть.Ссылка
	|ГДЕ
	|	Документ.Дата МЕЖДУ &НачалоПериодаДата И &КонецПериода
	|	И Документ.Проведен
	|	И НЕ Документ.ПометкаУдаления
	|	И Документ.Ссылка <> &Регистратор
	|	//УсловиеПрочиеДокументы
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйДвиженияССубконто.СубконтоКт1
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ДвиженияССубконто(
	|			&НачалоПериодаДата,
	|			&КонецПериода,
	|			Регистратор <> &Регистратор
	|				И Регистратор ССЫЛКА Документ.АмортизацияНМА
	|				//УсловиеХозрасчетный
	|				И СчетКт В
	|					(ВЫБРАТЬ
	|						Т.СчетНачисленияАмортизации
	|					ИЗ
	|						ПорядокУчетаНМА КАК Т),
	|			,
	|			) КАК ХозрасчетныйДвиженияССубконто
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	втАктивыВДокументахЗаПериод.НМА
	|ПОМЕСТИТЬ втАмортизированныеАктивы
	|ИЗ
	|	втАктивыВДокументахЗаПериод КАК втАктивыВДокументахЗаПериод
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ втАктивыВДокументахЗаПериод";

	Если ДоначислениеВНУ Тогда
		УсловиеДокументАмортизация = "И ТабличнаяЧасть.СуммаНУ <> 0";
		УсловиеПрочиеДокументы = "И ТабличнаяЧасть.СуммаНУ <> 0";
		УсловиеХозрасчетный = "И СуммаНУКт <> 0";
	Иначе
		УсловиеДокументАмортизация = "И Документ.ДоначислениеВНУ = Ложь";
		УсловиеПрочиеДокументы = ""; 
		УсловиеХозрасчетный = "И Регистратор.ДоначислениеВНУ = Ложь";
	КонецЕсли;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//УсловиеДокументАмортизация", УсловиеДокументАмортизация);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//УсловиеПрочиеДокументы", УсловиеПрочиеДокументы);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//УсловиеХозрасчетный", УсловиеХозрасчетный);
    Возврат ТекстЗапроса;

КонецФункции

Функция ПолучитьТекстЗапросаСпособовОтраженияРасходов()
	
	Возврат
	"ВЫБРАТЬ
	|	ИзменениеПараметровНМА.Ссылка КАК СпособОтраженияРасходов,
	|	ИзменениеПараметровНМА.ОтражениеАмортизационныхРасходов.(
	|		НомерСтроки,
	|		Подразделение,
	|		НаправлениеДеятельности,
	|		СтатьяРасходов,
	|		АналитикаРасходов,
	|		Коэффициент,
	|		ПередаватьРасходыВДругуюОрганизацию,
	|		ОрганизацияПолучательРасходов,
	|		СчетПередачиРасходов
	|	)
	|ИЗ
	|	ПорядокУчетаНМАБУ КАК СпособыОтраженияРасходовБУ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ИзменениеПараметровНМА КАК ИзменениеПараметровНМА
	|		ПО СпособыОтраженияРасходовБУ.СпособОтраженияРасходов = ИзменениеПараметровНМА.Ссылка
	|ГДЕ
	|	СпособыОтраженияРасходовБУ.СпособОтраженияРасходовЗаданДокументом";
	
КонецФункции

Процедура СообщитьОбОшибкеПриНачисленииАмортизации(Выборка, ТекстСообщения, РегОперация, Отказ, Ссылка = Неопределено)
	
	ШаблонСообщения = НСтр("ru='%1 для нематериального актива %2 (%3).';uk='%1 для нематеріального активу %2 (%3).'");
	ТекстСообщенияОбОшибке = СтрШаблон(ШаблонСообщения, ТекстСообщения, Выборка.НематериальныйАктивПредставление, Выборка.Код);
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщенияОбОшибке, Ссылка,,, Отказ);
	
КонецПроцедуры // СообщитьОбОшибкеПриНачисленииАмортизации()

Функция ПодготовитьТаблицуАмортизацияНМА(ТаблицаНМА, ТаблицаРеквизиты, ТаблицаПараметровРасчетаАмортизации, Отказ) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Параметры = ПодготовитьПараметрыАмортизацияНМА(ТаблицаНМА, ТаблицаРеквизиты);
	Реквизиты = Параметры.Реквизиты[0];
	
	ТаблицаАмортизации = УчетОСВызовСервера.ПустаяТаблицаЗначенийНачисленнойАмортизации();
	
	Если ТаблицаРеквизиты.Колонки.Найти("ДоначислениеВНУ") = Неопределено Тогда
		ДоначислениеВНУ = Ложь;
	Иначе
		ДоначислениеВНУ = ТаблицаРеквизиты[0].ДоначислениеВНУ;
	КонецЕсли;
	ОтражатьВНалоговомУчете = УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Реквизиты.Организация, Реквизиты.Период)
			ИЛИ ДоначислениеВНУ;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Организация", Реквизиты.Организация);
	Запрос.УстановитьПараметр("НачалоГода", НачалоГода(Реквизиты.ДатаРасчета));
	Запрос.УстановитьПараметр("НачалоПериодаДата", НачалоМесяца(Реквизиты.ДатаРасчета));
	Запрос.УстановитьПараметр("НачалоПериода", Новый Граница(НачалоМесяца(Реквизиты.ДатаРасчета), ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(Реквизиты.ДатаРасчета));
	Запрос.УстановитьПараметр("Период", Реквизиты.ДатаРасчета);
	Запрос.УстановитьПараметр("Регистратор", Реквизиты.Регистратор);
	
	// Получим список нематериальных активов для расчета амортизации
	Если Параметры.ТаблицаНМА.Количество() > 0 Тогда
		Запрос.УстановитьПараметр("ТаблицаНМА", Параметры.ТаблицаНМА);
		Запрос.Текст = ПолучитьТекстЗапросаАмортизацияНМАПринятыКУчетуНМАПоТаблице();
	Иначе
		Запрос.Текст = ПолучитьТекстЗапросаАмортизацияНМАПринятыКУчетуНМАВсе();
	КонецЕсли;
	Запрос.Выполнить();
	
	Если Параметры.ТаблицаНМА.Количество() > 0 Тогда
		Запрос.Текст = ПолучитьТекстЗапросаАмортизацияНМАПринятыКУчетуНМАВМесяцАмортизацииПоТаблице();
	Иначе
		Запрос.Текст = ПолучитьТекстЗапросаАмортизацияНМАПринятыКУчетуНМАВМесяцАмортизацииВсе();
	КонецЕсли;
	Запрос.Выполнить();
	
	Запрос.Текст = ПолучитьТекстЗапросаАмортизируемыеНМАПринятыеКУчетуВМесяцАмортизации();
	Запрос.Выполнить();
	
	Запрос.Текст = ПолучитьТекстЗапросаСчетаУчета();
	Запрос.Выполнить();
	
	Запрос.Текст = ПолучитьТекстЗапросаНачисленнаяАмортизацияЗаПериод(ДоначислениеВНУ);
	Запрос.Выполнить();
	
	// Заполнение соответствия способов отражения расходов
	СоответствиеСпособовОтражения = Новый Соответствие;
	Запрос.Текст = ПолучитьТекстЗапросаСпособовОтраженияРасходов();
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			СоответствиеСпособовОтражения.Вставить(Выборка.СпособОтраженияРасходов, Выборка.ОтражениеАмортизационныхРасходов.Выгрузить());
		КонецЦикла;
	КонецЕсли;
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПервоначальныеСведенияНМА.Период КАК Период,
	|	ПервоначальныеСведенияНМА.НематериальныйАктив КАК НематериальныйАктив,
	|	ПервоначальныеСведенияНМА.ДатаПринятияКУчетуБУ КАК ДатаПринятияКУчетуБУ,
	|	ПервоначальныеСведенияНМА.ПервоначальнаяСтоимостьБУ КАК ПервоначальнаяСтоимостьБУ,
	|	ПервоначальныеСведенияНМА.ПервоначальнаяСтоимостьНУ КАК ПервоначальнаяСтоимостьНУ,
	|	ПервоначальныеСведенияНМА.МетодНачисленияАмортизацииБУ КАК СпособНачисленияАмортизации,
	|	ПервоначальныеСведенияНМА.МетодНачисленияАмортизацииНУ КАК СпособНачисленияАмортизацииНУ,
	|	ЛОЖЬ КАК АмортизируетсяВМесяцПринятияКУчету
	|ПОМЕСТИТЬ ПервоначальныеСведенияНМА
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияНМА.СрезПоследних(
	|			&НачалоПериода,
	|			Организация = &Организация
	|				И НематериальныйАктив В
	|					(ВЫБРАТЬ
	|						СписокНМА.НематериальныйАктив
	|					ИЗ
	|						СписокНМА КАК СписокНМА)) КАК ПервоначальныеСведенияНМА
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ 
	|	ПервоначальныеСведенияНМАПринятыеКУчетуВМесяцАмортизации.Период КАК Период,
	|	ПервоначальныеСведенияНМАПринятыеКУчетуВМесяцАмортизации.НематериальныйАктив КАК НематериальныйАктив,
	|	ПервоначальныеСведенияНМАПринятыеКУчетуВМесяцАмортизации.ДатаПринятияКУчетуБУ КАК ДатаПринятияКУчетуБУ,
	|	ПервоначальныеСведенияНМАПринятыеКУчетуВМесяцАмортизации.ПервоначальнаяСтоимостьБУ КАК ПервоначальнаяСтоимостьБУ,
	|	ПервоначальныеСведенияНМАПринятыеКУчетуВМесяцАмортизации.ПервоначальнаяСтоимостьНУ КАК ПервоначальнаяСтоимостьНУ,
	|	ПервоначальныеСведенияНМАПринятыеКУчетуВМесяцАмортизации.МетодНачисленияАмортизацииБУ КАК СпособНачисленияАмортизации,
	|	ПервоначальныеСведенияНМАПринятыеКУчетуВМесяцАмортизации.МетодНачисленияАмортизацииНУ КАК СпособНачисленияАмортизацииНУ,
	|	ИСТИНА КАК АмортизируетсяВМесяцПринятияКУчету
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияНМА.СрезПоследних(
	|			&КонецПериода,
	|			Организация = &Организация
	|				И НематериальныйАктив В
	|					(ВЫБРАТЬ
	|						СписокНМАПринятыеКУчетуВМесяцАмортизации.НематериальныйАктив
	|					ИЗ
	|						СписокНМАПринятыеКУчетуВМесяцАмортизации КАК СписокНМАПринятыеКУчетуВМесяцАмортизации)) КАК ПервоначальныеСведенияНМАПринятыеКУчетуВМесяцАмортизации
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НематериальныйАктив
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МИНИМУМ(ПорядокУчетаНМАБУ.Период) КАК ДатаПервойАмортизации,
	|	ПорядокУчетаНМАБУ.НематериальныйАктив КАК НематериальныйАктив
	|ПОМЕСТИТЬ втДатаПервойАмортизации
	|ИЗ
	|	РегистрСведений.ПорядокУчетаНМАБУ КАК ПорядокУчетаНМАБУ
	|ГДЕ
	|	ПорядокУчетаНМАБУ.Организация = &Организация
	|	И ПорядокУчетаНМАБУ.НачислятьАмортизациюБУ
	|
	|СГРУППИРОВАТЬ ПО
	|	ПорядокУчетаНМАБУ.НематериальныйАктив
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НематериальныйАктив
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПараметрыАмортизацииНМАБУ.НематериальныйАктив КАК НематериальныйАктив,
	|	ПараметрыАмортизацииНМАБУ.СрокПолезногоИспользованияБУ КАК СрокПолезногоИспользованияБУ,
	|	ПараметрыАмортизацииНМАБУ.СрокПолезногоИспользованияНУ КАК СрокПолезногоИспользованияНУ,
	|	ПараметрыАмортизацииНМАБУ.ЛиквидационнаяСтоимость КАК ЛиквидационнаяСтоимость
	|ПОМЕСТИТЬ ПараметрыАмортизацииНМАБУ
	|ИЗ
	|	РегистрСведений.ПараметрыАмортизацииНМАБУ.СрезПоследних(
	|			&НачалоПериода,
	|			Организация = &Организация
	|				И НематериальныйАктив В
	|					(ВЫБРАТЬ
	|						СписокНМА.НематериальныйАктив
	|					ИЗ
	|						СписокНМА КАК СписокНМА)) КАК ПараметрыАмортизацииНМАБУ
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ 
	|	ПараметрыАмортизацииНМАБУПринятыеКУчетуВМесяцАмортизации.НематериальныйАктив КАК НематериальныйАктив,
	|	ПараметрыАмортизацииНМАБУПринятыеКУчетуВМесяцАмортизации.СрокПолезногоИспользованияБУ КАК СрокПолезногоИспользованияБУ,
	|	ПараметрыАмортизацииНМАБУПринятыеКУчетуВМесяцАмортизации.СрокПолезногоИспользованияНУ КАК СрокПолезногоИспользованияНУ,
	|	ПараметрыАмортизацииНМАБУПринятыеКУчетуВМесяцАмортизации.ЛиквидационнаяСтоимость КАК ЛиквидационнаяСтоимость
	|ИЗ
	|	РегистрСведений.ПараметрыАмортизацииНМАБУ.СрезПоследних(
	|			&КонецПериода,
	|			Организация = &Организация
	|				И НематериальныйАктив В
	|					(ВЫБРАТЬ
	|						СписокНМАПринятыеКУчетуВМесяцАмортизации.НематериальныйАктив
	|					ИЗ
	|						СписокНМАПринятыеКУчетуВМесяцАмортизации КАК СписокНМАПринятыеКУчетуВМесяцАмортизации)) КАК ПараметрыАмортизацииНМАБУПринятыеКУчетуВМесяцАмортизации
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НематериальныйАктив
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Субконто1 КАК Справочник.НематериальныеАктивы)КАК НематериальныйАктив,
	|	ХозрасчетныйОстаткиИОбороты.Счет КАК Счет,
	|	ХозрасчетныйОстаткиИОбороты.Подразделение КАК Подразделение,
	|	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт КАК СуммаНачальныйОстатокДт,
	|	ХозрасчетныйОстаткиИОбороты.СуммаНУНачальныйОстатокДт КАК СуммаНУНачальныйОстатокДт,
	|	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт КАК СуммаНачальныйОстатокКт,
	|	ХозрасчетныйОстаткиИОбороты.СуммаНУНачальныйОстатокКт КАК СуммаНУНачальныйОстатокКт,
	|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт КАК СуммаКонечныйОстатокДт,
	|	ХозрасчетныйОстаткиИОбороты.СуммаНУКонечныйОстатокДт КАК СуммаНУКонечныйОстатокДт,
	|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт КАК СуммаКонечныйОстатокКт,
	|	ХозрасчетныйОстаткиИОбороты.СуммаНУКонечныйОстатокКт КАК СуммаНУКонечныйОстатокКт
	|ПОМЕСТИТЬ ХозрасчетныйОстаткиИОбороты
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			Период,
	|			,
	|			Счет В
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					Т.Счет
	|				ИЗ
	|					втВсеСчета КАК Т),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.НематериальныеАктивы),
	|			Организация = &Организация
	|				И Субконто1 В
	|					(ВЫБРАТЬ
	|						СписокНМА.НематериальныйАктив
	|					ИЗ
	|						СписокНМА КАК СписокНМА)) КАК ХозрасчетныйОстаткиИОбороты
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ 
	|	ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОборотыПринятыеКУчетуВМесяцАмортизации.Субконто1 КАК Справочник.НематериальныеАктивы)КАК НематериальныйАктив,
	|	ХозрасчетныйОстаткиИОборотыПринятыеКУчетуВМесяцАмортизации.Счет КАК Счет,
	|	ХозрасчетныйОстаткиИОборотыПринятыеКУчетуВМесяцАмортизации.Подразделение КАК Подразделение,
	|	ХозрасчетныйОстаткиИОборотыПринятыеКУчетуВМесяцАмортизации.СуммаНачальныйОстатокДт КАК СуммаНачальныйОстатокДт,
	|	ХозрасчетныйОстаткиИОборотыПринятыеКУчетуВМесяцАмортизации.СуммаНУНачальныйОстатокДт КАК СуммаНУНачальныйОстатокДт,
	|	ХозрасчетныйОстаткиИОборотыПринятыеКУчетуВМесяцАмортизации.СуммаНачальныйОстатокКт КАК СуммаНачальныйОстатокКт,
	|	ХозрасчетныйОстаткиИОборотыПринятыеКУчетуВМесяцАмортизации.СуммаНУНачальныйОстатокКт КАК СуммаНУНачальныйОстатокКт,
	|	ХозрасчетныйОстаткиИОборотыПринятыеКУчетуВМесяцАмортизации.СуммаКонечныйОстатокДт КАК СуммаКонечныйОстатокДт,
	|	ХозрасчетныйОстаткиИОборотыПринятыеКУчетуВМесяцАмортизации.СуммаНУКонечныйОстатокДт КАК СуммаНУКонечныйОстатокДт,
	|	ХозрасчетныйОстаткиИОборотыПринятыеКУчетуВМесяцАмортизации.СуммаКонечныйОстатокКт КАК СуммаКонечныйОстатокКт,
	|	ХозрасчетныйОстаткиИОборотыПринятыеКУчетуВМесяцАмортизации.СуммаНУКонечныйОстатокКт КАК СуммаНУКонечныйОстатокКт
	|
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			Период,
	|			,
	|			Счет В
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					Т.Счет
	|				ИЗ
	|					втВсеСчета КАК Т),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.НематериальныеАктивы),
	|			Организация = &Организация
	|				И Субконто1 В
	|					(ВЫБРАТЬ
	|						СписокНМАПринятыеКУчетуВМесяцАмортизации.НематериальныйАктив
	|					ИЗ
	|						СписокНМАПринятыеКУчетуВМесяцАмортизации КАК СписокНМАПринятыеКУчетуВМесяцАмортизации)) КАК ХозрасчетныйОстаткиИОборотыПринятыеКУчетуВМесяцАмортизации
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НематериальныйАктив
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ХозрасчетныйОбороты.Счет КАК Счет,
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.НематериальныеАктивы)КАК НематериальныйАктив,
	|	СУММА(ХозрасчетныйОбороты.СуммаОборотКт) КАК СуммаОборотКт,
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотКт) КАК СуммаНУОборотКт
	|ПОМЕСТИТЬ ХозрасчетныйОбороты
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			Регистратор,
	|			Счет В
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					Т.Счет
	|				ИЗ
	|					втВсеСчетаНакопленнойАмортизации КАК Т),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.НематериальныеАктивы),
	|			Организация = &Организация
	|				И Субконто1 В
	|					(ВЫБРАТЬ
	|						СписокНМА.НематериальныйАктив
	|					ИЗ
	|						СписокНМА КАК СписокНМА),
	|			,
	|			) КАК ХозрасчетныйОбороты
	|ГДЕ
	|	ХозрасчетныйОбороты.Регистратор <> &Регистратор
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОбороты.Счет,
	|	ХозрасчетныйОбороты.Субконто1
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НематериальныйАктив
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Счет КАК Счет,
	|	ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто1 КАК Справочник.НематериальныеАктивы)КАК НематериальныйАктив,
	|	ХозрасчетныйОстатки.СуммаОстаток КАК СтоимостьНаНачалоГода
	|ПОМЕСТИТЬ СтоимостьНМАНаНачалоГода
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&НачалоГода,
	|			Счет В
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					Т.Счет
	|				ИЗ
	|					втВсеСчета КАК Т),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.НематериальныеАктивы),
	|			Организация = &Организация
	|				И Субконто1 В
	|					(ВЫБРАТЬ
	|						СписокНМА.НематериальныйАктив
	|					ИЗ
	|						СписокНМА КАК СписокНМА)) КАК ХозрасчетныйОстатки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НематериальныйАктив
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВыработкаНМАОбороты.НематериальныйАктив,
	|	ВыработкаНМАОбороты.КоличествоОборот
	|ПОМЕСТИТЬ ВыработкаНМАОбороты
	|ИЗ
	|	РегистрНакопления.ВыработкаНМА.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			Период,
	|			Организация = &Организация
	|				И НематериальныйАктив В
	|					(ВЫБРАТЬ
	|						СписокНМА.НематериальныйАктив
	|					ИЗ
	|						СписокНМА КАК СписокНМА)) КАК ВыработкаНМАОбороты
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВыработкаНМАОборотыПринятыеКУчетуВМесяцАмортизации.НематериальныйАктив,
	|	ВыработкаНМАОборотыПринятыеКУчетуВМесяцАмортизации.КоличествоОборот
	|
	|ИЗ
	|	РегистрНакопления.ВыработкаНМА.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			Период,
	|			Организация = &Организация
	|				И НематериальныйАктив В
	|					(ВЫБРАТЬ
	|						СписокНМАПринятыеКУчетуВМесяцАмортизации.НематериальныйАктив
	|					ИЗ
	|						СписокНМАПринятыеКУчетуВМесяцАмортизации КАК СписокНМАПринятыеКУчетуВМесяцАмортизации)) КАК ВыработкаНМАОборотыПринятыеКУчетуВМесяцАмортизации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(СписокНМА.НематериальныйАктив КАК Справочник.НематериальныеАктивы)КАК НематериальныйАктив
	|	
	|ПОМЕСТИТЬ СписокНМАВсе
	|ИЗ
	|	СписокНМА КАК СписокНМА
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(СписокНМАПринятыеКУчетуВМесяцАмортизации.НематериальныйАктив КАК Справочник.НематериальныеАктивы)
	|
	|ИЗ
	|	СписокНМАПринятыеКУчетуВМесяцАмортизации КАК СписокНМАПринятыеКУчетуВМесяцАмортизации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СписокНМА.НематериальныйАктив,
	|	ПРЕДСТАВЛЕНИЕ(СписокНМА.НематериальныйАктив) КАК НематериальныйАктивПредставление,
	|	СписокНМА.НематериальныйАктив.Код КАК Код,
	|	ПорядокУчетаНМА.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	СтоимостьНМА.Подразделение КАК Подразделение,
	|
	|	ЕСТЬNULL(СтоимостьНМА.СуммаНачальныйОстатокДт, 0)		КАК СтоимостьНачальныйОстаток,
	|	ЕСТЬNULL(СтоимостьНМА.СуммаНУНачальныйОстатокДт, 0)		КАК СтоимостьНУНачальныйОстаток,
	|	ЕСТЬNULL(СтоимостьНМА.СуммаКонечныйОстатокДт, 0)		КАК СтоимостьКонечныйОстаток,
	|	ЕСТЬNULL(СтоимостьНМА.СуммаНУКонечныйОстатокДт, 0)		КАК СтоимостьНУКонечныйОстаток,
	|	ЕСТЬNULL(АмортизацияНМА.СуммаНачальныйОстатокКт, 0)		КАК АмортизацияНачальныйОстаток,
	|	ЕСТЬNULL(АмортизацияНМА.СуммаНУНачальныйОстатокКт, 0)	КАК АмортизацияНУНачальныйОстаток,
	|
	|	ЕСТЬNULL(ХозрасчетныйОбороты.СуммаОборотКт, 0)  КАК АмортизацияОборот,
	|	
	|	ЕСТЬNULL(ХозрасчетныйОбороты.СуммаНУОборотКт, 0)  КАК АмортизацияНУОборот,
	|	
	|	ЕСТЬNULL(ВыработкаНМАОбороты.КоличествоОборот, 0) КАК Количество,
	|	ПервоначальныеСведенияНМА.СпособНачисленияАмортизации КАК СпособНачисленияАмортизации,
	|	ПервоначальныеСведенияНМА.СпособНачисленияАмортизацииНУ КАК СпособНачисленияАмортизацииНУ,
	|	ПервоначальныеСведенияНМА.АмортизируетсяВМесяцПринятияКУчету,
	|	ЕСТЬNULL(ПервоначальныеСведенияНМА.ПервоначальнаяСтоимостьБУ, 0) КАК ПервоначальнаяСтоимость,
	|	ЕСТЬNULL(ПараметрыАмортизацииНМАБУ.СрокПолезногоИспользованияБУ, 0) КАК СрокИспользованияДляВычисленияАмортизации,
	|	ЕСТЬNULL(ПараметрыАмортизацииНМАБУ.СрокПолезногоИспользованияНУ, 0) КАК СрокИспользованияДляВычисленияАмортизацииНУ,
	|	ЕСТЬNULL(ПервоначальныеСведенияНМА.ПервоначальнаяСтоимостьБУ, 0) КАК СтоимостьДляВычисленияАмортизации,
	|	ЕСТЬNULL(ПараметрыАмортизацииНМАБУ.ЛиквидационнаяСтоимость, 0) КАК ЛиквидационнаяСтоимость,
	|	ЕСТЬNULL(ПорядокУчетаНМА.ОбъемНаработки, 0) КАК ОбъемПродукцииРаботДляВычисленияАмортизации,
	|	ПервоначальныеСведенияНМА.Период КАК Период,
	|	ЕСТЬNULL(ПорядокУчетаНМАБУ.НачислятьАмортизациюБУ, ЛОЖЬ) КАК НачислятьАмортизациюБУ,
	|	ЕСТЬNULL(ПорядокУчетаНМАБУ.НалоговоеНазначение, ЗНАЧЕНИЕ(СПравочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка)) КАК НалоговоеНазначение,
	|	ЕСТЬNULL(втДатаПервойАмортизации.ДатаПервойАмортизации, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаПервойАмортизации,
	|	ПорядокУчетаНМА.СчетУчета,
	|	ПорядокУчетаНМА.СчетНачисленияАмортизации,
	|	ПорядокУчетаНМАБУ.СтатьяРасходов КАК СтатьяРасходов,
	|	ПорядокУчетаНМАБУ.АналитикаРасходов КАК АналитикаРасходов,
	|	ПорядокУчетаНМАБУ.СпособОтраженияРасходовЗаданДокументом КАК СпособОтраженияРасходовЗаданДокументом,
	|	ПорядокУчетаНМАБУ.СпособОтраженияРасходов КАК СпособОтраженияРасходов,
	|	ЕСТЬNULL(СтоимостьНМАНаНачалоГода.СтоимостьНаНачалоГода, 0) КАК СтоимостьНаНачалоГода,
	|	ПервоначальныеСведенияНМА.ПервоначальнаяСтоимостьНУ,
	|	ЕСТЬNULL(ПервоначальныеСведенияНМА.ПервоначальнаяСтоимостьНУ, 0) КАК СтоимостьДляВычисленияАмортизацииНУ,
	|	ПервоначальныеСведенияНМА.Период КАК ДатаПринятияКУчету,
	|	ПараметрыАмортизацииНМАБУ.СрокПолезногоИспользованияБУ КАК СрокПолезногоИспользования,
	|	ВЫБОР 
	|		КОГДА ПервоначальныеСведенияНМА.АмортизируетсяВМесяцПринятияКУчету Тогда
	|			ВЫБОР 
	|				КОГДА  
	|					ПервоначальныеСведенияНМА.СпособНачисленияАмортизацииНУ = 
	|					ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииНМА.ПропорциональноОбъемуПродукции) 
	|		            	ТОГДА ИСТИНА ИНАЧЕ ЛОЖЬ КОНЕЦ
	|		ИНАЧЕ ЕСТЬNULL(ПорядокУчетаНМАБУ.НачислятьАмортизациюНУ, ЛОЖЬ) КОНЕЦ КАК НачислятьАмортизациюНУ,			
	|	
	|	
	|	ЕСТЬNULL(СтоимостьНМА.СуммаНачальныйОстатокДт, 0) - ЕСТЬNULL(АмортизацияНМА.СуммаНачальныйОстатокКт, 0) КАК ОстаточнаяСтоимостьБУ,
	|	ЕСТЬNULL(СтоимостьНМА.СуммаНУНачальныйОстатокДт, 0) - ЕСТЬNULL(АмортизацияНМА.СуммаНУНачальныйОстатокКт, 0) КАК ОстаточнаяСтоимостьНУ,
	|
	|	ВЫБОР КОГДА втАмортизированныеАктивы.НМА ЕСТЬ NULL ТОГДА ЛОЖЬ ИНАЧЕ ИСТИНА КОНЕЦ КАК ЕстьНачислениеАмортизацииЗаПериод
	|ИЗ
	|	СписокНМАВсе КАК СписокНМА
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПервоначальныеСведенияНМА КАК ПервоначальныеСведенияНМА
	|		ПО СписокНМА.НематериальныйАктив = ПервоначальныеСведенияНМА.НематериальныйАктив
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПорядокУчетаНМАБУ КАК ПорядокУчетаНМАБУ
	|		ПО СписокНМА.НематериальныйАктив = ПорядокУчетаНМАБУ.НематериальныйАктив
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПорядокУчетаНМА КАК ПорядокУчетаНМА
	|		ПО СписокНМА.НематериальныйАктив = ПорядокУчетаНМА.НематериальныйАктив
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ втДатаПервойАмортизации КАК втДатаПервойАмортизации
	|		ПО СписокНМА.НематериальныйАктив = втДатаПервойАмортизации.НематериальныйАктив
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ ХозрасчетныйОстаткиИОбороты КАК СтоимостьНМА
	|		ПО ПорядокУчетаНМА.НематериальныйАктив = СтоимостьНМА.НематериальныйАктив
	|			И ПорядокУчетаНМА.СчетУчета = СтоимостьНМА.Счет
	|
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ ХозрасчетныйОстаткиИОбороты КАК АмортизацияНМА
	|		ПО ПорядокУчетаНМА.НематериальныйАктив = АмортизацияНМА.НематериальныйАктив
	|			И ПорядокУчетаНМА.СчетНачисленияАмортизации = АмортизацияНМА.Счет
	|
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ ХозрасчетныйОбороты КАК ХозрасчетныйОбороты
	|		ПО СписокНМА.НематериальныйАктив = ХозрасчетныйОбороты.НематериальныйАктив
	|			И ПорядокУчетаНМА.СчетНачисленияАмортизации = ХозрасчетныйОбороты.Счет
	|			
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтоимостьНМАНаНачалоГода КАК СтоимостьНМАНаНачалоГода
	|		ПО СписокНМА.НематериальныйАктив = СтоимостьНМАНаНачалоГода.НематериальныйАктив
	|			И ПорядокУчетаНМА.СчетУчета = СтоимостьНМАНаНачалоГода.Счет
	|			
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВыработкаНМАОбороты КАК ВыработкаНМАОбороты
	|		ПО СписокНМА.НематериальныйАктив = ВыработкаНМАОбороты.НематериальныйАктив
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПараметрыАмортизацииНМАБУ КАК ПараметрыАмортизацииНМАБУ
	|		ПО СписокНМА.НематериальныйАктив = ПараметрыАмортизацииНМАБУ.НематериальныйАктив
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ втАмортизированныеАктивы КАК втАмортизированныеАктивы
	|		ПО СписокНМА.НематериальныйАктив = втАмортизированныеАктивы.НМА
	|ГДЕ
	|	(НЕ(ЕСТЬNULL(ПорядокУчетаНМАБУ.НачислятьАмортизациюБУ, ЛОЖЬ) = ЛОЖЬ
	|				И ЕСТЬNULL(ПорядокУчетаНМАБУ.НачислятьАмортизациюНУ, ЛОЖЬ) = ЛОЖЬ))";
	
	ВыборкаПоНМА = Запрос.Выполнить().Выбрать();
	
	Пока ВыборкаПоНМА.Следующий() Цикл
		
		СуммаАмортизацииБУ = 0;
		СуммаАмортизацииНУ = 0;
		
		СписатьОстатокБУ = Ложь;
		СписатьОстатокНУ = Ложь;
		НачислятьАмортизациюБУ =  ВыборкаПоНМА.НачислятьАмортизациюБУ И НЕ ДоначислениеВНУ;
		
		СтоимостьДляВычисленияАмортизации 			= ВыборкаПоНМА.СтоимостьДляВычисленияАмортизации;
		ЛиквидационнаяСтоимость						= ВыборкаПоНМА.ЛиквидационнаяСтоимость;
		АмортизируемаяСтоимость	 					= СтоимостьДляВычисленияАмортизации - ЛиквидационнаяСтоимость;
		СрокИспользованияДляВычисленияАмортизации	= ВыборкаПоНМА.СрокИспользованияДляВычисленияАмортизации;
		
		СтоимостьДляВычисленияАмортизацииНУ 		= ВыборкаПоНМА.СтоимостьДляВычисленияАмортизацииНУ;
		АмортизируемаяСтоимостьНУ	 				= СтоимостьДляВычисленияАмортизацииНУ - ЛиквидационнаяСтоимость;
		СрокИспользованияДляВычисленияАмортизацииНУ	= ВыборкаПоНМА.СрокИспользованияДляВычисленияАмортизацииНУ;
		
		Если ВыборкаПоНМА.АмортизируетсяВМесяцПринятияКУчету Тогда
			АмортизируемаяСтоимостьОстаток   = ВыборкаПоНМА.СтоимостьКонечныйОстаток - ВыборкаПоНМА.ЛиквидационнаяСтоимость;
			АмортизируемаяСтоимостьОстатокНУ = ВыборкаПоНМА.СтоимостьНУКонечныйОстаток - ВыборкаПоНМА.ЛиквидационнаяСтоимость;
		Иначе
			АмортизируемаяСтоимостьОстаток   = ВыборкаПоНМА.СтоимостьНачальныйОстаток - ВыборкаПоНМА.ЛиквидационнаяСтоимость - ВыборкаПоНМА.АмортизацияНачальныйОстаток;
			АмортизируемаяСтоимостьОстатокНУ = ВыборкаПоНМА.СтоимостьНУНачальныйОстаток - ВыборкаПоНМА.ЛиквидационнаяСтоимость - ВыборкаПоНМА.АмортизацияНУНачальныйОстаток;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ВыборкаПоНМА.СчетНачисленияАмортизации) Тогда
			Если Реквизиты.ВыдаватьСообщения Тогда
				СообщитьОбОшибкеПриНачисленииАмортизации(ВыборкаПоНМА, НСтр("ru='Не указан счет для начисления амортизации';uk='Не зазначений рахунок для нарахування амортизації'"),
					Реквизиты.Регистратор, Отказ);
			КонецЕсли;
			Продолжить;
		КонецЕсли;
		
		// Параметры расчета
		Если ТаблицаПараметровРасчетаАмортизации <> Неопределено Тогда
			
			ПараметрыАмортизации = ТаблицаПараметровРасчетаАмортизации.Добавить();
			ПараметрыАмортизации.ОбъектУчета = ВыборкаПоНМА.НематериальныйАктив;
			
			Если НачислятьАмортизациюБУ Тогда
				ПараметрыАмортизации.МетодНачисленияБУ = ВыборкаПоНМА.СпособНачисленияАмортизации;
				ПараметрыАмортизации.СрокИспользованияБУ = ВыборкаПоНМА.СрокИспользованияДляВычисленияАмортизации;
				ПараметрыАмортизации.СтоимостьБУ = ВыборкаПоНМА.СтоимостьДляВычисленияАмортизации;
				ПараметрыАмортизации.ОбъемПродукцииБУ = ВыборкаПоНМА.ОбъемПродукцииРаботДляВычисленияАмортизации;
				ПараметрыАмортизации.ВыработкаЗаМесяцБУ = ВыборкаПоНМА.Количество;
			КонецЕсли; 
			
			Если ВыборкаПоНМА.НачислятьАмортизациюНУ Тогда
				ПараметрыАмортизации.МетодНачисленияНУ   = ВыборкаПоНМА.СпособНачисленияАмортизацииНУ;
				ПараметрыАмортизации.НалоговоеНазначение = ВыборкаПоНМА.НалоговоеНазначение;
				ПараметрыАмортизации.СрокИспользованияНУ = ВыборкаПоНМА.СрокПолезногоИспользования;
			КонецЕсли; 
			
			// Остальные параметры устанавливаются по месту расчета
			
		КонецЕсли; 
		
		Пропустить = Ложь;
		
		Если НачислятьАмортизациюБУ Тогда
			
			Если ВыборкаПоНМА.ЕстьНачислениеАмортизацииЗаПериод Тогда
				Пропустить = Истина;
			КонецЕсли;

			Если НЕ ЗначениеЗаполнено(ВыборкаПоНМА.СпособНачисленияАмортизации) Тогда
				Если Реквизиты.ВыдаватьСообщения Тогда
					СообщитьОбОшибкеПриНачисленииАмортизации(ВыборкаПоНМА, НСтр("ru='Не указан способ амортизации';uk='Не вказаний спосіб амортизації'"),
						Реквизиты.Регистратор, Отказ);
				КонецЕсли; 
				Пропустить = Истина;
			КонецЕсли;

			Если ВыборкаПоНМА.СтоимостьДляВычисленияАмортизации = 0 Тогда
				Если Реквизиты.ВыдаватьСообщения Тогда
					СообщитьОбОшибкеПриНачисленииАмортизации(ВыборкаПоНМА, НСтр("ru='Стоимость равна нулю';uk='Вартість дорівнює нулю'"),
						Реквизиты.Регистратор, Отказ);
				КонецЕсли; 
				Пропустить = Истина;
			КонецЕсли;

			Если ВыборкаПоНМА.СрокИспользованияДляВычисленияАмортизации = 0
				И (ВыборкаПоНМА.СпособНачисленияАмортизации = Перечисления.СпособыНачисленияАмортизацииНМА.Линейный 
					ИЛИ ВыборкаПоНМА.СпособНачисленияАмортизации = Перечисления.СпособыНачисленияАмортизацииНМА.УменьшаемогоОстатка) Тогда
				Если Реквизиты.ВыдаватьСообщения Тогда
					СообщитьОбОшибкеПриНачисленииАмортизации(ВыборкаПоНМА, НСтр("ru='Срок использования равен нулю';uk='Строк використання дорівнює нулю'"),
						Реквизиты.Регистратор, Отказ);
				КонецЕсли;
				Пропустить = Истина;
			КонецЕсли;

			Если НЕ Пропустить Тогда
			
				СуммаАмортизации = 0;
				
				Если ВыборкаПоНМА.СпособНачисленияАмортизации = Перечисления.СпособыНачисленияАмортизацииНМА.Линейный Тогда
					
					СуммаГодовойАмортизации = АмортизируемаяСтоимость / ВыборкаПоНМА.СрокИспользованияДляВычисленияАмортизации * 12;
					
					СуммаАмортизации = СуммаГодовойАмортизации / 12;

				ИначеЕсли ВыборкаПоНМА.СпособНачисленияАмортизации = Перечисления.СпособыНачисленияАмортизацииНМА.ПропорциональноОбъемуПродукции Тогда

					Если НЕ ЗначениеЗаполнено(ВыборкаПоНМА.Количество) Тогда
						Пропустить = Истина;
					КонецЕсли;

					Если НЕ ЗначениеЗаполнено(ВыборкаПоНМА.ОбъемПродукцииРаботДляВычисленияАмортизации) Тогда
						Если Реквизиты.ВыдаватьСообщения Тогда
							СообщитьОбОшибкеПриНачисленииАмортизации(ВыборкаПоНМА, НСтр("ru='Объем продукции для вычисления не определен';uk='Об''єм продукції для обчислення не визначено'"),
								Реквизиты.Регистратор, Отказ);
						КонецЕсли; 
						Пропустить = Истина;
					КонецЕсли;

					Если Пропустить Тогда
						СуммаАмортизации = 0 ;
					Иначе
						СуммаАмортизации = АмортизируемаяСтоимость * ВыборкаПоНМА.Количество / ВыборкаПоНМА.ОбъемПродукцииРаботДляВычисленияАмортизации;
						
					КонецЕсли;
				ИначеЕсли ВыборкаПоНМА.СпособНачисленияАмортизации = Перечисления.СпособыНачисленияАмортизацииНМА.УменьшаемогоОстатка Тогда

					Если ВыборкаПоНМА.ЛиквидационнаяСтоимость = 0 Тогда
						
						Если Реквизиты.ВыдаватьСообщения Тогда
							
							СообщитьОбОшибкеПриНачисленииАмортизации(ВыборкаПоНМА, СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru=' при расчете по способу %1 не указана ликвидационная стоимость!';uk=' при розрахунку за способом %1 не вказана ліквідаційна вартість!'"), ВыборкаПоНМА.СпособНачисленияАмортизации),
								Реквизиты.Регистратор, Отказ);
							
						КонецЕсли;
						
						Продолжить;
						
					КонецЕсли;
					
					
					Если Год(ВыборкаПоНМА.Период)  
							= Год(Реквизиты.ДатаРасчета) Тогда
							
						СтоимостьИтоговая = СтоимостьДляВычисленияАмортизации;
						
					Иначе
						
						СтоимостьИтоговая = ВыборкаПоНМА.СтоимостьНаНачалоГода;
						
					КонецЕсли;
					
				Если ВыборкаПоНМА.ДатаПервойАмортизации = Дата(1,1,1) Тогда
						
						Если Реквизиты.ВыдаватьСообщения Тогда
							
							СообщитьОбОшибкеПриНачисленииАмортизации(ВыборкаПоНМА, СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Бух. расчет амортизации: для нематериального актива %1 при расчете по способу %2 не определилась дата первой амортизации!';uk='Бух. розрахунок амортизації: для нематеріального активу %1 при розрахунку за способом %2 не визначилася дата першої амортизації!'"), ВыборкаПоНМА.НематериальныйАктив,ВыборкаПоНМА.СпособНачисленияАмортизации),
								Реквизиты.Регистратор, Отказ);
							
						КонецЕсли;
						
						Продолжить;
						
				КонецЕсли;
					
					РазностьЛет = Год(Реквизиты.ДатаРасчета) - Год(ВыборкаПоНМА.ДатаПервойАмортизации);
					
					Если РазностьЛет > 0 Тогда
						
						ОсталосьЭксплуатироватьВЭтомГоду = ВыборкаПоНМА.СрокИспользованияДляВычисленияАмортизации 
						                                   - РазностьЛет * 12
						                                   + Месяц(ВыборкаПоНМА.ДатаПервойАмортизации)
														   
					ИначеЕсли ВыборкаПоНМА.СрокИспользованияДляВычисленияАмортизации < 12 Тогда											   
						
						ОсталосьЭксплуатироватьВЭтомГоду = ВыборкаПоНМА.СрокИспользованияДляВычисленияАмортизации;
														   
					Иначе
						
						ОсталосьЭксплуатироватьВЭтомГоду = 0;
														   
					КонецЕсли;
															   
					Если (ОсталосьЭксплуатироватьВЭтомГоду < 12) И (ОсталосьЭксплуатироватьВЭтомГоду > 0)  Тогда
						
						// Последний год применяем прямолинейный метод
						
						СуммаГодовойАмортизации = 12 * (СтоимостьИтоговая - ВыборкаПоНМА.ЛиквидационнаяСтоимость) / ОсталосьЭксплуатироватьВЭтомГоду;
						
					ИначеЕсли ОсталосьЭксплуатироватьВЭтомГоду >= 0 Тогда
						
						СуммаГодовойАмортизации = СтоимостьИтоговая * (1 - Pow(ВыборкаПоНМА.ЛиквидационнаяСтоимость / ВыборкаПоНМА.СтоимостьДляВычисленияАмортизации,
						                                                       12 / ВыборкаПоНМА.СрокИспользованияДляВычисленияАмортизации));
																			   
					Иначе // Срок использования исчерпан
						
						СуммаГодовойАмортизации = 0;
						
						Если Реквизиты.ВыдаватьСообщения Тогда
							
							СообщитьОбОшибкеПриНачисленииАмортизации(ВыборкаПоНМА, СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Бух. расчет амортизации: для нематериального актива %1 при расчете по способу %2 срок использования исчерпан!';uk='Бух. розрахунок амортизації: для нематеріального активу %1 при розрахунку способом %2 строк використання вичерпаний!'"), ВыборкаПоНМА.НематериальныйАктив, ВыборкаПоНМА.СпособНачисленияАмортизации),
								Реквизиты.Регистратор, ЛОЖЬ); 
						КонецЕсли;                            
						
					КонецЕсли;

					СуммаАмортизации   = СуммаГодовойАмортизации / 12;
					
					
				ИначеЕсли ВыборкаПоНМА.СпособНачисленияАмортизации = Перечисления.СпособыНачисленияАмортизацииНМА.УскоренногоУменьшенияОстатка Тогда
					
					
					Если  ВыборкаПоНМА.СрокИспользованияДляВычисленияАмортизации <= 24 Тогда
						
						Если Реквизиты.ВыдаватьСообщения Тогда
							
							СообщитьОбОшибкеПриНачисленииАмортизации(ВыборкаПоНМА, СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Бух. расчет амортизации: для нематериального актива %1 при расчете по способу %2 срок использования %3 мес.!';uk='Бух. розрахунок амортизації: для нематеріального активу, %1 при розрахунку за способом %2 строк використання %3 міс.!'"), ВыборкаПоНМА.НематериальныйАктив, ВыборкаПоНМА.СпособНачисленияАмортизации, ВыборкаПоНМА.СрокИспользованияДляВычисленияАмортизации),
								Реквизиты.Регистратор, Отказ);
							
						КонецЕсли;
						
					КонецЕсли; 
					
					Если Год(ВыборкаПоНМА.Период) = Год(Реквизиты.ДатаРасчета) Тогда
						
						СтоимостьИтоговая = СтоимостьДляВычисленияАмортизации;
						
					Иначе
						
						СтоимостьИтоговая = ВыборкаПоНМА.СтоимостьНаНачалоГода;
						
					КонецЕсли;
					
					Если ВыборкаПоНМА.ДатаПервойАмортизации = Дата(1,1,1) Тогда
						
						Если Реквизиты.ВыдаватьСообщения Тогда
							
							СообщитьОбОшибкеПриНачисленииАмортизации(ВыборкаПоНМА, СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Бух. расчет амортизации: для нематериального актива %1 при расчете по способу %2 не определилась дата первой амортизации!';uk='Бух. розрахунок амортизації: для нематеріального активу %1 при розрахунку за способом %2 не визначилася дата першої амортизації!'"), ВыборкаПоНМА.НематериальныйАктив, ВыборкаПоНМА.СпособНачисленияАмортизации),
								Реквизиты.Регистратор, Отказ);
							
						КонецЕсли;
						
						Продолжить;
						
					КонецЕсли;

					
					РазностьЛет = Год(Реквизиты.ДатаРасчета) - Год(ВыборкаПоНМА.ДатаПервойАмортизации);
					
					Если РазностьЛет > 0 Тогда
						
						ОсталосьЭксплуатироватьВЭтомГоду = ВыборкаПоНМА.СрокИспользованияДляВычисленияАмортизации 
						                                   - РазностьЛет * 12
						                                   + Месяц(ВыборкаПоНМА.ДатаПервойАмортизации)
														   
					ИначеЕсли ВыборкаПоНМА.СрокИспользованияДляВычисленияАмортизации < 12 Тогда											   
						
						ОсталосьЭксплуатироватьВЭтомГоду = ВыборкаПоНМА.СрокИспользованияДляВычисленияАмортизации;
														   
					Иначе
						
						ОсталосьЭксплуатироватьВЭтомГоду = 0;
														   
					КонецЕсли;
															   
					Если (ОсталосьЭксплуатироватьВЭтомГоду < 12) И (ОсталосьЭксплуатироватьВЭтомГоду > 0)  Тогда
						
						// Последний год применяем прямолинейный метод
						
						СуммаГодовойАмортизации = 12 * (СтоимостьИтоговая - ВыборкаПоНМА.ЛиквидационнаяСтоимость) / ОсталосьЭксплуатироватьВЭтомГоду;
						
					ИначеЕсли ОсталосьЭксплуатироватьВЭтомГоду >= 0 Тогда
						
						СуммаГодовойАмортизации = 2 * (СтоимостьИтоговая) / ВыборкаПоНМА.СрокИспользованияДляВычисленияАмортизации * 12;
						
					Иначе // Срок использования исчерпан
						
						СуммаГодовойАмортизации = 0;
						
						Если Реквизиты.ВыдаватьСообщения Тогда
							
							СообщитьОбОшибкеПриНачисленииАмортизации(ВыборкаПоНМА, СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Бух. расчет амортизации: для нематериального актива %1 при расчете по способу %2 срок использования исчерпан!';uk='Бух. розрахунок амортизації: для нематеріального активу %1 при розрахунку способом %2 строк використання вичерпаний!'"), ВыборкаПоНМА.НематериальныйАктив, ВыборкаПоНМА.СпособНачисленияАмортизацииНУ),
								Реквизиты.Регистратор, ЛОЖЬ); 
						КонецЕсли;                            

					
					КонецЕсли;
					
					СуммаАмортизации   = СуммаГодовойАмортизации / 12;
					//	
					ИначеЕсли ВыборкаПоНМА.СпособНачисленияАмортизации = Перечисления.СпособыНачисленияАмортизацииНМА.Кумулятивный Тогда

						
						Если ВыборкаПоНМА.ДатаПервойАмортизации = Дата(1,1,1) Тогда
							
							Если Реквизиты.ВыдаватьСообщения Тогда
								
								СообщитьОбОшибкеПриНачисленииАмортизации(ВыборкаПоНМА, СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Бух. расчет амортизации: для нематериального актива %1 при расчете по способу %2 не определилась дата первой амортизации!';uk='Бух. розрахунок амортизації: для нематеріального активу %1 при розрахунку за способом %2 не визначилася дата першої амортизації!'"), ВыборкаПоНМА.НематериальныйАктив, ВыборкаПоНМА.СпособНачисленияАмортизации),
									Реквизиты.Регистратор, Отказ);
								
							КонецЕсли;
							
							Продолжить;
							
						КонецЕсли;

						ЧислоЛетПользования	= Макс(1, ВыборкаПоНМА.СрокИспользованияДляВычисленияАмортизации / 12);
						
						ЧислоЛетПользования	= Цел(ЧислоЛетПользования) + ?(ЧислоЛетПользования  
													- Цел(ЧислоЛетПользования) = 0, 0, 1); // округляем к наибольшему целому 
						
						ГодИспользования	= Год(Реквизиты.ДатаРасчета) - Год(ВыборкаПоНМА.ДатаПервойАмортизации) + 1;
						
						Если Месяц(ВыборкаПоНМА.ДатаПервойАмортизации) >= Месяц(Реквизиты.ДатаРасчета) Тогда
							
							ГодИспользования = ГодИспользования - 1;
							
						КонецЕсли; 

						СуммаГодовойАмортизации   = АмортизируемаяСтоимость * (ЧислоЛетПользования - ГодИспользования + 1)
								/ (ЧислоЛетПользования * (ЧислоЛетПользования + 1) / 2 );
													  
						СуммаАмортизации = СуммаГодовойАмортизации / 12;
						
					Иначе 
						
						Если Реквизиты.ВыдаватьСообщения  Тогда
							
							СообщитьОбОшибкеПриНачисленииАмортизации(ВыборкаПоНМА, СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='установлен способ расчета амортизации, не поддерживаемый в бухгалтерском учете (%1)!';uk='встановлений спосіб розрахунку амортизації, який не підтримується в бухгалтерському обліку (%1)!'"), ВыборкаПоНМА.СпособНачисленияАмортизации),
									Реквизиты.Регистратор, Отказ);
						
						КонецЕсли;
						
						Продолжить;

				КонецЕсли;
				
				ВсегоОсталосьСписать =  АмортизируемаяСтоимостьОстаток;
				СписатьОстатокБУ = (ВсегоОсталосьСписать < СуммаАмортизации);
				СуммаАмортизацииБУ   = Окр(Мин(СуммаАмортизации, ВсегоОсталосьСписать), 2);
				
								
			КонецЕсли;
			
		КонецЕсли;
		
		Пропустить = Ложь;
		
		Если ОтражатьВНалоговомУчете Тогда
			
			Если ВыборкаПоНМА.НачислятьАмортизациюНУ Тогда
				
				Если  ВыборкаПоНМА.НалоговоеНазначение = Справочники.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяНеХозДеятельность Тогда
					Если Реквизиты.ВыдаватьСообщения Тогда
						СообщитьОбОшибкеПриНачисленииАмортизации(ВыборкаПоНМА, НСтр("ru='указано нехоз. налоговое назначение. Амортизация (НУ) не начислена';uk='зазначено негосп. податкове призначення. Амортизація (ПО) не нарахована'"),
							Реквизиты.Регистратор, Ложь);
					КонецЕсли;
					Пропустить = Истина;
				КонецЕсли;
				
				Если ВыборкаПоНМА.ЕстьНачислениеАмортизацииЗаПериод Тогда
					Пропустить = Истина; 
				КонецЕсли;
				Если НЕ ЗначениеЗаполнено(ВыборкаПоНМА.СпособНачисленияАмортизацииНУ) Тогда
				
					Если Реквизиты.ВыдаватьСообщения Тогда
						СообщитьОбОшибкеПриНачисленииАмортизации(ВыборкаПоНМА, НСтр("ru='Не указан метод начисления амортизации (НУ) в учетной политике организации';uk='Не зазначений метод нарахування амортизації ПО) в обліковій політиці організації'"),
							Реквизиты.Регистратор, Отказ);
					КонецЕсли;
					Пропустить = Истина;
				КонецЕсли;
				
				Если АмортизируемаяСтоимостьОстатокНУ <= 0 Тогда
					Пропустить = Истина;
				КонецЕсли;

								
				Если ВыборкаПоНМА.СпособНачисленияАмортизацииНУ = Перечисления.СпособыНачисленияАмортизацииНМА.Линейный
					И СрокИспользованияДляВычисленияАмортизацииНУ = 0 Тогда
					
					Если Реквизиты.ВыдаватьСообщения Тогда
						СообщитьОбОшибкеПриНачисленииАмортизации(ВыборкаПоНМА, НСтр("ru='Срок использования (НУ) равен нулю';uk='Строк використання (ПО) дорівнює нулю'"),
							Реквизиты.Регистратор, Отказ);
					КонецЕсли; 
					Пропустить = Истина;
				КонецЕсли;
								
				Если НЕ Пропустить Тогда
					
					СуммаАмортизации = 0;
					
					
					СрокИспользованияДляВычисленияАмортизацииНУ =  Макс(1, СрокИспользованияДляВычисленияАмортизацииНУ);
					
					СтоимостьНУНачальныйОстаток	= ВыборкаПоНМА.СтоимостьНУНачальныйОстаток;
					
					
					Если ВыборкаПоНМА.СпособНачисленияАмортизацииНУ = Перечисления.СпособыНачисленияАмортизацииНМА.Линейный Тогда

						СуммаГодовойАмортизации = АмортизируемаяСтоимостьНУ / ВыборкаПоНМА.СрокИспользованияДляВычисленияАмортизацииНУ * 12;
						СуммаАмортизации        = СуммаГодовойАмортизации / 12;
						
						Если ТаблицаПараметровРасчетаАмортизации <> Неопределено Тогда
							ПараметрыАмортизации.СтоимостьНУ = АмортизируемаяСтоимостьНУ;
							
						КонецЕсли;
					ИначеЕсли  ВыборкаПоНМА.СпособНачисленияАмортизацииНУ = Перечисления.СпособыНачисленияАмортизацииНМА.ПропорциональноОбъемуПродукции Тогда

					Если НЕ ЗначениеЗаполнено(ВыборкаПоНМА.Количество) Тогда
						Пропустить = Истина;
					КонецЕсли;

					Если НЕ ЗначениеЗаполнено(ВыборкаПоНМА.ОбъемПродукцииРаботДляВычисленияАмортизации) Тогда
						Если Реквизиты.ВыдаватьСообщения Тогда
							СообщитьОбОшибкеПриНачисленииАмортизации(ВыборкаПоНМА, НСтр("ru='Объем продукции для вычисления не определен';uk='Об''єм продукції для обчислення не визначено'"),
								Реквизиты.Регистратор, Отказ);
						КонецЕсли; 
						Пропустить = Истина;
					КонецЕсли;

					Если Пропустить Тогда
						СуммаАмортизации = 0 ;
					Иначе
						СуммаАмортизации = АмортизируемаяСтоимостьНУ * ВыборкаПоНМА.Количество / ВыборкаПоНМА.ОбъемПродукцииРаботДляВычисленияАмортизации;
					КонецЕсли;

					ИначеЕсли ВыборкаПоНМА.СпособНачисленияАмортизацииНУ = Перечисления.СпособыНачисленияАмортизацииНМА.УменьшаемогоОстатка Тогда

					
						Если Год(ВыборкаПоНМА.Период)  
								= Год(Реквизиты.ДатаРасчета) Тогда
							
							СтоимостьИтоговая = СтоимостьНУНачальныйОстаток;
							
						Иначе
							
							СтоимостьИтоговая = ВыборкаПоНМА.СтоимостьНаНачалоГода;
							
						КонецЕсли;
							
						Если ВыборкаПоНМА.ДатаПервойАмортизации = Дата(1,1,1) Тогда
								
								Если Реквизиты.ВыдаватьСообщения Тогда
									
									СообщитьОбОшибкеПриНачисленииАмортизации(ВыборкаПоНМА, СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Нал. расчет амортизации: для нематериального актива %1 при расчете по способу %2 не определилась дата первой амортизации!';uk='Под. розрахунок амортизації: для нематеріального активу %1 при розрахунку за способом %2 не визначилася дата першої амортизації!'"), ВыборкаПоНМА.НематериальныйАктив, ВыборкаПоНМА.СпособНачисленияАмортизации),
										Реквизиты.Регистратор, Отказ);
									
								КонецЕсли;
								
								Продолжить;
								
						КонецЕсли;
							
							РазностьЛет = Год(Реквизиты.ДатаРасчета) - Год(ВыборкаПоНМА.ДатаПервойАмортизации);
							
							Если РазностьЛет > 0 Тогда
								
								ОсталосьЭксплуатироватьВЭтомГоду = СрокИспользованияДляВычисленияАмортизацииНУ 
								                                   - РазностьЛет * 12
								                                   + Месяц(ВыборкаПоНМА.ДатаПервойАмортизации)
																   
							ИначеЕсли ВыборкаПоНМА.СрокПолезногоИспользования < 12 Тогда											   
								
								ОсталосьЭксплуатироватьВЭтомГоду = СрокИспользованияДляВычисленияАмортизацииНУ;
																   
							Иначе
								
								ОсталосьЭксплуатироватьВЭтомГоду = 0;
																   
							КонецЕсли;
																	   
							Если (ОсталосьЭксплуатироватьВЭтомГоду < 12) И (ОсталосьЭксплуатироватьВЭтомГоду > 0)  Тогда
								
								// Последний год применяем прямолинейный метод
								
								СуммаГодовойАмортизации = 12 * (СтоимостьИтоговая - ВыборкаПоНМА.ЛиквидационнаяСтоимость) / ОсталосьЭксплуатироватьВЭтомГоду
								
							ИначеЕсли ОсталосьЭксплуатироватьВЭтомГоду >= 0 Тогда
								СуммаГодовойАмортизации = СтоимостьИтоговая * (1 - Pow(ВыборкаПоНМА.ЛиквидационнаяСтоимость / СтоимостьНУНачальныйОстаток,
								                                                       12 / СрокИспользованияДляВычисленияАмортизацииНУ));
																					   
							Иначе // Срок использования исчерпан
								
								СуммаГодовойАмортизации = 0;
								
								Если Реквизиты.ВыдаватьСообщения Тогда
									
									СообщитьОбОшибкеПриНачисленииАмортизации(ВыборкаПоНМА, СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Бух. расчет амортизации: для нематериального актива %1 при расчете по способу %2 срок использования исчерпан!';uk='Бух. розрахунок амортизації: для нематеріального активу %1 при розрахунку способом %2 строк використання вичерпаний!'"), ВыборкаПоНМА.НематериальныйАктив, ВыборкаПоНМА.СпособНачисленияАмортизации),
										Реквизиты.Регистратор, Отказ);
								КонецЕсли;
								
							КонецЕсли;

							СуммаАмортизации   = СуммаГодовойАмортизации / 12;
							
					ИначеЕсли ВыборкаПоНМА.СпособНачисленияАмортизацииНУ = Перечисления.СпособыНачисленияАмортизацииНМА.УскоренногоУменьшенияОстатка Тогда

					
						Если Год(ВыборкаПоНМА.Период)  
								= Год(Реквизиты.ДатаРасчета) Тогда
								
							СтоимостьИтоговая = СтоимостьНУНачальныйОстаток;
							
						Иначе
							
							СтоимостьИтоговая = ВыборкаПоНМА.СтоимостьНаНачалоГода;
							
						КонецЕсли;
							
						Если ВыборкаПоНМА.ДатаПервойАмортизации = Дата(1,1,1) Тогда
								
								Если Реквизиты.ВыдаватьСообщения Тогда
									
									СообщитьОбОшибкеПриНачисленииАмортизации(ВыборкаПоНМА, СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Нал. расчет амортизации: для нематериального актива %1 при расчете по способу %2 не определилась дата первой амортизации!';uk='Под. розрахунок амортизації: для нематеріального активу %1 при розрахунку за способом %2 не визначилася дата першої амортизації!'"), ВыборкаПоНМА.НематериальныйАктив, ВыборкаПоНМА.СпособНачисленияАмортизации),
										Реквизиты.Регистратор, Отказ);
									
								КонецЕсли;
								
								Продолжить;
								
						КонецЕсли;
							
							РазностьЛет = Год(Реквизиты.ДатаРасчета) - Год(ВыборкаПоНМА.ДатаПервойАмортизации);
							
							Если РазностьЛет > 0 Тогда
								
								ОсталосьЭксплуатироватьВЭтомГоду = СрокИспользованияДляВычисленияАмортизацииНУ 
								                                   - РазностьЛет * 12
								                                   + Месяц(ВыборкаПоНМА.ДатаПервойАмортизации);
																   
							ИначеЕсли ВыборкаПоНМА.СрокПолезногоИспользования < 12 Тогда											   
								
								ОсталосьЭксплуатироватьВЭтомГоду = СрокИспользованияДляВычисленияАмортизацииНУ;
																   
							Иначе
								
								ОсталосьЭксплуатироватьВЭтомГоду = 0;
																   
							КонецЕсли;
																	   
							Если (ОсталосьЭксплуатироватьВЭтомГоду < 12) И (ОсталосьЭксплуатироватьВЭтомГоду > 0)  Тогда
								
								// Последний год применяем прямолинейный метод
								СуммаГодовойАмортизации = 12 * (СтоимостьИтоговая - ВыборкаПоНМА.ЛиквидационнаяСтоимость) / ОсталосьЭксплуатироватьВЭтомГоду;
								
							ИначеЕсли ОсталосьЭксплуатироватьВЭтомГоду >= 0 Тогда
								
								СуммаГодовойАмортизации = 2 * СтоимостьИтоговая / СрокИспользованияДляВычисленияАмортизацииНУ * 12;
								

																					   
							Иначе // Срок использования исчерпан
								
								СуммаГодовойАмортизации = 0;
								
								Если Реквизиты.ВыдаватьСообщения Тогда
									
									СообщитьОбОшибкеПриНачисленииАмортизации(ВыборкаПоНМА, СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Бух. расчет амортизации: для нематериального актива %1 при расчете по способу %2 срок использования исчерпан!';uk='Бух. розрахунок амортизації: для нематеріального активу %1 при розрахунку способом %2 строк використання вичерпаний!'"), ВыборкаПоНМА.НематериальныйАктив, ВыборкаПоНМА.СпособНачисленияАмортизаци),
										Реквизиты.Регистратор, Отказ);
								КонецЕсли;
								
							КонецЕсли;

							СуммаАмортизации   = СуммаГодовойАмортизации / 12;
						
					ИначеЕсли ВыборкаПоНМА.СпособНачисленияАмортизацииНУ = Перечисления.СпособыНачисленияАмортизацииНМА.Кумулятивный Тогда

						
						Если ВыборкаПоНМА.ДатаПервойАмортизации = Дата(1,1,1) Тогда
							
							Если Реквизиты.ВыдаватьСообщения Тогда
								
								СообщитьОбОшибкеПриНачисленииАмортизации(ВыборкаПоНМА, СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Бух. расчет амортизации: для нематериального актива %1 при расчете по способу %2 не определилась дата первой амортизации!';uk='Бух. розрахунок амортизації: для нематеріального активу %1 при розрахунку за способом %2 не визначилася дата першої амортизації!'"), ВыборкаПоНМА.НематериальныйАктив, ВыборкаПоНМА.СпособНачисленияАмортизаци),
									Реквизиты.Регистратор, Отказ);
								
							КонецЕсли;
							
							Продолжить;
							
						КонецЕсли;

						ЧислоЛетПользования	= Макс(1, СрокИспользованияДляВычисленияАмортизацииНУ / 12);
						
						ЧислоЛетПользования	= Цел(ЧислоЛетПользования) + ?(ЧислоЛетПользования  
													- Цел(ЧислоЛетПользования) = 0, 0, 1); // округляем к наибольшему целому 
						
						ГодИспользования	= Год(Реквизиты.ДатаРасчета) - Год(ВыборкаПоНМА.ДатаПервойАмортизации) + 1;
						
						Если Месяц(ВыборкаПоНМА.ДатаПервойАмортизации) >= Месяц(Реквизиты.ДатаРасчета) Тогда
							
							ГодИспользования = ГодИспользования - 1;
							
						КонецЕсли; 

						СуммаГодовойАмортизации   = АмортизируемаяСтоимостьНУ * (ЧислоЛетПользования - ГодИспользования + 1)
								/ (ЧислоЛетПользования * (ЧислоЛетПользования + 1) / 2 );
													  
						СуммаАмортизации = СуммаГодовойАмортизации / 12;
						
					Иначе 
						
						Если Реквизиты.ВыдаватьСообщения  Тогда
							
							СообщитьОбОшибкеПриНачисленииАмортизации(ВыборкаПоНМА, СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='установлен способ расчета амортизации, не поддерживаемый в бухгалтерском учете (%1)!';uk='встановлений спосіб розрахунку амортизації, який не підтримується в бухгалтерському обліку (%1)!'"), ВыборкаПоНМА.СпособНачисленияАмортизации),
									Реквизиты.Регистратор, Отказ);
						
						КонецЕсли;
						
						Продолжить;

					КонецЕсли;
					
					ВсегоОсталосьСписать = АмортизируемаяСтоимостьОстатокНУ;
					
					СписатьОстатокНУ = (ВсегоОсталосьСписать < СуммаАмортизации);
					СуммаАмортизацииНУ = Окр(Мин(ВсегоОсталосьСписать, СуммаАмортизации), 2);
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
		СпособОтражения = Неопределено;
		Если ВыборкаПоНМА.СпособОтраженияРасходовЗаданДокументом Тогда
			СпособОтражения = СоответствиеСпособовОтражения.Получить(ВыборкаПоНМА.СпособОтраженияРасходов);
		КонецЕсли;
		
		НовыеСтроки = ПодготовитьСтрокиВТаблицуАмортизации(
			ВыборкаПоНМА,
			СуммаАмортизацииБУ, СуммаАмортизацииНУ,
			СписатьОстатокБУ, СписатьОстатокНУ);
		ДобавитьСтрокиВТаблицуАмортизации(ТаблицаАмортизации, ВыборкаПоНМА, НовыеСтроки, СпособОтражения);
		
	КонецЦикла;
	
	Возврат ТаблицаАмортизации;
КонецФункции

Функция ПодготовитьСтрокиВТаблицуАмортизации(
		ВыборкаДанных,
		СуммаАмортизацииБУ, СуммаАмортизацииНУ, 
		СписатьОстатокБУ=Ложь, СписатьОстатокНУ=Ложь)
		
	ПоляСтроки = "ОбъектУчета, СуммаБУ, СуммаНУ,Коэффициент";
	
	СтрокаАмортизации = Новый Структура(ПоляСтроки);
	
	МассивРезультат = Новый Массив;
	
	Если СуммаАмортизацииБУ > 0
		ИЛИ СуммаАмортизацииНУ > 0 Тогда
		
		
		МассивРезультат.Добавить(СтрокаАмортизации);
		
		ЗаполнитьЗначенияСвойств(СтрокаАмортизации, ВыборкаДанных);
		
		СтрокаАмортизации.ОбъектУчета = ВыборкаДанных.НематериальныйАктив;
		
		СтрокаАмортизации.СуммаБУ = СуммаАмортизацииБУ;
		СтрокаАмортизации.СуммаНУ = СуммаАмортизацииНУ;
		
		Если ВыборкаДанных.СтоимостьНачальныйОстаток <= ВыборкаДанных.АмортизацияНачальныйОстаток Тогда
			СтрокаАмортизации.Коэффициент = 0;
		Иначе
			СтрокаАмортизации.Коэффициент = СуммаАмортизацииБУ / (ВыборкаДанных.СтоимостьНачальныйОстаток - ВыборкаДанных.АмортизацияНачальныйОстаток);
		КонецЕсли;
		
				
	КонецЕсли;
	
	Возврат МассивРезультат;
	
КонецФункции

Процедура ДобавитьСтрокиВТаблицуАмортизации(Таблица, ВыборкаДанных, НовыеСтроки, ТаблицаРаспределения)
	
	Для Каждого Строка Из НовыеСтроки Цикл
		
		Если (Строка.СуммаБУ = 0 И Строка.СуммаНУ=0 И Строка.СуммаПР=0 И Строка.СуммаВР=0) Тогда
			Продолжить;
		КонецЕсли;
		
		Если ТаблицаРаспределения = Неопределено Тогда
			СтрокаТаблицыЗатрат = Таблица.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТаблицыЗатрат, ВыборкаДанных);
			ЗаполнитьЗначенияСвойств(СтрокаТаблицыЗатрат, Строка);
		Иначе
			МассивКоэффициентов = ТаблицаРаспределения.ВыгрузитьКолонку("Коэффициент");
			СуммыБУ = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(Строка.СуммаБУ, МассивКоэффициентов);
			СуммыНУ = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(Строка.СуммаНУ, МассивКоэффициентов);
			Коэффициенты = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(Строка.Коэффициент, МассивКоэффициентов, 100);
			
			Если СуммыБУ = Неопределено И СуммыНУ = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			Для Индекс=0 По ТаблицаРаспределения.Количество()-1 Цикл
				ПравилоОтражения = ТаблицаРаспределения[Индекс];
				СтрокаТаблицыЗатрат = Таблица.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТаблицыЗатрат, ВыборкаДанных);
				ЗаполнитьЗначенияСвойств(СтрокаТаблицыЗатрат, Строка);
				ЗаполнитьЗначенияСвойств(СтрокаТаблицыЗатрат, ПравилоОтражения);
				СтрокаТаблицыЗатрат.СуммаБУ = ?(СуммыБУ=Неопределено, 0, СуммыБУ[Индекс]);
				СтрокаТаблицыЗатрат.СуммаНУ = ?(СуммыНУ=Неопределено, 0, СуммыНУ[Индекс]);
				СтрокаТаблицыЗатрат.Коэффициент = ?(Коэффициенты=Неопределено, 0, Коэффициенты[Индекс]);
				
			КонецЦикла;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПодготовитьПараметрыАмортизацияНМА(ТаблицаНМА, ТаблицаРеквизиты)

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.ТаблицаНМА

	СписокОбязательныхКолонок = ""
	+ "НомерСтроки,"         // <Число, 5, 0>
	+ "НематериальныйАктив"; // <СправочникСсылка.НематериальныйАктив>

	Параметры.Вставить("ТаблицаНМА",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаНМА, СписокОбязательныхКолонок));

	// Подготовка таблицы Параметры.Реквизиты

	СписокОбязательныхКолонок = ""
	+ "Период,"      // <Дата>
	+ "ДатаРасчета," // <Дата>
	+ "Организация," // <СправочникСсылка.Организации>
	+ "Регистратор," // <ДокументСсылка.*>
	+ "ИмяСписка,"   // <Строка>
	+ "ВыдаватьСообщения";

	Параметры.Вставить("Реквизиты",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));
	
	Возврат Параметры;

КонецФункции

Функция ПоготовитьТаблицуНМАИзРеквизитаШапки(НематериальныйАктив) Экспорт
	
	ТаблицаНМА = Новый ТаблицаЗначений();
	ТаблицаНМА.Колонки.Добавить("НомерСтроки", Новый ОписаниеТипов("Число"));
	ТаблицаНМА.Колонки.Добавить("НематериальныйАктив", Новый ОписаниеТипов("СправочникСсылка.НематериальныеАктивы"));
	ТаблицаНМА.Добавить().НематериальныйАктив = НематериальныйАктив;
	
	Возврат ТаблицаНМА;
	
КонецФункции //ПоготовитьТаблицуНМАИзРеквизитаШапкиДокумента

// ПРИНЯТИЕ К УЧЕТУ НМА

// Регистрация состояний НМА

Процедура ПроверитьВозможностьИзмененияСостоянияНМА(ТаблицаРеквизиты, Отказ) Экспорт

	Параметры = ПодготовитьПараметрыВозможностьИзмененияСостоянияНМА(ТаблицаРеквизиты);

	Реквизиты = Параметры.Реквизиты[0];

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|    ПорядокУчетаНМАБУ.НематериальныйАктив,
	|    ПорядокУчетаНМАБУ.НематериальныйАктив.Код КАК КодНМА,
	|    ПорядокУчетаНМАБУ.Регистратор,
	|    ПорядокУчетаНМАБУ.НомерСтроки
	|ИЗ
	|    РегистрСведений.ПорядокУчетаНМАБУ.СрезПоследних(
	|        &Период,
	|        Организация = &Организация
	|            И НематериальныйАктив В (&НематериальныеАктивы)
	|            И Состояние = &Состояние
	|            И (НЕ Регистратор = &ТекущийРегистратор)) КАК ПорядокУчетаНМАБУ";
	
	Запрос.УстановитьПараметр("Организация",          Реквизиты.Организация);
	Запрос.УстановитьПараметр("Состояние",            Реквизиты.Состояние);
	Запрос.УстановитьПараметр("НематериальныеАктивы", Реквизиты.НематериальныйАктив);
	Запрос.УстановитьПараметр("ТекущийРегистратор",   Реквизиты.Регистратор);
	Запрос.УстановитьПараметр("Период",               Новый МоментВремени(Реквизиты.Период, Реквизиты.Регистратор));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();

		ШаблонСообщения = НСтр("ru='Для нематериального актива <%1 (%2)> в организации <%3> уже зафиксировано состояние <%4>
|документом <%5>'
|;uk='Для нематеріального активу <%1(%2)> в організації <%3> вже зафіксовано стан <%4> документом <%5>'");

		Пока Выборка.Следующий() Цикл
			ТекстСообщения = СтрШаблон(ШаблонСообщения, 
											Выборка.НематериальныйАктив,
											Выборка.КодНМА, 
											Реквизиты.Организация, 
											Реквизиты.Состояние, 
											Выборка.Регистратор);
				
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Реквизиты.Регистратор, Реквизиты.ИмяСписка + "["
				+ Формат(Выборка.НомерСтроки - 1, "ЧН=0; ЧГ=") + "].НематериальныйАктив", "Объект", Отказ);
		КонецЦикла;

		Возврат;
	КонецЕсли;

КонецПроцедуры

Функция ПодготовитьПараметрыВозможностьИзмененияСостоянияНМА(ТаблицаРеквизиты)

	Параметры = Новый Структура;

	СписокОбязательныхКолонок = ""
	+ "НематериальныйАктив," // <СправочникСсылка.НематериальныхАктивов>
	+ "Период,"              // <Дата>
	+ "ИмяСписка,"           // <Строка, 0>
	+ "Организация,"         // <СправочникСсылка.Организации>
	+ "Состояние,"           // <ПеречислениеСсылка.СостоянияНМА> - состояние НМА, которое требуется установить
	+ "Регистратор";         // <ДокументСсылка.*>

	Параметры.Вставить("Реквизиты",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции

// СОСТОЯНИЕ НМА

// Получает документ и дату выбытия нематериального актива по бух учету.
//
// Параметры
//
//
// Возвращаемое значение
//  Дата и документ - через указанные параметры процедуры.
//
Процедура СведенияОВыбытииНМА(НематериальныйАктив, Организация, ДокРегистратор, ДатаДокРегистратора) Экспорт

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПервоначальныеСведенияНМА.ДокументСписания КАК Документ,
	|	ПервоначальныеСведенияНМА.ДокументСписания.Дата КАК Дата
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияНМА.СрезПоследних(, Организация = &Организация И НематериальныйАктив = &НМА) КАК ПервоначальныеСведенияНМА
	|ГДЕ
	|	НЕ ПервоначальныеСведенияНМА.ДокументСписания.Дата ЕСТЬ NULL";

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("НМА", НематериальныйАктив);
	Запрос.УстановитьПараметр("Организация", Организация);
	ВыборкаДоков = Запрос.Выполнить().Выбрать();

	Если ВыборкаДоков.Следующий()  Тогда
		ДокРегистратор      = ВыборкаДоков.Документ;
		ДатаДокРегистратора = ВыборкаДоков.Дата;

	Иначе
		ДокРегистратор      = Неопределено;
		ДатаДокРегистратора = '00010101';

	КонецЕсли;

КонецПроцедуры

Процедура ПроверитьСоответствиеНМАПодразделению(Объект, Отказ) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Период", Новый Граница(Новый МоментВремени(Объект.Дата, Объект.Ссылка), ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("Подразделение", Объект.Подразделение);
	Запрос.УстановитьПараметр("НематериальныйАктив", Объект.НематериальныйАктив);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СчетаОтражения.СчетУчета КАК СчетУчета
	|ПОМЕСТИТЬ СчетаОтражения
	|ИЗ
	|	РегистрСведений.ПорядокУчетаНМА.СрезПоследних(
	|			&Период,
	|			Организация = &Организация
	|				И НематериальныйАктив = &НематериальныйАктив
	|				И Регистратор <> &Ссылка) КАК СчетаОтражения
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СчетаОтражения.СчетУчета
	|ИЗ
	|	РегистрСведений.ПараметрыЦелевогоФинансированияНМА.СрезПоследних(
	|			&Период,
	|			НематериальныйАктив = &НематериальныйАктив
	|				И Регистратор <> &Ссылка) КАК СчетаОтражения
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетУчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ДанныеСчетУчета.Субконто1
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&Период,
	|			Счет В
	|				(ВЫБРАТЬ
	|					СчетаОтражения.СчетУчета
	|				ИЗ
	|					СчетаОтражения),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.НематериальныеАктивы),
	|			Организация = &Организация
	|				И Подразделение = &Подразделение
	|				И Субконто1 = &НематериальныйАктив) КАК ДанныеСчетУчета";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Нематериальный актив ""%1"" не отражался в учете в подразделении ""%2""';uk='Нематеріальний актив ""%1"" не відображався в обліку в підрозділі ""%2""'"),
			Объект.НематериальныйАктив,
			Объект.Подразделение);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстСообщения,
			Объект.Ссылка,,,
			Отказ);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
