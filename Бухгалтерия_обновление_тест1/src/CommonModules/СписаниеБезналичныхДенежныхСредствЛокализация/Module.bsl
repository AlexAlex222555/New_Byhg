
#Область ПрограммныйИнтерфейс

#Область Проведение

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	//++ Локализация
	//++ НЕ УТ
	МеханизмыДокумента.Добавить("РегламентированныйУчет");
	МеханизмыДокумента.Добавить("ИнтеграцияБЗК");
	//-- НЕ УТ
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый документ.
//  Отказ - Булево - Признак проведения документа.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то проведение документа выполнено не будет.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ОбработкаПроведения(Объект, Отказ, РежимПроведения) Экспорт
	
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то будет выполнен отказ от продолжения работы после выполнения проверки заполнения.
//  ПроверяемыеРеквизиты - Массив - Массив путей к реквизитам, для которых будет выполнена проверка заполнения.
//
Процедура ОбработкаПроверкиЗаполнения(Объект, Отказ, ПроверяемыеРеквизиты) Экспорт
	
	//++ Локализация
	ФлагОбменСБанками = Ложь;
	ОшибкиЗаполнения = "";
	ДополнительныеСвойства = Объект.ДополнительныеСвойства;
	
	Если ДополнительныеСвойства.Свойство("ОбменСБанками")
		И ДополнительныеСвойства.ОбменСБанками Тогда
		ФлагОбменСБанками = Истина;
	КонецЕсли;
	//++ НЕ УТ
	ПроверитьВедомостиНаВыплатуЗарплаты(Объект, ФлагОбменСБанками, ОшибкиЗаполнения, Отказ);
	
	Если Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыдачаЗаймаСотруднику 
		И ПолучитьФункциональнуюОпцию("ИспользоватьНачислениеЗарплатыУТ") Тогда
		ОтражениеЗарплатыВФинансовомУчетеУП.ПроверитьЗаполнениеДокументаВыдачиЗайма(Объект, Отказ);
	КонецЕсли;
	//-- НЕ УТ
	
	//-- Локализация
	Возврат;
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект.
//  ДанныеЗаполнения - Произвольный - Значение, которое используется как основание для заполнения.
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения стандартной (системной) обработки события.
//
Процедура ОбработкаЗаполнения(Объект, ДанныеЗаполнения, СтандартнаяОбработка) Экспорт
	
	ТипОснования = ТипЗнч(ДанныеЗаполнения);
	
	//++ Локализация
//	Если Истина Тогда
	
	//++ НЕ УТ
	Если ТипОснования = Тип("ДокументСсылка.ДоговорЗаймаСотруднику") Тогда
		ДенежныеСредстваСерверЛокализация.ЗаполнитьПоДоговоруЗаймаСотруднику(ДанныеЗаполнения, ДанныеЗаполнения, Объект.РасшифровкаПлатежа, Ложь);
		
	ИначеЕсли ТипОснования = Тип("Структура")
		И ДанныеЗаполнения.Свойство("ДокументОснование")
		И ТипЗнч(ДанныеЗаполнения.ДокументОснование) = Тип("ДокументСсылка.НачислениеДивидендов") Тогда
		
		НоваяСтрока = Объект.РасшифровкаПлатежа.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеЗаполнения);
		
	ИначеЕсли ТипОснования = Тип("Структура") И ДанныеЗаполнения.Свойство("МассивВедомостей") Тогда
		
		ЗаполнитьПоВедомостям(Объект, ДанныеЗаполнения);
		
	ИначеЕсли ТипОснования = Тип("ДокументСсылка.ПоступлениеДенежныхДокументов") Тогда
		Документы.ПоступлениеДенежныхДокументов.ЗаполнитьПоОснованию(Объект, ДанныеЗаполнения);
		ЗаполнитьРеквизитыЗначениямиПоУмолчанию(Объект);
		Возврат;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("Структура") И ДанныеЗаполнения.Свойство("ПлатежиПоНалогам") Тогда
		ПлатежиПоНалогам = ПолучитьИзВременногоХранилища(ДанныеЗаполнения.ПлатежиПоНалогам);
		ЗаполнитьЗначенияСвойств(Объект,ПлатежиПоНалогам);
		Для Каждого СтрокаПлатежа Из ПлатежиПоНалогам.ТаблицаРасшифровкаПлатежа Цикл
			НоваяСтрока = Объект.РасшифровкаПлатежа.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаПлатежа);
			НоваяСтрока.СтатьяРасходов = ПланыВидовХарактеристик.СтатьиАктивовПассивов.Налоги;
		КонецЦикла;	
		
	
		
	ИначеЕсли ТипОснования = Тип("Структура") И ДанныеЗаполнения.Свойство("ЗаказПоставщику") Тогда
		
		ДокОснование = ДанныеЗаполнения.ЗаказПоставщику;
		КОплате = ДанныеЗаполнения.СуммаКОплате;
		
		Если ТипЗнч(ДанныеЗаполнения.ЗаказПоставщику) = Тип("ДокументСсылка.ПоступлениеДенежныхДокументов") Тогда
			Документы.ПоступлениеДенежныхДокументов.ЗаполнитьПоОснованию(Объект, ДанныеЗаполнения.ЗаказПоставщику);
			ЗаполнитьРеквизитыЗначениямиПоУмолчанию(Объект);
			Возврат;
		
		КонецЕсли;
		
	ИначеЕсли ТипОснования = Тип("Структура")
		И ДанныеЗаполнения.Свойство("ДокументОснование")
		И ТипЗнч(ДанныеЗаполнения.ДокументОснование) = Тип("Массив") Тогда
		
		Для каждого СтрокаМассива Из ДанныеЗаполнения.ДокументОснование Цикл
		
			Если ТипЗнч(СтрокаМассива) = Тип("ДокументСсылка.ПоступлениеДенежныхДокументов") Тогда
				ЗаполнитьПоПоступлениюДенежныхДокументов(
					Объект,
					СтрокаМассива, 
					0, 
					ДанныеЗаполнения);
				
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	//-- НЕ УТ
	//-- Локализация
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//
Процедура ОбработкаУдаленияПроведения(Объект, Отказ) Экспорт
	
	//++ Локализация
	//-- Локализация
	Возврат;
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//  РежимЗаписи - РежимЗаписиДокумента - В параметр передается текущий режим записи документа. Позволяет определить в теле процедуры режим записи.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ПередЗаписью(Объект, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	
	//++ Локализация
	//++ НЕ УТ
	Если ДенежныеСредстваСервер.ОперацияПоЗарплате(Объект.ХозяйственнаяОперация) Тогда
		ПериодУчетнойПолитики = ?(ЗначениеЗаполнено(Объект.Дата), КонецМесяца(Объект.Дата), КонецМесяца(ТекущаяДатаСеанса()));
		ПараметрыУчетнойПолитики = НастройкиНалоговУчетныхПолитикПовтИсп.ДействующиеПараметрыНалоговУчетныхПолитик(
			"УчетнаяПолитикаБухУчета", Объект.Организация, ПериодУчетнойПолитики);
		Если ПараметрыУчетнойПолитики <> Неопределено Тогда
			Объект.ПроводкиПоРаботникам = (ПараметрыУчетнойПолитики.ПроводкиПоРаботникам
				И ПолучитьФункциональнуюОпцию("ИспользоватьНачислениеЗарплатыУТ"));
		КонецЕсли;
	КонецЕсли;
	//-- НЕ УТ
	//-- Локализация
	Возврат;
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина, то запись выполнена не будет и будет вызвано исключение.
//
Процедура ПриЗаписи(Объект, Отказ) Экспорт
	
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  СтандартнаяОбработка - Булево - Признак выполнения стандартной обработки
//  Префикс - Строка - Префикс, который будет использован для генерации нового номера
//
Процедура ПриУстановкеНовогоНомера(Объект, СтандартнаяОбработка, Префикс) Экспорт
	
	//++ Локализация
	//-- Локализация
	Возврат;
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  ОбъектКопирования - ДокументОбъект.<Имя документа> - Исходный документ, который является источником копирования.
//
Процедура ПриКопировании(Объект, ОбъектКопирования) Экспорт
	
	//++ Локализация


	Если Объект.ТипПлатежногоДокумента = Перечисления.ТипыПлатежныхДокументов.ИнкассовоеПоручение
		Или Объект.ТипПлатежногоДокумента = Перечисления.ТипыПлатежныхДокументов.ПлатежныйОрдер
		Или Объект.ТипПлатежногоДокумента = Перечисления.ТипыПлатежныхДокументов.БанковскийОрдер Тогда
		Объект.ПроведеноБанком = Истина;
		Объект.ДатаПроведенияБанком = ТекущаяДатаСеанса();
	КонецЕсли;
	//-- Локализация
	Возврат;
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  ВидФормы - Строка - Имя стандартной формы
//  Параметры - Структура - Параметры формы
//  ВыбраннаяФорма - Строка, Форма - Содержит имя открываемой формы или объект метаданных Форма
//  ДополнительнаяИнформация - Структура - Дополнительная информация открытия формы
//  СтандартнаяОбработка - Булево - Признак стандартной обработки
Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка) Экспорт
	
	//++ Локализация
	//++ НЕ УТ
	Если Параметры.Свойство("Основание") И ЗначениеЗаполнено(Параметры.Основание) Тогда
		Если ТипЗнч(Параметры.Основание) = Тип("Структура") И Параметры.Основание.Свойство("МассивВедомостей") Тогда
			
			СтруктураПараметров = Новый Структура("МассивВедомостей, ХозяйственнаяОперация");
			ЗаполнитьЗначенияСвойств(СтруктураПараметров, Параметры.Основание);
			Если Не ЗначениеЗаполнено(СтруктураПараметров.ХозяйственнаяОперация) Тогда
				СтруктураПараметров.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыплатаЗарплаты;
			КонецЕсли;
			
			ДанныеВедомостей = ИнтеграцияБЗК.ДанныеВедомостей(СтруктураПараметров);
			Если ДанныеВедомостей.РеквизитыШапки = Неопределено Тогда
				Текст = НСтр("ru='Команда не может быть выполнена для указанного объекта!';uk='Команда не може бути виконана для зазначеного об''єкта!'");
				ВызватьИсключение Текст;
			КонецЕсли;
			
			Если ДанныеВедомостей.МассивОшибок.Количество() = 0
				И ДанныеВедомостей.РеквизитыШапки.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыНаЛицевыеСчета Тогда
				СтандартнаяОбработка = Ложь;
				ВыбраннаяФорма = "ФормаПомощникаСоздания";
				Возврат;
			КонецЕсли;
			
		ИначеЕсли ТипЗнч(Параметры.Основание) = Тип("ДокументСсылка.ВедомостьНаВыплатуЗарплатыПеречислением")
			Тогда
			
			СтандартнаяОбработка = Ложь;
			ВыбраннаяФорма = "ФормаПомощникаСоздания";
			
		КонецЕсли;
	КонецЕсли;
	//-- НЕ УТ
	//-- Локализация
	Возврат;
	
КонецПроцедуры

#КонецОбласти

#Область ПодключаемыеКоманды

// Определяет список команд создания на основании.
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//  Параметры - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.Параметры
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

// Добавляет команду создания документа "Авансовый отчет".
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//
Процедура ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт


КонецПроцедуры

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//   Параметры - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.Параметры
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	//++ Локализация
	//-- Локализация
	Возврат;
	
КонецПроцедуры

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	//++ Локализация
	//-- Локализация
КонецПроцедуры

#КонецОбласти

#Область Печать

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	//++ Локализация
	//-- Локализация
КонецПроцедуры

//++ Локализация
//-- Локализация
#КонецОбласти

//++ НЕ УТ
#Область ПроводкиРегУчета

// Функция возвращает текст запроса для отражения документа в регламентированном учете.
//
// Возвращаемое значение:
//	Строка - Текст запроса
//
Функция ТекстОтраженияВРеглУчете() Экспорт
	
	//++ Локализация
	Возврат ТекстОтраженияВРеглУчетеУКР(); 


	//-- Локализация
	Возврат "";
	
КонецФункции

// Функция возвращает текст запроса дополнительных временных таблиц,
// необходимых для отражения в регламентированном учете
//
// Возвращаемое значение:
//   Строка - сформированный текст запроса.
//
Функция ТекстЗапросаВТОтраженияВРеглУчете() Экспорт
	
	//++ Локализация
	Возврат ТекстЗапросаВТОтраженияВРеглУчетеУКР();
	//-- Локализация
	Возврат "";
	
КонецФункции

#КонецОбласти
//-- НЕ УТ

//++ НЕ УТ
#Область ПроводкиРегУчетаУКР

// Функция возвращает текст запроса для отражения документа в регламентированном учете.
//
// Возвращаемое значение:
//	Строка - Текст запроса
//
Функция ТекстОтраженияВРеглУчетеУКР()
	

	ЯзыкСодержания = МультиязычностьУкр.КодЯзыкаИнформационнойБазы();

	ТекстыОтражения = Новый Массив;
	
#Область ТекстОплатаАвансаПоставщику // (Дт 371 :: Кт 31)
	ТекстОплатаАвансаПоставщику = "
	|ВЫБРАТЬ //// Оплата аванса поставщику (Дт 371 :: Кт 31)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	ВЫБОР КОГДА НАЧАЛОПЕРИОДА(Операция.Дата) = Операция.ДатаПроведенияБанком ТОГДА
	|		Операция.Дата
	|	ИНАЧЕ
	|		КОНЕЦПЕРИОДА(Операция.ДатаПроведенияБанком, ДЕНЬ)
	|	КОНЕЦ КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(РасчетыПредоплата.ПредоплатаРегл, Расчеты.СуммаРегл) КАК Сумма,
	|	ЕСТЬNULL(РасчетыПредоплата.ПредоплатаУпр, Расчеты.СуммаУпр) КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АвансыВыданные) КАК ВидСчетаДт,
	|	Расчеты.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	Расчеты.Валюта КАК ВалютаДт,
	|	Расчеты.Подразделение КАК ПодразделениеДт,
	|	Расчеты.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Расчеты.Контрагент КАК СубконтоДт1,
	|	Расчеты.Договор КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	ЕСТЬNULL(РасчетыПредоплата.Предоплата, Расчеты.Сумма) КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ДенежныеСредства) КАК ВидСчетаКт,
	|	Операция.БанковскийСчет КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Операция.Валюта КАК ВалютаКт,
	|	Операция.БанковскийСчет.Подразделение КАК ПодразделениеКт,
	|	Операция.БанковскийСчет.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	Расчеты.СтатьяДвиженияДенежныхСредств КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	ЕСТЬNULL(ДенежныеСредстваКонтрагент.СуммаПредоплатыВВалютеПлатежа, ЕСТЬNULL(РасчетыПредоплата.Предоплата, Расчеты.Сумма)) КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""%1"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СписаниеБезналичныхДенежныхСредств КАК Операция
	|	ПО	
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВТРасчетыСПоставщиками КАК Расчеты
	|	ПО	
	|		Расчеты.Ссылка = Операция.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РасчетыСПоставщикамиПоДокументам КАК РасчетыПредоплата
	|	ПО
	|		Расчеты.Ссылка = РасчетыПредоплата.Ссылка
	|		И Расчеты.Контрагент = РасчетыПредоплата.Контрагент
	|		И Расчеты.Договор = РасчетыПредоплата.Договор
	|		И Расчеты.ГруппаФинансовогоУчета = РасчетыПредоплата.ГруппаФинансовогоУчета
	|		И Расчеты.Подразделение = РасчетыПредоплата.Подразделение
	|		И Расчеты.НаправлениеДеятельности = РасчетыПредоплата.НаправлениеДеятельности
	|		И (Расчеты.СтатьяДвиженияДенежныхСредств = РасчетыПредоплата.СтатьяДвиженияДенежныхСредств
	|			ИЛИ РасчетыПредоплата.СтатьяДвиженияДенежныхСредств = ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПустаяСсылка))
	|		И Расчеты.Валюта = РасчетыПредоплата.Валюта
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ДенежныеСредстваКонтрагент КАК ДенежныеСредстваКонтрагент
	|	ПО
	|		ДенежныеСредстваКонтрагент.Ссылка = Расчеты.Ссылка
	|		И ДенежныеСредстваКонтрагент.Контрагент = Расчеты.Контрагент
	|		И ДенежныеСредстваКонтрагент.Договор = Расчеты.Договор
	|		И ДенежныеСредстваКонтрагент.ГруппаФинансовогоУчета = Расчеты.ГруппаФинансовогоУчета
	|		И ДенежныеСредстваКонтрагент.Подразделение = Расчеты.Подразделение
	|		И ДенежныеСредстваКонтрагент.НаправлениеДеятельности = Расчеты.НаправлениеДеятельности
	|		И ДенежныеСредстваКонтрагент.СтатьяДвиженияДенежныхСредств  = Расчеты.СтатьяДвиженияДенежныхСредств
	|		И ДенежныеСредстваКонтрагент.ВалютаВзаиморасчетов = Расчеты.Валюта
	|		И ДенежныеСредстваКонтрагент.ВалютаПлатежа <> Расчеты.Валюта
	|	
	|ГДЕ
	|	Операция.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоставщику),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеТаможне))
	|	И Операция.ПроведеноБанком
	|	И ЕСТЬNULL(РасчетыПредоплата.ПредоплатаРегл, Расчеты.СуммаРегл) <> 0
	|";             

	ТекстОплатаАвансаПоставщику = СтрШаблон(ТекстОплатаАвансаПоставщику, 
		НСтр("ru='Оплата аванса поставщику';uk='Оплата авансу постачальнику'",ЯзыкСодержания));

	ТекстыОтражения.Добавить(ТекстОплатаАвансаПоставщику);
#КонецОбласти
	
#Область ТекстОплатаДолгаПоставщику // (Дт 63 :: Кт 31)

	ТекстОплатаДолгаПоставщику = "
	|ВЫБРАТЬ //// Оплата долга поставщику  (Дт 63 :: Кт 31)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	ВЫБОР КОГДА НАЧАЛОПЕРИОДА(Операция.Дата) = Операция.ДатаПроведенияБанком ТОГДА
	|		Операция.Дата
	|	ИНАЧЕ
	|		КОНЕЦПЕРИОДА(Операция.ДатаПроведенияБанком, ДЕНЬ)
	|	КОНЕЦ КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(РасчетыПоДокументам.ДолгРегл, Расчеты.СуммаРегл) КАК Сумма,
	|	ЕСТЬNULL(РасчетыПоДокументам.ДолгУпр, Расчеты.СуммаУпр) КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСПоставщиками) КАК ВидСчетаДт,
	|	Расчеты.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	Расчеты.Валюта КАК ВалютаДт,
	|	Расчеты.Подразделение КАК ПодразделениеДт,
	|	Расчеты.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Расчеты.Контрагент КАК СубконтоДт1,
	|	Расчеты.Договор КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	ЕСТЬNULL(РасчетыПоДокументам.Долг, Расчеты.Сумма) КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ДенежныеСредства) КАК ВидСчетаКт,
	|	Операция.БанковскийСчет КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Операция.Валюта КАК ВалютаКт,
	|	Операция.БанковскийСчет.Подразделение КАК ПодразделениеКт,
	|	Операция.БанковскийСчет.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	ЕСТЬNULL(РасчетыПоДокументам.СтатьяДвиженияДенежныхСредств, Расчеты.СтатьяДвиженияДенежныхСредств) КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	ЕСТЬNULL(ДенежныеСредстваКонтрагент.СуммаПостоплатыВВалютеПлатежа, ЕСТЬNULL(РасчетыПоДокументам.Долг, Расчеты.Сумма)) КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""%1"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СписаниеБезналичныхДенежныхСредств КАК Операция
	|	ПО	
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВТРасчетыСПоставщиками КАК Расчеты
	|	ПО	
	|		Расчеты.Ссылка = Операция.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РасчетыСПоставщикамиПоДокументам КАК РасчетыПоДокументам
	|	ПО
	|		Расчеты.Ссылка = РасчетыПоДокументам.Ссылка
	|		И Расчеты.Контрагент = РасчетыПоДокументам.Контрагент
	|		И Расчеты.Договор = РасчетыПоДокументам.Договор
	|		И Расчеты.ГруппаФинансовогоУчета = РасчетыПоДокументам.ГруппаФинансовогоУчета
	|		И Расчеты.Подразделение = РасчетыПоДокументам.Подразделение
	|		И Расчеты.НаправлениеДеятельности = РасчетыПоДокументам.НаправлениеДеятельности
	|		И Расчеты.СтатьяДвиженияДенежныхСредств = РасчетыПоДокументам.СтатьяДвиженияДенежныхСредств
	|		И Расчеты.Валюта = РасчетыПоДокументам.Валюта
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ДенежныеСредстваКонтрагент КАК ДенежныеСредстваКонтрагент
	|	ПО
	|		ДенежныеСредстваКонтрагент.Ссылка = Расчеты.Ссылка
	|		И ДенежныеСредстваКонтрагент.Контрагент = Расчеты.Контрагент
	|		И ДенежныеСредстваКонтрагент.Договор = Расчеты.Договор
	|		И ДенежныеСредстваКонтрагент.ГруппаФинансовогоУчета = Расчеты.ГруппаФинансовогоУчета
	|		И ДенежныеСредстваКонтрагент.Подразделение = Расчеты.Подразделение
	|		И ДенежныеСредстваКонтрагент.НаправлениеДеятельности = Расчеты.НаправлениеДеятельности
	|		И ДенежныеСредстваКонтрагент.СтатьяДвиженияДенежныхСредств = Расчеты.СтатьяДвиженияДенежныхСредств
	|		И ДенежныеСредстваКонтрагент.ВалютаВзаиморасчетов = Расчеты.Валюта
	|		И ДенежныеСредстваКонтрагент.ВалютаПлатежа <> Расчеты.Валюта
	|	
	|ГДЕ
	|	Операция.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоставщику),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеТаможне))
	|	И Операция.ПроведеноБанком
	|	И ЕСТЬNULL(РасчетыПоДокументам.ДолгРегл, 0) <> 0
	|";        

	ТекстОплатаДолгаПоставщику = СтрШаблон(ТекстОплатаДолгаПоставщику, 
		НСтр("ru='Оплата долга поставщику';uk='Оплата боргу постачальнику'",ЯзыкСодержания));

	ТекстыОтражения.Добавить(ТекстОплатаДолгаПоставщику);
#КонецОбласти

#Область ТекстВозвратКлиентуАвансаПогашениеДолга
	ТекстВозвратКлиентуАвансаПогашениеДолга = "
	|ВЫБРАТЬ //// Возврат аванса клиенту / в др. организацию, погашение долга клиента / др. организации
	|
	|	Операция.Ссылка КАК Ссылка,
	|	ВЫБОР КОГДА НАЧАЛОПЕРИОДА(Операция.Дата, ДЕНЬ) = Операция.ДатаПроведенияБанком ТОГДА
	|		Операция.Дата
	|	ИНАЧЕ
	|		КОНЕЦПЕРИОДА(Операция.ДатаПроведенияБанком, ДЕНЬ)
	|	КОНЕЦ КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(РасчетыПоДокументам.ПредоплатаРегл + РасчетыПоДокументам.ДолгРегл, Расчеты.СуммаРегл) КАК Сумма,
	|	ЕСТЬNULL(РасчетыПоДокументам.ПредоплатаУпр + РасчетыПоДокументам.ДолгУпр, Расчеты.СуммаУпр) КАК СуммаУУ,
	|
	|	ВЫБОР КОГДА ЕСТЬNULL(РасчетыПоДокументам.ПредоплатаРегл, 0) > 0
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АвансыПолученные)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКлиентами)
	|	КОНЕЦ КАК ВидСчетаДт,
	|	Расчеты.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	Расчеты.Валюта КАК ВалютаДт,
	|	Расчеты.Подразделение КАК ПодразделениеДт,
	|	Расчеты.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Расчеты.Контрагент КАК СубконтоДт1,
	|	Расчеты.Договор КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	ЕСТЬNULL(РасчетыПоДокументам.Предоплата + РасчетыПоДокументам.Долг, Расчеты.Сумма) КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКлиентами) КАК ВидСчетаКт,
	|	РасчетыПоПретензиям.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	РасчетыПоПретензиям.Валюта КАК ВалютаКт,
	|	РасчетыПоПретензиям.Подразделение КАК ПодразделениеКт,
	|	РасчетыПоПретензиям.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|	РасчетыПоПретензиям.Контрагент КАК СубконтоКт1,
	|	РасчетыПоПретензиям.Договор КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	ЕСТЬNULL(РасчетыПоДокументам.Предоплата + РасчетыПоДокументам.Долг, Расчеты.Сумма) КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	ВЫБОР КОГДА Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту) И ЕСТЬNULL(РасчетыПоДокументам.ПредоплатаРегл, 0) > 0
	|		ТОГДА ""%1""
	|		КОГДА Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту) И ЕСТЬNULL(РасчетыПоДокументам.ДолгРегл, 0) > 0
	|		ТОГДА ""%2""
	|		КОГДА Операция.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту) И ЕСТЬNULL(РасчетыПоДокументам.ДолгРегл, 0) > 0
	|		ТОГДА ""%3""
	|		ИНАЧЕ ""%4"" 
	|	КОНЕЦ КАК Содержание
	|
	|ИЗ 
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СписаниеБезналичныхДенежныхСредств КАК Операция
	|	ПО	
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РасчетыСКлиентами КАК РасчетыПоПретензиям
	|	ПО
	|		РасчетыПоПретензиям.Ссылка = Операция.Ссылка
	|		И РасчетыПоПретензиям.ДокументОбъектаРасчетов = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РасчетыСКлиентами КАК Расчеты
	|	ПО
	|		Расчеты.Ссылка = Операция.Ссылка
	|		И Расчеты.Валюта = РасчетыПоПретензиям.Валюта
	|		И Расчеты.СтатьяДвиженияДенежныхСредств = РасчетыПоПретензиям.СтатьяДвиженияДенежныхСредств
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РасчетыСКлиентамиПоДокументам КАК РасчетыПоДокументам
	|	ПО
	|		Расчеты.Ссылка = РасчетыПоДокументам.Ссылка
	|		И Расчеты.ОбъектРасчетов = РасчетыПоДокументам.ОбъектРасчетов
	|		И Расчеты.Валюта = РасчетыПоДокументам.Валюта
	|		И Расчеты.СтатьяДвиженияДенежныхСредств = РасчетыПоДокументам.СтатьяДвиженияДенежныхСредств
	|	
	|ГДЕ
	|	Операция.ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту), ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию))
	|	И ЕСТЬNULL(РасчетыПоДокументам.ПредоплатаРегл + РасчетыПоДокументам.ДолгРегл, Расчеты.СуммаРегл) + ЕСТЬNULL(РасчетыПоДокументам.ПредоплатаУпр + РасчетыПоДокументам.ДолгУпр, Расчеты.СуммаУпр) <> 0
	|	И Операция.ПроведеноБанком
	|";  

	ТекстВозвратКлиентуАвансаПогашениеДолга = СтрШаблон(ТекстВозвратКлиентуАвансаПогашениеДолга, 
		НСтр("ru='Возврат клиенту аванса';uk='Повернення клієнту авансу'",ЯзыкСодержания),
		НСтр("ru='Возврат денежных средств клиенту';uk='Повернення коштів клієнту'",ЯзыкСодержания),
		НСтр("ru='Возврат денежных средств в другую организацию';uk='Повернення коштів до іншої організації'",ЯзыкСодержания),
		НСтр("ru='Возврат аванса в другую организацию';uk='Повернення авансу в іншу організацію'",ЯзыкСодержания));

	ТекстыОтражения.Добавить(ТекстВозвратКлиентуАвансаПогашениеДолга);
#КонецОбласти
	
#Область ТекстВозвратКлиентуДС
	ТекстВозвратКлиентуДС = "
	|ВЫБРАТЬ //// Возврат клиенту / др. организации ДС в валюте регл.учета
	|
	|	Операция.Ссылка КАК Ссылка,
	|	ВЫБОР КОГДА НАЧАЛОПЕРИОДА(Операция.Дата, ДЕНЬ) = Операция.ДатаПроведенияБанком ТОГДА
	|		Операция.Дата
	|	ИНАЧЕ
	|		КОНЕЦПЕРИОДА(Операция.ДатаПроведенияБанком, ДЕНЬ)
	|	КОНЕЦ КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	Суммы.СуммаБезНДСРегл + Суммы.СуммаНДСРегл КАК Сумма,
	|	Суммы.СуммаБезНДСУпр + Суммы.СуммаНДСУпр КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКлиентами) КАК ВидСчетаДт,
	|	Расчеты.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	Расчеты.Валюта КАК ВалютаДт,
	|	Расчеты.Подразделение КАК ПодразделениеДт,
	|	Расчеты.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Расчеты.Контрагент КАК СубконтоДт1,
	|	Расчеты.Договор КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	Расчеты.Сумма КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ДенежныеСредства) КАК ВидСчетаКт,
	|	Операция.БанковскийСчет КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Операция.Валюта КАК ВалютаКт,
	|	Операция.БанковскийСчет.Подразделение КАК ПодразделениеКт,
	|	Операция.БанковскийСчет.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	Расчеты.СтатьяДвиженияДенежныхСредств КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	Суммы.СуммаБезНДС + Суммы.СуммаНДС КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	ВЫБОР КОГДА Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту)
	|		ТОГДА ""%1""
	|		ИНАЧЕ ""%2""   
	|	КОНЕЦ КАК Содержание
	|
	|ИЗ 
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СписаниеБезналичныхДенежныхСредств КАК Операция
	|	ПО	
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СписаниеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК СтрокиПлатежа
	|	ПО
	|		СтрокиПлатежа.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютахУчета КАК Суммы
	|	ПО	
	|		Суммы.Регистратор = СтрокиПлатежа.Ссылка
	|		И Суммы.ИдентификаторСтроки = СтрокиПлатежа.ИдентификаторСтроки
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РасчетыСКлиентами КАК Расчеты
	|	ПО
	|		Расчеты.Ссылка = СтрокиПлатежа.Ссылка
	|		И Расчеты.ДокументОбъектаРасчетов = СтрокиПлатежа.Ссылка
	|		И Расчеты.СтатьяДвиженияДенежныхСредств = СтрокиПлатежа.СтатьяДвиженияДенежныхСредств
	|		И (Расчеты.Валюта = Суммы.ВалютаВзаиморасчетов
	|		ИЛИ Суммы.ВалютаВзаиморасчетов = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка))
	|
	|ГДЕ
	|	Операция.ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту), ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию))
	|	И Суммы.СуммаБезНДСРегл + Суммы.СуммаНДСРегл + Суммы.СуммаБезНДСУпр + Суммы.СуммаНДСУпр <> 0
	|	И Операция.ПроведеноБанком
	|";           

	ТекстВозвратКлиентуДС = СтрШаблон(ТекстВозвратКлиентуДС, 
		НСтр("ru='Возврат клиенту денежных средств';uk='Повернення клієнту коштів'",ЯзыкСодержания),
		НСтр("ru='Возврат денежных средств в другую организацию';uk='Повернення коштів до іншої організації'",ЯзыкСодержания));

	ТекстыОтражения.Добавить(ТекстВозвратКлиентуДС);
#КонецОбласти
	
	// Банк
	
#Область ТекстСнятиеНаличныхВБанке
	ТекстСнятиеНаличныхВБанке = "
	|ВЫБРАТЬ
	|
	|	Операция.Ссылка КАК Ссылка,
	|	ВЫБОР КОГДА НАЧАЛОПЕРИОДА(Операция.Дата) = Операция.ДатаПроведенияБанком ТОГДА
	|		Операция.Дата
	|	ИНАЧЕ
	|		КОНЕЦПЕРИОДА(Операция.ДатаПроведенияБанком, ДЕНЬ)
	|	КОНЕЦ КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Суммы.СуммаБезНДСРегл, Операция.СуммаДокумента) КАК Сумма,
	|	ЕСТЬNULL(Суммы.СуммаБезНДСУпр, Операция.СуммаДокумента / КурсВалютыУпрУчета.Курс) КАК СуммаУУ,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	Операция.Валюта КАК ВалютаДт,
	|	Операция.БанковскийСчет.Подразделение КАК ПодразделениеДт,
	|	Операция.БанковскийСчет.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеДт,
	|
	|	ВЫБОР КОГДА Операция.Валюта = &ВалютаРеглУчета ТОГДА
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДенежныеСредстваВПутиВНациональнойВалюте)	
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДенежныеСредстваВПутиВИностраннойВалюте)	
	|	КОНЕЦ КАК СчетДт,
	|	ВЫБОР КОГДА Операция.Валюта = &ВалютаРеглУчета ТОГДА
	|		ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПоступлениеДенежныхСредствИзБанка)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПоступлениеДенежныхСредствИзБанкаВИностраннойВалюте)
	|	КОНЕЦ
	|	КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	Операция.СуммаДокумента КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ДенежныеСредства) КАК ВидСчетаКт,
	|	Операция.БанковскийСчет КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Операция.Валюта КАК ВалютаКт,
	|	Операция.БанковскийСчет.Подразделение КАК ПодразделениеКт,
	|	Операция.БанковскийСчет.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	ВЫБОР КОГДА Операция.Валюта = &ВалютаРеглУчета ТОГДА
	|		ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПоступлениеДенежныхСредствИзБанка)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПоступлениеДенежныхСредствИзБанкаВИностраннойВалюте)
	|	КОНЕЦ
	|	КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	Операция.СуммаДокумента КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""%1"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СписаниеБезналичныхДенежныхСредств КАК Операция
	|	ПО	
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.СуммыДокументовВВалютахУчета КАК Суммы
	|	ПО 
	|		Суммы.Регистратор = Операция.Ссылка 
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Выписка КАК Выписка
	|	ПО 
	|		Выписка.Ссылка = Операция.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		КурсыВалют КАК КурсВалютыУпрУчета
	|	ПО
	|		КурсВалютыУпрУчета.Валюта = &ВалютаУпрУчета
	|		И КурсВалютыУпрУчета.Дата = Операция.ДатаПроведенияБанком
	|
	|ГДЕ
	|	Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СнятиеНаличныхДенежныхСредств)
	|	И Операция.ПроведеноБанком
	|";            

	ТекстСнятиеНаличныхВБанке = СтрШаблон(ТекстСнятиеНаличныхВБанке, 
		НСтр("ru='Снятие наличных ДС';uk='Зняття готівки '",ЯзыкСодержания));

	ТекстыОтражения.Добавить(ТекстСнятиеНаличныхВБанке);
#КонецОбласти
	
#Область ТекстПеречислениеДСНаДругойСчет
	ТекстПеречислениеДСНаДругойСчет = "
	|ВЫБРАТЬ // Перечисление ДС на другой счет - Дт 57 Кт 51
	|
	|	Операция.Ссылка КАК Ссылка,
	|	ВЫБОР КОГДА НАЧАЛОПЕРИОДА(Операция.Дата) = Операция.ДатаПроведенияБанком ТОГДА
	|		Операция.Дата
	|	ИНАЧЕ
	|		КОНЕЦПЕРИОДА(Операция.ДатаПроведенияБанком, ДЕНЬ)
	|	КОНЕЦ КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Суммы.СуммаБезНДСРегл + Суммы.СуммаНДСРегл, Операция.СуммаДокумента) КАК Сумма,
	|	ЕСТЬNULL(Суммы.СуммаБезНДСУпр + Суммы.СуммаНДСУпр, Операция.СуммаДокумента / КурсВалютыУпрУчета.Курс) КАК СуммаУУ,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	Операция.Валюта КАК ВалютаДт,
	|	Операция.БанковскийСчетПолучатель.Подразделение КАК ПодразделениеДт,
	|	Операция.БанковскийСчетПолучатель.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеДт,
	|	ВЫБОР КОГДА Операция.Валюта = &ВалютаРеглУчета ТОГДА
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДенежныеСредстваВПутиВНациональнойВалюте)	
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДенежныеСредстваВПутиВИностраннойВалюте)	
	|	КОНЕЦ
	|	КАК СчетДт,
	|	ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПеречислениеДенежныхСредствНаДругойСчет) КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	Операция.СуммаДокумента КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ДенежныеСредства) КАК ВидСчетаКт,
	|	Операция.БанковскийСчет КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Операция.Валюта КАК ВалютаКт,
	|	Операция.БанковскийСчет.Подразделение КАК ПодразделениеКт,
	|	Операция.БанковскийСчет.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПеречислениеДенежныхСредствНаДругойСчет) КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	Операция.СуммаДокумента КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""%1"" КАК Содержание
	|
	|ИЗ 
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СписаниеБезналичныхДенежныхСредств КАК Операция
	|	ПО	
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютахУчета КАК Суммы
	|	ПО 
	|		Суммы.Регистратор = Операция.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		КурсыВалют КАК КурсВалютыУпрУчета
	|	ПО
	|		КурсВалютыУпрУчета.Валюта = &ВалютаУпрУчета
	|		И КурсВалютыУпрУчета.Дата = Операция.ДатаПроведенияБанком
	|
	|ГДЕ
	|	Операция.ХозяйственнаяОперация = 
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеДенежныхСредствНаДругойСчет)
	|	И Операция.ПроведеноБанком
	|";                       

	ТекстПеречислениеДСНаДругойСчет = СтрШаблон(ТекстПеречислениеДСНаДругойСчет, 
		НСтр("ru='Перечисление ДС на другой счет';uk='Перерахування ГК на інший рахунок'",ЯзыкСодержания));

	ТекстыОтражения.Добавить(ТекстПеречислениеДСНаДругойСчет);
#КонецОбласти

	// Конвертация валюты
	
#Область ТекстКонвертацияВалюты
	ТекстКонвертацияВалюты = "
	|ВЫБРАТЬ //// Конвертация валюты
	|
	|	Операция.Ссылка КАК Ссылка,
	|	ВЫБОР КОГДА НАЧАЛОПЕРИОДА(Операция.Дата) = Операция.ДатаПроведенияБанком ТОГДА
	|		Операция.Дата
	|	ИНАЧЕ
	|		КОНЕЦПЕРИОДА(Операция.ДатаПроведенияБанком, ДЕНЬ)
	|	КОНЕЦ КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Суммы.СуммаБезНДСРегл + Суммы.СуммаНДСРегл, Операция.СуммаДокумента) КАК Сумма,
	|	ЕСТЬNULL(Суммы.СуммаБезНДСУпр + Суммы.СуммаНДСУпр, Операция.СуммаДокумента / КурсВалютыУпрУчета.Курс) КАК СуммаУУ,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	Операция.Валюта КАК ВалютаДт,
	|	Операция.БанковскийСчетПолучатель.Подразделение КАК ПодразделениеДт,
	|	Операция.БанковскийСчетПолучатель.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеДт,
	|
	|	ВЫБОР КОГДА Операция.Валюта = &ВалютаРеглУчета ТОГДА
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПриобретениеИностраннойВалюты)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РеализацияИностраннойВалюты)
	|	КОНЕЦ КАК СчетДт,
	|	Операция.Контрагент КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	Операция.СуммаДокумента КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ДенежныеСредства) КАК ВидСчетаКт,
	|	Операция.БанковскийСчет КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Операция.Валюта КАК ВалютаКт,
	|	Операция.БанковскийСчет.Подразделение КАК ПодразделениеКт,
	|	Операция.БанковскийСчет.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	Операция.СтатьяДвиженияДенежныхСредств КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	Операция.СуммаДокумента КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""%1"" КАК Содержание
	|
	|ИЗ 
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СписаниеБезналичныхДенежныхСредств КАК Операция
	|	ПО	
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютахУчета КАК Суммы
	|	ПО
	|		Суммы.Регистратор = Операция.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		КурсыВалют КАК КурсВалютыУпрУчета
	|	ПО
	|		КурсВалютыУпрУчета.Валюта = &ВалютаУпрУчета
	|		И КурсВалютыУпрУчета.Дата = Операция.ДатаПроведенияБанком
	|
	|ГДЕ 
	|	Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КонвертацияВалюты)
	|	И Операция.ПроведеноБанком
	|";               

	ТекстКонвертацияВалюты = СтрШаблон(ТекстКонвертацияВалюты, 
		НСтр("ru='Конвертация валюты';uk='Конвертація валюти'",ЯзыкСодержания));

	ТекстыОтражения.Добавить(ТекстКонвертацияВалюты);
#КонецОбласти
	
	// Внутренняя передача
	
#Область ТекстВнутренняяПередачаДС
	ТекстВнутренняяПередачаДС = "
	|ВЫБРАТЬ // Внутренняя передача ДС
	|
	|	Операция.Ссылка КАК Ссылка,
	|	ВЫБОР КОГДА НАЧАЛОПЕРИОДА(Операция.Дата) = Операция.ДатаПроведенияБанком ТОГДА
	|		Операция.Дата
	|	ИНАЧЕ
	|		КОНЕЦПЕРИОДА(Операция.ДатаПроведенияБанком, ДЕНЬ)
	|	КОНЕЦ КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Суммы.СуммаБезНДСРегл + Суммы.СуммаНДСРегл, Операция.СуммаДокумента) КАК Сумма,
	|	ЕСТЬNULL(Суммы.СуммаБезНДСУпр + Суммы.СуммаНДСУпр, Операция.СуммаДокумента / КурсВалютыУпрУчета.Курс) КАК СуммаУУ,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	Операция.Валюта КАК ВалютаДт,
	|	Операция.БанковскийСчетПолучатель.Подразделение КАК ПодразделениеДт,
	|	Операция.БанковскийСчетПолучатель.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВнутрихозяйственныеРасчеты) КАК СчетДт,
	|	Операция.БанковскийСчетПолучатель.Владелец КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	Операция.СуммаДокумента КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ДенежныеСредства) КАК ВидСчетаКт,
	|	Операция.БанковскийСчет КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Операция.Валюта КАК ВалютаКт,
	|	Операция.БанковскийСчет.Подразделение КАК ПодразделениеКт,
	|	Операция.БанковскийСчет.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	Операция.СтатьяДвиженияДенежныхСредств КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	Операция.СуммаДокумента КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""%1"" КАК Содержание
	|
	|ИЗ 
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СписаниеБезналичныхДенежныхСредств КАК Операция
	|	ПО	
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютахУчета КАК Суммы
	|	ПО 
	|		Суммы.Регистратор = Операция.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		КурсыВалют КАК КурсВалютыУпрУчета
	|	ПО
	|		КурсВалютыУпрУчета.Валюта = &ВалютаУпрУчета
	|		И КурсВалютыУпрУчета.Дата = Операция.ДатаПроведенияБанком
	|
	|ГДЕ 
	|	Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств)
	|	И Операция.ПроведеноБанком
	|
	|";           

	ТекстВнутренняяПередачаДС = СтрШаблон(ТекстВнутренняяПередачаДС, 
		НСтр("ru='Внутренняя передача ДС';uk='Внутрішня передача ГК'",ЯзыкСодержания));

	ТекстыОтражения.Добавить(ТекстВнутренняяПередачаДС);
#КонецОбласти

// Списание в другую организацию

#Область ТекстОплатаАвансаДрОрганизации // (Дт 681 :: Кт 31)
	ТекстОплатаАвансаДрОрганизации = "
	|ВЫБРАТЬ // Оплата аванса другой организации (Дт 681 :: Кт 31)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	ВЫБОР КОГДА НАЧАЛОПЕРИОДА(Операция.Дата) = Операция.ДатаПроведенияБанком ТОГДА
	|		Операция.Дата
	|	ИНАЧЕ
	|		КОНЕЦПЕРИОДА(Операция.ДатаПроведенияБанком, ДЕНЬ)
	|	КОНЕЦ КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(РасчетыПоДокументам.ПредоплатаРегл, Расчеты.СуммаРегл) КАК Сумма,
	|	ЕСТЬNULL(РасчетыПоДокументам.ПредоплатаУпр, Расчеты.СуммаУпр) КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АвансыВыданные) КАК ВидСчетаДт,
	|	Расчеты.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	Расчеты.Валюта КАК ВалютаДт,
	|	Расчеты.Подразделение КАК ПодразделениеДт,
	|	Расчеты.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Расчеты.Контрагент КАК СубконтоДт1,
	|	Расчеты.Договор КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	ЕСТЬNULL(РасчетыПоДокументам.Предоплата, Расчеты.Сумма) КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ДенежныеСредства) КАК ВидСчетаКт,
	|	Операция.БанковскийСчет КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Операция.Валюта КАК ВалютаКт,
	|	Операция.БанковскийСчет.Подразделение КАК ПодразделениеКт,
	|	Операция.БанковскийСчет.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	Расчеты.СтатьяДвиженияДенежныхСредств КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	ЕСТЬNULL(ДенежныеСредстваКонтрагент.СуммаПредоплатыВВалютеПлатежа, ЕСТЬNULL(РасчетыПоДокументам.Предоплата, Расчеты.Сумма)) КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""%1"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СписаниеБезналичныхДенежныхСредств КАК Операция
	|	ПО	
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВТРасчетыСПоставщиками КАК Расчеты
	|	ПО	
	|		Расчеты.Ссылка = Операция.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РасчетыСПоставщикамиПоДокументам КАК РасчетыПоДокументам
	|	ПО
	|		Расчеты.Ссылка = РасчетыПоДокументам.Ссылка
	|		И Расчеты.Контрагент = РасчетыПоДокументам.Контрагент
	|		И Расчеты.Договор = РасчетыПоДокументам.Договор
	|		И Расчеты.ГруппаФинансовогоУчета = РасчетыПоДокументам.ГруппаФинансовогоУчета
	|		И Расчеты.Подразделение = РасчетыПоДокументам.Подразделение
	|		И Расчеты.НаправлениеДеятельности = РасчетыПоДокументам.НаправлениеДеятельности
	|		И Расчеты.СтатьяДвиженияДенежныхСредств = РасчетыПоДокументам.СтатьяДвиженияДенежныхСредств
	|		И Расчеты.Валюта = РасчетыПоДокументам.Валюта
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ДенежныеСредстваКонтрагент КАК ДенежныеСредстваКонтрагент
	|	ПО
	|		ДенежныеСредстваКонтрагент.Ссылка = Расчеты.Ссылка
	|		И ДенежныеСредстваКонтрагент.Контрагент = Расчеты.Контрагент
	|		И ДенежныеСредстваКонтрагент.Договор = Расчеты.Договор
	|		И ДенежныеСредстваКонтрагент.ГруппаФинансовогоУчета = Расчеты.ГруппаФинансовогоУчета
	|		И ДенежныеСредстваКонтрагент.Подразделение = Расчеты.Подразделение
	|		И ДенежныеСредстваКонтрагент.НаправлениеДеятельности = Расчеты.НаправлениеДеятельности
	|		И ДенежныеСредстваКонтрагент.СтатьяДвиженияДенежныхСредств = Расчеты.СтатьяДвиженияДенежныхСредств
	|		И ДенежныеСредстваКонтрагент.ВалютаВзаиморасчетов = Расчеты.Валюта
	|		И ДенежныеСредстваКонтрагент.ВалютаПлатежа <> Расчеты.Валюта
	|	
	|ГДЕ 
	|	Операция.ХозяйственнаяОперация = 
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию)
	|	И ((ЕСТЬNULL(РасчетыПоДокументам.Предоплата, Расчеты.Сумма) <> 0) или(ЕСТЬNULL(РасчетыПоДокументам.ПредоплатаРегл, Расчеты.СуммаРегл) <> 0))
	|	И Операция.ПроведеноБанком
	|";                          

	ТекстОплатаАвансаДрОрганизации = СтрШаблон(ТекстОплатаАвансаДрОрганизации, 
		НСтр("ru='Оплата аванса другой организации';uk='Оплата авансу іншій організації'",ЯзыкСодержания));

	ТекстыОтражения.Добавить(ТекстОплатаАвансаДрОрганизации);
#КонецОбласти

#Область ТекстОплатаДолгаДрОрганизации // (Дт 63 :: Кт 31)
	ТекстОплатаДолгаДрОрганизации = "
	|ВЫБРАТЬ // Оплата долга другой организации (Дт 63 :: Кт 31)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	ВЫБОР КОГДА НАЧАЛОПЕРИОДА(Операция.Дата) = Операция.ДатаПроведенияБанком ТОГДА
	|		Операция.Дата
	|	ИНАЧЕ
	|		КОНЕЦПЕРИОДА(Операция.ДатаПроведенияБанком, ДЕНЬ)
	|	КОНЕЦ КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(РасчетыПоДокументам.ДолгРегл, Расчеты.СуммаРегл) КАК Сумма,
	|	ЕСТЬNULL(РасчетыПоДокументам.ДолгУпр, Расчеты.СуммаУпр) КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСПоставщиками) КАК ВидСчетаДт,
	|	Расчеты.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	Расчеты.Валюта КАК ВалютаДт,
	|	Расчеты.Подразделение КАК ПодразделениеДт,
	|	Расчеты.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Расчеты.Контрагент КАК СубконтоДт1,
	|	Расчеты.Договор КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	ЕСТЬNULL(РасчетыПоДокументам.Долг, Расчеты.Сумма) КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ДенежныеСредства) КАК ВидСчетаКт,
	|	Операция.БанковскийСчет КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Операция.Валюта КАК ВалютаКт,
	|	Операция.БанковскийСчет.Подразделение КАК ПодразделениеКт,
	|	Операция.БанковскийСчет.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	Расчеты.СтатьяДвиженияДенежныхСредств КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	ЕСТЬNULL(ДенежныеСредстваКонтрагент.СуммаПостоплатыВВалютеПлатежа, ЕСТЬNULL(РасчетыПоДокументам.Долг, Расчеты.Сумма)) КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""%1"" КАК Содержание
	|
	|ИЗ 
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СписаниеБезналичныхДенежныхСредств КАК Операция
	|	ПО	
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВТРасчетыСПоставщиками КАК Расчеты
	|	ПО	
	|		Расчеты.Ссылка = Операция.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РасчетыСПоставщикамиПоДокументам КАК РасчетыПоДокументам
	|	ПО
	|		Расчеты.Ссылка = РасчетыПоДокументам.Ссылка
	|		И Расчеты.Контрагент = РасчетыПоДокументам.Контрагент
	|		И Расчеты.Договор = РасчетыПоДокументам.Договор
	|		И Расчеты.ГруппаФинансовогоУчета = РасчетыПоДокументам.ГруппаФинансовогоУчета
	|		И Расчеты.Подразделение = РасчетыПоДокументам.Подразделение
	|		И Расчеты.НаправлениеДеятельности = РасчетыПоДокументам.НаправлениеДеятельности
	|		И Расчеты.СтатьяДвиженияДенежныхСредств = РасчетыПоДокументам.СтатьяДвиженияДенежныхСредств
	|		И Расчеты.Валюта = РасчетыПоДокументам.Валюта
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ДенежныеСредстваКонтрагент КАК ДенежныеСредстваКонтрагент
	|	ПО
	|		ДенежныеСредстваКонтрагент.Ссылка = Расчеты.Ссылка
	|		И ДенежныеСредстваКонтрагент.Контрагент = Расчеты.Контрагент
	|		И ДенежныеСредстваКонтрагент.Договор = Расчеты.Договор
	|		И ДенежныеСредстваКонтрагент.ГруппаФинансовогоУчета = Расчеты.ГруппаФинансовогоУчета
	|		И ДенежныеСредстваКонтрагент.Подразделение = Расчеты.Подразделение
	|		И ДенежныеСредстваКонтрагент.НаправлениеДеятельности = Расчеты.НаправлениеДеятельности
	|		И ДенежныеСредстваКонтрагент.СтатьяДвиженияДенежныхСредств = Расчеты.СтатьяДвиженияДенежныхСредств
	|		И ДенежныеСредстваКонтрагент.ВалютаВзаиморасчетов = Расчеты.Валюта
	|		И ДенежныеСредстваКонтрагент.ВалютаПлатежа <> Расчеты.Валюта
	|
	|ГДЕ 
	|	Операция.ХозяйственнаяОперация = 
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию)
	|	И ЕСТЬNULL(РасчетыПоДокументам.Долг, 0) <> 0
	|	И Операция.ПроведеноБанком
	|";                           

	ТекстОплатаДолгаДрОрганизации = СтрШаблон(ТекстОплатаДолгаДрОрганизации, 
		НСтр("ru='Оплата долга другой организации';uk='Оплата боргу іншої організації'",ЯзыкСодержания));

	ТекстыОтражения.Добавить(ТекстОплатаДолгаДрОрганизации);
#КонецОбласти

	// Налоги и сборы

#Область ТекстПеречислениеНалогов
	ТекстПеречислениеНалогов = "
	|ВЫБРАТЬ //// Перечисление налогов
	|
	|	Операция.Ссылка КАК Ссылка,
	|	ВЫБОР КОГДА НАЧАЛОПЕРИОДА(Операция.Дата) = Операция.ДатаПроведенияБанком ТОГДА
	|		Операция.Дата
	|	ИНАЧЕ
	|		КОНЕЦПЕРИОДА(Операция.ДатаПроведенияБанком, ДЕНЬ)
	|	КОНЕЦ КАК Период,
	|	Операция.Организация КАК Организация,
	|	Строки.НомерСтроки КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Суммы.СуммаБезНДСРегл + Суммы.СуммаНДСРегл, Строки.Сумма) КАК Сумма,
	|	ЕСТЬNULL(Суммы.СуммаБезНДСУпр + Суммы.СуммаНДСУпр, Строки.Сумма / КурсВалютыУпрУчета.Курс) КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеАктивыПассивы) КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	Операция.Валюта КАК ВалютаДт,
	|	Операция.БанковскийСчет.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеДт,
	|
	|	Строки.СчетУчета КАК СчетДт,
	|	Строки.Субконто1 КАК СубконтоДт1,
	|	Строки.Субконто2 КАК СубконтоДт2,
	|	Строки.Субконто3 КАК СубконтоДт3,

	|	
	|	Строки.Сумма КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ДенежныеСредства) КАК ВидСчетаКт,
	|	Операция.БанковскийСчет КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Операция.Валюта КАК ВалютаКт,
	|	Операция.БанковскийСчет.Подразделение КАК ПодразделениеКт,
	|	Операция.БанковскийСчет.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	Строки.СтатьяДвиженияДенежныхСредств КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	Строки.Сумма КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""%1"" КАК Содержание
	|
	|ИЗ 
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СписаниеБезналичныхДенежныхСредств КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СписаниеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.СуммыДокументовВВалютахУчета КАК Суммы
	|	ПО
	|		Суммы.Регистратор = Строки.Ссылка 
	|		И Суммы.ИдентификаторСтроки = Строки.ИдентификаторСтроки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		КурсыВалют КАК КурсВалютыУпрУчета
	|	ПО
	|		КурсВалютыУпрУчета.Валюта = &ВалютаУпрУчета
	|		И КурсВалютыУпрУчета.Дата = Операция.ДатаПроведенияБанком
	|
	|ГДЕ 
	|	Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеВБюджет)
	|	И Операция.ПроведеноБанком
	|";                       

	ТекстПеречислениеНалогов = СтрШаблон(ТекстПеречислениеНалогов, 
		НСтр("ru='Перечисление налогов';uk='Перерахування податків'",ЯзыкСодержания));

	ТекстыОтражения.Добавить(ТекстПеречислениеНалогов);
#КонецОбласти


	// Кредиты, депозиты, займы контрагентам

#Область РасчетыПоКредитамЗаймам // (Дт 50, 60, 61 :: Кт 31)
	ТекстРасчетыПоКредитамЗаймам = "
	|ВЫБРАТЬ // Возврат кредита, займа / Оплата процентов по кредиту, займу / Оплата комиссии по кредиту, займу (Дт 50, 60, 61 :: Кт 31)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	ВЫБОР КОГДА НАЧАЛОПЕРИОДА(Операция.Дата) = Операция.ДатаПроведенияБанком ТОГДА
	|		Операция.Дата
	|	ИНАЧЕ
	|		КОНЕЦПЕРИОДА(Операция.ДатаПроведенияБанком, ДЕНЬ)
	|	КОНЕЦ КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	РасчетыПоКредитам.СуммаРегл КАК Сумма,
	|	РасчетыПоКредитам.СуммаУпр КАК СуммаУУ,
	|
	|	ВЫБОР
	|		КОГДА РасчетыПоКредитам.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.ОсновнойДолг)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКредиторамиОсновнойДолг)
	|		КОГДА РасчетыПоКредитам.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.Проценты)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКредиторамиПроценты)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКредиторамиКомиссия)
	|	КОНЕЦ КАК ВидСчетаДт,
	|	РасчетыПоКредитам.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	РасчетыПоКредитам.Валюта КАК ВалютаДт,
	|	РасчетыПоКредитам.Подразделение КАК ПодразделениеДт,
	|	РасчетыПоКредитам.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетДт,
	|	Операция.Контрагент КАК СубконтоДт1,
	|	РасчетыПоКредитам.Договор КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	РасчетыПоКредитам.Сумма КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ДенежныеСредства) КАК ВидСчетаКт,
	|	Операция.БанковскийСчет КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Операция.Валюта КАК ВалютаКт,
	|	Операция.БанковскийСчет.Подразделение КАК ПодразделениеКт,
	|	Операция.БанковскийСчет.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	Строки.СтатьяДвиженияДенежныхСредств КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	Строки.Сумма КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	ВЫБОР
	|		КОГДА РасчетыПоКредитам.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.ОсновнойДолг)
	|		ТОГДА ""%1""
	|		КОГДА РасчетыПоКредитам.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.Проценты)
	|		ТОГДА ""%2""
	|		ИНАЧЕ ""%3""
	|	КОНЕЦ КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СписаниеБезналичныхДенежныхСредств КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РасчетыПоКредитамДепозитамЗаймам КАК РасчетыПоКредитам
	|	ПО
	|		Операция.Ссылка = РасчетыПоКредитам.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РасшифровкаПлатежаПоКредитамДепозитамЗаймам КАК Строки
	|	ПО
	|		РасчетыПоКредитам.Ссылка = Строки.Ссылка
	|		И РасчетыПоКредитам.Договор = Строки.ДоговорКредитаДепозита
	|		И РасчетыПоКредитам.СтатьяДвиженияДенежныхСредств = Строки.СтатьяДвиженияДенежныхСредств
	|		И РасчетыПоКредитам.ТипСуммы = Строки.ТипСуммыКредитаДепозита
	|	
	|ГДЕ
	|	Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоКредитам)
	|	И Операция.ПроведеноБанком
	|";        

	ТекстРасчетыПоКредитамЗаймам = СтрШаблон(ТекстРасчетыПоКредитамЗаймам, 
		НСтр("ru='Возврат кредита, займа';uk='Повернення кредиту, позики'",ЯзыкСодержания),
		НСтр("ru='Оплата процентов по кредиту, займу';uk='Оплата відсотків за кредитом, позикою'",ЯзыкСодержания),
		НСтр("ru='Оплата комиссии по кредиту, займу';uk='Оплата комісії за кредитом, позикою'",ЯзыкСодержания));

	ТекстыОтражения.Добавить(ТекстРасчетыПоКредитамЗаймам);
#КонецОбласти

#Область ТекстПереводНаДепозит           // (Дт 313, 314 :: Кт 31)
	ТекстПереводНаДепозит = "
	|ВЫБРАТЬ //// Перевод на депозитный счет  (Дт 313, 314 :: Кт 31)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	ВЫБОР КОГДА НАЧАЛОПЕРИОДА(Операция.Дата) = Операция.ДатаПроведенияБанком ТОГДА
	|		Операция.Дата
	|	ИНАЧЕ
	|		КОНЕЦПЕРИОДА(Операция.ДатаПроведенияБанком, ДЕНЬ)
	|	КОНЕЦ КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	РасчетыПоДепозитам.СуммаРегл КАК Сумма,
	|	РасчетыПоДепозитам.СуммаУпр КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСДебиторамиОсновнойДолг) КАК ВидСчетаДт,
	|	РасчетыПоДепозитам.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	РасчетыПоДепозитам.Валюта КАК ВалютаДт,
	|	РасчетыПоДепозитам.Подразделение КАК ПодразделениеДт,
	|	РасчетыПоДепозитам.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетДт,
	|	Операция.БанковскийСчетКонтрагента КАК СубконтоДт1,
	|	РасчетыПоДепозитам.СтатьяДвиженияДенежныхСредств КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	РасчетыПоДепозитам.Сумма КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ДенежныеСредства) КАК ВидСчетаКт,
	|	Операция.БанковскийСчет КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Операция.Валюта КАК ВалютаКт,
	|	Операция.БанковскийСчет.Подразделение КАК ПодразделениеКт,
	|	Операция.БанковскийСчет.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	Строки.СтатьяДвиженияДенежныхСредств КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	Строки.Сумма КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""%1"" КАК Содержание
	|
	|ИЗ 
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СписаниеБезналичныхДенежныхСредств КАК Операция
	|	ПО	
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РасчетыПоКредитамДепозитамЗаймам КАК РасчетыПоДепозитам
	|	ПО 
	|		Операция.Ссылка = РасчетыПоДепозитам.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РасшифровкаПлатежаПоКредитамДепозитамЗаймам КАК Строки
	|	ПО
	|		РасчетыПоДепозитам.Ссылка = Строки.Ссылка
	|		И РасчетыПоДепозитам.Договор = Строки.ДоговорКредитаДепозита
	|		И РасчетыПоДепозитам.СтатьяДвиженияДенежныхСредств = Строки.СтатьяДвиженияДенежныхСредств
	|	
	|ГДЕ Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеНаДепозиты)
	|	И Операция.ПроведеноБанком
	|";                     

	ТекстПереводНаДепозит = СтрШаблон(ТекстПереводНаДепозит, 
		НСтр("ru='Перевод на депозитный счет';uk='Переведення на депозитний рахунок'",ЯзыкСодержания));

	ТекстыОтражения.Добавить(ТекстПереводНаДепозит);
#КонецОбласти

#Область ВыдачаЗайма                     // (Дт 3771 :: Кт 31)
	ТекстВыдачаЗайма = "
	|ВЫБРАТЬ // Перечисление выданного займа (Дт 3771 :: Кт 31)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	ВЫБОР КОГДА НАЧАЛОПЕРИОДА(Операция.Дата) = Операция.ДатаПроведенияБанком ТОГДА
	|		Операция.Дата
	|	ИНАЧЕ
	|		КОНЕЦПЕРИОДА(Операция.ДатаПроведенияБанком, ДЕНЬ)
	|	КОНЕЦ КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	РасчетыПоЗаймам.СуммаРегл КАК Сумма,
	|	РасчетыПоЗаймам.СуммаУпр КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСДебиторамиОсновнойДолг) КАК ВидСчетаДт,
	|	РасчетыПоЗаймам.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	РасчетыПоЗаймам.Валюта КАК ВалютаДт,
	|	РасчетыПоЗаймам.Подразделение КАК ПодразделениеДт,
	|	РасчетыПоЗаймам.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетДт,
	|	Операция.Контрагент КАК СубконтоДт1,
	|	РасчетыПоЗаймам.Договор КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	РасчетыПоЗаймам.Сумма КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ДенежныеСредства) КАК ВидСчетаКт,
	|	Операция.БанковскийСчет КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Операция.Валюта КАК ВалютаКт,
	|	Операция.БанковскийСчет.Подразделение КАК ПодразделениеКт,
	|	Операция.БанковскийСчет.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	Строки.СтатьяДвиженияДенежныхСредств КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	Строки.Сумма КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""%1"" КАК Содержание
	|
	|ИЗ 
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СписаниеБезналичныхДенежныхСредств КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РасчетыПоКредитамДепозитамЗаймам КАК РасчетыПоЗаймам
	|	ПО 
	|		Операция.Ссылка = РасчетыПоЗаймам.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РасшифровкаПлатежаПоКредитамДепозитамЗаймам КАК Строки
	|	ПО
	|		РасчетыПоЗаймам.Ссылка = Строки.Ссылка
	|		И РасчетыПоЗаймам.Договор = Строки.ДоговорКредитаДепозита
	|		И РасчетыПоЗаймам.СтатьяДвиженияДенежныхСредств = Строки.СтатьяДвиженияДенежныхСредств
	|
	|ГДЕ 
	|	Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймов)
	|	И Операция.ПроведеноБанком
	|";                         

	ТекстВыдачаЗайма = СтрШаблон(ТекстВыдачаЗайма, 
		НСтр("ru='Перечисление выданного займа';uk='Перерахування виданої позики'",ЯзыкСодержания));

	ТекстыОтражения.Добавить(ТекстВыдачаЗайма);
#КонецОбласти

	// Займы сотрудникам

#Область ВыдачаЗаймаСотруднику           // (Дт 3773 :: Кт 31)
	ТекстВыдачаЗаймаСотруднику = "
	|ВЫБРАТЬ // Перечисление займа сотруднику (Дт 3773 :: Кт 31)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	КОНЕЦПЕРИОДА(Операция.ДатаПроведенияБанком, ДЕНЬ) КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	Суммы.СуммаБезНДСРегл + Суммы.СуммаНДСРегл КАК Сумма,
	|	Суммы.СуммаБезНДСУпр + Суммы.СуммаНДСУпр КАК СуммаУУ,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	Операция.Валюта КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСРабочимиИСлужащимиПоДругимОперациям) КАК СчетДт,
	|	Операция.ПодотчетноеЛицо КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	Суммы.СуммаБезНДС + Суммы.СуммаНДС КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ДенежныеСредства) КАК ВидСчетаКт,
	|	Операция.БанковскийСчет КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Операция.Валюта КАК ВалютаКт,
	|	Операция.БанковскийСчет.Подразделение КАК ПодразделениеКт,
	|	Операция.БанковскийСчет.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	ЕСТЬNULL(Строки.СтатьяДвиженияДенежныхСредств, Операция.СтатьяДвиженияДенежныхСредств) КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	Суммы.СуммаБезНДС + Суммы.СуммаНДС КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""%1"" КАК Содержание
	|
	|ИЗ 
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СписаниеБезналичныхДенежныхСредств КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		Документ.СписаниеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК Строки
	|	ПО 
	|		Операция.Ссылка = Строки.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютахУчета КАК Суммы
	|	ПО
	|		Суммы.Регистратор = Операция.Ссылка
	|		И Суммы.ИдентификаторСтроки = ЕСТЬNULL(Строки.ИдентификаторСтроки, """")
	|
	|ГДЕ 
	|	Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймаСотруднику)
	|	И Операция.ПроведеноБанком
	|";                 

	ТекстВыдачаЗаймаСотруднику = СтрШаблон(ТекстВыдачаЗаймаСотруднику, 
		НСтр("ru='Выдача займа сотруднику';uk='Видача позики співробітнику'",ЯзыкСодержания));

	ТекстыОтражения.Добавить(ТекстВыдачаЗаймаСотруднику);
#КонецОбласти
	
	// Залог за тару
	
#Область ТекстВозвратКлиентуЗалогаЗаТару
	ТекстВозвратКлиентуЗалогаЗаТару = "
	|ВЫБРАТЬ // Возврат клиенту залога за тару
	|
	|	Операция.Ссылка КАК Ссылка,
	|	ВЫБОР КОГДА НАЧАЛОПЕРИОДА(Операция.Дата) = Операция.ДатаПроведенияБанком ТОГДА
	|		Операция.Дата
	|	ИНАЧЕ
	|		КОНЕЦПЕРИОДА(Операция.ДатаПроведенияБанком, ДЕНЬ)
	|	КОНЕЦ КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	РасчетыПоДокументам.ЗалогЗаТаруРегл КАК Сумма,
	|	РасчетыПоДокументам.ЗалогЗаТаруРегл / КурсВалютыУпрУчета.Курс КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКлиентамиТара) КАК ВидСчетаДт,
	|	Расчеты.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	Расчеты.Валюта КАК ВалютаДт,
	|	Расчеты.Подразделение КАК ПодразделениеДт,
	|	Расчеты.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Расчеты.Контрагент КАК СубконтоДт1,
	|	Расчеты.Договор КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	РасчетыПоДокументам.ЗалогЗаТару КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ДенежныеСредства) КАК ВидСчетаКт,
	|	Операция.БанковскийСчет КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Операция.Валюта КАК ВалютаКт,
	|	Операция.БанковскийСчет.Подразделение КАК ПодразделениеКт,
	|	Операция.БанковскийСчет.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	Расчеты.СтатьяДвиженияДенежныхСредств КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	РасчетыПоДокументам.ЗалогЗаТару КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""%1"" КАК Содержание
	|
	|ИЗ 
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СписаниеБезналичныхДенежныхСредств КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РасчетыСКлиентами КАК Расчеты
	|	ПО
	|		Расчеты.Ссылка = Операция.Ссылка
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РасчетыСКлиентамиПоДокументам КАК РасчетыПоДокументам
	|	ПО
	|		Расчеты.Ссылка = Операция.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		КурсыВалют КАК КурсВалютыУпрУчета
	|	ПО
	|		КурсВалютыУпрУчета.Валюта = &ВалютаУпрУчета
	|		И КурсВалютыУпрУчета.Дата = Операция.ДатаПроведенияБанком
	|
	|ГДЕ 
	|	Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту)
	|	И РасчетыПоДокументам.ЗалогЗаТаруРегл  <> 0
	|	И Операция.ПроведеноБанком
	|";                       

	ТекстВозвратКлиентуЗалогаЗаТару = СтрШаблон(ТекстВозвратКлиентуЗалогаЗаТару, 
		НСтр("ru='Возврат клиенту залога за тару';uk='Повернення клієнту застави за тару'",ЯзыкСодержания));

	ТекстыОтражения.Добавить(ТекстВозвратКлиентуЗалогаЗаТару);
#КонецОбласти
	
	// Заработная плата и подотчетники
	
#Область ТекстВыдачаПодотчетнику // (Дт 372 :: Кт 31)
	ТекстВыдачаПодотчетнику = "
	|ВЫБРАТЬ // Выдача подотчетнику  (Дт 372 :: Кт 31)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	ВЫБОР КОГДА НАЧАЛОПЕРИОДА(Операция.Дата) = Операция.ДатаПроведенияБанком ТОГДА
	|		Операция.Дата
	|	ИНАЧЕ
	|		КОНЕЦПЕРИОДА(Операция.ДатаПроведенияБанком, ДЕНЬ)
	|	КОНЕЦ КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Суммы.СуммаБезНДСРегл + Суммы.СуммаНДСРегл, Строки.Сумма) КАК Сумма,
	|	ЕСТЬNULL(Суммы.СуммаБезНДСУпр + Суммы.СуммаНДСУпр, Строки.Сумма / КурсВалютыУпрУчета.Курс) КАК СуммаУУ,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	Операция.Валюта КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеДт,
	|
	|	ВЫБОР КОГДА Операция.Валюта = &ВалютаРеглУчета ТОГДА
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПодотчетнымиЛицамиВНациональнойВалюте)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПодотчетнымиЛицамиВИностраннойВалюте)
	|	КОНЕЦ КАК СчетДт,
	|	Операция.ПодотчетноеЛицо КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	Строки.Сумма КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ДенежныеСредства) КАК ВидСчетаКт,
	|	Операция.БанковскийСчет КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Операция.БанковскийСчет.ВалютаДенежныхСредств КАК ВалютаКт,
	|	Операция.БанковскийСчет.Подразделение КАК ПодразделениеКт,
	|	Операция.БанковскийСчет.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	Строки.СтатьяДвиженияДенежныхСредств КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	Строки.Сумма КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""%1"" КАК Содержание
	|
	|ИЗ 
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СписаниеБезналичныхДенежныхСредств КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Документ.СписаниеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК Строки
	|	ПО
	|		Операция.Ссылка = Строки.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.СуммыДокументовВВалютахУчета КАК Суммы
	|	ПО 
	|		Строки.Ссылка = Суммы.Регистратор
	|		И Строки.ИдентификаторСтроки = Суммы.ИдентификаторСтроки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		КурсыВалют КАК КурсВалютыУпрУчета
	|	ПО
	|		КурсВалютыУпрУчета.Валюта = &ВалютаУпрУчета
	|		И КурсВалютыУпрУчета.Дата = Операция.ДатаПроведенияБанком
	|
	|ГДЕ 
	|	Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику)
	|	И Операция.ПроведеноБанком
	|";              

	ТекстВыдачаПодотчетнику = СтрШаблон(ТекстВыдачаПодотчетнику, 
		НСтр("ru='Выдача подотчетнику';uk='Видача підзвітній особі'",ЯзыкСодержания));

	ТекстыОтражения.Добавить(ТекстВыдачаПодотчетнику);
#КонецОбласти
	
#Область ТекстВыплатаЗарплатыНаЛицевыеСчета // (Дт 661 :: Кт 31)
	ТекстВыплатаЗарплатыНаЛицевыеСчета = "
	|ВЫБРАТЬ // Выплата зарплаты на лицевые счета  (Дт 661 :: Кт 31)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	ВЫБОР КОГДА НАЧАЛОПЕРИОДА(Операция.Дата) = Операция.ДатаПроведенияБанком ТОГДА
	|		Операция.Дата
	|	ИНАЧЕ
	|		КОНЕЦПЕРИОДА(Операция.ДатаПроведенияБанком, ДЕНЬ)
	|	КОНЕЦ КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
    |	ЕСТЬNULL(СтрокиВедомостиНаВыплату.КВыплате, ЕСТЬNULL(Ведомости.Сумма, Операция.СуммаДокумента)) КАК Сумма,
	|	ЕСТЬNULL(СтрокиВедомостиНаВыплату.КВыплате / КурсВалютыУпрУчета.Курс , ЕСТЬNULL(Строки.Сумма, Операция.СуммаДокумента) / КурсВалютыУпрУчета.Курс) КАК СуммаУУ,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	Операция.Валюта КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеДт,
	|
	|	ЕСТЬNULL(ВыплатыСотрудникам.СчетУчета, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыПоЗаработнойПлате)) КАК СчетДт,
	|	ВЫБОР КОГДА Операция.ПроводкиПоРаботникам 
	|		ТОГДА Операция.ПодотчетноеЛицо
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|	КОНЕЦ КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	ЕСТЬNULL(Строки.Сумма, Операция.СуммаДокумента) КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ДенежныеСредства) КАК ВидСчетаКт,
	|	Операция.БанковскийСчет КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Операция.Валюта КАК ВалютаКт,
	|	Операция.БанковскийСчет.Подразделение КАК ПодразделениеКт,
	|	Операция.БанковскийСчет.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	ЕСТЬNULL(Строки.СтатьяДвиженияДенежныхСредств, Операция.СтатьяДвиженияДенежныхСредств) КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	ЕСТЬNULL(Строки.Сумма, Операция.СуммаДокумента) КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""%1"" КАК Содержание
	|
	|ИЗ 
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СписаниеБезналичныхДенежныхСредств КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.СписаниеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК Строки
	|	ПО
	|		Операция.Ссылка = Строки.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВыплатыСотрудникам КАК ВыплатыСотрудникам
	|	ПО
	|		Операция.Ссылка = ВыплатыСотрудникам.Ссылка
	|		И Строки.Ведомость = ВыплатыСотрудникам.Ведомость
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютахУчета КАК Суммы
	|	ПО
	|		Строки.Ссылка = Суммы.Регистратор
	|		И Строки.ИдентификаторСтроки = Суммы.ИдентификаторСтроки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		КурсыВалют КАК КурсВалютыУпрУчета
	|	ПО
	|		КурсВалютыУпрУчета.Валюта = &ВалютаУпрУчета
	|		И КурсВалютыУпрУчета.Дата = Операция.ДатаПроведенияБанком
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.СписаниеБезналичныхДенежныхСредств.УдалитьВедомостиНаВыплатуЗарплаты КАК Ведомости
	|	ПО 
	|		Ведомости.Ссылка = Операция.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		Документ.ВедомостьНаВыплатуЗарплатыПеречислением.Зарплата КАК СтрокиВедомостиНаВыплату
	|	ПО 
	|		СтрокиВедомостиНаВыплату.Ссылка = Ведомости.Ведомость
	|		И СтрокиВедомостиНаВыплату.Сотрудник.ФизическоеЛицо = Операция.ПодотчетноеЛицо
	|
	|ГДЕ
	|	Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаЗарплатыНаЛицевыеСчета)
	|	И Операция.ПроведеноБанком
	|";                               

	ТекстВыплатаЗарплатыНаЛицевыеСчета = СтрШаблон(ТекстВыплатаЗарплатыНаЛицевыеСчета, 
		НСтр("ru='Выплата зарплаты на лицевые счета';uk='Виплата зарплати на особові рахунки'",ЯзыкСодержания));

	ТекстыОтражения.Добавить(ТекстВыплатаЗарплатыНаЛицевыеСчета);
#КонецОбласти
	
#Область ТекстВыплатаЗарплатыПоЗарплатномуПроекту // (Дт 661 :: Кт 31)
	ТекстВыплатаЗарплатыПоЗарплатномуПроекту = "
	|ВЫБРАТЬ // Выплата зарплаты по зарплатному проекту  (Дт 661 :: Кт 31)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	ВЫБОР КОГДА НАЧАЛОПЕРИОДА(Операция.Дата) = Операция.ДатаПроведенияБанком ТОГДА
	|		Операция.Дата
	|	ИНАЧЕ
	|		КОНЕЦПЕРИОДА(Операция.ДатаПроведенияБанком, ДЕНЬ)
	|	КОНЕЦ КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	СУММА(ЕСТЬNULL(ВыплатыСотрудникам.КВыплате * КурсВалютыДокумента.Курс, Суммы.СуммаБезНДСРегл)) КАК Сумма,
	|	СУММА(ЕСТЬNULL(ВыплатыСотрудникам.КВыплате * КурсВалютыДокумента.Курс / КурсВалютыУпрУчета.Курс, Суммы.СуммаБезНДСУпр)) КАК СуммаУУ,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	Операция.Валюта КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеДт,
	|
	|	ЕСТЬNULL(ВыплатыСотрудникам.СчетУчета, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыПоЗаработнойПлате)) КАК СчетДт,
	|	ВЫБОР КОГДА Операция.ПроводкиПоРаботникам
	|		ТОГДА ВыплатыСотрудникам.ФизическоеЛицо
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|	КОНЕЦ КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	СУММА(ЕСТЬNULL(ВыплатыСотрудникам.КВыплате, Суммы.СуммаБезНДС)) КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ДенежныеСредства) КАК ВидСчетаКт,
	|	Операция.БанковскийСчет КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Операция.Валюта КАК ВалютаКт,
	|	Операция.БанковскийСчет.Подразделение КАК ПодразделениеКт,
	|	Операция.БанковскийСчет.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	ЕСТЬNULL(Строки.СтатьяДвиженияДенежныхСредств, Операция.СтатьяДвиженияДенежныхСредств) КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	СУММА(ЕСТЬNULL(ВыплатыСотрудникам.КВыплате, Суммы.СуммаБезНДС)) КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""%1"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СписаниеБезналичныхДенежныхСредств КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.СписаниеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК Строки
	|	ПО
	|		Операция.Ссылка = Строки.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВыплатыСотрудникам КАК ВыплатыСотрудникам
	|	ПО
	|		Операция.Ссылка = ВыплатыСотрудникам.Ссылка
	|		И Строки.Ведомость = ВыплатыСотрудникам.Ведомость
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютахУчета КАК Суммы
	|	ПО
	|		Операция.Ссылка = Суммы.Регистратор
	|		И ЕСТЬNULL(Строки.ИдентификаторСтроки, """") = Суммы.ИдентификаторСтроки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		КурсыВалют КАК КурсВалютыУпрУчета
	|	ПО
	|		КурсВалютыУпрУчета.Валюта = &ВалютаУпрУчета
	|		И КурсВалютыУпрУчета.Дата = Операция.ДатаПроведенияБанком
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		КурсыВалют КАК КурсВалютыДокумента
	|	ПО
	|		КурсВалютыДокумента.Валюта = Операция.Валюта
	|		И КурсВалютыДокумента.Дата = Операция.ДатаПроведенияБанком
	|
	|ГДЕ
	|	Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаЗарплатыПоЗарплатномуПроекту)
	|	И Операция.ПроведеноБанком
	|
	|СГРУППИРОВАТЬ ПО
	|	Операция.Ссылка,
	|	Строки.СтатьяДвиженияДенежныхСредств,
	|	Операция.Организация,
	|	ВыплатыСотрудникам.ФизическоеЛицо,
	|	ВыплатыСотрудникам.СчетУчета,
	|	Операция.БанковскийСчет,
	|	Операция.ДатаПроведенияБанком,
	|	Операция.Валюта
	|";                            

	ТекстВыплатаЗарплатыПоЗарплатномуПроекту = СтрШаблон(ТекстВыплатаЗарплатыПоЗарплатномуПроекту, 
		НСтр("ru='Выплата зарплаты по зарплатному проекту';uk='Виплата зарплати за зарплатним проєктом'",ЯзыкСодержания));

	ТекстыОтражения.Добавить(ТекстВыплатаЗарплатыПоЗарплатномуПроекту);
#КонецОбласти
	
	// Прочие списания
	
#Область ТекстПрочиеРасходы
	ТекстПрочиеРасходы = "
	|ВЫБРАТЬ // Прочие расходы в валюте регл.учета
	|
	|	Операция.Ссылка КАК Ссылка,
	|	ВЫБОР КОГДА НАЧАЛОПЕРИОДА(Операция.Дата) = Операция.ДатаПроведенияБанком ТОГДА
	|		Операция.Дата
	|	ИНАЧЕ
	|		КОНЕЦПЕРИОДА(Операция.ДатаПроведенияБанком, ДЕНЬ)
	|	КОНЕЦ КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Суммы.СуммаБезНДСРегл + Суммы.СуммаНДСРегл, Строки.Сумма) КАК Сумма,
	|	ЕСТЬNULL(Суммы.СуммаБезНДСУпр + Суммы.СуммаНДСУпр, Строки.Сумма / КурсВалютыУпрУчета.Курс) КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Строки.СтатьяРасходов КАК АналитикаУчетаДт,
	|	Строки.Подразделение КАК МестоУчетаДт,
	|
	|	Операция.Валюта КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|
    |	ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее) КАК СубконтоДт1,
	|	Строки.СтатьяРасходов КАК СубконтоДт2,
	|	Строки.АналитикаРасходов КАК СубконтоДт3,
	|
	|	Строки.Сумма КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ДенежныеСредства) КАК ВидСчетаКт,
	|	Операция.БанковскийСчет КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Операция.Валюта КАК ВалютаКт,
	|	Операция.БанковскийСчет.Подразделение КАК ПодразделениеКт,
	|	Операция.БанковскийСчет.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	Строки.СтатьяДвиженияДенежныхСредств КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	Строки.Сумма КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""%1"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СписаниеБезналичныхДенежныхСредств КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СписаниеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК Строки
	|	ПО 
	|		Строки.Ссылка = Операция.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.СуммыДокументовВВалютахУчета КАК Суммы
	|	ПО 
	|		Строки.Ссылка = Суммы.Регистратор
	|		И Строки.ИдентификаторСтроки = Суммы.ИдентификаторСтроки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиСтроительства
	|	ПО
	|		Строки.СтатьяРасходов = СтатьиСтроительства.Ссылка
	|		И СтатьиСтроительства.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		КурсыВалют КАК КурсВалютыУпрУчета
	|	ПО
	|		КурсВалютыУпрУчета.Валюта = &ВалютаУпрУчета
	|		И КурсВалютыУпрУчета.Дата = Операция.ДатаПроведенияБанком
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		Справочник.ОбъектыСтроительства КАК ОбъектыСтроительства
	|	ПО 
	|		ОбъектыСтроительства.Ссылка = Строки.АналитикаРасходов
	|
	|ГДЕ 
	|	Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств)
	|	И Операция.ПроведеноБанком
	|	И Строки.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиРасходов 
	|";               

	ТекстПрочиеРасходы = СтрШаблон(ТекстПрочиеРасходы, 
		НСтр("ru='Прочие расходы';uk='Інші витрати'",ЯзыкСодержания));

	ТекстыОтражения.Добавить(ТекстПрочиеРасходы);
#КонецОбласти
	
#Область ТекстПрочееСписание
	ТекстПрочееСписание = "
	|ВЫБРАТЬ // Прочее списание
	|
	|	Операция.Ссылка КАК Ссылка,
	|	ВЫБОР КОГДА НАЧАЛОПЕРИОДА(Операция.Дата) = Операция.ДатаПроведенияБанком ТОГДА
	|		Операция.Дата
	|	ИНАЧЕ
	|		КОНЕЦПЕРИОДА(Операция.ДатаПроведенияБанком, ДЕНЬ)
	|	КОНЕЦ КАК Период,
	|	Операция.Организация КАК Организация,
	|	Строки.НомерСтроки КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Суммы.СуммаБезНДСРегл + Суммы.СуммаНДСРегл, Строки.Сумма) КАК Сумма,
	|	ЕСТЬNULL(Суммы.СуммаБезНДСУпр + Суммы.СуммаНДСУпр, Строки.Сумма / КурсВалютыУпрУчета.Курс) КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеАктивыПассивы) КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	Операция.Валюта КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеДт,
	|
	|	Строки.СчетУчета КАК СчетДт,
	|	Строки.Субконто1 КАК СубконтоДт1,
	|	Строки.Субконто2 КАК СубконтоДт2,
	|	Строки.Субконто3 КАК СубконтоДт3,
	|	
	|	Строки.Сумма КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ДенежныеСредства) КАК ВидСчетаКт,
	|	Операция.БанковскийСчет КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Операция.Валюта КАК ВалютаКт,
	|	Операция.БанковскийСчет.Подразделение КАК ПодразделениеКт,
	|	Операция.БанковскийСчет.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	Строки.СтатьяДвиженияДенежныхСредств КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	Операция.СуммаДокумента КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""%1"" КАК Содержание
	|
	|ИЗ 
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СписаниеБезналичныхДенежныхСредств КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|		
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СписаниеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК Строки
	|	ПО 
	|		Строки.Ссылка = Операция.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.СуммыДокументовВВалютахУчета КАК Суммы
	|	ПО 
	|		Строки.Ссылка = Суммы.Регистратор
	|		И Строки.ИдентификаторСтроки = Суммы.ИдентификаторСтроки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		КурсыВалют КАК КурсВалютыУпрУчета
	|	ПО
	|		КурсВалютыУпрУчета.Валюта = &ВалютаУпрУчета
	|		И КурсВалютыУпрУчета.Дата = Операция.ДатаПроведенияБанком
	|
	|ГДЕ 
	|	Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств)
	|	И Операция.ПроведеноБанком
	|	И Строки.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиАктивовПассивов 
	|";                      

	ТекстПрочееСписание = СтрШаблон(ТекстПрочееСписание, 
		НСтр("ru='Прочее списание';uk='Інше списання'",ЯзыкСодержания));

	ТекстыОтражения.Добавить(ТекстПрочееСписание);
#КонецОбласти


	Возврат СтрСоединить(ТекстыОтражения, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
КонецФункции

// Функция возвращает текст запроса дополнительных временных таблиц,
// необходимых для отражения в регламентированном учете
//
// Возвращаемое значение:
//   Строка - сформированный текст запроса.
//
Функция ТекстЗапросаВТОтраженияВРеглУчетеУКР() 
	
	ТекстыЗапроса = Новый Массив;

#Область РасчетыСПоставщикамиПоДокументам

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Расчеты.Регистратор КАК Ссылка,
	|	ОбъектыРасчетов.Контрагент КАК Контрагент,
	|	ОбъектыРасчетов.Договор КАК Договор,
	|	ОбъектыРасчетов.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ОбъектыРасчетов.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	ОбъектыРасчетов.Подразделение КАК Подразделение,
	|	Расчеты.Валюта,
	|	Расчеты.СтатьяДвиженияДенежныхСредств,
	|	СУММА(Расчеты.Предоплата) КАК Предоплата,
	|	СУММА(Расчеты.ПредоплатаУпр) КАК ПредоплатаУпр,
	|	СУММА(Расчеты.ПредоплатаРегл) КАК ПредоплатаРегл,
	|	СУММА(Расчеты.Долг) КАК Долг,
	|	СУММА(Расчеты.ДолгУпр) КАК ДолгУпр,
	|	СУММА(Расчеты.ДолгРегл) КАК ДолгРегл
	|ПОМЕСТИТЬ РасчетыСПоставщикамиПоДокументам
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.РасчетыСПоставщикамиПоДокументам КАК Расчеты
	|	ПО
	|		ДокументыКОтражению.Ссылка = Расчеты.Регистратор
	|		И НЕ &НоваяАрхитектураВзаиморасчетов
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ОбъектыРасчетов КАК ОбъектыРасчетов
	|	ПО (Расчеты.ЗаказПоставщику = ОбъектыРасчетов.Ссылка)
	|	
	|СГРУППИРОВАТЬ ПО
	|	Расчеты.Регистратор,
	|	ОбъектыРасчетов.Контрагент,
	|	ОбъектыРасчетов.Договор,
	|	ОбъектыРасчетов.НаправлениеДеятельности,
	|	ОбъектыРасчетов.ГруппаФинансовогоУчета,
	|	ОбъектыРасчетов.Подразделение,
	|	Расчеты.Валюта,
	|	Расчеты.СтатьяДвиженияДенежныхСредств
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Расчеты.Ссылка КАК Ссылка,
	|	Расчеты.Контрагент КАК Контрагент,
	|	Расчеты.Договор КАК Договор,
	|	Расчеты.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	Расчеты.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	Расчеты.Подразделение КАК Подразделение,
	|	Расчеты.Валюта КАК Валюта,
	|	Расчеты.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	СУММА(Расчеты.Предоплата) КАК Предоплата,
	|	СУММА(Расчеты.ПредоплатаУпр) КАК ПредоплатаУпр,
	|	СУММА(Расчеты.ПредоплатаРегл) КАК ПредоплатаРегл,
	|	СУММА(-Расчеты.Долг) КАК Долг,
	|	СУММА(-Расчеты.ДолгУпр) КАК ДолгУпр,
	|	СУММА(-Расчеты.ДолгРегл) КАК ДолгРегл
	|ИЗ
	|	РасчетыСПоставщикамиНоваяАрхитектура КАК Расчеты
	|
	|СГРУППИРОВАТЬ ПО
	|	Расчеты.Ссылка,
	|	Расчеты.Контрагент,
	|	Расчеты.Договор,
	|	Расчеты.НаправлениеДеятельности,
	|	Расчеты.Валюта,
	|	Расчеты.ГруппаФинансовогоУчета,
	|	Расчеты.Подразделение,
	|	Расчеты.СтатьяДвиженияДенежныхСредств
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	Контрагент,
	|	Договор,
	|	ГруппаФинансовогоУчета,
	|	Подразделение,
	|	НаправлениеДеятельности,
	|	Расчеты.СтатьяДвиженияДенежныхСредств,
	|	Расчеты.Валюта";

	ТекстыЗапроса.Добавить(ТекстЗапроса);

#КонецОбласти

#Область РасчетыСКлиентами

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Расчеты.Регистратор КАК Ссылка,
	|	ОбъектыРасчетов.Контрагент КАК Контрагент,
	|	ОбъектыРасчетов.Договор КАК Договор,
	|	ОбъектыРасчетов.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	Расчеты.ОбъектРасчетов КАК ОбъектРасчетов,
	|	ОбъектыРасчетов.Объект КАК ДокументОбъектаРасчетов,
	|	ОбъектыРасчетов.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	ОбъектыРасчетов.Подразделение КАК Подразделение,
	|	Расчеты.Валюта,
	|	Расчеты.СтатьяДвиженияДенежныхСредств,
	|	СУММА(ВЫБОР КОГДА Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА 1 ИНАЧЕ -1 КОНЕЦ * Расчеты.Сумма) КАК Сумма,
	|	СУММА(ВЫБОР КОГДА Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА 1 ИНАЧЕ -1 КОНЕЦ * Расчеты.СуммаУпр) КАК СуммаУпр,
	|	СУММА(ВЫБОР КОГДА Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА 1 ИНАЧЕ -1 КОНЕЦ * Расчеты.СуммаРегл) КАК СуммаРегл
	|ПОМЕСТИТЬ РасчетыСКлиентами
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.РасчетыСКлиентами КАК Расчеты
	|	ПО
	|		ДокументыКОтражению.Ссылка = Расчеты.Регистратор
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ОбъектыРасчетов КАК ОбъектыРасчетов
	|	ПО (Расчеты.ОбъектРасчетов = ОбъектыРасчетов.Ссылка)
	|
	|ГДЕ
	|	Расчеты.Регистратор <> ОбъектыРасчетов.Объект ИЛИ Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|
	|СГРУППИРОВАТЬ ПО
	|	Расчеты.Регистратор,
	|	ОбъектыРасчетов.Контрагент,
	|	ОбъектыРасчетов.Договор,
	|	ОбъектыРасчетов.НаправлениеДеятельности,
	|	Расчеты.ОбъектРасчетов,
	|	ОбъектыРасчетов.Объект,
	|	ОбъектыРасчетов.ГруппаФинансовогоУчета,
	|	ОбъектыРасчетов.Подразделение,
	|	Расчеты.Валюта,
	|	Расчеты.СтатьяДвиженияДенежныхСредств
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка";

	ТекстыЗапроса.Добавить(ТекстЗапроса);

#КонецОбласти

#Область РасчетыСКлиентамиПоДокументам

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Расчеты.Регистратор КАК Ссылка,
	|	Расчеты.ЗаказКлиента КАК ОбъектРасчетов,
	|	Расчеты.РасчетныйДокумент,
	|	Расчеты.Валюта,
	|	Расчеты.СтатьяДвиженияДенежныхСредств,
	|	СУММА(ВЫБОР КОГДА Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА 1 ИНАЧЕ -1 КОНЕЦ * Расчеты.Предоплата) КАК Предоплата,
	|	СУММА(ВЫБОР КОГДА Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА 1 ИНАЧЕ -1 КОНЕЦ * Расчеты.ПредоплатаУпр) КАК ПредоплатаУпр,
	|	СУММА(ВЫБОР КОГДА Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА 1 ИНАЧЕ -1 КОНЕЦ * Расчеты.ПредоплатаРегл) КАК ПредоплатаРегл,
	|	СУММА(ВЫБОР КОГДА Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА 1 ИНАЧЕ -1 КОНЕЦ * Расчеты.Долг) КАК Долг,
	|	СУММА(ВЫБОР КОГДА Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА 1 ИНАЧЕ -1 КОНЕЦ * Расчеты.ДолгУпр) КАК ДолгУпр,
	|	СУММА(ВЫБОР КОГДА Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА 1 ИНАЧЕ -1 КОНЕЦ * Расчеты.ДолгРегл) КАК ДолгРегл,
	|	СУММА(ВЫБОР КОГДА Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА 1 ИНАЧЕ -1 КОНЕЦ * Расчеты.ЗалогЗаТару) КАК ЗалогЗаТару,
	|	СУММА(ВЫБОР КОГДА Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА 1 ИНАЧЕ -1 КОНЕЦ * Расчеты.ЗалогЗаТаруРегл) КАК ЗалогЗаТаруРегл
	|ПОМЕСТИТЬ РасчетыСКлиентамиПоДокументам
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.РасчетыСКлиентамиПоДокументам КАК Расчеты
	|	ПО
	|		ДокументыКОтражению.Ссылка = Расчеты.Регистратор
	|		И НЕ &НоваяАрхитектураВзаиморасчетов
	|
	|СГРУППИРОВАТЬ ПО
	|	Расчеты.Регистратор,
	|	Расчеты.ЗаказКлиента,
	|	Расчеты.РасчетныйДокумент,
	|	Расчеты.Валюта,
	|	Расчеты.СтатьяДвиженияДенежныхСредств
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Расчеты.Ссылка КАК Ссылка,
	|	Расчеты.ОбъектРасчетов,
	|	Расчеты.РасчетныйДокумент,
	|	Расчеты.Валюта КАК Валюта,
	|	Расчеты.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	СУММА(-Расчеты.Предоплата) КАК Предоплата,
	|	СУММА(-Расчеты.ПредоплатаУпр) КАК ПредоплатаУпр,
	|	СУММА(-Расчеты.ПредоплатаРегл) КАК ПредоплатаРегл,
	|	СУММА(Расчеты.Долг) КАК Долг,
	|	СУММА(Расчеты.ДолгУпр) КАК ДолгУпр,
	|	СУММА(Расчеты.ДолгРегл) КАК ДолгРегл,
	|	СУММА(Расчеты.ЗалогЗаТару) КАК ЗалогЗаТару,
	|	СУММА(Расчеты.ЗалогЗаТаруРегл) КАК ЗалогЗаТаруРегл
	|ИЗ
	|	РасчетыСКлиентамиНоваяАрхитектура КАК Расчеты
	|
	|СГРУППИРОВАТЬ ПО
	|	Расчеты.Ссылка,
	|	Расчеты.ОбъектРасчетов,
	|	Расчеты.РасчетныйДокумент,
	|	Расчеты.Валюта,
	|	Расчеты.СтатьяДвиженияДенежныхСредств
	|	
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка";

	ТекстыЗапроса.Добавить(ТекстЗапроса);

#КонецОбласти

#Область Выписка

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Платежи.ПлатежныйДокумент КАК Ссылка,
	|	МАКСИМУМ(Платежи.Период) КАК Дата
	|ПОМЕСТИТЬ Выписка
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.ДенежныеСредстваБезналичные КАК Платежи
	|	ПО
	|		ДокументыКОтражению.Ссылка = Платежи.ПлатежныйДокумент
	|
	|СГРУППИРОВАТЬ ПО
	|	Платежи.ПлатежныйДокумент
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка";

	ТекстыЗапроса.Добавить(ТекстЗапроса);

#КонецОбласти

#Область РасчетыПоКредитамДепозитамЗаймам

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Расчеты.Регистратор КАК Ссылка,
	|	ДанныеДоговора.Ссылка КАК Договор,
	|	ДанныеДоговора.ВалютаВзаиморасчетов КАК Валюта,
	|	ДанныеДоговора.Контрагент КАК Контрагент,
	|	ДанныеДоговора.ТипДоговора КАК ТипДоговора,
	|	ДанныеДоговора.ТипСрочности КАК ТипСрочности,
	|	ДанныеДоговора.Подразделение КАК Подразделение,
	|	ДанныеДоговора.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	ДанныеДоговора.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	Расчеты.ТипСуммы КАК ТипСуммы,
	|	Расчеты.СтатьяАналитики КАК СтатьяДвиженияДенежныхСредств,
	|
	|	СУММА(Расчеты.Сумма) КАК Сумма,
	|	СУММА(Расчеты.СуммаУпр) КАК СуммаУпр,
	|	СУММА(Расчеты.СуммаРегл) КАК СуммаРегл
	|
	|ПОМЕСТИТЬ РасчетыПоКредитамДепозитамЗаймам
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.РасчетыПоФинансовымИнструментам КАК Расчеты
	|	ПО
	|		ДокументыКОтражению.Ссылка = Расчеты.Регистратор
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ДоговорыКредитовИДепозитов КАК ДанныеДоговора
	|	ПО
	|		Расчеты.Договор = ДанныеДоговора.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	Расчеты.Регистратор,
	|	Расчеты.АналитикаУчетаПоПартнерам,
	|	ДанныеДоговора.Ссылка,
	|	Расчеты.ТипСуммы,
	|	Расчеты.СтатьяАналитики
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	Договор,
	|	СтатьяДвиженияДенежныхСредств,
	|	ТипСуммы";

	ТекстыЗапроса.Добавить(ТекстЗапроса);

#КонецОбласти

#Область РасшифровкаПлатежаПоКредитамДепозитамЗаймам

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Строки.Ссылка,
	|	Строки.ДоговорКредитаДепозита,
	|	Строки.СтатьяДвиженияДенежныхСредств,
	|	Строки.ТипСуммыКредитаДепозита,
	|	СУММА(Строки.Сумма) КАК Сумма
	|
	|ПОМЕСТИТЬ РасшифровкаПлатежаПоКредитамДепозитамЗаймам
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СписаниеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК Строки
	|	ПО
	|		ДокументыКОтражению.Ссылка = Строки.Ссылка
	|		И Строки.ДоговорКредитаДепозита <> ЗНАЧЕНИЕ(Справочник.ДоговорыКредитовИДепозитов.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	Строки.Ссылка,
	|	Строки.ДоговорКредитаДепозита,
	|	Строки.СтатьяДвиженияДенежныхСредств,
	|	Строки.ТипСуммыКредитаДепозита
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Строки.Ссылка,
	|	ДоговорКредитаДепозита,
	|	СтатьяДвиженияДенежныхСредств,
	|	ТипСуммыКредитаДепозита";

	ТекстыЗапроса.Добавить(ТекстЗапроса);

#КонецОбласти

#Область ДенежныеСредстваКонтрагент

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДвиженияДенежныеСредстваКонтрагент.Регистратор КАК Ссылка,
	|	ДвиженияДенежныеСредстваКонтрагент.Контрагент КАК Контрагент,
	|	ДвиженияДенежныеСредстваКонтрагент.Договор КАК Договор,
	|	ДвиженияДенежныеСредстваКонтрагент.НаправлениеДеятельностиКонтрагента КАК НаправлениеДеятельности,
	|	ДвиженияДенежныеСредстваКонтрагент.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ДвиженияДенежныеСредстваКонтрагент.ВалютаПлатежа КАК ВалютаПлатежа,
	|	ДвиженияДенежныеСредстваКонтрагент.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	ОбъектыРасчетов.Подразделение КАК Подразделение,
	|	ОбъектыРасчетов.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	СУММА(ДвиженияДенежныеСредстваКонтрагент.СуммаПостоплатыВВалютеПлатежа) КАК СуммаПостоплатыВВалютеПлатежа,
	|	СУММА(ДвиженияДенежныеСредстваКонтрагент.СуммаПредоплатыВВалютеПлатежа) КАК СуммаПредоплатыВВалютеПлатежа
	|ПОМЕСТИТЬ ДенежныеСредстваКонтрагент
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.ДвиженияДенежныеСредстваКонтрагент КАК ДвиженияДенежныеСредстваКонтрагент
	|	ПО
	|		ДокументыКОтражению.Ссылка = ДвиженияДенежныеСредстваКонтрагент.Регистратор
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ОбъектыРасчетов КАК ОбъектыРасчетов
	|	ПО (ДвиженияДенежныеСредстваКонтрагент.ОбъектРасчетов = ОбъектыРасчетов.Ссылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДвиженияДенежныеСредстваКонтрагент.Регистратор,
	|	ДвиженияДенежныеСредстваКонтрагент.Контрагент,
	|	ДвиженияДенежныеСредстваКонтрагент.Договор,
	|	ОбъектыРасчетов.Подразделение,
	|	ОбъектыРасчетов.ГруппаФинансовогоУчета,
	|	ДвиженияДенежныеСредстваКонтрагент.НаправлениеДеятельностиКонтрагента,
	|	ДвиженияДенежныеСредстваКонтрагент.ОбъектРасчетов,
	|	ДвиженияДенежныеСредстваКонтрагент.ВалютаВзаиморасчетов,
	|	ДвиженияДенежныеСредстваКонтрагент.ВалютаПлатежа,
	|	ДвиженияДенежныеСредстваКонтрагент.СтатьяДвиженияДенежныхСредств
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка";

	ТекстыЗапроса.Добавить(ТекстЗапроса);

#КонецОбласти

#Область ВыплатыСотрудникам

	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Строки.Ссылка КАК Ссылка,
	|	Строки.Ведомость КАК Ведомость,
	|	РасшифровкаВедомости.ФизическоеЛицо КАК ФизическоеЛицо,
	|		ЕСТЬNULL(РасшифровкаВедомости.ГруппаУчетаНачислений.СчетУчета, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыПоЗаработнойПлате)) КАК СчетУчета,
	|	СУММА(РасшифровкаВедомости.КВыплате) КАК КВыплате
	|ПОМЕСТИТЬ ВыплатыСотрудникам
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК Строки
	|		ПО ДокументыКОтражению.Ссылка = Строки.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВедомостьНаВыплатуЗарплатыВБанк.Зарплата КАК РасшифровкаВедомости
	|		ПО Строки.Ведомость = РасшифровкаВедомости.Ссылка
	|	
	|	
	|СГРУППИРОВАТЬ ПО
	|	Строки.Ссылка,
	|	Строки.Ведомость,
	|	РасшифровкаВедомости.ФизическоеЛицо,
	|		ЕСТЬNULL(РасшифровкаВедомости.ГруппаУчетаНачислений.СчетУчета, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыПоЗаработнойПлате))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Операция.Ссылка,
	|	Строки.Ведомость,
	|	РасшифровкаВедомости.ФизическоеЛицо,
	|		ЕСТЬNULL(РасшифровкаВедомости.ГруппаУчетаНачислений.СчетУчета, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыПоЗаработнойПлате)) КАК СчетУчета,
	|	СУММА(РасшифровкаВедомости.КВыплате)
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеБезналичныхДенежныхСредств КАК Операция
	|		ПО ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК Строки
	|		ПО Операция.Ссылка = Строки.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВедомостьНаВыплатуЗарплатыПеречислением.Зарплата КАК РасшифровкаВедомости
	|		ПО Строки.Ведомость = РасшифровкаВедомости.Ссылка
	|			И Операция.ПодотчетноеЛицо = РасшифровкаВедомости.ФизическоеЛицо
	|	
	|	
	|СГРУППИРОВАТЬ ПО
	|	Операция.Ссылка,
	|	Строки.Ведомость,
	|	РасшифровкаВедомости.ФизическоеЛицо,
	|		ЕСТЬNULL(РасшифровкаВедомости.ГруппаУчетаНачислений.СчетУчета, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыПоЗаработнойПлате))
	|";

	ТекстыЗапроса.Добавить(ТекстЗапроса);

	#КонецОбласти

	ТекстЗапроса = СтрСоединить(ТекстыЗапроса, ОбщегоНазначения.РазделительПакетаЗапросов());
	ТекстЗапроса = ТекстЗапроса + ОбщегоНазначения.РазделительПакетаЗапросов();

	Возврат ТекстЗапроса;

КонецФункции

#КонецОбласти
//-- НЕ УТ

#Область Фискализация

//++ Локализация
//-- Локализация

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

// Процедура дополняет тексты запросов проведения документа.
//
// Параметры:
//  Запрос - Запрос - Общий запрос проведения документа.
//  ТекстыЗапроса - СписокЗначений - Список текстов запроса проведения.
//  Регистры - Строка, Структура - Список регистров проведения документа через запятую или в ключах структуры.
//
Процедура ДополнитьТекстыЗапросовПроведения(Запрос, ТекстыЗапроса, Регистры) Экспорт
	
	//++ Локализация
	//++ НЕ УТ
	ТекстЗапросаТаблицаЛимитыРасходаДенежныхСредств(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаОплатаВедомостей(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаОплатаВедомостейНаВыплатуЗарплаты(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаВзаиморасчетыПоЗаймамСотрудникам(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(Запрос, ТекстыЗапроса, Регистры);
	//-- НЕ УТ
	//-- Локализация
	
КонецПроцедуры

//++ Локализация
//++ НЕ УТ

Функция ТекстЗапросаТаблицаЛимитыРасходаДенежныхСредств(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ЛимитыРасходаДенежныхСредств";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ТаблицаДанныеВедомостей", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаДанныеВедомостей(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаВедомости.НомерСтрокиЗаявки             КАК НомерСтрокиЗаявки,
	|	ТаблицаВедомости.НомерСтрокиВедомости          КАК НомерСтрокиВедомости,
	|	&Период                                        КАК Период,
	|	ВЫБОР
	|		КОГДА &ИспользоватьЛимитыРасходаПоОрганизациям
	|			ТОГДА &Организация
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|	КОНЕЦ КАК Организация,
	|	ВЫБОР
	|		КОГДА НЕ &ИспользоватьЛимитыРасходаПоПодразделениям
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|		КОГДА &Подразделение <> ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|			ТОГДА &Подразделение 
	|		ИНАЧЕ ДанныеДокумента.БанковскийСчет.Подразделение
	|	КОНЕЦ КАК Подразделение,
	|	
	|	ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	
	|	ТаблицаВедомости.КВыплате * &КоэффициентПересчетаВВалютуУпр КАК РасходСверхЛимита
	|	
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаДанныеВедомостей КАК ТаблицаВедомости
	|	ПО
	|		ИСТИНА
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.СписаниеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|	ПО
	|		ТаблицаРасшифровкаПлатежа.Ссылка = ДанныеДокумента.Ссылка
	|		И ТаблицаРасшифровкаПлатежа.Ведомость = ТаблицаВедомости.Ведомость
	|
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ИспользоватьЛимитыРасходаДенежныхСредств
	|	И ТаблицаРасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств = ЗНАЧЕНИЕ(Документ.ЗаявкаНаРасходованиеДенежныхСредств.ПустаяСсылка)
	|	И (&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаЗарплатыПоЗарплатномуПроекту)
	|		ИЛИ &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаЗарплатыНаЛицевыеСчета))
	|	И &ИспользоватьНачислениеЗарплаты
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДанныеВедомостей(Запрос, ТекстыЗапроса)
	
	ИмяВременнойТаблицы = "ТаблицаДанныеВедомостей";
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаВедомости.НомерСтроки   КАК НомерСтрокиЗаявки,
	|	ТаблицаВедомости.Ведомость     КАК Ведомость,
	|	ТаблицаЗарплата.НомерСтроки    КАК НомерСтрокиВедомости,
	|	ТаблицаЗарплата.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ТаблицаЗарплата.КВыплате       КАК КВыплате
	|
	|ПОМЕСТИТЬ ТаблицаДанныеВедомостей
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК ТаблицаВедомости
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВедомостьНаВыплатуЗарплатыВБанк.Зарплата КАК ТаблицаЗарплата
	|	ПО
	|		ТаблицаВедомости.Ведомость = ТаблицаЗарплата.Ссылка
	|
	|ГДЕ
	|	ТаблицаВедомости.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаЗарплатыПоЗарплатномуПроекту)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаВедомости.НомерСтроки   КАК НомерСтрокиЗаявки,
	|	ТаблицаВедомости.Ведомость     КАК Ведомость,
	|	ТаблицаЗарплата.НомерСтроки    КАК НомерСтрокиВедомости,
	|	ТаблицаЗарплата.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ТаблицаЗарплата.КВыплате       КАК КВыплате
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СписаниеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК ТаблицаВедомости
	|	ПО
	|		ТаблицаВедомости.Ссылка = ДанныеДокумента.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВедомостьНаВыплатуЗарплатыПеречислением.Зарплата КАК ТаблицаЗарплата
	|	ПО
	|		ТаблицаЗарплата.Ссылка = ТаблицаВедомости.Ведомость
	|		И ТаблицаЗарплата.ФизическоеЛицо = ДанныеДокумента.ПодотчетноеЛицо
	|
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаЗарплатыНаЛицевыеСчета)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяВременнойТаблицы);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаОплатаВедомостей(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТаблицаОплатаВедомостей";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ТаблицаДанныеВедомостей", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаДанныеВедомостей(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаВедомости.Ведомость КАК Ведомость,
	|	ТаблицаВедомости.ФизическоеЛицо КАК ФизическоеЛицо
	|
	|ИЗ
	|	ТаблицаДанныеВедомостей КАК ТаблицаВедомости
	|
	|ГДЕ
	|	&ИспользоватьНачислениеЗарплаты
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаОплатаВедомостейНаВыплатуЗарплаты(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ОплатаВедомостейНаВыплатуЗарплаты";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ТаблицаДанныеВедомостей", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаДанныеВедомостей(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&Период                         КАК ДатаПлатежа,
	|	&Организация                    КАК Организация,
	|	ТаблицаВедомости.Ведомость      КАК Ведомость,
	|	ТаблицаВедомости.ФизическоеЛицо КАК ФизическоеЛицо
	|ИЗ
	|	ТаблицаДанныеВедомостей КАК ТаблицаВедомости
	|ГДЕ
	|	&ИспользоватьНачислениеЗарплаты
	|	И &ПроведеноБанком
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВзаиморасчетыПоЗаймамСотрудникам(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ВзаиморасчетыПоЗаймамСотрудникам";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                                КАК Период,
	|	&ПодотчетноеЛицо                       КАК ФизическоеЛицо,
	|	&Организация                           КАК Организация,
	|	ИСТИНА                                 КАК ЭтоПредоставлениеЗайма,
	|	ДанныеДокумента.ДоговорЗаймаСотруднику КАК ДоговорЗайма,
	|	ДанныеДокумента.Сумма                  КАК СуммаЗайма
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймаСотруднику)
	|	И &ПроведеноБанком
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции


Функция ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ОтражениеДокументовВРеглУчете";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ТаблицаОбъектовРасчетов", ТекстыЗапроса) Тогда
		Документы.СписаниеБезналичныхДенежныхСредств.ТекстЗапросаВременнаяТаблицаОбъектовРасчета(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтПрочиеРасходы", ТекстыЗапроса) Тогда
		Документы.СписаниеБезналичныхДенежныхСредств.ТекстЗапросаТаблицаВтПрочиеРасходы(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтПартииПрочихРасходов", ТекстыЗапроса) Тогда
		Документы.СписаниеБезналичныхДенежныхСредств.ТекстЗапросаТаблицаВтПартииПрочихРасходов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВложенныйЗапрос.Период КАК Период,
	|	ВложенныйЗапрос.Организация КАК Организация,
	|	ВложенныйЗапрос.ДатаОтражения КАК ДатаОтражения
	|ИЗ
	|	(ВЫБРАТЬ
	|		&Период                         КАК Период,
	|		&Организация                    КАК Организация,
	|		НАЧАЛОПЕРИОДА(&Период, ДЕНЬ)    КАК ДатаОтражения
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		&Период                             КАК Период,
	|		ТаблицаОбъектовРасчетов.Организация КАК Организация,
	|		НАЧАЛОПЕРИОДА(&Период, ДЕНЬ)        КАК ДатаОтражения
	|	ИЗ
	|		ТаблицаОбъектовРасчетов КАК ТаблицаОбъектовРасчетов
	|	ГДЕ
	|		ТаблицаОбъектовРасчетов.Организация <> &Организация
	|
	|		) ВложенныйЗапрос
	|";
	ТекстЗапроса = ТекстЗапроса + "ОБЪЕДИНИТЬ ВСЕ"
		+ ДоходыИРасходыСервер.ДополнитьТекстЗапросаТаблицаОтражениеДокументовВРеглУчете();
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции
//-- НЕ УТ
//-- Локализация

#КонецОбласти

#Область ЗаполнениеНаОсновании

//++ Локализация

//++ НЕ УТ
Процедура ЗаполнитьПоПоступлениюДенежныхДокументов(Объект, Знач ДокументОснование, Знач СуммаКОплате, ДанныеЗаполнения)
	
	// Заполним данные шапки документа.
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Контрагент КАК Контрагент,
	|	ДанныеДокумента.Договор КАК Договор,
	|	ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаОрганизаций.ПустаяСсылка) КАК БанковскийСчет,
	|	ДанныеДокумента.ВалютаВзаиморасчетов КАК Валюта,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоставщику) КАК ХозяйственнаяОперация
	|ИЗ
	|	Документ.ПоступлениеДенежныхДокументов КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхДокументовОтПоставщика)
	|");
	Запрос.УстановитьПараметр("Ссылка", ДокументОснование);
	
	РезультатЗапроса = Запрос.Выполнить();
	Объект.ЗаполнитьРеквизитыПоРезультатуЗапроса(
		ДокументОснование,
		РезультатЗапроса,
		СуммаКОплате,
		ДанныеЗаполнения);
		
КонецПроцедуры


Процедура ЗаполнитьПоВедомостям(Объект, ДанныеЗаполнения)
	
	ДанныеЗаполнения.Вставить("Валюта", Константы.ВалютаРегламентированногоУчета.Получить());
	
	ХозяйственнаяОперация = Неопределено;
	ДанныеЗаполнения.Свойство("ХозяйственнаяОперация", ХозяйственнаяОперация);
	Если Не ЗначениеЗаполнено(ХозяйственнаяОперация) Тогда
		ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыПоЗарплатномуПроекту;
	КонецЕсли;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("МассивВедомостей", ДанныеЗаполнения.МассивВедомостей);
	СтруктураПараметров.Вставить("ХозяйственнаяОперация", ХозяйственнаяОперация);
	
	Если ДанныеЗаполнения.Свойство("Организация") И ЗначениеЗаполнено(ДанныеЗаполнения.Организация) Тогда
		СтруктураПараметров.Вставить("Организация", ДанныеЗаполнения.Организация);
	КонецЕсли;
	
	ИнтеграцияБЗК.ПодготовитьДанныеОСостоянииВедомостей(МенеджерВременныхТаблиц, СтруктураПараметров);
	
	ДанныеВедомостей = ИнтеграцияБЗК.ДанныеВедомостей(СтруктураПараметров, МенеджерВременныхТаблиц);
	РеквизитыШапки = ДанныеВедомостей.РеквизитыШапки;
	
	Если РеквизитыШапки = Неопределено Тогда
		Текст = НСтр("ru='Команда не может быть выполнена для указанного объекта';uk='Команда не може бути виконана для зазначеного об''єкта'");
		ВызватьИсключение Текст;
	КонецЕсли;
	
	Если ДанныеВедомостей.МассивОшибок.Количество() > 0 Тогда
		Текст = ДанныеВедомостей.МассивОшибок[0].Текст;
		ВызватьИсключение Текст;
	КонецЕсли;
	
		ДанныеЗаполнения.Вставить("ХозяйственнаяОперация", РеквизитыШапки.ХозяйственнаяОперация);
	
	Если Не (ДанныеЗаполнения.Свойство("Организация") И ЗначениеЗаполнено(ДанныеЗаполнения.Организация)) Тогда
		ДанныеЗаполнения.Вставить("Организация", РеквизитыШапки.Организация);
	КонецЕсли;
	
	Если Не (ДанныеЗаполнения.Свойство("БанковскийСчет") И ЗначениеЗаполнено(ДанныеЗаполнения.БанковскийСчет)) Тогда
		
		БанковскийСчет = Справочники.БанковскиеСчетаОрганизаций.ПолучитьБанковскийСчетОрганизацииПоУмолчанию(
			ДанныеЗаполнения.Организация, ДанныеЗаполнения.Валюта);
		
		ДанныеЗаполнения.Вставить("БанковскийСчет", БанковскийСчет);
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	СтатьяДДС = Справочники.СтатьиДвиженияДенежныхСредств.СтатьяДвиженияДенежныхСредствПоХозяйственнойОперации(
		РеквизитыШапки.ХозяйственнаяОперация);
	Запрос.УстановитьПараметр("СтатьяДДС", СтатьяДДС);
	
	Если Не ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеречислениеВБюджет Тогда
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ДанныеВедомостей.Ведомость КАК Ведомость,
		|	&СтатьяДДС КАК СтатьяДвиженияДенежныхСредств,
		|	СУММА(ДанныеВедомостей.СуммаОплаты) КАК СуммаОплаты,
		|	СУММА(ДанныеВедомостей.Сумма) КАК Сумма
		|ИЗ
		|	ВТСостояниеВыплатыПоВедомостям КАК ДанныеВедомостей
		|
		|СГРУППИРОВАТЬ ПО
		|	ДанныеВедомостей.Ведомость";
		
	ИначеЕсли ДанныеЗаполнения.Свойство("РегистрацияВНалоговомОргане") Тогда
		
		Запрос.УстановитьПараметр("РегистрацияВНалоговомОргане", ДанныеЗаполнения.РегистрацияВНалоговомОргане);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ДанныеВедомостей.Ведомость КАК Ведомость,
		|	&СтатьяДДС КАК СтатьяДвиженияДенежныхСредств,
		|	СУММА(ВЫБОР
		|		КОГДА ДанныеВедомостей.РегистрацияВНалоговомОргане = &РегистрацияВНалоговомОргане
		|			ТОГДА ДанныеВедомостей.СуммаОплаты
		|		ИНАЧЕ 0
		|	КОНЕЦ) КАК СуммаОплаты,
		|	СУММА(ВЫБОР
		|		КОГДА ДанныеВедомостей.РегистрацияВНалоговомОргане = &РегистрацияВНалоговомОргане
		|			ТОГДА ДанныеВедомостей.Сумма
		|		ИНАЧЕ 0
		|	КОНЕЦ) КАК Сумма
		|ИЗ
		|	ВТСостояниеНалоговПоВедомостям КАК ДанныеВедомостей
		|
		|СГРУППИРОВАТЬ ПО
		|	ДанныеВедомостей.Ведомость";
		
	Иначе
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ДанныеВедомостей.Ведомость КАК Ведомость,
		|	&СтатьяДДС КАК СтатьяДвиженияДенежныхСредств,
		|	СУММА(ДанныеВедомостей.СуммаОплаты) КАК СуммаОплаты,
		|	СУММА(ДанныеВедомостей.Сумма) КАК Сумма
		|ИЗ
		|	ВТСостояниеНалоговПоВедомостям КАК ДанныеВедомостей
		|
		|СГРУППИРОВАТЬ ПО
		|	ДанныеВедомостей.Ведомость";
		
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.СуммаОплаты <> 0 Тогда
			Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='%1 уже оплачена и будет пропущена.';uk='%1 вже оплачена і буде пропущена.'"), Выборка.Ведомость);
			ОбщегоНазначения.СообщитьПользователю(Текст);
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = Объект.РасшифровкаПлатежа.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
	КонецЦикла;
	
	ДанныеЗаполнения.Вставить("СуммаДокумента", Объект.РасшифровкаПлатежа.Итог("Сумма"));
	
КонецПроцедуры

Процедура ЗаполнитьРеквизитыЗначениямиПоУмолчанию(Объект)
	
	Объект.Организация = ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию(Объект.Организация);
	Объект.Валюта = ЗначениеНастроекПовтИсп.ПолучитьВалютуРегламентированногоУчета(Объект.Валюта);
	
	СтруктураПараметров = ДенежныеСредстваСервер.ПараметрыЗаполненияБанковскогоСчетаОрганизацииПоУмолчанию();
	СтруктураПараметров.Организация = Объект.Организация;
	СтруктураПараметров.ФормаОплаты = Перечисления.ФормыОплаты.Безналичная;
	СтруктураПараметров.Валюта      = Объект.Валюта;
	Объект.БанковскийСчет = ЗначениеНастроекПовтИсп.ПолучитьБанковскийСчетОрганизацииПоУмолчанию(СтруктураПараметров);
	
	Если ЗначениеЗаполнено(Объект.БанковскийСчет) Тогда
		Если Не ЗначениеЗаполнено(Объект.Организация) Тогда
			Объект.Организация = Справочники.БанковскиеСчетаОрганизаций.ПолучитьРеквизитыБанковскогоСчетаОрганизации(
				Объект.БанковскийСчет).Организация;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Объект.Валюта) Тогда
			Объект.Валюта = Справочники.БанковскиеСчетаОрганизаций.ПолучитьРеквизитыБанковскогоСчетаОрганизации(
				Объект.БанковскийСчет).Валюта;
		КонецЕсли;
	КонецЕсли;
	
	Объект.БанковскийСчетКонтрагента =
		Справочники.БанковскиеСчетаКонтрагентов.ПолучитьБанковскийСчетПоУмолчанию(Объект.Контрагент, Объект.Валюта);
	Объект.НазначениеПлатежа =
		Справочники.БанковскиеСчетаКонтрагентов.ПолучитьРеквизитыБанковскогоСчета(Объект.БанковскийСчетКонтрагента).ТекстНазначения;
	
КонецПроцедуры
//-- НЕ УТ

//-- Локализация
#КонецОбласти

#Область Прочее

Процедура ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра, ИсточникиДанных) Экспорт
	
	//++ Локализация
	Если ИмяРегистра = "ЛимитыРасходаДенежныхСредств" Тогда
		ИсточникиДанных.Вставить("РасшифровкаПлатежа.Ведомость");
	КонецЕсли;
	//-- Локализация
	
КонецПроцедуры

//++ Локализация  

//++ НЕ УТ
Процедура ПроверитьВедомостиНаВыплатуЗарплаты(Объект, ФлагОбменСБанками, ОшибкиЗаполнения, Отказ)
	
	Если Не ДенежныеСредстваСервер.ОперацияПоЗарплате(Объект.ХозяйственнаяОперация)
	ИЛИ Не ПолучитьФункциональнуюОпцию("ИспользоватьНачислениеЗарплатыУТ") Тогда
		Возврат;
	КонецЕсли;
	
	МассивВедомостей = Новый Массив;
	Для Каждого СтрокаРасшифровки Из Объект.РасшифровкаПлатежа Цикл
		Если ЗначениеЗаполнено(СтрокаРасшифровки.Ведомость) Тогда
			МассивВедомостей.Добавить(СтрокаРасшифровки.Ведомость);
		КонецЕсли;
	КонецЦикла;
	
	КоличествоСтрок = МассивВедомостей.Количество();
	
	МассивВедомостей = ОбщегоНазначенияКлиентСервер.СвернутьМассив(МассивВедомостей);
	Если Не КоличествоСтрок = МассивВедомостей.Количество() Тогда
		ТекстОшибки = НСтр("ru='Одна и та же ведомость не может быть указана несколько раз';uk='Одна і та ж відомість не може бути вказана кілька разів'");
		Если ФлагОбменСБанками Тогда
			ДенежныеСредстваСервер.ДобавитьОшибкуЗаполнения(ОшибкиЗаполнения, ТекстОшибки);
		Иначе
			ОбщегоНазначения.СообщитьПользователю(ТекстОшибки, Объект, "РасшифровкаПлатежа",, Отказ);
		КонецЕсли;
	КонецЕсли;
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Организация", Объект.Организация);
	СтруктураПараметров.Вставить("МассивВедомостей", МассивВедомостей);
	СтруктураПараметров.Вставить("ХозяйственнаяОперация", Объект.ХозяйственнаяОперация);
	СтруктураПараметров.Вставить("ИсключитьДокументОплаты", Объект.Ссылка);
	
	Если Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыНаЛицевыеСчета Тогда
		СтруктураПараметров.Вставить("Работник", Объект.ПодотчетноеЛицо);
	КонецЕсли;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ИнтеграцияБЗК.ПодготовитьДанныеОСостоянииВедомостей(МенеджерВременныхТаблиц, СтруктураПараметров);
	
	ДанныеВедомостей = ИнтеграцияБЗК.ДанныеВедомостей(СтруктураПараметров, МенеджерВременныхТаблиц);
	РеквизитыШапки = ДанныеВедомостей.РеквизитыШапки;
	
	Если РеквизитыШапки = Неопределено Тогда
		Текст = НСтр("ru='Команда не может быть выполнена для указанного объекта!';uk='Команда не може бути виконана для зазначеного об''єкта!'");
		ВызватьИсключение Текст;
	КонецЕсли;
	
	Если ДанныеВедомостей.МассивОшибок.Количество() > 0 Тогда
		ТекстОшибки = ДанныеВедомостей.МассивОшибок[0].Текст;
		Если ФлагОбменСБанками Тогда
			ДенежныеСредстваСервер.ДобавитьОшибкуЗаполнения(ОшибкиЗаполнения, ТекстОшибки);
		Иначе
			ОбщегоНазначения.СообщитьПользователю(ТекстОшибки, Объект, "РасшифровкаПлатежа", , Отказ);
		КонецЕсли;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	Запрос.УстановитьПараметр("РасшифровкаПлатежа",
		Объект.РасшифровкаПлатежа.Выгрузить(, "Ведомость, Сумма, НомерСтроки"));
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Таблица.НомерСтроки КАК НомерСтроки,
	|	Таблица.Ведомость КАК Ведомость,
	|	Таблица.Сумма КАК СуммаПлатежа
	|ПОМЕСТИТЬ РасшифровкаПлатежа
	|ИЗ
	|	&РасшифровкаПлатежа КАК Таблица";
	
	Если Не Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеречислениеВБюджет Тогда
		
		ТекстЗапроса = ТекстЗапроса + ОбщегоНазначения.РазделительПакетаЗапросов() +
		"ВЫБРАТЬ
		|	ДанныеВедомостей.Ведомость КАК Ведомость,
		|	СУММА(ДанныеВедомостей.СуммаОплаты) КАК СуммаОплаты,
		|	СУММА(ДанныеВедомостей.Сумма) КАК СуммаПоВедомости
		|ПОМЕСТИТЬ ИтогиВедомостей
		|ИЗ
		|	ВТСостояниеВыплатыПоВедомостям КАК ДанныеВедомостей
		|
		|СГРУППИРОВАТЬ ПО
		|	ДанныеВедомостей.Ведомость
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РасшифровкаПлатежа.НомерСтроки КАК НомерСтроки,
		|	РасшифровкаПлатежа.Ведомость КАК Ведомость,
		|	РасшифровкаПлатежа.СуммаПлатежа КАК СуммаПлатежа,
		|	ЕСТЬNULL(ИтогиВедомостей.СуммаПоВедомости, 0) КАК СуммаПоВедомости,
		|	ЕСТЬNULL(ИтогиВедомостей.СуммаОплаты, 0) КАК СуммаОплаты
		|ИЗ
		|	РасшифровкаПлатежа КАК РасшифровкаПлатежа
		|		ЛЕВОЕ СОЕДИНЕНИЕ ИтогиВедомостей КАК ИтогиВедомостей
		|		ПО РасшифровкаПлатежа.Ведомость = ИтогиВедомостей.Ведомость";
		
	Иначе
		
	КонецЕсли;
	
	// Для блокирующих ошибок Пометка = Истина
	СписокОшибок = Новый СписокЗначений;
	
	Запрос.Текст = ТекстЗапроса;
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		
		Если Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеречислениеВБюджет Тогда
			
			
		ИначеЕсли Выборка.СуммаПлатежа <> Выборка.СуммаПоВедомости Тогда
			
			ИмяПоля = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("РасшифровкаПлатежа", Выборка.НомерСтроки, "Ведомость");
			
			Если Выборка.СуммаОплаты = Выборка.СуммаПоВедомости Тогда
				ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru='По документу %1 уже зарегистрированы выплаты';uk='За документом %1 вже зареєстровані виплати'"), Выборка.Ведомость);
				СписокОшибок.Добавить(ИмяПоля, ТекстОшибки, Истина);
				Продолжить;
			КонецЕсли;
			
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='Сумма платежа не соответствует ведомости %1';uk='Сума платежу не відповідає відомості %1'"), Выборка.Ведомость);
			СписокОшибок.Добавить(ИмяПоля, ТекстОшибки, Истина);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если ФлагОбменСБанками Тогда
		Для Каждого Ошибка Из СписокОшибок Цикл
			ДенежныеСредстваСервер.ДобавитьОшибкуЗаполнения(ОшибкиЗаполнения, Ошибка.Представление);
		КонецЦикла;
	Иначе
		Для Каждого Ошибка Из СписокОшибок Цикл
			Если Ошибка.Пометка Тогда
				ОбщегоНазначения.СообщитьПользователю(Ошибка.Представление, Объект, Ошибка.Значение,, Отказ);
			Иначе
				ОбщегоНазначения.СообщитьПользователю(Ошибка.Представление, Объект, Ошибка.Значение);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры
//-- НЕ УТ

//-- Локализация
#КонецОбласти

#КонецОбласти
