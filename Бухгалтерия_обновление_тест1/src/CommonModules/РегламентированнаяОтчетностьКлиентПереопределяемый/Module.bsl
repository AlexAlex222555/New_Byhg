////////////////////////////////////////////////////////////////////////////////
// Модуль содержит переопределяемые процедуры и функции.
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

////////////////////////////////////////////////////////////////////////////////
// Процедуры и функции механизма расшифровки.

// Процедура выводит форму расшифровки.
//
// Параметры:
//	 ИДОтчета - Строка - идентификатор отчета (совпадает с именем объекта метаданных).
// 	 ИДРедакцииОтчета - Строка - идентификатор редакции формы отчета (совпадает с именем формы объекта метаданных).
//   ИДИменПоказателей - Массив - массив идентификаторов имен показателей, по которым формируется расшифровка.
//   ПараметрыОтчета - Структура - структура параметров отчета, необходимых для формирования расшифровки.
//
Процедура ОткрытьРасшифровкуОтчета(ИДОтчета, ИДРедакцииОтчета, ИДИменПоказателей, ПараметрыОтчета) Экспорт
	
	ПараметрыФормы = КопияСтруктуры(ПараметрыОтчета);
	ПараметрыФормы.Вставить("ИДИменПоказателей", ИДИменПоказателей);
	
	ЗаголовокРасшифровкиДляВсегоРаздела = НаименованиеРасшифровки(ПолучитьНаименованиеОтчетаДляРасшифровки(ИдОтчета),
		ПараметрыОтчета.мДатаНачалаПериодаОтчета, ПараметрыОтчета.мДатаКонцаПериодаОтчета);
		
	Если ПараметрыОтчета.Свойство("НаимТекущегоРаздела") Тогда
		ИмяРаздела = ПараметрыОтчета.НаимТекущегоРаздела;
	Иначе	
		ИмяРаздела = Неопределено;
	КонецЕсли;
	
	Если НЕ РегламентированнаяОтчетностьВызовСервера.ЕстьРасшифровкаПоПоказателям(ПараметрыОтчета.АдресВременногоХранилищаРасшифровки, ИДИменПоказателей, ИмяРаздела) Тогда
		ТекстВопроса = НСтр("ru='Для выбранной ячейки расшифровка не существует.
|Показать расшифровку для всех показателей формы?';uk='Для вибраної комірки розшифровка не існує.
|Показати розшифровку для всіх показників форми?'");
		ДополнительныеПараметры = Новый Структура("ЗаголовокРасшифровкиДляВсегоРаздела, ПараметрыФормы", ЗаголовокРасшифровкиДляВсегоРаздела, ПараметрыФормы);
		ОписаниеОповещения = Новый ОписаниеОповещения("ОткрытьРасшифровкуЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		
		Если НЕ ИДРедакцииОтчета = Истина Тогда
			ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		Иначе
			ВыполнитьОбработкуОповещения(ОписаниеОповещения, КодВозвратаДиалога.Нет);	
		КонецЕсли;
	Иначе
		ПоказатьРасшифровкуВсехПоказателейФормы(ЗаголовокРасшифровкиДляВсегоРаздела, ПараметрыФормы);
	КонецЕсли;
		
КонецПроцедуры


Процедура ОткрытьРасшифровкуЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ЗаголовокРасшифровкиДляВсегоРаздела = ДополнительныеПараметры.ЗаголовокРасшифровкиДляВсегоРаздела;
	ПараметрыФормы = ДополнительныеПараметры.ПараметрыФормы;
	Если Результат = КодВозвратаДиалога.Да Тогда
		ПоказатьРасшифровкуВсехПоказателейФормы(ЗаголовокРасшифровкиДляВсегоРаздела, ПараметрыФормы);
	КонецЕсли;
	
КонецПроцедуры


Процедура ПоказатьРасшифровкуВсехПоказателейФормы(ЗаголовокРасшифровкиДляВсегоРаздела, ПараметрыФормы)
	
	ПараметрыФормы.Вставить("ЗаголовокРасшифровки", ЗаголовокРасшифровкиДляВсегоРаздела);
	
	ФормаРасшифровки = ПолучитьФорму("ОбщаяФорма.РасшифровкаПоказателейРегламентированныхОтчетов", ПараметрыФормы, , Истина);
	ФормаРасшифровки.Открыть();
	
КонецПроцедуры


Функция НаименованиеРасшифровки(НаименованиеОтчета, НачалоПериода, КонецПериода)
	
	ПериодОтчета = ПредставлениеПериода(НачалоДня(НачалоПериода), КонецДня(КонецПериода), "ФП = Истина");
	
	ПредставлениеОтчета = НаименованиеОтчета;
	Если НаименованиеОтчета = "РегламентированныйОтчетДекларацияОПрибыли" Тогда
		ПредставлениеОтчета = НСтр("ru='Декларация о прибыли';uk='Декларація про прибуток'");
	ИначеЕсли  НаименованиеОтчета = "РегламентированныйОтчет6ПВ" Тогда
		ПредставлениеОтчета = НСтр("ru='Отчет по количеству работников';uk='Звіт по кількості працівників'");
	ИначеЕсли  НаименованиеОтчета = "РегламентированныйОтчетБаланс" Тогда
		ПредставлениеОтчета = НСтр("ru='Баланс (стандарт № 2)';uk='Баланс (стандарт № 2)'");
	ИначеЕсли  НаименованиеОтчета = "РегламентированныйОтчетБалансМП" Тогда
		ПредставлениеОтчета = НСтр("ru='Отчет МП (стандарт № 25)';uk='Звіт МП (стандарт № 25)'");
	ИначеЕсли  НаименованиеОтчета = "РегламентированныйОтчетБалансМПС" Тогда
		ПредставлениеОтчета = НСтр("ru='Отчет МП сокращенный (стандарт № 25)';uk='Звіт МП скорочений (стандарт № 25)'");
	ИначеЕсли  НаименованиеОтчета = "РегламентированныйОтчетДвижениеДенежныхСредств" Тогда
		ПредставлениеОтчета = НСтр("ru='Движение денежных средств (стандарт № 4)';uk='Рух грошових коштів (стандарт № 4)'");
	ИначеЕсли  НаименованиеОтчета = "РегламентированныйОтчетДекларацияАкцизногоНалога" Тогда
		ПредставлениеОтчета = НСтр("ru='Декларация по Акцизному налогу';uk='Декларація акцизного податку'");
	ИначеЕсли  НаименованиеОтчета = "РегламентированныйОтчетДекларацияНДС" Тогда
		ПредставлениеОтчета = НСтр("ru='Декларация по НДС';uk='Декларація по ПДВ'");
	ИначеЕсли  НаименованиеОтчета = "РегламентированныйОтчетЕдиныйСоциальныйВзнос" Тогда
		ПредставлениеОтчета = НСтр("ru='Отчет по Единому социальному взносу';uk='Звіт по Єдиному соціальному внеску'");
	ИначеЕсли  НаименованиеОтчета = "РегламентированныйОтчетЗанятостьГражданСДопГарантиями" Тогда
		ПредставлениеОтчета = НСтр("ru='Информация о занятости и трудоустройстве граждан, имеющих дополнительные гарантии в содействии трудоустройству';uk='Інформація про зайнятість та працевлаштування громадян, що мають додаткові гарантії у сприянні працевлаштуванню'");
	ИначеЕсли  НаименованиеОтчета = "РегламентированныйОтчетОбОбъемахРеализованныхУслуг" Тогда
		ПредставлениеОтчета = НСтр("ru='Отчет об объемах реализованных услуг (форма №1-услуги)';uk='Звіт про обсяги реалізованих послуг (форма №1-послуги)'");
	ИначеЕсли  НаименованиеОтчета = "РегламентированныйОтчетОСобственномКапитале" Тогда
		ПредставлениеОтчета = НСтр("ru='Отчет о собственном капитале';uk='Звіт про власний капітал'");
	ИначеЕсли  НаименованиеОтчета = "РегламентированныйОтчетПоТруду" Тогда
		ПредставлениеОтчета = НСтр("ru='Отчет по труду';uk='Звіт по праці'");
	ИначеЕсли  НаименованиеОтчета = "РегламентированныйОтчетУточняющийРасчетДекларацияНДС" Тогда
		ПредставлениеОтчета = НСтр("ru='Уточняющий расчет по НДС';uk='Уточнюючий розрахунок по ПДВ'");
	ИначеЕсли  НаименованиеОтчета = "РегламентированныйОтчетФинансовыйРезультат" Тогда
		ПредставлениеОтчета = НСтр("ru='Отчет о финансовых результатах (стандарт № 3)';uk='Звіт про фінансові результати (стандарт № 3)'");
	ИначеЕсли  НаименованиеОтчета = "РегламентированныйОтчетФорма1ДФ" Тогда
		ПредставлениеОтчета = НСтр("ru='Расчетная ведомость по форме № 1ДФ';uk='Розрахункова відомість за формою № 1ДФ'");
	ИначеЕсли  НаименованиеОтчета = "РегламентированныйОтчетФорма5" Тогда
		ПредставлениеОтчета = НСтр("ru='Примечания к финансовой отчетности (форма № 5)';uk='Примітки до фінансової звітності (форма № 5)'");
	ИначеЕсли  НаименованиеОтчета = "РегламентированныйОтчетФССНесчастныйСлучай" Тогда
		ПредставлениеОтчета = НСтр("ru='Ведомость распределения численности работников';uk='Відомість розподілу чисельності працівників'");
	КонецЕсли;	
	
	Возврат ПредставлениеОтчета + " " + ПериодОтчета + НСтр("ru=' - расшифровка значений показателей';uk=' - розшифровка значень показників'");
	
КонецФункции


Функция КопияСтруктуры(ИсходнаяСтруктура)
	
	Результат = Новый Структура;
	
	Для Каждого Элемент Из ИсходнаяСтруктура Цикл
		Результат.Вставить(Элемент.Ключ, Элемент.Значение);
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции


Функция ПолучитьНаименованиеОтчетаДляРасшифровки(ИдОтчета)

	Возврат ИДОтчета	

КонецФункции // ()

// Процедура открывает форму списка задач бухгалтера.
//
Процедура ОткрытьКалендарь(Владелец, Организация, СтандартнаяОбработка) Экспорт
	
	СтандартнаяОбработка = Ложь;
	
	ПерейтиПоНавигационнойСсылке("http://its.bas-soft.eu/calendar/");
	
КонецПроцедуры

// Процедура открывает форму с информацией об изменениях.
//
// Параметры:
//  ИмяОтчета - Строка - имя отчета в дереве объектов метаданных;
//  ИмяФормы  - Строка - имя формы отчета;
//  Форма     - УправляемаФорма - форма, из которой вызывается процедура.
//
Процедура ПредупредитьОбИзменениях(ИмяОтчета, ИмяФормы, Форма) Экспорт
	
КонецПроцедуры

// Процедура изменяет признак вывода предупреждения об изменениях.
//
// Параметры:
//  ИмяОтчета - Строка - имя отчета в дереве объектов метаданных;
//  ИмяФормы  - Строка - имя формы отчета;
//  ТребуетсяПредупредитьОбИзменениях - Булево - признак вывода предупреждения об изменениях;
//  Форма     - УправляемаФорма - форма, из которой вызывается процедура.
//
Процедура ИзменитьПризнакВыводаПредупрежденияОбИзменениях(ИмяОтчета, ИмяФормы, ТребуетсяПредупредитьОбИзменениях, Форма) Экспорт
	
КонецПроцедуры


// Процедура уточняет данные для автозаполнения уведомления
//
// Параметры:
//   ИДОтчета             - Строка - имя отчета в дереве объектов метаданных.
//   ПараметрыОтчета      - Структура - структура обязательных параметров.
//   ФормаОтчета          - УправляемаФорма - ссылка на заполняемую форму уведомления.
//   ОписаниеОповещения   - ОписаниеОповещения - процедура для продолжения процедуры автозаполнения.
//   СтандартнаяОбработка - Булево - если Истина то никакой новой информации не добавляется для автозаполнения,
//                                   необходимо продолжить автозаполнение в самой форме.
//
Процедура ПередЗаполнениемОтчета(ИДОтчета, ПараметрыОтчета, ФормаОтчета, ОписаниеОповещения, СтандартнаяОбработка = Неопределено) Экспорт
	
КонецПроцедуры

// Процедура переопределяет вывод дополнительной информации о регламентированном отчете
//
// Параметры:
//   Ссылка                    - ДокументСсылка.РегламентированныйОтчет - ссылка на регламентированный отчет.
//   ИмяФормыПодробнееОбОтчете - Строка - имя формы, которая будет открыта с параметром "Ссылка" для предоставления дополнительной информации об отчете.
//   СтандартнаяОбработка      - Булево - если Истина - будет открыта форма по имени: "Обработка.ОбщиеОбъектыРеглОтчетности.Форма." + ИмяФормыПодробнееОбОтчете;
//                                        иначе - можно выполнить свой алгоритм обработки ПодробнееОбОчете().
//
Процедура ПодробнееОбОчете(Ссылка, ИмяФормыПодробнееОбОтчете, СтандартнаяОбработка) Экспорт
	
КонецПроцедуры

// Дополняет функционал обработчика "ОбработкаОповещения" общей формы "Регламентированная отчетность",
// здесь можно добавить новую функциональность к существующей обработке оповещения.
//
// Параметры:
//  ИмяСобытия - Строка - Имя события может быть использовано для идентификации сообщений принимающими их формами.
//  Параметр   - Параметр сообщения. Могут быть переданы любые необходимые данные.
//  Источник   - Источник события. Например, в качестве источника может быть указана другая форма.
//  Форма      - ФормаКлиентскогоПриложения - Общая форма "Регламентированная отчетность".
//
// Пример:
//  Если ИмяСобытия = "Получены новые сообщения Отчетности" И Источник <> Форма Тогда
//      Оповестить("Закрыть форму новых сообщений Отчетности",, Форма);
//  КонецЕсли;
//
Процедура ФормаРегламентированнойОтчетности_ОбработкаОповещения(ИмяСобытия, Параметр, Источник, Форма) Экспорт
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// Служебные процедуры и функции.

// Процедура выполняет назначаемую команду формы.
//
// Параметры:
//   Форма - Форма - форма, из которой вызвана команда.
//
Процедура ВыполнитьНазначаемуюКомандуНаКлиенте(Форма) Экспорт
	
КонецПроцедуры

// Процедура выполняет назначаемую команду формы "РегламентированнаяОтчетность".
//
// Параметры:
//   Форма   - Форма - форма, из которой вызвана команда.
//   Команда - КомандаФормы - назначенная команда формы.
//
// Пример:
//   Если Команда.Имя = "ОтчетыПоказатьДополнительнуюИнформацию" Тогда
//   	ПоказатьПредупреждение(, "Заполните обработчик команды """ + Команда.Имя + """");
//   КонецЕсли;
//
Процедура ФормаРегламентированнойОтчетности_ВыполнитьНазначаемуюКомандуНаКлиенте(Форма, Команда) Экспорт
	
КонецПроцедуры

// Процедура переопределяет имя формы выбора периода для установки отбора в форме "РегламентированнаяОтчетность".
//
// Параметры:
//  ПолноеИмяФормыВыбораПериода  - Строка - Полный путь к форме выбора периода.
//
// Пример:
//  ПолноеИмяФормыВыбораПериода = "ОбщаяФорма.ВыборПроизвольногоПериода";
//
Процедура ФормаРегламентированнойОтчетности_ИмяФормыВыбораПериода(ПолноеИмяФормыВыбораПериода) Экспорт
	
КонецПроцедуры

// Процедура переопределяет имя и параметры открытия формы выбора отчета для установки отбора в форме "РегламентированнаяОтчетность".
//
// Параметры:
//  ПолноеИмяФормыВыбораВидаОтчета - Строка - Полный путь к форме выбора вида отчета.
//  ПараметрыФормыВыбораВидаОтчета - Структура - Параметры открытия формы выбора вида отчета.
//
// Пример:
//  ПолноеИмяФормыВыбораВидаОтчета = "ОбщаяФорма.ФормаПодбораЗначенийВСписок";
//
Процедура ФормаРегламентированнойОтчетности_ОпределениеФормыВыбораВидаОтчета(ПолноеИмяФормыВыбораВидаОтчета,
																			 ПараметрыФормыВыбораВидаОтчета) Экспорт
	
КонецПроцедуры

// Устарела. Процедура проверяет, выполнялась ли ранее настройка автозаполнения.
//
// Параметры:
//   ПараметрыОтчета       - Структура - параметры регл. отчета.
//   ВыполняемоеОповещение - ОписаниеОповещения - Описание оповещения, которое будет вызвано после выполнения данной операции.
//                                                В качестве результата описания оповещения должно передаваться булево значение,
//												  от которого зависит будет ли выполнятся дальнейший код в процедуре,
//												  которая вызвала этот метод.
//
Процедура ПроверитьНастройкиЗаполненияОтчета(ПараметрыОтчета, ВыполняемоеОповещение) Экспорт
	
КонецПроцедуры	



#Область МеханизмТарификации

// Проверяет возможность автоматического заполнения регламентированного отчета по данным ИБ конфигурации.
//
// Параметры:
//  ИмяФормы - Строка - имя формы регламентированного отчета;
//  Отказ - Булево - признак отказа от автозаполнения регл. отчета.
//
Процедура ПроверитьВозможностьАвтоЗаполненияРеглОтчета(ИмяФормы, Отказ) Экспорт
 		 	
КонецПроцедуры

#КонецОбласти

#КонецОбласти