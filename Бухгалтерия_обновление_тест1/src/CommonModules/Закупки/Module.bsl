
#Область ПрограммныйИнтерфейс

#Область Проведение

// Формирует параметры для проведения документа по регистрам учетного механизма через общий механизм проведения.
//
// Параметры:
//  Документ - ДокументОбъект - записываемый документ
//  Свойства - ФиксированнаяСтруктура - свойства документа (См. ПроведениеДокументов.СвойстваДокумента).
//
// Возвращаемое значение:
//  Структура - параметры учетного механизма (См. ПроведениеДокументов.ПараметрыУчетногоМеханизма()).
//
Функция ПараметрыДляПроведенияДокумента(Документ, Свойства) Экспорт
	
	Параметры = ПроведениеДокументов.ПараметрыУчетногоМеханизма();
	
	// Проведение
	Если Свойства.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		
		Параметры.ПодчиненныеРегистры.Добавить(Метаданные.РегистрыНакопления.ЗаказыПоставщикам);
		
	КонецЕсли;
	
	// Контроль
	Если Свойства.РежимЗаписи <> РежимЗаписиДокумента.Запись Тогда
		
		ТипДокумента = ТипЗнч(Документ);
		
		Если Не Свойства.ЭтоНовый
				И (ТипДокумента = Тип("ДокументОбъект.ЗаказПоставщику")
				//++ НЕ УТ
				Или ТипДокумента = Тип("ДокументОбъект.ЗаказПереработчику")
				//-- НЕ УТ
				)
			Или Свойства.РежимЗаписи = РежимЗаписиДокумента.Проведение
				И (ТипДокумента = Тип("ДокументОбъект.ПриобретениеТоваровУслуг")
				//++ НЕ УТ
				Или ТипДокумента = Тип("ДокументОбъект.ОтчетПереработчика")
				Или ТипДокумента = Тип("ДокументОбъект.ПоступлениеОтПереработчика")
				//-- НЕ УТ
				Или ТипДокумента = Тип("ДокументОбъект.ПриемкаТоваровНаХранение")
				) Тогда
			Параметры.КонтрольныеРегистрыИзменений.Добавить(Метаданные.РегистрыНакопления.ЗаказыПоставщикам);
		КонецЕсли;

		
	КонецЕсли;
	
	Возврат Параметры;
	
КонецФункции

// Процедура формирования движений по подчиненным регистрам закупок.
//
// Параметры:
//	ТаблицыДляДвижений - Структура - таблицы данных документа
//	Движения - КоллекцияДвижений - коллекция наборов записей движений документа
//	Отказ - Булево - признак отказа от проведения документа.
//
Процедура ОтразитьДвижения(ТаблицыДляДвижений, Движения, Отказ) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ПроведениеДокументов.ОтразитьДвижения(ТаблицыДляДвижений, Движения, "ЗаказыПоставщикам");
	
КонецПроцедуры

// Формирует тексты запросов для контроля изменений записанных движений регистров.
//
// Параметры:
//  Запрос - Запрос - запрос, хранящий параметры используемые в списке запросов
//  ТекстыЗапроса - СписокЗначений - список текстов запросов и их имен.
//  Документ - ДокументОбъект - записываемый документ.
//
Процедура ИнициализироватьДанныеКонтроляИзменений(Запрос, ТекстыЗапроса, Документ) Экспорт
	
	Если ПроведениеДокументов.ЕстьЗаписиВТаблице(Документ, "ДвиженияЗаказыПоставщикамИзменение") Тогда
		
		ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров =
			Константы.ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров.Получить();
		
		Если ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров = 0 Тогда
			
			ТекстЗапроса =
				"ВЫБРАТЬ
				|	ТаблицаОстатков.ЗаказПоставщику                КАК Заказ,
				|	ТаблицаОстатков.Номенклатура                   КАК Номенклатура,
				|	ТаблицаОстатков.Номенклатура.ЕдиницаИзмерения  КАК ЕдиницаИзмерения,
				|	ТаблицаОстатков.Характеристика                 КАК Характеристика,
				|	ТаблицаОстатков.Склад                          КАК Склад,
				|	ТаблицаОстатков.КОформлениюОстаток             КАК Количество
				|ИЗ
				|	РегистрНакопления.ЗаказыПоставщикам.Остатки(,
				|			(ЗаказПоставщику, Номенклатура, Характеристика, Склад) В
				|				(ВЫБРАТЬ
				|					Таблица.ЗаказПоставщику,
				|					Таблица.Номенклатура,
				|					Таблица.Характеристика,
				|					Таблица.Склад
				|				ИЗ
				|					ДвиженияЗаказыПоставщикамИзменение КАК Таблица)
				|	) КАК ТаблицаОстатков
				|ГДЕ
				|	ТаблицаОстатков.КОформлениюОстаток < 0";
			
		Иначе
			
			ТекстЗапроса = 
				"ВЫБРАТЬ
				|	ЗаказыОстатки.ЗаказПоставщику                КАК Заказ,
				|	ЗаказыОстатки.Номенклатура                   КАК Номенклатура,
				|	ЗаказыОстатки.Номенклатура.ЕдиницаИзмерения  КАК ЕдиницаИзмерения,
				|	ЗаказыОстатки.Характеристика                 КАК Характеристика,
				|	ЗаказыОстатки.Склад                          КАК Склад,
				|	ЗаказыОстатки.КОформлениюОстаток             КАК Количество
				|ИЗ
				|	ВТЗаказыПоставщикамОстатки КАК ЗаказыОстатки
				|	ЛЕВОЕ СОЕДИНЕНИЕ
				|		ВТДопустимыеОтклоненияЗаказыПоставщикам КАК ДопустимыеОтклонения
				|		ПО
				|			ЗаказыОстатки.ЗаказПоставщику  = ДопустимыеОтклонения.ЗаказПоставщику
				|			И ЗаказыОстатки.Номенклатура   = ДопустимыеОтклонения.Номенклатура
				|			И ЗаказыОстатки.Характеристика = ДопустимыеОтклонения.Характеристика
				|			И ЗаказыОстатки.Склад          = ДопустимыеОтклонения.Склад
				|ГДЕ
				|	ЗаказыОстатки.КОформлениюОстаток + ЕСТЬNULL(ДопустимыеОтклонения.ДопустимоеОтклонение,0) < 0";
			
		КонецЕсли;
		
		ТекстыЗапроса.Добавить(ТекстЗапроса, "ОшибкиЗаказыПоставщикам");
	КонецЕсли;
	
КонецПроцедуры

// Выводит сообщения пользователю при наличии ошибок контроля изменений записанных движений регистров.
//
// Параметры:
//  РезультатыКонтроля - Структура - таблицы с результатами контроля изменений
//  Документ - ДокументОбъект - записываемый документ
//  Отказ - Булево - признак отказа от проведения документа.
//
Процедура СообщитьОРезультатахКонтроляИзменений(РезультатыКонтроля, Документ, Отказ) Экспорт
	
	Если ПроведениеДокументов.ЕстьЗаписиВТаблице(Документ, "ДвиженияЗаказыПоставщикамИзменение") Тогда
		
		ШаблонСообщенияСоСкладом = НСтр("ru='Номенклатура %1 склад %2
|Оформлено больше чем указано в распоряжении %3 на %4 %5'
|;uk='Номенклатура %1 склад %2 
|Оформлено більше ніж зазначено в розпорядженні %3 на %4 %5'");
			
		ШаблонСообщенияБезСклада = НСтр("ru='Номенклатура %1
|Оформлено больше чем указано в распоряжении %3 на %4 %5'
|;uk='Номенклатура %1 
|Оформлено більше ніж зазначено в розпорядженні %3 на %4 %5'");
		
		Для каждого СтрокаОшибки Из РезультатыКонтроля.ОшибкиЗаказыПоставщикам Цикл
			
			ПредставлениеНоменклатуры = НоменклатураКлиентСервер.ПредставлениеНоменклатуры(
				СтрокаОшибки.Номенклатура, СтрокаОшибки.Характеристика);
			
			Если ЗначениеЗаполнено(СтрокаОшибки.Склад) Тогда
				ТекстСообщения = СтрШаблон(ШаблонСообщенияСоСкладом, ПредставлениеНоменклатуры, СтрокаОшибки.Склад,
					СтрокаОшибки.Заказ, -СтрокаОшибки.Количество, СтрокаОшибки.ЕдиницаИзмерения);
			Иначе
				ТекстСообщения = СтрШаблон(ШаблонСообщенияБезСклада, ПредставлениеНоменклатуры,,
					СтрокаОшибки.Заказ, -СтрокаОшибки.Количество, СтрокаОшибки.ЕдиницаИзмерения);
			КонецЕсли;
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Документ,,, Отказ);
			
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти