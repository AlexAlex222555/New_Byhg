#Область СлужебныйПрограммныйИнтерфейс

#Область ПолучениеНастроекИПараметровУчетаНДС

// см. УчетНДСУП.НастройкиУчета
Процедура ДополнитьНастройкиУчета(НастройкиУчета) Экспорт
	
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

// см. УчетНДСУП.ПараметрыУчетаПоОрганизации
Процедура ДополнитьПараметрыУчетаОрганизации(ПараметрыУчета, Организация, Дата, Склад) Экспорт
	
	//++ Локализация
	
	ДатаСреза = ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДатаСеанса());
	
	
	НастройкиСистемыНалогообложения= НастройкиНалоговУчетныхПолитикПовтИсп.ДействующиеПараметрыНалоговУчетныхПолитик("НастройкиСистемыНалогообложения",
		Организация,
		ДатаСреза);
		
	ПараметрыУчета.Вставить("ПлательщикНДС", Ложь);
	
	Если НЕ НастройкиСистемыНалогообложения = Неопределено Тогда
		
        Если НЕ НастройкиСистемыНалогообложения.ПлательщикНДС Тогда
			ПараметрыУчета.ОсновноеНалогообложениеНДСПродажи = Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС;
            ПараметрыУчета.ОсновноеНалоговоеНазначение = Справочники.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяХозДеятельность;
		Иначе
			ПараметрыУчета.ОсновноеНалогообложениеНДСПродажи = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС;
            ПараметрыУчета.ОсновноеНалоговоеНазначение = Справочники.НалоговыеНазначенияАктивовИЗатрат.НДС_Облагаемая;
		КонецЕсли;
		ПараметрыУчета.ОсновнойВидДеятельностиНДСЗакупки = ПараметрыУчета.ОсновноеНалогообложениеНДСПродажи;
		ПараметрыУчета.ПлательщикНДС = НастройкиСистемыНалогообложения.ПлательщикНДС;
		
		
		ПараметрыУчета.РаздельныйУчетНДС = НастройкиСистемыНалогообложения.РаздельныйУчетТоваровПоНалогообложениюНДС;
		
	КонецЕсли;
	//-- Локализация
	
КонецПроцедуры

// см. РегистрыСведений.НастройкиУчетаНДС.ЗначенияПоУмолчанию
Процедура ДополнитьОписаниеНастроекУчетаНДСПоОрганизации(ОписаниеНастроек) Экспорт
	
	//++ Локализация
    ОписаниеНастроек.Вставить("ИННПлательщикаНДС", "");
    ОписаниеНастроек.Вставить("НомерСвидетельстваПлательщикаНДС", "");
	//-- Локализация
	
КонецПроцедуры

// см. РегистрыСведений.НастройкиУчетаНДС.ОписаниеДействующихПараметров
Процедура ДополнитьОписаниеДействующихНастроекУчетаНДС(МассивСтрокОписания, ДействующиеНастройки) Экспорт
	
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

// см. УчетНДСУПСлужебный.ПрименяемыеТипыНалогообложенияНДС
Процедура ДополнитьПрименяемыеТипыНалогообложенияНДС(ТипыНалогообложения, НастройкиУчета, Продажи, Закупки) Экспорт
	
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

// см. УчетНДСУПСлужебный.ПрименяемыеВидыДеятельностиНДС
Процедура ДополнитьПрименяемыеВидыДеятельностиНДС(ВидыДеятельностиНДС, НастройкиУчета) Экспорт
	
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

// см. УчетНДСУП.ВидыДеятельностиНДСУчитываетсяВСтоимости
Процедура ДополнитьВидыДеятельностиНДСУчитываетсяВСтоимости(Массив) Экспорт
	
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

// см. УчетНДСУП.ВидыДеятельностиНДСПринимаетсяКВозмещению
Процедура ДополнитьВидыДеятельностиНДСПринимаетсяКВозмещению(Массив) Экспорт
	
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

// см. УчетНДСУПСлужебный.НалогообложенияНДСПродажиНаЭкспорт
Процедура ДополнитьНалогообложенияНДСПродажиНаЭкспорт(Массив) Экспорт
	
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

// см. УчетНДСУП.ТипыНалогообложенияНДСНеоблагаемые
Процедура ДополнитьТипыНалогообложенияНДСНеоблагаемые(ТипыНалогообложения) Экспорт
	//++ Локализация
	//-- Локализация
КонецПроцедуры

#КонецОбласти

#Область СтавкиНДС

// см. Справочники.СтавкиНДС.СоздатьЭлементыПервоначальногоЗаполнения
Процедура ЗаполнитьСправочникСтавкиНДС() Экспорт
	//++ Локализация
	НачатьТранзакцию();
	Попытка
		
		#Область СтавкаНДС20
        СтавкаНДС20 = НДСКлиентСерверПовтИсп.СтавкаНДСПоЗначениюПеречисления(
			Перечисления.СтавкиНДС.НДС20, Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
		Если СтавкаНДС20.Пустая() Тогда
			СтавкаНДС20 = Справочники.СтавкиНДС.СоздатьЭлемент();
		Иначе
			СтавкаНДС20 = СтавкаНДС20.ПолучитьОбъект();
		КонецЕсли;
		
		СтавкаНДС20.Наименование = "20%";
		СтавкаНДС20.Ставка = 20;
		СтавкаНДС20.ПеречислениеСтавкаНДС = Перечисления.СтавкиНДС.НДС20; 
		
		СтавкаНДС20.ТипыНалогообложенияНДС.Очистить();
		
		ТипНалогообложенияНДС = СтавкаНДС20.ТипыНалогообложенияНДС.Добавить();
		ТипНалогообложенияНДС.ТипНалогообложенияНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС;
		
		
		СтавкаНДС20.Записать();
		#КонецОбласти
		
		
		
		#Область СтавкаНДС0
        СтавкаНДС0 = НДСКлиентСерверПовтИсп.СтавкаНДСПоЗначениюПеречисления(Перечисления.СтавкиНДС.НДС0);
		Если СтавкаНДС0.Пустая() Тогда
			СтавкаНДС0 = Справочники.СтавкиНДС.СоздатьЭлемент();
		Иначе
			СтавкаНДС0 = СтавкаНДС0.ПолучитьОбъект();
		КонецЕсли;
	
		СтавкаНДС0.Наименование = "0%";
		СтавкаНДС0.Ставка = 0;
		СтавкаНДС0.ПеречислениеСтавкаНДС = Перечисления.СтавкиНДС.НДС0;
		
		СтавкаНДС0.ТипыНалогообложенияНДС.Очистить();
		
		
        ТипНалогообложенияНДС = СтавкаНДС0.ТипыНалогообложенияНДС.Добавить();
        ТипНалогообложенияНДС.ТипНалогообложенияНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт;
        
		
		СтавкаНДС0.Записать();
		#КонецОбласти
		
        
		#Область СтавкаНДС7
		СтавкаНДС7 = НДСКлиентСерверПовтИсп.СтавкаНДСПоЗначениюПеречисления(
			Перечисления.СтавкиНДС.НДС7, Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
		Если СтавкаНДС7.Пустая() Тогда
			СтавкаНДС7 = Справочники.СтавкиНДС.СоздатьЭлемент();
		Иначе
			СтавкаНДС7 = СтавкаНДС7.ПолучитьОбъект();
		КонецЕсли;
	
		СтавкаНДС7.Наименование = "7%";
		СтавкаНДС7.Ставка = 7;
		СтавкаНДС7.ПеречислениеСтавкаНДС = Перечисления.СтавкиНДС.НДС7;
		
		СтавкаНДС7.ТипыНалогообложенияНДС.Очистить();
		ТипНалогообложенияНДС = СтавкаНДС7.ТипыНалогообложенияНДС.Добавить();
		ТипНалогообложенияНДС.ТипНалогообложенияНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС;
		
		СтавкаНДС7.Записать();
		#КонецОбласти
		
		#Область СтавкаНДС14
		СтавкаНДС14 = НДСКлиентСерверПовтИсп.СтавкаНДСПоЗначениюПеречисления(
			Перечисления.СтавкиНДС.НДС14, Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
		Если СтавкаНДС14.Пустая() Тогда
			СтавкаНДС14 = Справочники.СтавкиНДС.СоздатьЭлемент();
		Иначе
			СтавкаНДС14 = СтавкаНДС14.ПолучитьОбъект();
		КонецЕсли;
	
		СтавкаНДС14.Наименование = "14%";
		СтавкаНДС14.Ставка = 14;
		СтавкаНДС14.ПеречислениеСтавкаНДС = Перечисления.СтавкиНДС.НДС14;
		
		СтавкаНДС14.ТипыНалогообложенияНДС.Очистить();
		ТипНалогообложенияНДС = СтавкаНДС14.ТипыНалогообложенияНДС.Добавить();
		ТипНалогообложенияНДС.ТипНалогообложенияНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС;
		
		СтавкаНДС14.Записать();
		#КонецОбласти
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		ВызватьИсключение;
		
	КонецПопытки;
	//-- Локализация
	
КонецПроцедуры

// см. УчетНДСУП.СтавкаНДСПоНоменклатуреИНалогообложению
Процедура ЗаполнитьСтавкуНДСПоНоменклатуреИНалогообложению(СтавкаНДС, Знач Дата, Знач Номенклатура, Знач НалогообложениеНДС, 
													Знач РеквизитыНоменклатуры, Знач СтавкаНДСПоТипуНалогообложения) Экспорт
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

// см. УчетНДСУП.СтавкаНДСПоУмолчанию
Процедура УстановитьСтавкуНДСПоУмолчанию(СтавкаНДС, Знач Дата, Знач РасчетнаяСтавка, Знач НалогообложениеНДС) Экспорт
	
	//++ Локализация
    СтавкаНДС = СтавкаНДСПоПеречислению(Перечисления.СтавкиНДС.НДС20, НалогообложениеНДС);
	//-- Локализация
	
КонецПроцедуры

// см. УчетНДСУП.СкорректироватьСтавкуНДС
Процедура СкорректироватьСтавкуНДС(НоваяСтавкаНДС, СтавкаНДС, Знач Дата) Экспорт
	
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

// см. УчетНДСУП.ЗаполнитьСтавкуНДСДляПлатежей
Процедура ЗаполнитьСтавкаНДСДляПлатежей(СтавкаНДС, Знач НалогообложениеНДС) Экспорт
	
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

#Область МетодыОбновленияИБ

// Устанавливает параметр запроса ПустаяСтавкаНДС
//
// Параметры:
//  Запрос - Запрос - Запрос, в котором требуется установить параметр ПустаяСтавкаНДС 
//
Процедура УстановитьПараметрЗапросаПустаяСтавкаНДСПеречислением(Запрос) Экспорт
	
	Если Запрос.Параметры.Свойство("ПустаяСтавкаНДС") Тогда
		Возврат;
	КонецЕсли;
	
	ПустаяСтавкаНДС = "";
	
	//++ Локализация
	ПустаяСтавкаНДС = Перечисления.СтавкиНДС.ПустаяСсылка();
	//-- Локализация
	
	Запрос.УстановитьПараметр("ПустаяСтавкаНДС", ПустаяСтавкаНДС);
	
КонецПроцедуры

// Получение элемента справочника СтавкиНДС по перечислению СтавкиНДС
//
// Параметры:
//  ПеречислениеСтавкаНДС - Перечисления.СтавкиНДС - Значение перечисления Ставки НДС по которому нужно получить 
//                                                    соответствующее значение справочника Ставки НДС.
//	ТипНалогообложенияНДС - ПеречислениеСсылка.ТипыНалогообложенияНДС - налогообложение НДС, в рамках которого нужно 
//																		найти ставку.
// 
Функция СтавкаНДСПоПеречислению(ПеречислениеСтавкаНДС, ТипНалогообложенияНДС = Неопределено) Экспорт 
	
	Значение = Неопределено;
	//++ Локализация
    Значение = НДСКлиентСерверПовтИсп.СтавкаНДСПоЗначениюПеречисления(ПеречислениеСтавкаНДС, ТипНалогообложенияНДС);
	//-- Локализация
	Возврат Значение;
	
КонецФункции

// Заполняет ставку НДС значением с типом Справочник.СтавкаНДС на основании данных реквизита УдалитьСтавкаНДС с типом Перечисление.СтавкаНДС
//
// Параметры:
//   ДокументОбъект	- ДокументОбъект - Документ, в котором нужно заполнить реквизит СтавкаНДС.
//   МассивТЧ - Массив - массив с именами табличных частей, в которых требуется заполнение данных.
//   ОбъектИзменен - Булево - Признак успешной обработки объекта.
//
Процедура ЗаполнитьКолонкуТЧСтавкаНДС(ДокументОбъект, МассивТЧ, ОбъектИзменен) Экспорт
	
	//++ Локализация
	Для Каждого ТабличнаяЧасть Из МассивТЧ Цикл
		СтрокиСПустойСтавкой = ДокументОбъект[ТабличнаяЧасть].НайтиСтроки(Новый Структура("СтавкаНДС", Справочники.СтавкиНДС.ПустаяСсылка()));
		Для Каждого СтрокаТЧ Из СтрокиСПустойСтавкой Цикл
			СтрокаТЧ.СтавкаНДС = СтавкаНДСПоПеречислению(СтрокаТЧ.УдалитьСтавкаНДС);
			ОбъектИзменен = Истина;
		КонецЦикла;
	КонецЦикла;
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область УчетВходящегоНДС

// см. УчетНДСУПСлужебный.ДоступныеНалогообложенияНДСЗакупки
Процедура ДополнитьНедоступныеПоОперацииТипыНалогообложенияЗакупки(НедоступныеТипыНалогообложения, ПараметрыЗаполнения) Экспорт
	
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

// см. УчетНДСУП.ПроверитьЗаполнениеДокументаЗакупкиПоНалогообложениюНДС
Процедура ПроверитьЗаполнениеДокументаЗакупкиПоНалогообложениюНДС(Объект, НалогообложениеНДС, ПараметрыПроверки, Отказ) Экспорт
	
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

// см. УчетНДСУП.УстановитьУсловноеОформлениеСуммНДСПоНалогообложениюЗакупки
Процедура ДополнитьУсловноеОформлениеСуммНДСПоНалогообложениюЗакупки(Форма, ИмяПоляВводаСтавкиНДС, ИмяПоляВводаСуммыНДС, ИмяПоляВводаСуммыСНДС) Экспорт
	
	//++ Локализация
	УсловноеОформление = Форма.УсловноеОформление;
	ЭлементыФормы = Форма.Элементы;
	
	
	//
	
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ПутьКДаннымСтавкаНДС = ЭлементыФормы[ИмяПоляВводаСтавкиНДС].ПутьКДанным;
	
	ГруппаОтбора = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаОтбора.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ЭлементыФормы[ИмяПоляВводаСуммыНДС].Имя);
	
	ОтборЭлемента = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ПутьКДаннымСтавкаНДС);
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
	ОтборЭлемента.ПравоеЗначение = УчетНДСУП.СписокНезначащихСтавок();
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	//-- Локализация
	
КонецПроцедуры

// см. УчетНДСУПСлужебный.ДоступныеВидыДеятельностиНДС
Процедура ДополнитьДоступныеНедоступныеВидыДеятельностиНДСПоПараметрам(ДоступныеВидыДеятельностиНДС, НедоступныеВидыДеятельностиНДС, ПараметрыЗаполнения) Экспорт
	
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

// см. УчетНДСУП.ЗаполнитьВидДеятельностиНДС
Процедура ЗаполнитьВидДеятельностиНДСПоПараметрам(НовыйВидДеятельностиНДС, ТекущийВидДеятельностиНДС, ПараметрыЗаполнения) Экспорт
	
	//++ Локализация
	//-- Локализация
КонецПроцедуры

// см. УчетНДСУП.ПроверитьЗаполнениеДокументаПоВидуДеятельностиНДС
Процедура ПроверитьЗаполнениеДокументаПоВидуДеятельностиНДС(Объект, ВидДеятельностиНДС, ПараметрыПроверки, Отказ) Экспорт
	
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область УчетИсходящегоНДС

// см. УчетНДСУПСлужебный.ДоступныеНалогообложенияНДСПродажи
Процедура ДополнитьДоступныеНедоступныеНалогообложенияНДСПродажиПоПараметрам(ДоступныеНалогообложенияНДС, НедоступныеНалогообложенияНДС, ПараметрыЗаполнения) Экспорт
	
	//++ Локализация
	ПараметрыУчетаИБ = УчетНДСУП.НастройкиУчета();
	ПараметрыУчетаОрганизации = УчетНДСУП.ПараметрыУчетаПоОрганизации(
                                    ПараметрыЗаполнения.Организация, ПараметрыЗаполнения.Дата);
	
	Если ПараметрыЗаполнения.РеализацияТоваров Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт);
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ДоступныеНалогообложенияНДС.РеализацияТоваров, МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.РеализацияРаботУслуг Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт);
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ДоступныеНалогообложенияНДС.РеализацияРаботУслуг, МассивДоступных);
	КонецЕсли;
	
	
	
	Если ПараметрыЗаполнения.ЭтоОперацияМеждуОрганизациями Тогда
		НедоступныеНалогообложенияНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт);
	КонецЕсли;
	//-- Локализация
	
КонецПроцедуры

// см. УчетНДСУП.ЗаполнитьНалогообложениеНДСПродажи
Процедура ЗаполнитьНалогообложениеНДСПродажиПоПараметрам(НовоеНалогообложениеНДС, ТекущееНалогообложениеНДС, ПараметрыЗаполнения) Экспорт
	
	//++ Локализация
	НастройкиУчета = УчетНДСУП.НастройкиУчета();
	ПараметрыУчетаОрганизации = УчетНДСУП.ПараметрыУчетаПоОрганизации(
									ПараметрыЗаполнения.Организация,
                                    ПараметрыЗаполнения.Дата);
	
	Если ТекущееНалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС
		 ИЛИ ТекущееНалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС
         ИЛИ ТекущееНалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОсвобожденаОтНДС
         ИЛИ ТекущееНалогообложениеНДС = Неопределено 
		 ИЛИ ТекущееНалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПустаяСсылка() Тогда
	
        НовоеНалогообложениеНДС = ПараметрыУчетаОрганизации.ОсновноеНалогообложениеНДСПродажи;
		
    ИначеЕсли ТекущееНалогообложениеНДС <> Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт	Тогда
    	НовоеНалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт;
	КонецЕсли;
	//-- Локализация
	
КонецПроцедуры

// см. УчетНДСУП.ПараметрыЗаполненияВидовЗапасовПоНалогообложению
Процедура ДополнитьПараметрыЗаполненияВидовЗапасовПоНалогообложению(ОтборыВидовЗапасов, Организация, Дата, НалогообложениеНДС) Экспорт
	
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

// см. УчетНДСУП.УстановитьУсловноеОформлениеСуммНДСПоНалогообложениюПродажи
Процедура ДополнитьУсловноеОформлениеСуммНДСПоНалогообложениюПродажи(Форма, ИмяПоляВводаСтавкиНДС, ИмяПоляВводаСуммыНДС, ИмяПоляВводаСуммыСНДС) Экспорт
	
	//++ Локализация
	УсловноеОформление = Форма.УсловноеОформление;
	ЭлементыФормы = Форма.Элементы;
	
	//
	
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ЭлементыФормы[ИмяПоляВводаСтавкиНДС].Имя);
	
	СписокНалогообложенийЭкспорт = Новый СписокЗначений;
	СписокНалогообложенийЭкспорт.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт);
	
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
    ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("НалогообложениеНДСПоУмолчанию");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
	ОтборЭлемента.ПравоеЗначение = СписокНалогообложенийЭкспорт;
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	
	//-- Локализация
	
КонецПроцедуры

// см. УчетНДСУП.ВидДеятельностиПоНалогообложениюНДС
Процедура УстановитьВидДеятельностиПоНалогообложениюНДС(ВидДеятельностиНДС, Знач НалогообложениеНДС) Экспорт
	
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

// см. УчетНДСУП.ТекстЗапросаКорректностьВыбораНоменклатурыПоНалогообложениюНДСПродажи
Процедура ДополнитьТекстЗапросаКорректностьВыбораНоменклатурыПоНалогообложениюНДСПродажи(ТекстЗапроса, ПараметрыЗапроса) Экспорт
	
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

// см. УчетНДСУП.СообщитьОбОшибкахКорректностьВыбораНоменклатурыПоНалогообложениюНДС
Процедура СообщитьОбОшибкахКорректностьВыбораНоменклатурыПоНалогообложениюНДСПродажи(Выборка, ДокументПродажи, ИмяТЧ, ПредставлениеТЧ, Отказ) Экспорт
	
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

// см. УчетНДСУП.ОграничениеТоваровПоНалогообложению
Процедура ДополнитьОграничениеТоваровПоНалогообложению(Ограничения, Знач НалогообложениеНДС) Экспорт
	
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

// см. УчетНДСУПСлужебный.ДоступныеНалоговыеНазначения  
Процедура ДополнитьДоступныеНедоступныеНалоговыеНазначенияПоПараметрам(ДоступныеНалоговыеНазначения, НедоступныеНалоговыеНазначения, ПараметрыЗаполнения) Экспорт
	
	// Дополним доступные налоговые назначения
	
	Если ПараметрыЗаполнения.ДвижениеТоваровНаСкладах Тогда
		МассивДоступных = Новый Массив;
        МассивДоступных.Добавить(Справочники.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка());
        МассивДоступных.Добавить(Справочники.НалоговыеНазначенияАктивовИЗатрат.НДС_Облагаемая);
        МассивДоступных.Добавить(Справочники.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяХозДеятельность);
        МассивДоступных.Добавить(Справочники.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяНеХозДеятельность);
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ДоступныеНалоговыеНазначения.ДвижениеТоваровНаСкладах, МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ДвижениеТоваровИРаботВПроизводстве Тогда
		МассивДоступных = Новый Массив;
        МассивДоступных.Добавить(Справочники.НалоговыеНазначенияАктивовИЗатрат.НДС_Облагаемая);
        МассивДоступных.Добавить(Справочники.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяХозДеятельность);
        МассивДоступных.Добавить(Справочники.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяНеХозДеятельность);
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ДоступныеНалоговыеНазначения.ДвижениеТоваровИРаботВПроизводстве, МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.СписаниеТоваровИРаботНаСтатьи Тогда
		МассивДоступных = Новый Массив;
        МассивДоступных.Добавить(Справочники.НалоговыеНазначенияАктивовИЗатрат.НДС_Облагаемая);
        МассивДоступных.Добавить(Справочники.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяХозДеятельность);
        МассивДоступных.Добавить(Справочники.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяНеХозДеятельность);
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ДоступныеНалоговыеНазначения.СписаниеТоваровИРаботНаСтатьи, МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ВыпускПродукцииИРабот Тогда
		МассивДоступных = Новый Массив;
        МассивДоступных.Добавить(Справочники.НалоговыеНазначенияАктивовИЗатрат.НДС_Облагаемая);
        МассивДоступных.Добавить(Справочники.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяХозДеятельность);
        МассивДоступных.Добавить(Справочники.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяНеХозДеятельность);
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ДоступныеНалоговыеНазначения.ВыпускПродукцииИРабот, МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.СборкаРазборкаТоваров Тогда
		МассивДоступных = Новый Массив;
        МассивДоступных.Добавить(Справочники.НалоговыеНазначенияАктивовИЗатрат.НДС_Облагаемая);
        МассивДоступных.Добавить(Справочники.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяХозДеятельность);
        МассивДоступных.Добавить(Справочники.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяНеХозДеятельность);
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ДоступныеНалоговыеНазначения.СборкаРазборкаТоваров, МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ПередачаВЭксплуатацию Тогда
		МассивДоступных = Новый Массив;
        МассивДоступных.Добавить(Справочники.НалоговыеНазначенияАктивовИЗатрат.НДС_Облагаемая);
        МассивДоступных.Добавить(Справочники.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяХозДеятельность);
        МассивДоступных.Добавить(Справочники.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяНеХозДеятельность);
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ДоступныеНалоговыеНазначения.ПередачаВЭксплуатацию, МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ПрочееВыбытиеТоваров Тогда
		МассивДоступных = Новый Массив;
        МассивДоступных.Добавить(Справочники.НалоговыеНазначенияАктивовИЗатрат.НДС_Облагаемая);
        МассивДоступных.Добавить(Справочники.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяХозДеятельность);
        МассивДоступных.Добавить(Справочники.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяНеХозДеятельность);
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ДоступныеНалоговыеНазначения.ПрочееВыбытиеТоваров, МассивДоступных);
	КонецЕсли;
	
    Если ПараметрыЗаполнения.КорректировкаНалоговогоНазначения Тогда
        
        МассивДоступных = Новый Массив;
        
        МассивДоступных.Добавить(Справочники.НалоговыеНазначенияАктивовИЗатрат.НДС_Облагаемая);
        МассивДоступных.Добавить(Справочники.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяХозДеятельность);
        МассивДоступных.Добавить(Справочники.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяНеХозДеятельность);
        
        ДоступныеНалоговыеНазначения.Вставить("КорректировкаНалоговогоНазначения", МассивДоступных);
        
    КонецЕсли;
	
КонецПроцедуры

#Область Проведение

#Область ПодключениеКМеханизмуПроведения

// см. УчетНДСУП.ПараметрыДляПроведенияДокумента
Процедура ДополнитьПараметрыДляПроведенияДокумента(Параметры, Документ, Свойства) Экспорт
	
	//++ Локализация
	//-- Локализация
КонецПроцедуры

// см. УчетНДСУП.ОтразитьДвижения
Процедура ОтразитьДвижения(ТаблицыДляДвижений, Движения, Отказ) Экспорт
	
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

// см. УчетНДСУП.ИнициализироватьДанныеКонтроляИзменений
Процедура ДополнитьЗапросКонтроляИзменений(Запрос, ТекстыЗапроса, Документ) Экспорт
	
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

// см. УчетНДСУП.СообщитьОРезультатахКонтроляИзменений
Процедура СообщитьОРезультатахКонтроляИзменений(РезультатыКонтроля, Документ, Отказ) Экспорт
	
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ФормированиеЗаданий

#Область ЗаданияКЗакрытиюМесяца

Процедура ДополнительныеПроверкиПриРаспределенииНДС(ПараметрыОбработчика) Экспорт
	//++ Локализация
	//-- Локализация
КонецПроцедуры

// см. УчетНДСУП.ПередЗаписьюЗаданияКЗакрытиюМесяца
Процедура ПередЗаписьюЗаданияКЗакрытиюМесяца(Месяц, Операция, Организация, Документ) Экспорт
	
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

// см. УчетНДСУПСлужебный.СоответствиеЗапросовКонтрольнымРегистрам
Процедура ДополнитьСоответствиеЗапросовКонтрольнымРегистрам(СоответствиеЗаданий, Запрос) Экспорт
	
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

// см. УчетНДСУПСлужебный.ТекстЗапросаДвиженияКонтрагентДоходыРасходы
Процедура ДополнитьТекстЗапросаДвиженияКонтрагентДоходыРасходы(ТекстЗапроса) Экспорт
	
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

// см. УчетНДСУПСлужебный.ТекстЗапросаВыручкаИСебестоимостьПродаж
Процедура ДополнитьТекстЗапросаВыручкаИСебестоимостьПродаж(ТекстЗапроса, Запрос) Экспорт

	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область ЗаданияКФормированиюДвиженийПоНДС

// см. УчетНДСУП.СформироватьЗаданияПоДокументам
Процедура СформироватьЗаданияПоДокументам(Тип, МассивСсылок) Экспорт
	
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область ПрочийИнтерфейсФормированияЗаданий

//++ НЕ УТ
// Выполняет формирование заданий по корректировке налоговых назначений капитальных инвестиций по результатам изменения партионных регистров.
//
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер, который содержит временную таблицу ВтИзменениеПартий
//	   ВтИзменениеПартий должна содержать поля: 
//	   * Период - Дата - Период движения партии.
//	   * Организация - СправочникСсылка.Организации - Организация учета партии.
//	   * КорНалоговоеНазначение - СправочникСсылка.НалоговыеНазначенияАктивовИЗатрат - Новое налоговое назначение НДС
//
Процедура СформироватьЗаданияДляКорректировкиНалоговогоНазначенияКапитальныхИнвестиций(МенеджерВременныхТаблиц) Экспорт
	
	//++ Локализация
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(Партии.Период, МЕСЯЦ)                        КАК Месяц,
	|	Партии.Организация                                         КАК Организация
	|ПОМЕСТИТЬ
	|	ВТПартии
	|ИЗ
	|	ВтИзменениеПартий КАК Партии
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Партии.Месяц 		КАК Месяц,
	|	Партии.Организация	КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ОперацииЗакрытияМесяца.КорректировкаНалоговогоНазначенияКапитальныхИнвестиций) КАК Операция
	|ИЗ
	|	ВТПартии КАК Партии
	|";
	
	РегистрыСведений.ЗаданияКЗакрытиюМесяца.СоздатьЗаписиРегистраПоДаннымВыборки(Запрос.Выполнить().Выбрать());
	//-- Локализация
	
КонецПроцедуры
//-- НЕ УТ


#КонецОбласти


#КонецОбласти

#Область ПодключениеКБСП

// См. УчетНДСУП.ОпределитьОбъектыСКомандамиОтчетов
Процедура ОпределитьОбъектыСКомандамиОтчетов(Объекты) Экспорт
	
	//++ Локализация
    Объекты.Добавить(Метаданные.Документы.КорректировкаНалоговогоНазначенияЗапасов);
    Объекты.Добавить(Метаданные.Документы.НалоговаяНакладная);
    Объекты.Добавить(Метаданные.Документы.ОтчетОРозничнойВыручке);
    Объекты.Добавить(Метаданные.Документы.Приложение2КНалоговойНакладной);
    Объекты.Добавить(Метаданные.Документы.РегистрацияВходящегоНалоговогоДокумента);
    Объекты.Добавить(Метаданные.Документы.УстановкаКоэффициентаПропорциональногоНДС);
	//++ НЕ УТ
    Объекты.Добавить(Метаданные.Документы.КорректировкаНалоговогоНазначенияКапитальныхИнвестиций);
    Объекты.Добавить(Метаданные.Документы.КорректировкаНалоговогоНазначенияОС);
    Объекты.Добавить(Метаданные.Документы.ПерерасчетПропорциональногоНДСпоТоварамИОС);
	//-- НЕ УТ
	//-- Локализация

КонецПроцедуры

// См. УчетНДСУП.НастроитьВариантыОтчетов
Процедура НастроитьВариантыОтчетов(Настройки) Экспорт
	
	//++ Локализация
	#Область НДСАнализКорректировокТоваровИсходящихНалоговыхДокументов
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.НДСАнализКорректировокТоваровИсходящихНалоговыхДокументов);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОписаниеОтчета.Включен = Ложь;
	#КонецОбласти
	//-- Локализация
	
КонецПроцедуры

// См. УчетНДСУП.ЗаполнитьИсточникиДанныхДляПроверкиЗапретаИзменения
Процедура ЗаполнитьИсточникиДанныхДляПроверкиЗапретаИзменения(ИсточникиДанных) Экспорт

	//++ Локализация
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.КорректировкаНалоговогоНазначенияЗапасов",               "Дата", "РегламентныеОперации", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.НалоговаяНакладная",                   "Дата", "ПродажиВозвратыОтКлиентов", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.ОтчетОРозничнойВыручке",                   "Дата", "ПродажиВозвратыОтКлиентов", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.Приложение2КНалоговойНакладной",       "Дата", "ПродажиВозвратыОтКлиентов", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.РегистрацияВходящегоНалоговогоДокумента", "Дата", "ЗакупкиВозвратыПоставщикамПеремещенияСборки", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.УстановкаКоэффициентаПропорциональногоНДС",  			 "Дата", "РегламентныеОперации", "Организация");
	//++ НЕ УТ
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.КорректировкаНалоговогоНазначенияКапитальныхИнвестиций",  "Дата", "РегламентныеОперации", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.КорректировкаНалоговогоНазначенияОС","Дата", "БухгалтерскийУчет", "Организация");		
    ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.ПерерасчетПропорциональногоНДСпоТоварамИОС",  			 "Дата", "РегламентныеОперации", "Организация");
	//-- НЕ УТ
	//-- Локализация

КонецПроцедуры

// См. УчетНДСУП.ПриОпределенииКомандПодключенныхКОбъекту
Процедура ПриОпределенииКомандПодключенныхКОбъекту(НастройкиФормы, Источники, ПодключенныеОтчетыИОбработки, Команды) Экспорт
	
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

// См. УчетНДСУП.ПриОпределенииОбъектовСКомандамиСозданияНаОсновании
Процедура ПриОпределенииОбъектовСКомандамиСозданияНаОсновании(Объекты) Экспорт
	
	//++ Локализация
	Объекты.Добавить(Метаданные.Документы.КорректировкаНалоговогоНазначенияЗапасов);
	Объекты.Добавить(Метаданные.Документы.НалоговаяНакладная);
	Объекты.Добавить(Метаданные.Документы.ОтчетОРозничнойВыручке);
	Объекты.Добавить(Метаданные.Документы.Приложение2КНалоговойНакладной);
	Объекты.Добавить(Метаданные.Документы.РегистрацияВходящегоНалоговогоДокумента);
    Объекты.Добавить(Метаданные.Документы.УстановкаКоэффициентаПропорциональногоНДС);
	//++ НЕ УТ
    Объекты.Добавить(Метаданные.Документы.КорректировкаНалоговогоНазначенияКапитальныхИнвестиций);
	Объекты.Добавить(Метаданные.Документы.КорректировкаНалоговогоНазначенияОС);
	Объекты.Добавить(Метаданные.Документы.ПерерасчетПропорциональногоНДСпоТоварамИОС);
	//-- НЕ УТ
	//-- Локализация
	
КонецПроцедуры

// См. УчетНДСУП.ПриОпределенииОбъектовСКомандамиПечати
Процедура ПриОпределенииОбъектовСКомандамиПечати(СписокОбъектов) Экспорт

	//++ Локализация
	СписокОбъектов.Добавить(Документы.КорректировкаНалоговогоНазначенияЗапасов);
	СписокОбъектов.Добавить(Документы.НалоговаяНакладная);
	СписокОбъектов.Добавить(Документы.ОтчетОРозничнойВыручке);
	СписокОбъектов.Добавить(Документы.Приложение2КНалоговойНакладной);
	СписокОбъектов.Добавить(Документы.РегистрацияВходящегоНалоговогоДокумента);
    СписокОбъектов.Добавить(Документы.УстановкаКоэффициентаПропорциональногоНДС);
	//++ НЕ УТ
    СписокОбъектов.Добавить(Документы.КорректировкаНалоговогоНазначенияКапитальныхИнвестиций);
	СписокОбъектов.Добавить(Документы.КорректировкаНалоговогоНазначенияОС);
	СписокОбъектов.Добавить(Документы.ПерерасчетПропорциональногоНДСпоТоварамИОС);
	//-- НЕ УТ
	//-- Локализация
	
КонецПроцедуры

// См. УчетНДСУП.ПередДобавлениемКомандПечати
Процедура ПередДобавлениемКомандПечати(ИмяФормы, КомандыПечати, СтандартнаяОбработка) Экспорт
	
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

// См. УчетНДСУП.ПриЗаполненииСписковСОграничениемДоступа
Процедура ПриЗаполненииСписковСОграничениемДоступа(Списки) Экспорт
	
	//++ Локализация
	//-- Локализация
КонецПроцедуры

#КонецОбласти

#Область ОписаниеДокументовДляЖурналов

Процедура ДополнитьОписаниеОперацийИТиповДокументовДляЖурналаДокументовЗакупки(ХозяйственныеОперацииИДокументы) Экспорт
	
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьОписаниеОперацийИТиповДокументовДляЖурналаДокументовПродажи(ТЗХозОперацииИТипыДокументов) Экспорт
	
	//++ Локализация
	//-- Локализация
КонецПроцедуры

Процедура ДополнитьОписаниеОперацийИТиповДокументовДляЖурналаДокументовПереработки(ТЗХозОперацииИТипыДокументов) Экспорт
	
	//++ Локализация
	//-- Локализация
КонецПроцедуры

#КонецОбласти


#Область ОбновлениеИнформационнойБазы

// Добавляет в список процедуры-обработчики обновления данных ИБ
// для всех поддерживаемых версий библиотеки или конфигурации.
// Вызывается перед началом обновления данных ИБ для построения плана обновления.
//
//  Обработчики - ТаблицаЗначений - описание полей, см. в процедуре
//                ОбновлениеИнформационнойБазы.НоваяТаблицаОбработчиковОбновления.
//
// Пример добавления процедуры-обработчика в список:
//  Обработчик = Обработчики.Добавить();
//  Обработчик.Версия              = "1.1.0.0";
//  Обработчик.Процедура           = "ОбновлениеИБ.ПерейтиНаВерсию_1_1_0_0";
//  Обработчик.МонопольныйРежим    = Ложь;
//
// Параметры:
// 	Обработчики - см. ОбновлениеИнформационнойБазы.НоваяТаблицаОбработчиковОбновления
//
Процедура ОписаниеОбработчиковОбновления(Обработчики) Экспорт

#Область УчетНДСЛокализация_Установить_ИспользоватьРазделыТаможеннойДекларацииИмпорт

	Обработчик = Обработчики.Добавить();
	Обработчик.Процедура = "УчетНДСЛокализация.Установить_ИспользоватьРазделыТаможеннойДекларацииИмпорт";
	Обработчик.Версия = "2.5.4.400";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("e3878f93-3cef-403b-872c-41276496577c");
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "УчетНДСЛокализация.Установить_ИспользоватьРазделыТаможеннойДекларацииИмпорт_ОтметитьКОбработке";
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.Комментарий = НСтр("ru='Установка константы ИспользоватьРазделыТаможеннойДекларацииИмпорт';uk='Встановлення константи ИспользоватьРазделыТаможеннойДекларацииИмпорт'");
	
	Читаемые = Новый Массив;
	Читаемые.Добавить(Метаданные.Константы.ИспользоватьРазделыТаможеннойДекларацииИмпорт.ПолноеИмя());
	Обработчик.ЧитаемыеОбъекты = СтрСоединить(Читаемые, ",");
	
	Изменяемые = Новый Массив;
	Изменяемые.Добавить(Метаданные.Константы.ИспользоватьРазделыТаможеннойДекларацииИмпорт.ПолноеИмя());
	Обработчик.ИзменяемыеОбъекты = СтрСоединить(Изменяемые, ",");
	
	Блокируемые = Новый Массив;
	Блокируемые.Добавить(Метаданные.Константы.ИспользоватьРазделыТаможеннойДекларацииИмпорт.ПолноеИмя());
	Обработчик.БлокируемыеОбъекты = СтрСоединить(Блокируемые, ",");

#КонецОбласти

КонецПроцедуры

#Область Установить_ИспользоватьРазделыТаможеннойДекларацииИмпорт

Процедура Установить_ИспользоватьРазделыТаможеннойДекларацииИмпорт_ОтметитьКОбработке(Параметры) Экспорт
	
	Возврат;
	
КонецПроцедуры

Процедура Установить_ИспользоватьРазделыТаможеннойДекларацииИмпорт(Параметры) Экспорт
	
	МенеджерЗначения = Константы.ИспользоватьРазделыТаможеннойДекларацииИмпорт.СоздатьМенеджерЗначения();
	МенеджерЗначения.Значение = Истина;
	
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(МенеджерЗначения);
	Параметры.ОбработкаЗавершена = Истина;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти



#КонецОбласти