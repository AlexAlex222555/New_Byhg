////////////////////////////////////////////////////////////////////////////////
// Процедуры подсистемы "Внеоборотные активы", предназначенные для локализации.
// 
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

Функция ЕстьУчетВнеоборотныхАктивов2_2() Экспорт

	Результат = Ложь;
	
	//++ Локализация
	Результат = Истина;
	//-- Локализация           
	Возврат Результат;

КонецФункции

// Возвращает дату начала учета внеоборотных активов версии 2.4.
// 
// Возвращаемое значение:
//  Дата - Дата начала учета.
//
Функция ДатаНачалаУчетаВнеоборотныхАктивов2_4() Экспорт

	ДатаНачалаУчета = '000101010000';
	
	//++ Локализация
	ДатаНачалаУчета = Константы.ДатаНачалаУчетаВнеоборотныхАктивов2_4.Получить();
	//-- Локализация
	
	Возврат ДатаНачалаУчета;
	
КонецФункции
 
Процедура УчетнаяПолитикаОрганизацийПередЗаписью(НаборЗаписей) Экспорт

	//++ Локализация 
	//-- Локализация
	
КонецПроцедуры

Процедура УчетнаяПолитикаОрганизацийПриЗаписи(НаборЗаписей) Экспорт

	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

#Область ОбновлениеИБ

Процедура РегламентированныйУчетВНА_ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	// Регистрация не требуется
	Возврат;
	
КонецПроцедуры

Процедура РегламентированныйУчетВНА_ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	//++ Локализация
	Если НЕ Константы.РегламентированныйУчетВНА.Получить() Тогда
		МенеджерЗначения = Константы.РегламентированныйУчетВНА.СоздатьМенеджерЗначения();
		МенеджерЗначения.Значение = Истина;
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(МенеджерЗначения);
	КонецЕсли;
	//-- Локализация
	
	Параметры.ОбработкаЗавершена = Истина;
	
КонецПроцедуры

Процедура ДополнитьСписокЗапросовРегистрацииДанныхКОбработкеРегистраПрочиеРасходы(СписокЗапросов) Экспорт

	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

Процедура ОбработатьДанныеРегистраПрочиеРасходыДляПереходаНаНовуюВерсию(Регистратор, НаборЗаписей) Экспорт

	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьСписокЗапросовРегистрацииДанныхКОбработкеРегистраПартииПрочихРасходов(СписокЗапросов) Экспорт

	
КонецПроцедуры

Процедура ОбработатьДанныеРегистраПартииПрочихРасходовДляПереходаНаНовуюВерсию(Регистратор, Набор) Экспорт

	
КонецПроцедуры

Процедура ДополнитьСписокЗапросовРегистрацииДанныхКОбработкеРегистраПрочиеАктивыПассивы(СписокЗапросов) Экспорт

	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

Процедура ОбработатьДанныеРегистраПрочиеАктивыПассивыДляПереходаНаНовуюВерсию(НаборЗаписей) Экспорт

	//++ Локализация
	//-- Локализация
	
КонецПроцедуры
 
#КонецОбласти

//++ Локализация

#Область КорректировкаНалоговогоНазначенияКапитальныхИнвестиций

// Увеличивает стоимость внеоборотных активов после корректировки налогового назначения капитальных инвестиций.
//
// Параметры:
//  ТаблицаВнеоборотныхАктивов	 - ТаблицаЗначений	 - Содержит внеоборотные активы на которые был распределен НДС.
//  ПрочиеРасходы				 - ТаблицаЗначений	 - Расходы, полученные в результате распределения НДС.
//  РезультатРаспределения		 - ТаблицаЗначений	 - Результат распределения НДС.
//  Реквизиты					 - Структура		 - Содержит реквизиты документа Распределение НДС.
//  ТаблицыДляДвижений			 - Структура		 - (возвращаемое значение) Содержит таблицы для записи движений.
//
Процедура ВключитьВСтоимостьВнеоборотныхАктивовРезультатКорректировкиНалоговогоНазначенияКапитальныхИнвестиций(ТаблицаВнеоборотныхАктивов, ПрочиеРасходы, РезультатРаспределения, Реквизиты, ТаблицыДляДвижений) Экспорт
	
	Если НЕ ВнеоборотныеАктивы.ИспользуетсяУправлениеВНА_2_4(Реквизиты.Период) 
		И ПолучитьФункциональнуюОпцию("ИспользоватьВнеоборотныеАктивы2_2") Тогда
		
		ВключитьВСтоимостьВНАРезультатКорректировкиНалоговогоНазначенияКапитальныхИнвестиций_2_2(
			ТаблицаВнеоборотныхАктивов,
			РезультатРаспределения,
			ТаблицыДляДвижений,
			Реквизиты);
			
	КонецЕсли;
	
КонецПроцедуры

// Формирует временную таблицу принятых к учету внеоборотных активов (ВтВнеоборотныеАктивы) при использования учета
// внеоборотных активов 2.2.
//
// Параметры:
//  НачалоПериода			 - Дата						 - Начало периода.
//  КонецПериода			 - Дата						 - Конец периода.
//  МенеджерВременныхТаблиц	 - МенеджерВременныхТаблиц	 - Хранит сформированную таблицу ВтВнеоборотныеАктивы.
//
Процедура СформироватьТаблицуПринятыхКУчетуВнеоборотныхАктивовДляКорректировкиНалоговогоНазначенияКапитальныхИнвестиций_2_2(НачалоПериода, КонецПериода, МенеджерВременныхТаблиц) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаОстатков.Организация,
	|	ТаблицаОстатков.АналитикаРасходов КАК Объект
	|ПОМЕСТИТЬ ОтборОбъектов
	|ИЗ
	|	ТаблицаОстатков КАК ТаблицаОстатков
	|ГДЕ
	|  ТаблицаОстатков.ВариантРаспределенияРасходовСтатьи = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ТаблицаОстатков.Организация,
	|	ТаблицаОстатков.АналитикаАктивовПассивов КАК Объект
	|ИЗ
	|	ТаблицаОстатков КАК ТаблицаОстатков
	|ГДЕ
	|  ТИПЗНАЧЕНИЯ(ТаблицаОстатков.АналитикаАктивовПассивов) В (
	|		ТИП(Справочник.ОбъектыЭксплуатации),
	|		ТИП(Справочник.НематериальныеАктивы))
	|;
	|
	|//////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СостоянияОС.Организация      КАК Организация,
	|	СостоянияОС.ОсновноеСредство КАК ОсновноеСредство,
	|	СостоянияОС.Регистратор      КАК Регистратор
	|ПОМЕСТИТЬ ВтРегистраторыПринятияКУчетуОС
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(
	|			&Граница,
	|			(Организация, ОсновноеСредство, Состояние) В 
	|				(ВЫБРАТЬ
	|					ОтборОбъектов.Организация,
	|					ОтборОбъектов.Объект,
	|					ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|				ИЗ
	|					ОтборОбъектов КАК ОтборОбъектов)) КАК СостоянияОС
	|ГДЕ
	|	СостоянияОС.Период >= НАЧАЛОПЕРИОДА(&КонецПериода, МЕСЯЦ)
	|	И (Регистратор ССЫЛКА Документ.ПринятиеКУчетуОС
	|		ИЛИ Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	СостоянияОС.Организация,
	|	СобытияОС.ОсновноеСредство,
	|	СостоянияОС.Регистратор
	|ИЗ
	|	РегистрСведений.СобытияОСОрганизаций.СрезПоследних(
	|			&Граница,
	|			(Организация, ОсновноеСредство) В 
	|				(ВЫБРАТЬ
	|					ОтборОбъектов.Организация,
	|					ОтборОбъектов.Объект
	|				ИЗ
	|					ОтборОбъектов КАК ОтборОбъектов)
	|				И Событие.ВидСобытияОС В (ЗНАЧЕНИЕ(Перечисление.ВидыСобытийОС.Модернизация), 
	|										  ЗНАЧЕНИЕ(Перечисление.ВидыСобытийОС.Достройка), 
	|										  ЗНАЧЕНИЕ(Перечисление.ВидыСобытийОС.Дооборудование))) КАК СобытияОС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(
	|				&Граница,
	|			(Организация, ОсновноеСредство, Состояние) В 
	|				(ВЫБРАТЬ
	|					ОтборОбъектов.Организация,
	|					ОтборОбъектов.Объект,
	|					ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|				ИЗ
	|					ОтборОбъектов КАК ОтборОбъектов)
	|					И (Регистратор ССЫЛКА Документ.ПринятиеКУчетуОС
	|						ИЛИ Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов)) КАК СостоянияОС
	|		ПО СобытияОС.ОсновноеСредство = СостоянияОС.ОсновноеСредство
	|ГДЕ
	|	СобытияОС.Период >= НАЧАЛОПЕРИОДА(&КонецПериода, МЕСЯЦ)
	|
	|ИНДЕКСИРОВАТЬ ПО 
	|	Регистратор
	|;
	|/////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РегистрПорядокУчетаОСБУ.ОсновноеСредство КАК ОсновноеСредство,
	|	РегистрПорядокУчетаОСБУ.НалоговоеНазначение КАК НалоговоеНазначение
	|ПОМЕСТИТЬ НалоговыеНазначенияОС
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(
	|			&Граница,
	|			(Организация, ОсновноеСредство) В 
	|				(ВЫБРАТЬ 
	|					ВтРегистраторыПринятияКУчетуОС.Организация,
	|					ВтРегистраторыПринятияКУчетуОС.ОсновноеСредство
	|				ИЗ 
	|					ВтРегистраторыПринятияКУчетуОС
	|				)
	|	) КАК РегистрПорядокУчетаОСБУ
	|ИНДЕКСИРОВАТЬ ПО 
	|	ОсновноеСредство
	|;
	|/////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СостоянияНМА.Организация      	 КАК Организация,
	|	СостоянияНМА.НематериальныйАктив КАК НематериальныйАктив,
	|	СостоянияНМА.Регистратор         КАК Регистратор
	|ПОМЕСТИТЬ ВтРегистраторыПринятияКУчетуНМА
	|ИЗ
	|	РегистрСведений.ПорядокУчетаНМАБУ.СрезПоследних(
	|			&Граница,
	|			(Организация, НематериальныйАктив, Состояние) В 
	|				(ВЫБРАТЬ
	|					ОтборОбъектов.Организация,
	|					ОтборОбъектов.Объект,
	|					ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.ПринятКУчету)
	|				ИЗ
	|					ОтборОбъектов КАК ОтборОбъектов)) КАК СостоянияНМА
	|ГДЕ
	|	СостоянияНМА.Период >= НАЧАЛОПЕРИОДА(&КонецПериода, МЕСЯЦ)
	|	И (Регистратор ССЫЛКА Документ.ПринятиеКУчетуНМА
	|		ИЛИ Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов)
	|
	|ИНДЕКСИРОВАТЬ ПО 
	|	Регистратор
	|;
	|/////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РегистрНалоговыеНазначенияНМА.НематериальныйАктив КАК НематериальныйАктив,
	|	РегистрНалоговыеНазначенияНМА.НалоговоеНазначение КАК НалоговоеНазначение
	|ПОМЕСТИТЬ НалоговыеНазначенияНМА
	|ИЗ
	|	РегистрСведений.ПорядокУчетаНМАБУ.СрезПоследних(
	|			&Граница,
	|			(Организация, НематериальныйАктив) В 
	|				(ВЫБРАТЬ 
	|					ВтРегистраторыПринятияКУчетуНМА.Организация,
	|					ВтРегистраторыПринятияКУчетуНМА.НематериальныйАктив
	|				ИЗ 
	|					ВтРегистраторыПринятияКУчетуНМА
	|				)
	|	) КАК РегистрНалоговыеНазначенияНМА
	|ИНДЕКСИРОВАТЬ ПО 
	|	НематериальныйАктив
	|;
	|/////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВводОстатковОС.ДатаПринятияКУчету КАК ДатаПринятияКУчету,
	|	""ОС"" КАК ВнеоборотныйАктив,
	|	ОСПринятыеКУчету.Организация КАК Организация,
	|	ОСПринятыеКУчету.ОсновноеСредство КАК Объект,
	|	НалоговыеНазначенияОС.НалоговоеНазначение КАК НалоговоеНазначение
	|ПОМЕСТИТЬ ВтВнеоборотныеАктивы
	|ИЗ
	|	ВтРегистраторыПринятияКУчетуОС КАК ОСПринятыеКУчету
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатковВнеоборотныхАктивов.ОС КАК ВводОстатковОС
	|	ПО
	|		ОСПринятыеКУчету.Регистратор = ВводОстатковОС.Ссылка
	|		И ОСПринятыеКУчету.ОсновноеСредство = ВводОстатковОС.ОсновноеСредство
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		НалоговыеНазначенияОС КАК НалоговыеНазначенияОС
	|	ПО
	|		ОСПринятыеКУчету.ОсновноеСредство = НалоговыеНазначенияОС.ОсновноеСредство
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПринятиеКУчетуОС.Дата КАК ДатаПринятияКУчету,
	|	""ОС"" КАК ВнеоборотныйАктив,
	|	ОСПринятыеКУчету.Организация КАК Организация,
	|	ОСПринятыеКУчету.ОсновноеСредство КАК Объект,
	|	НалоговыеНазначенияОС.НалоговоеНазначение КАК НалоговоеНазначение
	|ИЗ
	|	ВтРегистраторыПринятияКУчетуОС КАК ОСПринятыеКУчету
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ПринятиеКУчетуОС КАК ПринятиеКУчетуОС
	|	ПО
	|		ОСПринятыеКУчету.Регистратор = ПринятиеКУчетуОС.Ссылка
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		НалоговыеНазначенияОС КАК НалоговыеНазначенияОС
	|	ПО
	|		ОСПринятыеКУчету.ОсновноеСредство = НалоговыеНазначенияОС.ОсновноеСредство
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВводОстатковНМА.ДатаПринятияКУчетуРегл КАК ДатаПринятияКУчету,
	|	""НМА"" КАК ВнеоборотныйАктив,
	|	НМАПринятыеКУчету.Организация КАК Организация,
	|	НМАПринятыеКУчету.НематериальныйАктив КАК Объект,
	|	НалоговыеНазначенияНМА.НалоговоеНазначение КАК НалоговоеНазначение 
	|ИЗ
	|	ВтРегистраторыПринятияКУчетуНМА КАК НМАПринятыеКУчету
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатковВнеоборотныхАктивов.НМА КАК ВводОстатковНМА
	|	ПО
	|		НМАПринятыеКУчету.Регистратор = ВводОстатковНМА.Ссылка
	|		И НМАПринятыеКУчету.НематериальныйАктив = ВводОстатковНМА.НематериальныйАктив
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		НалоговыеНазначенияНМА КАК НалоговыеНазначенияНМА
	|	ПО
	|		НМАПринятыеКУчету.НематериальныйАктив = НалоговыеНазначенияНМА.НематериальныйАктив
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПринятиеКУчетуНМА.Дата КАК ДатаПринятияКУчету,
	|	""НМА"" КАК ВнеоборотныйАктив,
	|	НМАПринятыеКУчету.Организация КАК Организация,
	|	НМАПринятыеКУчету.НематериальныйАктив КАК Объект,
	|	НалоговыеНазначенияНМА.НалоговоеНазначение КАК НалоговоеНазначение
	|ИЗ
	|	ВтРегистраторыПринятияКУчетуНМА КАК НМАПринятыеКУчету
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ПринятиеКУчетуНМА КАК ПринятиеКУчетуНМА
	|	ПО
	|		НМАПринятыеКУчету.Регистратор = ПринятиеКУчетуНМА.Ссылка
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		НалоговыеНазначенияНМА КАК НалоговыеНазначенияНМА
	|	ПО
	|		НМАПринятыеКУчету.НематериальныйАктив = НалоговыеНазначенияНМА.НематериальныйАктив
	|;
	|
	|//////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ОтборОбъектов
	|;
	|//////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ НалоговыеНазначенияОС
	|;
	|//////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВтРегистраторыПринятияКУчетуНМА
	|;
	|//////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ НалоговыеНазначенияНМА
	|;
	|//////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВтРегистраторыПринятияКУчетуОС";
	
	Запрос.УстановитьПараметр("Граница",      Новый Граница(КонецПериода, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	
	УстановитьПривилегированныйРежим(Истина);
	Запрос.Выполнить();
	
КонецПроцедуры

// Формирует временную таблицу принятых к учету внеоборотных активов (ВтВнеоборотныеАктивы) при использования учета
// внеоборотных активов 2.4.
//
// Параметры:
//  НачалоПериода			 - Дата						 - Начало периода.
//  КонецПериода			 - Дата						 - Конец периода.
//  МенеджерВременныхТаблиц	 - МенеджерВременныхТаблиц	 - Хранит сформированную таблицу ВтВнеоборотныеАктивы.
//
Процедура СформироватьТаблицуПринятыхКУчетуВнеоборотныхАктивовДляКорректировкиНалоговогоНазначенияКапитальныхИнвестиций_2_4(НачалоПериода, КонецПериода, МенеджерВременныхТаблиц) Экспорт

	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаОстатков.Организация,
	|	ТаблицаОстатков.АналитикаРасходов КАК Объект
	|ПОМЕСТИТЬ ОтборОбъектов
	|ИЗ
	|	ТаблицаОстатков КАК ТаблицаОстатков
	|ГДЕ
	|	ТаблицаОстатков.ВариантРаспределенияРасходовСтатьи = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|;
	|
	|//////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КОНЕЦПЕРИОДА(СтоимостьОС.Период, МЕСЯЦ)       КАК ДатаПринятияКУчету,
	|	""ОС""                                        КАК ВнеоборотныйАктив,
	|	СтоимостьОС.Организация                       КАК Организация,
	|	СтоимостьОС.АналитикаКапитализацииРасходов    КАК Объект,
	|	NULL                   КАК НалогообложениеНДС,
	|	ЛОЖЬ 				   КАК РаспределятьНДС,
	// В режиме 2.4 не используются, но нужны для совместимости
	|	ЛОЖЬ                   КАК ВключаетсяВРасходыНУПриПринятииКУчету,
	|	НЕОПРЕДЕЛЕНО           КАК ПодразделениеРасходовНУ,
	|	НЕОПРЕДЕЛЕНО           КАК СтатьяРасходовНУ,
	|	NULL                   КАК ЭтоПринимаемаяСтатьяРасходовНУ,
	|	НЕОПРЕДЕЛЕНО           КАК АналитикаРасходовНУ
	|ПОМЕСТИТЬ ВтВнеоборотныеАктивы
	|ИЗ
	|	РегистрНакопления.СтоимостьОС КАК СтоимостьОС
	|ГДЕ
	|	СтоимостьОС.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И СтоимостьОС.Активность
	|	И СтоимостьОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|
	|	И СтоимостьОС.ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОС),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.МодернизацияОС))
	|
	|	И СтоимостьОС.ОтражатьВРеглУчете
	|
	|	И (СтоимостьОС.Организация, СтоимостьОС.АналитикаКапитализацииРасходов) В
	|			(ВЫБРАТЬ
	|				ОтборОбъектов.Организация,
	|				ОтборОбъектов.Объект
	|			ИЗ
	|				ОтборОбъектов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КОНЕЦПЕРИОДА(СтоимостьНМА.Период, МЕСЯЦ)       КАК ДатаПринятияКУчету,
	|	""НМА""                                        КАК ВнеоборотныйАктив,
	|	СтоимостьНМА.Организация                       КАК Организация,
	|	СтоимостьНМА.НематериальныйАктив               КАК Объект,
	|	NULL                   КАК НалогообложениеНДС,
	|	ЛОЖЬ				   КАК РаспределятьНДС,
	// В режиме 2.4 не используются, но нужны для совместимости
	|	ЛОЖЬ                   КАК ВключаетсяВРасходыНУПриПринятииКУчету,
	|	НЕОПРЕДЕЛЕНО           КАК ПодразделениеРасходовНУ,
	|	НЕОПРЕДЕЛЕНО           КАК СтатьяРасходовНУ,
	|	NULL                   КАК ЭтоПринимаемаяСтатьяРасходовНУ,
	|	НЕОПРЕДЕЛЕНО           КАК АналитикаРасходовНУ
	|ИЗ
	|	РегистрНакопления.СтоимостьНМА КАК СтоимостьНМА
	|ГДЕ
	|	СтоимостьНМА.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И СтоимостьНМА.Активность
	|	И СтоимостьНМА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|
	|	И СтоимостьНМА.ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПринятиеКУчетуНМА))
	|
	|	И СтоимостьНМА.ОтражатьВРеглУчете
	|
	|	И (СтоимостьНМА.Организация, СтоимостьНМА.НематериальныйАктив) В
	|			(ВЫБРАТЬ
	|				ОтборОбъектов.Организация,
	|				ОтборОбъектов.Объект
	|			ИЗ
	|				ОтборОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ВнеоборотныйАктив
	|;
	|
	|//////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ОтборОбъектов
	|";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(КонецПериода));
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	Запрос.УстановитьПараметр("КонецПериодаГраница", Новый Граница(КонецПериода, ВидГраницы.Включая));
	
	УстановитьПривилегированныйРежим(Истина);
	Запрос.Выполнить();
	
КонецПроцедуры

#КонецОбласти

//-- Локализация

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

//++ Локализация
//-- Локализация

#Область РасчетАмортизации

Процедура ДополнитьПараметрамиУчетаВнеоборотныхАктивов(Знач ПараметрыРасчета) Экспорт

	//++ Локализация               
	//-- Локализация
	
КонецПроцедуры

Процедура СоздатьДокументыАмортизацииОС(НачалоРасчета, ПараметрыРасчета, Отказ) Экспорт

	//++ Локализация         
	Документы.АмортизацияОС.СоздатьДокументыАмортизацииОС(НачалоРасчета, ПараметрыРасчета.МассивОрганизаций, Отказ);
	//-- Локализация
	
КонецПроцедуры
 
Процедура СоздатьДокументыАмортизацииНМА(НачалоРасчета, ПараметрыРасчета, Отказ) Экспорт
	
	//++ Локализация
	Документы.АмортизацияНМА.СоздатьДокументыАмортизацииНМА(НачалоРасчета, ПараметрыРасчета.МассивОрганизаций, Отказ);
	//-- Локализация
	
КонецПроцедуры

//++ Локализация
//-- Локализация

#КонецОбласти

#Область СформироватьЗаписиРегистровЗаданий

Процедура СформироватьЗаписиРегистровЗаданий(ДокументСсылка, ДанныеТаблиц) Экспорт

	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьСписокТаблицДляФормированияЗаданийКРасчетуАмортизацииОС(СписокТаблиц) Экспорт

	//++ Локализация
	СписокТаблиц.Добавить("ПорядокУчетаОСБУ");
	СписокТаблиц.Добавить("ПараметрыАмортизацииОСБУ");
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьСписокТаблицДляФормированияЗаданийКРасчетуАмортизацииНМА(СписокТаблиц) Экспорт

	//++ Локализация
	СписокТаблиц.Добавить("ПорядокУчетаНМАБУ");
	СписокТаблиц.Добавить("ПараметрыАмортизацииНМАБУ");
	//-- Локализация
	
КонецПроцедуры

Функция ТекстЗапросаДляФормированияЗаданийКРасчетуАмортизацииОС(ДанныеТаблиц, ТекстОбъединенияДанных) Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация

	СписокЗапросов = Новый Массив;

	#Область ИзмененныеДанные
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ИзмененныеДанные.Организация                   КАК Организация,
	|	ИзмененныеДанные.ОсновноеСредство              КАК ОсновноеСредство,
	|	ИзмененныеДанные.Документ                      КАК Документ,
	|	МАКСИМУМ(ИзмененныеДанные.ОтражатьВРеглУчете)  КАК ОтражатьВРеглУчете,
	|	МАКСИМУМ(ИзмененныеДанные.ОтражатьВУпрУчете)   КАК ОтражатьВУпрУчете,
	|	МИНИМУМ(ВЫБОР 
	|				КОГДА ИзмененныеДанные.ИмяТаблицы = ""НаработкиОбъектовЭксплуатации""
	|					ТОГДА НАЧАЛОПЕРИОДА(ИзмененныеДанные.Период, МЕСЯЦ)
	|				ИНАЧЕ ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ИзмененныеДанные.Период, МЕСЯЦ), МЕСЯЦ, 1) 
	|			КОНЕЦ) КАК ПериодБУ,
	|	МИНИМУМ(ВЫБОР 
	|				КОГДА ТИПЗНАЧЕНИЯ(ИзмененныеДанные.Документ) В (
	|							ТИП(Документ.ВводОстатковВнеоборотныхАктивов),
	|							ТИП(Документ.ВводОстатковВнеоборотныхАктивов2_4))
	|					ТОГДА ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ИзмененныеДанные.Период, МЕСЯЦ), МЕСЯЦ, 1) 
	|				КОГДА ТИПЗНАЧЕНИЯ(ИзмененныеДанные.Документ) В (
	|							ТИП(Документ.ИзменениеПараметровОС2_4))
	|						И ИзмененныеДанные.Период < &ДатаНачалаУчета24
	|					ТОГДА &ДатаНачалаУчета24 
	|				КОГДА ИзмененныеДанные.ИмяТаблицы = ""НаработкиОбъектовЭксплуатации""
	|						ИЛИ НЕ &ПорядокНачисленияПоСтандартамРегл
	|					ТОГДА НАЧАЛОПЕРИОДА(ИзмененныеДанные.Период, МЕСЯЦ)
	|				ИНАЧЕ ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ИзмененныеДанные.Период, МЕСЯЦ), МЕСЯЦ, 1) 
	|			КОНЕЦ) КАК ПериодУУ
	|ПОМЕСТИТЬ ИзмененныеДанные
	|ИЗ
	|	(" + ТекстОбъединенияДанных + ") КАК ИзмененныеДанные
	|
	|СГРУППИРОВАТЬ ПО
	|	ИзмененныеДанные.Организация,
	|	ИзмененныеДанные.ОсновноеСредство,
	|	ИзмененныеДанные.Документ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ОсновноеСредство";

	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти

	#Область ПорядокУчетаОСБУ
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПорядокУчетаОСБУ.Организация       КАК Организация,
	|	ПорядокУчетаОСБУ.ОсновноеСредство  КАК ОсновноеСредство,
	|	МИНИМУМ(НАЧАЛОПЕРИОДА(ПорядокУчетаОСБУ.Период, МЕСЯЦ)) КАК Период
	|ПОМЕСТИТЬ ПериодЗаданийБУ
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПорядокУчетаОСБУ.Организация       КАК Организация,
	|		ПорядокУчетаОСБУ.ОсновноеСредство  КАК ОсновноеСредство,
	|		ВЫБОР
	|			КОГДА ПорядокУчетаОСБУ.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4
	|					И НАЧАЛОПЕРИОДА(ПорядокУчетаОСБУПоследние.Период, МЕСЯЦ) = НАЧАЛОПЕРИОДА(ПорядокУчетаОСБУ.Период, МЕСЯЦ)
	|				ТОГДА ДОБАВИТЬКДАТЕ(ПорядокУчетаОСБУПоследние.Период, МЕСЯЦ, 1)
	|			ИНАЧЕ ПорядокУчетаОСБУПоследние.Период
	|		КОНЕЦ КАК Период
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ИзмененныеДанные.Организация        КАК Организация,
	|			ИзмененныеДанные.ОсновноеСредство   КАК ОсновноеСредство,
	|			МИНИМУМ(ИзмененныеДанные.ПериодБУ)  КАК Период,
	|			МАКСИМУМ(ПорядокУчетаОСБУ.Период)   КАК ПериодСведений
	|		ИЗ
	|			ИзмененныеДанные КАК ИзмененныеДанные
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
	|				ПО (ПорядокУчетаОСБУ.Организация = ИзмененныеДанные.Организация)
	|					И (ПорядокУчетаОСБУ.ОсновноеСредство = ИзмененныеДанные.ОсновноеСредство)
	|					И (ПорядокУчетаОСБУ.Период <= ИзмененныеДанные.ПериодБУ)
	|					И (ТИПЗНАЧЕНИЯ(ИзмененныеДанные.Документ) <> ТИП(Документ.СписаниеОС2_4)
	|						ИЛИ ИзмененныеДанные.Документ <> ПорядокУчетаОСБУ.Регистратор)
	|		ГДЕ
	|			ИзмененныеДанные.ОтражатьВРеглУчете
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ИзмененныеДанные.Организация,
	|			ИзмененныеДанные.ОсновноеСредство
	|		) КАК ПорядокУчетаОСБУПоследние
	|
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
	|			ПО (ПорядокУчетаОСБУ.Организация = ПорядокУчетаОСБУПоследние.Организация)
	|				И (ПорядокУчетаОСБУ.ОсновноеСредство = ПорядокУчетаОСБУПоследние.ОсновноеСредство)
	|				И (ПорядокУчетаОСБУ.Период = ПорядокУчетаОСБУПоследние.ПериодСведений)
	|	ГДЕ
	|		(ПорядокУчетаОСБУ.НачислятьАмортизациюБУ
	|				ИЛИ ПорядокУчетаОСБУ.НачислятьАмортизациюНУ)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ИзмененныеДанные.Организация,
	|		ИзмененныеДанные.ОсновноеСредство,
	|		МИНИМУМ(ДОБАВИТЬКДАТЕ(ПорядокУчетаОСБУ.Период, МЕСЯЦ, 1))
	|	ИЗ
	|		ИзмененныеДанные КАК ИзмененныеДанные
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
	|			ПО (ПорядокУчетаОСБУ.Организация = ИзмененныеДанные.Организация)
	|				И (ПорядокУчетаОСБУ.ОсновноеСредство = ИзмененныеДанные.ОсновноеСредство)
	|				И (ПорядокУчетаОСБУ.Период > ИзмененныеДанные.ПериодБУ)
	|	ГДЕ
	|		ИзмененныеДанные.ОтражатьВРеглУчете
	|		И (ПорядокУчетаОСБУ.НачислятьАмортизациюБУ
	|				ИЛИ ПорядокУчетаОСБУ.НачислятьАмортизациюНУ)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ИзмененныеДанные.Организация,
	|		ИзмененныеДанные.ОсновноеСредство
	|
	|	//ТекстПорядокУчетаОСБУ//
	|
	|	) КАК ПорядокУчетаОСБУ
	|
	|СГРУППИРОВАТЬ ПО
	|	ПорядокУчетаОСБУ.Организация,
	|	ПорядокУчетаОСБУ.ОсновноеСредство
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация";


	Если ДанныеТаблиц.МенеджерВременныхТаблиц.Таблицы.Найти("ПорядокУчетаОСБУ_НачислятьАмортизацию") <> Неопределено Тогда
		
		ТекстПорядокУчетаОСБУ = "
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ИзмененныеДанные.Организация         КАК Организация,
		|	ИзмененныеДанные.ОсновноеСредство    КАК ОсновноеСредство,
		|	ИзмененныеДанные.ПериодБУ            КАК Период
		|ИЗ
		|	ИзмененныеДанные КАК ИзмененныеДанные
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПорядокУчетаОСБУ_НачислятьАмортизацию КАК ПорядокУчетаОСБУ
		|		ПО (ПорядокУчетаОСБУ.Организация = ИзмененныеДанные.Организация)
		|			И (ПорядокУчетаОСБУ.ОсновноеСредство = ИзмененныеДанные.ОсновноеСредство)";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ТекстПорядокУчетаОСБУ//", ТекстПорядокУчетаОСБУ);
		
	КонецЕсли;

	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти

	#Область ПорядокУчетаОСУУ
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПорядокУчетаОСУУ.Организация       КАК Организация,
	|	ПорядокУчетаОСУУ.ОсновноеСредство  КАК ОсновноеСредство,
	|	МИНИМУМ(НАЧАЛОПЕРИОДА(ПорядокУчетаОСУУ.Период, МЕСЯЦ)) КАК Период
	|ПОМЕСТИТЬ ПериодЗаданийУУ
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПорядокУчетаОСУУ.Организация       КАК Организация,
	|		ПорядокУчетаОСУУ.ОсновноеСредство  КАК ОсновноеСредство,
	|		ВЫБОР
	|			КОГДА ПорядокУчетаОСУУ.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4
	|					И НАЧАЛОПЕРИОДА(ПорядокУчетаОСУУПоследние.Период, МЕСЯЦ) = НАЧАЛОПЕРИОДА(ПорядокУчетаОСУУ.Период, МЕСЯЦ)
	|				ТОГДА ДОБАВИТЬКДАТЕ(ПорядокУчетаОСУУПоследние.Период, МЕСЯЦ, 1)
	|			ИНАЧЕ ПорядокУчетаОСУУПоследние.Период
	|		КОНЕЦ КАК Период
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ИзмененныеДанные.Организация        КАК Организация,
	|			ИзмененныеДанные.ОсновноеСредство   КАК ОсновноеСредство,
	|			МИНИМУМ(ИзмененныеДанные.ПериодУУ)  КАК Период,
	|			МАКСИМУМ(ПорядокУчетаОСУУ.Период)   КАК ПериодСведений
	|		ИЗ
	|			ИзмененныеДанные КАК ИзмененныеДанные
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСУУ КАК ПорядокУчетаОСУУ
	|				ПО (ПорядокУчетаОСУУ.Организация = ИзмененныеДанные.Организация)
	|					И (ПорядокУчетаОСУУ.ОсновноеСредство = ИзмененныеДанные.ОсновноеСредство)
	|					И (ПорядокУчетаОСУУ.Период <= ИзмененныеДанные.ПериодУУ)
	|					И (ТИПЗНАЧЕНИЯ(ИзмененныеДанные.Документ) <> ТИП(Документ.СписаниеОС2_4)
	|						ИЛИ ИзмененныеДанные.Документ <> ПорядокУчетаОСУУ.Регистратор)
	|		ГДЕ
	|			ИзмененныеДанные.ОтражатьВУпрУчете
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ИзмененныеДанные.Организация,
	|			ИзмененныеДанные.ОсновноеСредство
	|		) КАК ПорядокУчетаОСУУПоследние
	|
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСУУ КАК ПорядокУчетаОСУУ
	|			ПО (ПорядокУчетаОСУУ.Организация = ПорядокУчетаОСУУПоследние.Организация)
	|				И (ПорядокУчетаОСУУ.ОсновноеСредство = ПорядокУчетаОСУУПоследние.ОсновноеСредство)
	|				И (ПорядокУчетаОСУУ.Период = ПорядокУчетаОСУУПоследние.ПериодСведений)
	|	ГДЕ
	|		ПорядокУчетаОСУУ.НачислятьАмортизациюУУ
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ИзмененныеДанные.Организация,
	|		ИзмененныеДанные.ОсновноеСредство,
	|		МИНИМУМ(ВЫБОР 
	|					КОГДА &ПорядокНачисленияПоСтандартамРегл 
	|							ИЛИ ПорядокУчетаОСУУ.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4
	|						ТОГДА ДОБАВИТЬКДАТЕ(ПорядокУчетаОСУУ.Период, МЕСЯЦ, 1)
	|					ИНАЧЕ ПорядокУчетаОСУУ.Период
	|				КОНЕЦ)
	|	ИЗ
	|		ИзмененныеДанные КАК ИзмененныеДанные
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСУУ КАК ПорядокУчетаОСУУ
	|			ПО (ПорядокУчетаОСУУ.Организация = ИзмененныеДанные.Организация)
	|				И (ПорядокУчетаОСУУ.ОсновноеСредство = ИзмененныеДанные.ОсновноеСредство)
	|				И (ПорядокУчетаОСУУ.Период > ИзмененныеДанные.ПериодУУ)
	|	ГДЕ
	|		ИзмененныеДанные.ОтражатьВУпрУчете
	|		И ПорядокУчетаОСУУ.НачислятьАмортизациюУУ
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ИзмененныеДанные.Организация,
	|		ИзмененныеДанные.ОсновноеСредство
	|
	|	//ТекстПорядокУчетаОСУУ//
	|
	|) КАК ПорядокУчетаОСУУ
	|
	|СГРУППИРОВАТЬ ПО
	|	ПорядокУчетаОСУУ.Организация,
	|	ПорядокУчетаОСУУ.ОсновноеСредство
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация";

	Если ДанныеТаблиц.МенеджерВременныхТаблиц.Таблицы.Найти("ПорядокУчетаОСУУ_НачислятьАмортизацию") <> Неопределено Тогда
		
		ТекстПорядокУчетаОСУУ = "
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ИзмененныеДанные.Организация       КАК Организация,
		|	ИзмененныеДанные.ОсновноеСредство  КАК ОсновноеСредство,
		|	ИзмененныеДанные.ПериодУУ          КАК Период
		|ИЗ
		|	ИзмененныеДанные КАК ИзмененныеДанные
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПорядокУчетаОСУУ_НачислятьАмортизацию КАК ПорядокУчетаОСУУ
		|		ПО (ПорядокУчетаОСУУ.Организация = ИзмененныеДанные.Организация)
		|			И (ПорядокУчетаОСУУ.ОсновноеСредство = ИзмененныеДанные.ОсновноеСредство)";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ТекстПорядокУчетаОСУУ//", ТекстПорядокУчетаОСУУ);
		
	КонецЕсли;
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти

	#Область ФормированиеЗаданий
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ИзмененныеДанные.Организация,
	|	ИзмененныеДанные.Документ,
	|	ЕСТЬNULL(ПакетыАмортизацииОС.НомерПакета, 0) КАК НомерПакета,
	|	МИНИМУМ(ВЫБОР 
	|				КОГДА ПериодЗаданийБУ.Период <= ПериодЗаданийУУ.Период
	|						ИЛИ ПериодЗаданийУУ.Период ЕСТЬ NULL
	|					ТОГДА ПериодЗаданийБУ.Период
	|				ИНАЧЕ ПериодЗаданийУУ.Период
	|			КОНЕЦ) КАК Месяц
	|ИЗ
	|	ИзмененныеДанные КАК ИзмененныеДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПериодЗаданийБУ КАК ПериодЗаданийБУ
	|		ПО (ПериодЗаданийБУ.Организация = ИзмененныеДанные.Организация)
	|			И (ПериодЗаданийБУ.ОсновноеСредство = ИзмененныеДанные.ОсновноеСредство)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПериодЗаданийУУ КАК ПериодЗаданийУУ
	|		ПО (ПериодЗаданийУУ.Организация = ИзмененныеДанные.Организация)
	|			И (ПериодЗаданийУУ.ОсновноеСредство = ИзмененныеДанные.ОсновноеСредство)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПакетыАмортизацииОС КАК ПакетыАмортизацииОС
	|		ПО (ПакетыАмортизацииОС.Организация = ИзмененныеДанные.Организация)
	|			И (ПакетыАмортизацииОС.ОсновноеСредство = ИзмененныеДанные.ОсновноеСредство)
	|ГДЕ
	|	НЕ ПериодЗаданийБУ.Организация ЕСТЬ NULL
	|		ИЛИ НЕ ПериодЗаданийУУ.Организация ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	ИзмененныеДанные.Организация,
	|	ИзмененныеДанные.Документ,
	|	ЕСТЬNULL(ПакетыАмортизацииОС.НомерПакета, 0)";

	СписокЗапросов.Добавить(ТекстЗапроса);

	Если ДанныеТаблиц.МенеджерВременныхТаблиц.Таблицы.Найти("ПорядокУчетаОСБУ_НачислятьАмортизацию") <> Неопределено Тогда
		ТекстЗапроса = "УНИЧТОЖИТЬ ПорядокУчетаОСБУ_НачислятьАмортизацию";
		СписокЗапросов.Добавить(ТекстЗапроса);
	КонецЕсли;

	Если ДанныеТаблиц.МенеджерВременныхТаблиц.Таблицы.Найти("ПорядокУчетаОСУУ_НачислятьАмортизацию") <> Неопределено Тогда
		ТекстЗапроса = "УНИЧТОЖИТЬ ПорядокУчетаОСУУ_НачислятьАмортизацию";
		СписокЗапросов.Добавить(ТекстЗапроса);
	КонецЕсли;
	#КонецОбласти

	ТекстЗапроса = СтрСоединить(СписокЗапросов, ОбщегоНазначенияУТ.РазделительЗапросовВПакете());

	//-- Локализация
	
	Возврат ТекстЗапроса;

КонецФункции
 
Функция ТекстЗапросаДляФормированияЗаданийКРасчетуАмортизацииНМА(ДанныеТаблиц, ТекстОбъединенияДанных) Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	СписокЗапросов = Новый Массив;

	#Область ИзмененныеДанные
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ИзмененныеДанные.Организация                   КАК Организация,
	|	ИзмененныеДанные.НематериальныйАктив           КАК НематериальныйАктив,
	|	ИзмененныеДанные.Документ                      КАК Документ,
	|	МАКСИМУМ(ИзмененныеДанные.ОтражатьВРеглУчете)  КАК ОтражатьВРеглУчете,
	|	МАКСИМУМ(ИзмененныеДанные.ОтражатьВУпрУчете)   КАК ОтражатьВУпрУчете,
	|	МИНИМУМ(ВЫБОР 
	|				КОГДА ИзмененныеДанные.ИмяТаблицы = ""ВыработкаНМА""
	|					ТОГДА НАЧАЛОПЕРИОДА(ИзмененныеДанные.Период, МЕСЯЦ)
	|				ИНАЧЕ ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ИзмененныеДанные.Период, МЕСЯЦ), МЕСЯЦ, 1) 
	|			КОНЕЦ) КАК ПериодБУ,
	|	МИНИМУМ(ВЫБОР 
	|				КОГДА ТИПЗНАЧЕНИЯ(ИзмененныеДанные.Документ) В (
	|							ТИП(Документ.ВводОстатковВнеоборотныхАктивов),
	|							ТИП(Документ.ВводОстатковВнеоборотныхАктивов2_4))
	|					ТОГДА ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ИзмененныеДанные.Период, МЕСЯЦ), МЕСЯЦ, 1) 
	|				КОГДА ТИПЗНАЧЕНИЯ(ИзмененныеДанные.Документ) В (
	|							ТИП(Документ.ИзменениеПараметровНМА2_4))
	|						И ИзмененныеДанные.Период < &ДатаНачалаУчета24
	|					ТОГДА &ДатаНачалаУчета24 
	|				КОГДА ИзмененныеДанные.ИмяТаблицы = ""ВыработкаНМА""
	|						ИЛИ НЕ &ПорядокНачисленияПоСтандартамРегл
	|					ТОГДА НАЧАЛОПЕРИОДА(ИзмененныеДанные.Период, МЕСЯЦ)
	|				ИНАЧЕ ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ИзмененныеДанные.Период, МЕСЯЦ), МЕСЯЦ, 1) 
	|			КОНЕЦ) КАК ПериодУУ
	|ПОМЕСТИТЬ ИзмененныеДанные
	|ИЗ
	|	(" + ТекстОбъединенияДанных + ") КАК ИзмененныеДанные
	|
	|СГРУППИРОВАТЬ ПО
	|	ИзмененныеДанные.Организация,
	|	ИзмененныеДанные.НематериальныйАктив,
	|	ИзмененныеДанные.Документ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	НематериальныйАктив";

	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти

	#Область ПорядокУчетаНМАБУ
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПорядокУчетаНМАБУ.Организация          КАК Организация,
	|	ПорядокУчетаНМАБУ.НематериальныйАктив  КАК НематериальныйАктив,
	|	МИНИМУМ(НАЧАЛОПЕРИОДА(ПорядокУчетаНМАБУ.Период, МЕСЯЦ)) КАК Период
	|ПОМЕСТИТЬ ПериодЗаданийБУ
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПорядокУчетаНМАБУ.Организация          КАК Организация,
	|		ПорядокУчетаНМАБУ.НематериальныйАктив  КАК НематериальныйАктив,
	|		ВЫБОР
	|			КОГДА ПорядокУчетаНМАБУ.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4
	|					И НАЧАЛОПЕРИОДА(ПорядокУчетаНМАБУПоследние.Период, МЕСЯЦ) = НАЧАЛОПЕРИОДА(ПорядокУчетаНМАБУ.Период, МЕСЯЦ)
	|				ТОГДА ДОБАВИТЬКДАТЕ(ПорядокУчетаНМАБУПоследние.Период, МЕСЯЦ, 1)
	|			ИНАЧЕ ПорядокУчетаНМАБУПоследние.Период
	|		КОНЕЦ КАК Период
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ИзмененныеДанные.Организация           КАК Организация,
	|			ИзмененныеДанные.НематериальныйАктив   КАК НематериальныйАктив,
	|			МИНИМУМ(ИзмененныеДанные.ПериодБУ)     КАК Период,
	|			МАКСИМУМ(ПорядокУчетаНМАБУ.Период)     КАК ПериодСведений
	|		ИЗ
	|			ИзмененныеДанные КАК ИзмененныеДанные
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаНМАБУ КАК ПорядокУчетаНМАБУ
	|				ПО (ПорядокУчетаНМАБУ.Организация = ИзмененныеДанные.Организация)
	|					И (ПорядокУчетаНМАБУ.НематериальныйАктив = ИзмененныеДанные.НематериальныйАктив)
	|					И (ПорядокУчетаНМАБУ.Период <= ИзмененныеДанные.ПериодБУ)
	|					И (ТИПЗНАЧЕНИЯ(ИзмененныеДанные.Документ) <> ТИП(Документ.СписаниеНМА2_4)
	|						ИЛИ ИзмененныеДанные.Документ <> ПорядокУчетаНМАБУ.Регистратор)
	|		ГДЕ
	|			ИзмененныеДанные.ОтражатьВРеглУчете
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ИзмененныеДанные.Организация,
	|			ИзмененныеДанные.НематериальныйАктив
	|		) КАК ПорядокУчетаНМАБУПоследние
	|
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаНМАБУ КАК ПорядокУчетаНМАБУ
	|			ПО (ПорядокУчетаНМАБУ.Организация = ПорядокУчетаНМАБУПоследние.Организация)
	|				И (ПорядокУчетаНМАБУ.НематериальныйАктив = ПорядокУчетаНМАБУПоследние.НематериальныйАктив)
	|				И (ПорядокУчетаНМАБУ.Период = ПорядокУчетаНМАБУПоследние.ПериодСведений)
	|	ГДЕ
	|		(ПорядокУчетаНМАБУ.НачислятьАмортизациюБУ
	|				ИЛИ ПорядокУчетаНМАБУ.НачислятьАмортизациюНУ)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ИзмененныеДанные.Организация,
	|		ИзмененныеДанные.НематериальныйАктив,
	|		МИНИМУМ(ДОБАВИТЬКДАТЕ(ПорядокУчетаНМАБУ.Период, МЕСЯЦ, 1))
	|	ИЗ
	|		ИзмененныеДанные КАК ИзмененныеДанные
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаНМАБУ КАК ПорядокУчетаНМАБУ
	|			ПО (ПорядокУчетаНМАБУ.Организация = ИзмененныеДанные.Организация)
	|				И (ПорядокУчетаНМАБУ.НематериальныйАктив = ИзмененныеДанные.НематериальныйАктив)
	|				И (ПорядокУчетаНМАБУ.Период > ИзмененныеДанные.ПериодБУ)
	|	ГДЕ
	|		ИзмененныеДанные.ОтражатьВРеглУчете
	|		И (ПорядокУчетаНМАБУ.НачислятьАмортизациюБУ
	|				ИЛИ ПорядокУчетаНМАБУ.НачислятьАмортизациюНУ)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ИзмененныеДанные.Организация,
	|		ИзмененныеДанные.НематериальныйАктив
	|
	|	//ТекстПорядокУчетаНМАБУ//
	|
	|	) КАК ПорядокУчетаНМАБУ
	|
	|СГРУППИРОВАТЬ ПО
	|	ПорядокУчетаНМАБУ.Организация,
	|	ПорядокУчетаНМАБУ.НематериальныйАктив
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация";


	Если ДанныеТаблиц.МенеджерВременныхТаблиц.Таблицы.Найти("ПорядокУчетаНМАБУ_НачислятьАмортизацию") <> Неопределено Тогда
		
		ТекстПорядокУчетаНМАБУ = "
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ИзмененныеДанные.Организация            КАК Организация,
		|	ИзмененныеДанные.НематериальныйАктив    КАК НематериальныйАктив,
		|	ИзмененныеДанные.ПериодБУ               КАК Период
		|ИЗ
		|	ИзмененныеДанные КАК ИзмененныеДанные
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПорядокУчетаНМАБУ_НачислятьАмортизацию КАК ПорядокУчетаНМАБУ
		|		ПО (ПорядокУчетаНМАБУ.Организация = ИзмененныеДанные.Организация)
		|			И (ПорядокУчетаНМАБУ.НематериальныйАктив = ИзмененныеДанные.НематериальныйАктив)";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ТекстПорядокУчетаНМАБУ//", ТекстПорядокУчетаНМАБУ);
		
	КонецЕсли;

	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти

	#Область ПорядокУчетаНМАУУ
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПорядокУчетаНМАУУ.Организация          КАК Организация,
	|	ПорядокУчетаНМАУУ.НематериальныйАктив  КАК НематериальныйАктив,
	|	МИНИМУМ(НАЧАЛОПЕРИОДА(ПорядокУчетаНМАУУ.Период, МЕСЯЦ)) КАК Период
	|ПОМЕСТИТЬ ПериодЗаданийУУ
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПорядокУчетаНМАУУ.Организация          КАК Организация,
	|		ПорядокУчетаНМАУУ.НематериальныйАктив  КАК НематериальныйАктив,
	|		ВЫБОР
	|			КОГДА ПорядокУчетаНМАУУ.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4
	|					И НАЧАЛОПЕРИОДА(ПорядокУчетаНМАУУПоследние.Период, МЕСЯЦ) = НАЧАЛОПЕРИОДА(ПорядокУчетаНМАУУ.Период, МЕСЯЦ)
	|				ТОГДА ДОБАВИТЬКДАТЕ(ПорядокУчетаНМАУУПоследние.Период, МЕСЯЦ, 1)
	|			ИНАЧЕ ПорядокУчетаНМАУУПоследние.Период
	|		КОНЕЦ КАК Период
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ИзмененныеДанные.Организация           КАК Организация,
	|			ИзмененныеДанные.НематериальныйАктив   КАК НематериальныйАктив,
	|			МИНИМУМ(ИзмененныеДанные.ПериодУУ)     КАК Период,
	|			МАКСИМУМ(ПорядокУчетаНМАУУ.Период)     КАК ПериодСведений
	|		ИЗ
	|			ИзмененныеДанные КАК ИзмененныеДанные
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаНМАУУ КАК ПорядокУчетаНМАУУ
	|				ПО (ПорядокУчетаНМАУУ.Организация = ИзмененныеДанные.Организация)
	|					И (ПорядокУчетаНМАУУ.НематериальныйАктив = ИзмененныеДанные.НематериальныйАктив)
	|					И (ПорядокУчетаНМАУУ.Период <= ИзмененныеДанные.ПериодУУ)
	|					И (ТИПЗНАЧЕНИЯ(ИзмененныеДанные.Документ) <> ТИП(Документ.СписаниеНМА2_4)
	|						ИЛИ ИзмененныеДанные.Документ <> ПорядокУчетаНМАУУ.Регистратор)
	|		ГДЕ
	|			ИзмененныеДанные.ОтражатьВУпрУчете
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ИзмененныеДанные.Организация,
	|			ИзмененныеДанные.НематериальныйАктив
	|		) КАК ПорядокУчетаНМАУУПоследние
	|
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаНМАУУ КАК ПорядокУчетаНМАУУ
	|			ПО (ПорядокУчетаНМАУУ.Организация = ПорядокУчетаНМАУУПоследние.Организация)
	|				И (ПорядокУчетаНМАУУ.НематериальныйАктив = ПорядокУчетаНМАУУПоследние.НематериальныйАктив)
	|				И (ПорядокУчетаНМАУУ.Период = ПорядокУчетаНМАУУПоследние.ПериодСведений)
	|	ГДЕ
	|		ПорядокУчетаНМАУУ.НачислятьАмортизациюУУ
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ИзмененныеДанные.Организация,
	|		ИзмененныеДанные.НематериальныйАктив,
	|		МИНИМУМ(ВЫБОР 
	|					КОГДА &ПорядокНачисленияПоСтандартамРегл 
	|							ИЛИ ПорядокУчетаНМАУУ.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4
	|						ТОГДА ДОБАВИТЬКДАТЕ(ПорядокУчетаНМАУУ.Период, МЕСЯЦ, 1)
	|					ИНАЧЕ ПорядокУчетаНМАУУ.Период
	|				КОНЕЦ)
	|	ИЗ
	|		ИзмененныеДанные КАК ИзмененныеДанные
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаНМАУУ КАК ПорядокУчетаНМАУУ
	|			ПО (ПорядокУчетаНМАУУ.Организация = ИзмененныеДанные.Организация)
	|				И (ПорядокУчетаНМАУУ.НематериальныйАктив = ИзмененныеДанные.НематериальныйАктив)
	|				И (ПорядокУчетаНМАУУ.Период > ИзмененныеДанные.ПериодУУ)
	|	ГДЕ
	|		ИзмененныеДанные.ОтражатьВУпрУчете
	|		И ПорядокУчетаНМАУУ.НачислятьАмортизациюУУ
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ИзмененныеДанные.Организация,
	|		ИзмененныеДанные.НематериальныйАктив
	|
	|	//ТекстПорядокУчетаНМАУУ//
	|
	|) КАК ПорядокУчетаНМАУУ
	|
	|СГРУППИРОВАТЬ ПО
	|	ПорядокУчетаНМАУУ.Организация,
	|	ПорядокУчетаНМАУУ.НематериальныйАктив
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация";

	Если ДанныеТаблиц.МенеджерВременныхТаблиц.Таблицы.Найти("ПорядокУчетаНМАУУ_НачислятьАмортизацию") <> Неопределено Тогда
		
		ТекстПорядокУчетаНМАУУ = "
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ИзмененныеДанные.Организация          КАК Организация,
		|	ИзмененныеДанные.НематериальныйАктив  КАК НематериальныйАктив,
		|	ИзмененныеДанные.ПериодУУ             КАК Период
		|ИЗ
		|	ИзмененныеДанные КАК ИзмененныеДанные
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПорядокУчетаНМАУУ_НачислятьАмортизацию КАК ПорядокУчетаНМАУУ
		|		ПО (ПорядокУчетаНМАУУ.Организация = ИзмененныеДанные.Организация)
		|			И (ПорядокУчетаНМАУУ.НематериальныйАктив = ИзмененныеДанные.НематериальныйАктив)";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ТекстПорядокУчетаНМАУУ//", ТекстПорядокУчетаНМАУУ);
		
	КонецЕсли;
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти

	#Область ФормированиеЗаданий
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ИзмененныеДанные.Организация,
	|	ИзмененныеДанные.Документ,
	|	ЕСТЬNULL(ПакетыАмортизацииНМА.НомерПакета, 0) КАК НомерПакета,
	|	МИНИМУМ(ВЫБОР 
	|				КОГДА ПериодЗаданийБУ.Период <= ПериодЗаданийУУ.Период
	|						ИЛИ ПериодЗаданийУУ.Период ЕСТЬ NULL
	|					ТОГДА ПериодЗаданийБУ.Период
	|				ИНАЧЕ ПериодЗаданийУУ.Период
	|			КОНЕЦ) КАК Месяц
	|ИЗ
	|	ИзмененныеДанные КАК ИзмененныеДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПериодЗаданийБУ КАК ПериодЗаданийБУ
	|		ПО (ПериодЗаданийБУ.Организация = ИзмененныеДанные.Организация)
	|			И (ПериодЗаданийБУ.НематериальныйАктив = ИзмененныеДанные.НематериальныйАктив)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПериодЗаданийУУ КАК ПериодЗаданийУУ
	|		ПО (ПериодЗаданийУУ.Организация = ИзмененныеДанные.Организация)
	|			И (ПериодЗаданийУУ.НематериальныйАктив = ИзмененныеДанные.НематериальныйАктив)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПакетыАмортизацииНМА КАК ПакетыАмортизацииНМА
	|		ПО (ПакетыАмортизацииНМА.Организация = ИзмененныеДанные.Организация)
	|			И (ПакетыАмортизацииНМА.НематериальныйАктив = ИзмененныеДанные.НематериальныйАктив)
	|ГДЕ
	|	НЕ ПериодЗаданийБУ.Организация ЕСТЬ NULL
	|		ИЛИ НЕ ПериодЗаданийУУ.Организация ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	ИзмененныеДанные.Организация,
	|	ИзмененныеДанные.Документ,
	|	ЕСТЬNULL(ПакетыАмортизацииНМА.НомерПакета, 0)";

	СписокЗапросов.Добавить(ТекстЗапроса);

	Если ДанныеТаблиц.МенеджерВременныхТаблиц.Таблицы.Найти("ПорядокУчетаНМАБУ_НачислятьАмортизацию") <> Неопределено Тогда
		ТекстЗапроса = "УНИЧТОЖИТЬ ПорядокУчетаНМАБУ_НачислятьАмортизацию";
		СписокЗапросов.Добавить(ТекстЗапроса);
	КонецЕсли;

	Если ДанныеТаблиц.МенеджерВременныхТаблиц.Таблицы.Найти("ПорядокУчетаНМАУУ_НачислятьАмортизацию") <> Неопределено Тогда
		ТекстЗапроса = "УНИЧТОЖИТЬ ПорядокУчетаНМАУУ_НачислятьАмортизацию";
		СписокЗапросов.Добавить(ТекстЗапроса);
	КонецЕсли;
	#КонецОбласти

	ТекстЗапроса = СтрСоединить(СписокЗапросов, ОбщегоНазначенияУТ.РазделительЗапросовВПакете());

	//-- Локализация
	
	Возврат ТекстЗапроса;
	
КонецФункции
 
#КонецОбласти

#Область РасчетСтоимостиВнеоборотныхАктивов

Процедура ПриВыполненииОперацииЗакрытияМесяцаРасчетСтоимостиВнеоборотныхАктивов(НачалоРасчета, ВременныеТаблицы, ПараметрыОбработчика, Отказ) Экспорт

	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

Функция ЗаписьДвиженийРасчетаСтоимостиВыполняетсяВМодулеЛокализации(ИмяРегистра) Экспорт

	//++ Локализация
	
	Если ИмяРегистра = ВРег("ОтражениеДокументовВРеглУчете")
		ИЛИ ИмяРегистра = ВРег("ОтражениеДокументовВМеждународномУчете") Тогда
		Возврат Истина;
	КонецЕсли;

	//-- Локализация
	
	Возврат Ложь;
	
КонецФункции
 
Процедура ЗаписатьДвиженияРасчетаСтоимости(ТаблицыДляДвижений, ВыборкаДокумент, ПараметрыОбработчика) Экспорт
	
	//++ Локализация
	Если ПараметрыОбработчика = Неопределено Тогда
		Возврат;
	КонецЕсли;

	ТаблицаОтражениеДокументовВРеглУчете = Неопределено;
	ТаблицаОтражениеДокументовВМеждународномУчете = Неопределено;

	Для Каждого Таблица Из ТаблицыДляДвижений Цикл
		
		ИмяРегистра = Таблица.Ключ;
		Если ВРег(Лев(ИмяРегистра,7))= "ТАБЛИЦА" Тогда
			ИмяРегистра = Прав(ИмяРегистра, СтрДлина(ИмяРегистра)-7);
		КонецЕсли;
		
		ИмяРегистра = ВРег(ИмяРегистра);
		
		Если ИмяРегистра = ВРег("ОтражениеДокументовВРеглУчете") Тогда
			ТаблицаОтражениеДокументовВРеглУчете = Таблица.Значение;
			Продолжить;
		ИначеЕсли ИмяРегистра = ВРег("ОтражениеДокументовВМеждународномУчете") Тогда
			ТаблицаОтражениеДокументовВМеждународномУчете = Таблица.Значение;
			Продолжить;
		КонецЕсли;
		
	КонецЦикла;

	Если ТаблицаОтражениеДокументовВРеглУчете = Неопределено Тогда
		ТаблицаОтражениеДокументовВРеглУчете = 
			ВнеоборотныеАктивыСлужебный.ТаблицаОтражениеДокументов(
					ВыборкаДокумент.Регистратор, 
					ВыборкаДокумент.Организация, 
					ВыборкаДокумент.Период);
	КонецЕсли; 

	РеглУчетПроведениеСервер.ВернутьДокументыКОтражению(ТаблицаОтражениеДокументовВРеглУчете);

	
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьТаблицыДвиженийРасчетаСтоимости(ВыборкаДокумент, ТаблицыДляДвижений) Экспорт

	//++ Локализация

	Если НЕ ТаблицыДляДвижений.Свойство("ТаблицаОтражениеДокументовВРеглУчете") Тогда
		
		ТаблицаОтражениеДокументовВРеглУчете = ВнеоборотныеАктивыСлужебный.ТаблицаОтражениеДокументов(
													ВыборкаДокумент.Регистратор, 
													ВыборкаДокумент.Организация, 
													ВыборкаДокумент.Период);
		
		ТаблицыДляДвижений.Вставить("ТаблицаОтражениеДокументовВРеглУчете", ТаблицаОтражениеДокументовВРеглУчете);
		
	КонецЕсли;

	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьТекущиеРасходыПриФормированииТаблицДвиженийРасчетаСтоимости(ВыборкаДокумент, Результат, ТекущиеРасходы) Экспорт

	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

Функция ТекстЗапросаВыборкиДанныхДляРасчетаСтоимости() Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	//-- Локализация

	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ПослеРасчетаСтоимостиВнеоборотныхАктивов(Запрос, МенеджерВременныхТаблиц, ТаблицыУпрБаланса) Экспорт

	//++ Локализация
	
	Если ПолучитьФункциональнуюОпцию("ФормироватьУправленческийБаланс") Тогда
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Т.Регистратор КАК Регистратор
		|ИЗ
		|	ДанныеКРасчету КАК Т";
		
		ДокументыКОтражению = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Регистратор");
		
		Обработки.ДвиженияАктивовПассивов.ОтразитьДокументыВУправленческомБалансе(ДокументыКОтражению, ТаблицыУпрБаланса);
		
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьХозяйственныеОперацииПоКоторымРассчитываетсяСтоимость(Операции) Экспорт

	//++ Локализация
	//-- Локализация
	
КонецПроцедуры
 
#КонецОбласти

#Область ОтложенноеФормированиеДвижений

Процедура ПриВыполненииОтложенногоФормированияДвижений(Знач Выборка, Знач ПараметрыВыполнения, Знач ТаблицыДляДвижений)  Экспорт
	
	//++ Локализация        

	Если ПараметрыВыполнения.ВернутьДокументыКОтражению Тогда
		
		Если ТаблицыДляДвижений.Свойство("ТаблицаОтражениеДокументовВРеглУчете") Тогда
			ТаблицаОтражениеДокументовВУчете = ТаблицыДляДвижений.ТаблицаОтражениеДокументовВРеглУчете;
		ИначеЕсли ТаблицыДляДвижений.Свойство("ОтражениеДокументовВРеглУчете") Тогда
			ТаблицаОтражениеДокументовВУчете = ТаблицыДляДвижений.ОтражениеДокументовВРеглУчете;
		Иначе
			ТаблицаОтражениеДокументовВУчете = 
				ВнеоборотныеАктивыСлужебный.ТаблицаОтражениеДокументов(
						Выборка.Ссылка, 
						Выборка.Организация, 
						Выборка.Дата);
		КонецЕсли;
		
		РеглУчетПроведениеСервер.ВернутьДокументыКОтражению(ТаблицаОтражениеДокументовВУчете);
		
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

Процедура ПроверитьОтложенноеФормированиеДвижений(ПараметрыВыполнения, Отказ) Экспорт

	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

Функция ТекстЗапросаНачислениеИзноса() Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	//-- Локализация
	
	Возврат ТекстЗапроса;
	
КонецФункции
 
#КонецОбласти

#Область ЖурналДокументовОС

Процедура ДополнитьХозяйственныеОперацииИДокументыОС(ХозяйственныеОперацииИДокументы) Экспорт

	//++ Локализация   
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьТекстЗапросаЖурналаОС(ТекстЗапроса) Экспорт

	//++ Локализация  
	//-- Локализация
	
КонецПроцедуры

Процедура ЗаполнитьСоответствиеДокументовЖурналаОС(СоответствиеДокументов) Экспорт

	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

Процедура ЗаполнитьСоответствиеДокументовЖурналаНМА(СоответствиеДокументов) Экспорт
	
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область ЖурналДокументовНМА

Процедура ДополнитьХозяйственныеОперацииИДокументыНМА(ХозяйственныеОперацииИДокументы) Экспорт

	//++ Локализация
	//-- Локализация	
	
КонецПроцедуры
 
Процедура ДополнитьТекстЗапросаЖурналаНМА(ТекстЗапроса) Экспорт

	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область ТекстыЗапросов

// 
// Параметры:
// 	ТекстыЗапроса - СписокЗначений из Строка - 
// 	ИмяДокумента - Строка -
Процедура ТекстЗапросаТаблицаВтНалогообложениеНДС(ТекстыЗапроса, ИмяДокумента) Экспорт

	ИмяТаблицы = "ВтНалогообложениеНДС";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	NULL КАК ОсновноеСредство,
	|	NULL КАК НалогообложениеНДС
	|ПОМЕСТИТЬ ВтНалогообложениеНДС";
	
	//++ Локализация
	//-- Локализация
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ДобавитьВТекстЗапросаРесурсыРегистраПервоначальныеСведенияОС(ТекстЗапроса, ИмяТаблицы) Экспорт

	РеквизитыЛокализация = "NULL";
	
	//++ Локализация

	РеквизитыЛокализация = 
	"	ПервоначальныеСведенияОС.МетодНачисленияАмортизацииБУ КАК МетодНачисленияАмортизацииБУ,	
	|	ПервоначальныеСведенияОС.МетодНачисленияАмортизацииНУ КАК МетодНачисленияАмортизацииНУ,
	|	ПервоначальныеСведенияОС.ПервоначальнаяСтоимостьНУ КАК ПервоначальнаяСтоимостьНУ,
	|	ПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюБУ КАК ДокументВводаВЭксплуатациюБУ";

	РеквизитыЛокализация = СтрЗаменить(РеквизитыЛокализация, "&ПервоначальныеСведенияОС", ИмяТаблицы);

	//-- Локализация
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПервоначальныеСведенияОС_РеквизитыЛокализация", РеквизитыЛокализация);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаОтражениеНачисленнойАмортизацииВПрочихРасходах() Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	//-- Локализация
	
	Возврат ТекстЗапроса

КонецФункции

Функция ТекстЗапросаФормированиеЗаданийКРасчетуСтоимостиВНА() Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	//-- Локализация	
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаСтоимостьИАмортизацияОС() Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	//-- Локализация

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаСтоимостьИАмортизацияНМА() Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	//-- Локализация

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаЗаполнитьОтражениеВУчете() Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	//-- Локализация

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПроверитьВозможностьПринятияКУчетуОС() Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	//-- Локализация

	Возврат ТекстЗапроса;
	
КонецФункции
 
Функция ТекстЗапросаПроверитьВозможностьПринятияКУчетуНМА() Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	//-- Локализация

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаСоздатьВтРасчетСтоимости(Выборка, Запрос) Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	//-- Локализация
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаЗаданияКРасчетуАмортизацииОСНаСледующийПериод(НачалоПериода) Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьВнеоборотныеАктивы2_2")
		И НЕ ПолучитьФункциональнуюОпцию("ИспользоватьВнеоборотныеАктивы2_4") Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	НачислениеАмортизации.Организация,
	|	НачислениеАмортизации.НомерПакета,
	|	ЕСТЬNULL(МИНИМУМ(НачислениеАмортизации.Период), ДАТАВРЕМЯ(1, 1, 1)) КАК Месяц
	|ИЗ
	|	(ВЫБРАТЬ
	|		НачислениеАмортизации.Организация КАК Организация,
	|		ЕСТЬNULL(ПакетыАмортизации.НомерПакета, 0) КАК НомерПакета,
	|		&Период КАК Период
	|	ИЗ
	|		РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(&Период, Организация В (&Организация)) КАК НачислениеАмортизации
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПакетыАмортизацииОС КАК ПакетыАмортизации
	|			ПО ПакетыАмортизации.Организация = НачислениеАмортизации.Организация
	|			И ПакетыАмортизации.ОсновноеСредство = НачислениеАмортизации.ОсновноеСредство
	|	ГДЕ
	|		(НачислениеАмортизации.НачислятьАмортизациюБУ
	|		ИЛИ НачислениеАмортизации.НачислятьАмортизациюНУ)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		НачислениеАмортизации.Организация,
	|		ЕСТЬNULL(ПакетыАмортизации.НомерПакета, 0) КАК НомерПакета,
	|		&Период
	|	ИЗ
	|		РегистрСведений.ПорядокУчетаОСУУ.СрезПоследних(&Период, Организация В (&Организация)) КАК НачислениеАмортизации
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПакетыАмортизацииОС КАК ПакетыАмортизации
	|			ПО ПакетыАмортизации.Организация = НачислениеАмортизации.Организация
	|			И ПакетыАмортизации.ОсновноеСредство = НачислениеАмортизации.ОсновноеСредство
	|	ГДЕ
	|		НачислениеАмортизации.НачислятьАмортизациюУУ
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		НачислениеАмортизации.Организация,
	|		ЕСТЬNULL(ПакетыАмортизации.НомерПакета, 0) КАК НомерПакета,
	|		ЕСТЬNULL(МИНИМУМ(ДОБАВИТЬКДАТЕ(НачислениеАмортизации.Период, МЕСЯЦ, 1)), НЕОПРЕДЕЛЕНО)
	|	ИЗ
	|		РегистрСведений.ПорядокУчетаОСБУ КАК НачислениеАмортизации
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПакетыАмортизацииОС КАК ПакетыАмортизации
	|			ПО ПакетыАмортизации.Организация = НачислениеАмортизации.Организация
	|			И ПакетыАмортизации.ОсновноеСредство = НачислениеАмортизации.ОсновноеСредство
	|	ГДЕ
	|		(НачислениеАмортизации.НачислятьАмортизациюБУ
	|		ИЛИ НачислениеАмортизации.НачислятьАмортизациюНУ)
	|		И НачислениеАмортизации.Организация В (&Организация)
	|		И НачислениеАмортизации.Период >= &Период
	|	СГРУППИРОВАТЬ ПО
	|		НачислениеАмортизации.Организация,
	|		ЕСТЬNULL(ПакетыАмортизации.НомерПакета, 0)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		НачислениеАмортизации.Организация,
	|		ЕСТЬNULL(ПакетыАмортизации.НомерПакета, 0) КАК НомерПакета,
	|		ЕСТЬNULL(МИНИМУМ(ВЫБОР ПорядокУчетаВНАВУпрУчете.Значение
	|			КОГДА ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаВНАВУпрУчете.ПоСтандартамМУ)
	|				ТОГДА НачислениеАмортизации.Период
	|			ИНАЧЕ ДОБАВИТЬКДАТЕ(НачислениеАмортизации.Период, МЕСЯЦ, 1)
	|		КОНЕЦ), НЕОПРЕДЕЛЕНО)
	|	ИЗ
	|		РегистрСведений.ПорядокУчетаОСУУ КАК НачислениеАмортизации
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПакетыАмортизацииОС КАК ПакетыАмортизации
	|			ПО ПакетыАмортизации.Организация = НачислениеАмортизации.Организация
	|			И ПакетыАмортизации.ОсновноеСредство = НачислениеАмортизации.ОсновноеСредство
	|			ЛЕВОЕ СОЕДИНЕНИЕ Константа.ПорядокУчетаВНАВУпрУчете КАК ПорядокУчетаВНАВУпрУчете
	|			ПО (ИСТИНА)
	|	ГДЕ
	|		НачислениеАмортизации.НачислятьАмортизациюУУ
	|		И НачислениеАмортизации.Организация В (&Организация)
	|		И НачислениеАмортизации.Период >= &Период
	|	СГРУППИРОВАТЬ ПО
	|		НачислениеАмортизации.Организация,
	|		ЕСТЬNULL(ПакетыАмортизации.НомерПакета, 0)) КАК НачислениеАмортизации
	|СГРУППИРОВАТЬ ПО
	|	НачислениеАмортизации.Организация,
	|	НачислениеАмортизации.НомерПакета";
	
	//-- Локализация

	Возврат ТекстЗапроса;
	
КонецФункции
 
Функция ТекстЗапросаЗаданияКРасчетуАмортизацииНМАНаСледующийПериод(НачалоПериода) Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьВнеоборотныеАктивы2_2")
		И НЕ ПолучитьФункциональнуюОпцию("ИспользоватьВнеоборотныеАктивы2_4") Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	НачислениеАмортизации.Организация,
	|	НачислениеАмортизации.НомерПакета,
	|	ЕСТЬNULL(МИНИМУМ(НачислениеАмортизации.Период), ДАТАВРЕМЯ(1, 1, 1)) КАК Месяц
	|ИЗ
	|	(ВЫБРАТЬ
	|		НачислениеАмортизации.Организация КАК Организация,
	|		ЕСТЬNULL(ПакетыАмортизации.НомерПакета, 0) КАК НомерПакета,
	|		&Период КАК Период
	|	ИЗ
	|		РегистрСведений.ПорядокУчетаНМАБУ.СрезПоследних(
	|				&Период,
	|				Организация В (&Организация)) КАК НачислениеАмортизации
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПакетыАмортизацииНМА КАК ПакетыАмортизации
	|			ПО ПакетыАмортизации.Организация = НачислениеАмортизации.Организация
	|				И ПакетыАмортизации.НематериальныйАктив = НачислениеАмортизации.НематериальныйАктив
	|	ГДЕ
	|		(НачислениеАмортизации.НачислятьАмортизациюБУ
	|				ИЛИ НачислениеАмортизации.НачислятьАмортизациюНУ)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		НачислениеАмортизации.Организация,
	|		ЕСТЬNULL(ПакетыАмортизации.НомерПакета, 0) КАК НомерПакета,
	|		&Период
	|	ИЗ
	|		РегистрСведений.ПорядокУчетаНМАУУ.СрезПоследних(
	|				&Период,
	|				Организация В (&Организация)) КАК НачислениеАмортизации
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПакетыАмортизацииНМА КАК ПакетыАмортизации
	|			ПО ПакетыАмортизации.Организация = НачислениеАмортизации.Организация
	|				И ПакетыАмортизации.НематериальныйАктив = НачислениеАмортизации.НематериальныйАктив
	|	ГДЕ
	|		НачислениеАмортизации.НачислятьАмортизациюУУ
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		НачислениеАмортизации.Организация,
	|		ЕСТЬNULL(ПакетыАмортизации.НомерПакета, 0) КАК НомерПакета,
	|		ЕСТЬNULL(МИНИМУМ(ДОБАВИТЬКДАТЕ(НачислениеАмортизации.Период, МЕСЯЦ, 1)), НЕОПРЕДЕЛЕНО)
	|	ИЗ
	|		РегистрСведений.ПорядокУчетаНМАБУ КАК НачислениеАмортизации
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПакетыАмортизацииНМА КАК ПакетыАмортизации
	|			ПО ПакетыАмортизации.Организация = НачислениеАмортизации.Организация
	|				И ПакетыАмортизации.НематериальныйАктив = НачислениеАмортизации.НематериальныйАктив
	|	ГДЕ
	|		(НачислениеАмортизации.НачислятьАмортизациюБУ
	|				ИЛИ НачислениеАмортизации.НачислятьАмортизациюНУ)
	|		И НачислениеАмортизации.Организация В (&Организация)
	|		И НачислениеАмортизации.Период >= &Период
	|	
	|	СГРУППИРОВАТЬ ПО
	|		НачислениеАмортизации.Организация,
	|		ЕСТЬNULL(ПакетыАмортизации.НомерПакета, 0)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		НачислениеАмортизации.Организация,
	|		ЕСТЬNULL(ПакетыАмортизации.НомерПакета, 0) КАК НомерПакета,
	|		ЕСТЬNULL(МИНИМУМ(ВЫБОР ПорядокУчетаВНАВУпрУчете.Значение
	|					КОГДА ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаВНАВУпрУчете.ПоСтандартамМУ)
	|						ТОГДА НачислениеАмортизации.Период
	|					ИНАЧЕ ДОБАВИТЬКДАТЕ(НачислениеАмортизации.Период, МЕСЯЦ, 1)
	|				КОНЕЦ), НЕОПРЕДЕЛЕНО)
	|	ИЗ
	|		РегистрСведений.ПорядокУчетаНМАУУ КАК НачислениеАмортизации
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПакетыАмортизацииНМА КАК ПакетыАмортизации
	|			ПО ПакетыАмортизации.Организация = НачислениеАмортизации.Организация
	|				И ПакетыАмортизации.НематериальныйАктив = НачислениеАмортизации.НематериальныйАктив
	|			ЛЕВОЕ СОЕДИНЕНИЕ Константа.ПорядокУчетаВНАВУпрУчете КАК ПорядокУчетаВНАВУпрУчете
	|			ПО (ИСТИНА)
	|	ГДЕ
	|		НачислениеАмортизации.НачислятьАмортизациюУУ
	|		И НачислениеАмортизации.Организация В (&Организация)
	|		И НачислениеАмортизации.Период >= &Период
	|	
	|	СГРУППИРОВАТЬ ПО
	|		НачислениеАмортизации.Организация,
	|		ЕСТЬNULL(ПакетыАмортизации.НомерПакета, 0)
	|
	|	) КАК НачислениеАмортизации
	|
	|СГРУППИРОВАТЬ ПО
	|	НачислениеАмортизации.Организация,
	|	НачислениеАмортизации.НомерПакета";
	
	//-- Локализация

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаНаработкиОбъектовЭксплуатацииИзменение() Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	//-- Локализация

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаРассчитатьНомераПакетовАмортизацииОС() Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	//-- Локализация

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаРассчитатьНомераПакетовАмортизацииНМА() Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	//-- Локализация

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПроверитьРеквизитыОСПриПринятииКУчету(Запрос, Объект) Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	//-- Локализация
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТребуетсяРасчетАмортизацииОС(Период) Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	Если НЕ ВнеоборотныеАктивы.ИспользуетсяУправлениеВНА() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	1 КАК Поле1
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(&Период, Организация В (&Организация)) КАК НачислениеАмортизации
	|ГДЕ
	|	(НачислениеАмортизации.НачислятьАмортизациюБУ
	|			ИЛИ НачислениеАмортизации.НачислятьАмортизациюНУ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	1
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСУУ.СрезПоследних(&Период, Организация В (&Организация)) КАК НачислениеАмортизации
	|ГДЕ
	|	НачислениеАмортизации.НачислятьАмортизациюУУ";
	
	//-- Локализация
	
	Возврат ТекстЗапроса;

КонецФункции
 
Функция ТекстЗапросаТребуетсяРасчетАмортизацииНМА(Период) Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	//-- Локализация

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПроверитьЧтоОСПринятыКУчету(Объект, ПроверитьВВыбранномУчете) Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	//-- Локализация

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПроверитьЧтоОСПолученыВАренду() Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	//-- Локализация

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПроверитьЧтоНМАПринятыКУчету() Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	//-- Локализация

	Возврат ТекстЗапроса;
	
КонецФункции
 
#КонецОбласти

#Область ПанельСправочниковВнеоборотныеАктивы

Процедура ПриСозданииНаСервере_ПанельСправочниковВнеоборотныеАктивы(Форма) Экспорт

	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

Процедура УправлениеЭлементами_ПанельСправочниковВнеоборотныеАктивы(Форма) Экспорт
	
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры
 
#КонецОбласти

#Область ПанельАдминистрированияКА

Процедура СохранитьЗначениеРеквизита_ПанельАдминистрированияКА(Форма, РеквизитПутьКДанным, КонстантаИмя) Экспорт

	//++ Локализация  
	
	НаборКонстант = Форма.НаборКонстант;
	
	Если РеквизитПутьКДанным = "УчетВнеоборотныхАктивов" Тогда
		
		Если Форма.УчетВнеоборотныхАктивов = "2_2" Тогда
			
			КонстантаИмя = "ИспользоватьВнеоборотныеАктивы2_2";
			
			НаборКонстант.ИспользоватьВнеоборотныеАктивы2_2 = Истина;
			НаборКонстант.ИспользоватьВнеоборотныеАктивы2_4 = Ложь;
			НаборКонстант.ДатаНачалаУчетаВнеоборотныхАктивов2_4 = '000101010000';
			
		ИначеЕсли Форма.УчетВнеоборотныхАктивов = "2_4" Тогда
			
			КонстантаИмя = "ИспользоватьВнеоборотныеАктивы2_4";
			
			Если НаборКонстант.ИспользоватьВнеоборотныеАктивы2_2 Тогда
				Если ЗначениеЗаполнено(Форма.ДоступностьУчета24.МинимальнаяДатаНачалаУчета2_4) Тогда
					НаборКонстант.ДатаНачалаУчетаВнеоборотныхАктивов2_4 = НачалоМесяца(Форма.ДоступностьУчета24.МинимальнаяДатаНачалаУчета2_4);
				Иначе
					НаборКонстант.ДатаНачалаУчетаВнеоборотныхАктивов2_4 = НачалоМесяца(ДобавитьМесяц(ТекущаяДатаСеанса(), 1));
				КонецЕсли; 
			Иначе
				НаборКонстант.ДатаНачалаУчетаВнеоборотныхАктивов2_4 = '000101010000';
			КонецЕсли; 
			
		Иначе
			
			КонстантаИмя = "ИспользоватьВнеоборотныеАктивы2_2";
			НаборКонстант.ИспользоватьВнеоборотныеАктивы2_2 = Ложь;
			НаборКонстант.ДатаНачалаУчетаВнеоборотныхАктивов2_4 = '000101010000';
			
		КонецЕсли;
		
		Константы.ИспользоватьВнеоборотныеАктивы2_2.Установить(НаборКонстант.ИспользоватьВнеоборотныеАктивы2_2);
		Константы.ИспользоватьВнеоборотныеАктивы2_4.Установить(НаборКонстант.ИспользоватьВнеоборотныеАктивы2_4);
		Константы.ДатаНачалаУчетаВнеоборотныхАктивов2_4.Установить(НаборКонстант.ДатаНачалаУчетаВнеоборотныхАктивов2_4);
		
		Если НаборКонстант.ОтображатьВнеоборотныеАктивы2_2 И НЕ НаборКонстант.ИспользоватьВнеоборотныеАктивы2_2 Тогда
			НаборКонстант.ОтображатьВнеоборотныеАктивы2_2 = Ложь;
			Константы.ОтображатьВнеоборотныеАктивы2_2.Установить(Ложь);
		ИначеЕсли НЕ НаборКонстант.ОтображатьВнеоборотныеАктивы2_2 И НаборКонстант.ИспользоватьВнеоборотныеАктивы2_2 Тогда
			НаборКонстант.ОтображатьВнеоборотныеАктивы2_2 = Истина;
			Константы.ОтображатьВнеоборотныеАктивы2_2.Установить(Истина);
		КонецЕсли; 
		
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры
 
#КонецОбласти

#Область СтандартныеПодсистемы

// Определяет список объектов конфигурации, в модулях менеджеров которых предусмотрена процедура 
// ДобавитьКомандыСозданияНаОсновании, формирующая команды создания на основании объектов.
// Синтаксис процедуры ДобавитьКомандыСозданияНаОсновании см. в документации.
//
// Параметры:
//   Объекты - Массив - объекты метаданных (ОбъектМетаданных) с командами создания на основании.
//
// Пример:
//	Объекты.Добавить(Метаданные.Справочники.Организации);
//   
Процедура ПриОпределенииОбъектовСКомандамиСозданияНаОсновании(Объекты) Экспорт

	//++ Локализация

	// 2.2
	Объекты.Добавить(Метаданные.Документы.АмортизацияНМА);
	Объекты.Добавить(Метаданные.Документы.АмортизацияОС);
	Объекты.Добавить(Метаданные.Документы.ВводОстатковВнеоборотныхАктивов);
	Объекты.Добавить(Метаданные.Документы.ИзменениеПараметровНМА);
	Объекты.Добавить(Метаданные.Документы.ИзменениеПараметровОС);
	Объекты.Добавить(Метаданные.Документы.ИзменениеСостоянияОС);
	Объекты.Добавить(Метаданные.Документы.МодернизацияОС);
	Объекты.Добавить(Метаданные.Документы.ПеремещениеОС);
	Объекты.Добавить(Метаданные.Документы.ПереоценкаНМА);
	Объекты.Добавить(Метаданные.Документы.ПереоценкаОС);
	Объекты.Добавить(Метаданные.Документы.ПодготовкаКПередачеНМА);
	Объекты.Добавить(Метаданные.Документы.ПодготовкаКПередачеОС);
	Объекты.Добавить(Метаданные.Документы.ПринятиеКУчетуНМА);
	Объекты.Добавить(Метаданные.Документы.ПринятиеКУчетуОС);
	Объекты.Добавить(Метаданные.Документы.СписаниеНМА);
	Объекты.Добавить(Метаданные.Документы.СписаниеОС);
	Объекты.Добавить(Метаданные.Документы.РемонтОС);


	// 2.4
	
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

// Содержит настройки размещения вариантов отчетов в панели отчетов.
//
// Параметры:
//  Настройки	 - Коллекция - Передается "как есть" из ВариантыОтчетовПереопределяемый.НастроитьВариантыОтчетов().
//  Может использоваться для получения настроек варианта этого отчета при помощи функции ВариантыОтчетов.ОписаниеВарианта().
//
Процедура НастроитьВариантыОтчетов(Настройки) Экспорт

	//++ Локализация
	
#Область ВедомостьПоОС
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ВедомостьПоОС);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru='Какие сводные данные о стоимости и амортизации основных средств?';uk='Які зведені дані про вартість і амортизації основних засобів?'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ВедомостьПоОС");
	ОписаниеВарианта.Описание = НСтр("ru='Какие сводные данные о стоимости и амортизации основных средств?';uk='Які зведені дані про вартість і амортизації основних засобів?'");
#КонецОбласти        

#Область ВедомостьПоНМА
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ВедомостьПоНМА);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru='Какие сводные данные о стоимости и амортизации НМА?';uk='Які зведені дані про вартість і амортизації НМА?'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ВедомостьПоНМА");
	ОписаниеВарианта.Описание = НСтр("ru='Какие сводные данные о стоимости и амортизации НМА?';uk='Які зведені дані про вартість і амортизації НМА?'");
#КонецОбласти        
	
	
	
#Область ВедомостьПоОС2_4
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ВедомостьПоОС2_4);
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru='Какие сводные данные о стоимости и амортизации основных средств?';uk='Які зведені дані про вартість і амортизації основних засобів?'");
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ВедомостьПоОС");
	ОписаниеВарианта.ВидимостьПоУмолчанию = Истина;
	ОписаниеВарианта.Описание = НСтр("ru='Какие сводные данные о стоимости и амортизации основных средств?';uk='Які зведені дані про вартість і амортизації основних засобів?'");
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ВедомостьПоОС_БУ");
	ОписаниеВарианта.ВидимостьПоУмолчанию = Ложь;
	ОписаниеВарианта.Описание = НСтр("ru='Какие сводные данные о стоимости и амортизации основных средств в бухгалтерском учете?';uk='Які зведені дані про вартість та амортизацію основних засобів у бухгалтерському обліку?'");
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ВедомостьПоОС_НУ");
	ОписаниеВарианта.ВидимостьПоУмолчанию = Ложь;
	ОписаниеВарианта.Описание = НСтр("ru='Какие сводные данные о стоимости и амортизации основных средств в налоговом учете?';uk='Які зведені дані щодо вартості та амортизації основних засобів у податковому обліку?'");
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ВедомостьПоОС_БУ_НУ");
	ОписаниеВарианта.ВидимостьПоУмолчанию = Ложь;
	ОписаниеВарианта.Описание = НСтр("ru='Какие сводные данные о стоимости и амортизации основных средств в бухгалтерском и налоговом учетах?';uk='Які зведені дані про вартість та амортизацію основних засобів у бухгалтерському та податковому обліку?'");
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ВедомостьПоОС_УУ");
	ОписаниеВарианта.ВидимостьПоУмолчанию = Ложь;
	ОписаниеВарианта.Описание = НСтр("ru='Какие сводные данные о стоимости и амортизации основных средств в управленческом учете?';uk='Які зведені дані щодо вартості та амортизації основних засобів в управлінському обліку?'");
#КонецОбласти
	
#Область ВедомостьПоНМА2_4
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ВедомостьПоНМА2_4);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru='Какие сводные данные о стоимости и амортизации НМА?';uk='Які зведені дані про вартість і амортизації НМА?'");
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ВедомостьПоНМА");
	ОписаниеВарианта.ВидимостьПоУмолчанию = Истина;
	ОписаниеВарианта.Описание = НСтр("ru='Какие сводные данные о стоимости и амортизации НМА?';uk='Які зведені дані про вартість і амортизації НМА?'");
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ВедомостьПоНМА_БУ");
	ОписаниеВарианта.ВидимостьПоУмолчанию = Ложь;
	ОписаниеВарианта.Описание = НСтр("ru='Какие сводные данные о стоимости и амортизации НМА в бухгалтерском учете?';uk='Які зведені дані щодо вартості та амортизації НМА у бухгалтерському обліку?'");
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ВедомостьПоНМА_НУ");
	ОписаниеВарианта.ВидимостьПоУмолчанию = Ложь;
	ОписаниеВарианта.Описание = НСтр("ru='Какие сводные данные о стоимости и амортизации НМА в налоговом учете?';uk='Які зведені дані щодо вартості та амортизації НМА у податковому обліку?'");
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ВедомостьПоНМА_БУ_НУ");
	ОписаниеВарианта.ВидимостьПоУмолчанию = Ложь;
	ОписаниеВарианта.Описание = НСтр("ru='Какие сводные данные о стоимости и амортизации НМА в бухгалтерском и налоговом учетах?';uk='Які зведені дані щодо вартості та амортизації НМА у бухгалтерському та податковому обліку?'");
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ВедомостьПоНМА_УУ");
	ОписаниеВарианта.ВидимостьПоУмолчанию = Ложь;
	ОписаниеВарианта.Описание = НСтр("ru='Какие сводные данные о стоимости и амортизации НМА в управленческом учете?';uk='Які зведені дані щодо вартості та амортизації НМА в управлінському обліку?'");
#КонецОбласти
	
	//-- Локализация
	
КонецПроцедуры

Функция ТребуетсяЗагрузитьТаблицыДвижений(ИмяРегистра) Экспорт

	//++ Локализация
	
	//++ НЕ УТ
	Если ИмяРегистра = "ОтражениеДокументовВРеглУчете" Тогда
		// Формирование движений выполняется процедурой РеглУчетПроведениеСервер.ЗарегистрироватьКОтражению().
		Возврат Ложь;
	КонецЕсли;
	//-- НЕ УТ

	//-- Локализация
	
	Возврат Истина;
	
КонецФункции

Функция ОбъектЭксплуатацииПринятКУчету(Ссылка) Экспорт

	ПринятКУчету = Ложь;
	
	//++ Локализация
	//-- Локализация
	
	Возврат ПринятКУчету;
	
КонецФункции

Процедура ОпределитьОбъектыСКомандамиОтчетов(Объекты) Экспорт

	//++ Локализация
	
	Объекты.Добавить(Метаданные.Документы.АмортизацияНМА);
	Объекты.Добавить(Метаданные.Документы.АмортизацияОС);
	Объекты.Добавить(Метаданные.Документы.ВводОстатковВнеоборотныхАктивов);
	Объекты.Добавить(Метаданные.Документы.ИзменениеПараметровНМА);
	Объекты.Добавить(Метаданные.Документы.ИзменениеПараметровОС);
	Объекты.Добавить(Метаданные.Документы.ИзменениеСостоянияОС);
	Объекты.Добавить(Метаданные.Документы.ИнвентаризацияОС);
	Объекты.Добавить(Метаданные.Документы.ИнвентаризацияНМА);
	Объекты.Добавить(Метаданные.Документы.МодернизацияОС);
	Объекты.Добавить(Метаданные.Документы.ПеремещениеОС); 
	Объекты.Добавить(Метаданные.Документы.МодернизацияНМА);
	Объекты.Добавить(Метаданные.Документы.ПеремещениеНМА); 
	Объекты.Добавить(Метаданные.Документы.ПереоценкаНМА);
	Объекты.Добавить(Метаданные.Документы.ПереоценкаОС);
	Объекты.Добавить(Метаданные.Документы.ПодготовкаКПередачеНМА);
	Объекты.Добавить(Метаданные.Документы.ПодготовкаКПередачеОС);
	Объекты.Добавить(Метаданные.Документы.ПринятиеКУчетуНМА);
	Объекты.Добавить(Метаданные.Документы.ПринятиеКУчетуОС);
	Объекты.Добавить(Метаданные.Документы.СписаниеНМА);
	Объекты.Добавить(Метаданные.Документы.СписаниеОС);
	
	Объекты.Добавить(Метаданные.Обработки.ЖурналДокументовНМА);
	Объекты.Добавить(Метаданные.Обработки.ЖурналДокументовОС);
	
	
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьТекстЗапросаТаблицаПрочиеДоходыПриПереоценке(ТекстыТекущегоЗапроса) Экспорт

	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьТекстЗапросаЕстьУчетВнеоборотныхАктивов(СписокЗапросовОбъединение) Экспорт

	//++ Локализация     
	ТекстЗапроса = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.Ссылка
	|ИЗ
	|	Документ.ИнвентаризацияОС КАК Таблица
	|ГДЕ
	|	НЕ Таблица.ПометкаУдаления
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.Ссылка
	|ИЗ
	|	Документ.АмортизацияОС КАК Таблица
	|ГДЕ
	|	НЕ Таблица.ПометкаУдаления";

	СписокЗапросовОбъединение.Добавить(ТекстЗапроса);
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьТекстЗапросаЕстьУчетВнеоборотныхАктивов2_4(СписокЗапросовОбъединение) Экспорт

	//++ Локализация
	ТекстЗапроса = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.Регистратор
	|ИЗ
	|	РегистрСведений.ПараметрыАмортизацииНМАБУ КАК Таблица
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.Регистратор
	|ИЗ
	|	РегистрСведений.ПараметрыАмортизацииОСБУ КАК Таблица
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.Ссылка
	|ИЗ
	|	Документ.ИнвентаризацияНМА КАК Таблица
	|ГДЕ
	|	НЕ Таблица.ПометкаУдаления";
	СписокЗапросовОбъединение.Добавить(ТекстЗапроса);
	
	//-- Локализация
	
КонецПроцедуры
 
Процедура ДополнитьГруппыОрганизацийОСиНМА(Период, МассивОСиНМА) Экспорт

	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьПорядокУчетаПриКоторомНачисляетсяАмортизация(ПорядокУчета) Экспорт

	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьПараметрыЗапросаДляРасчетаАмортизации(Запрос, ПараметрыРасчета) Экспорт

	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьПустыеСпособыОтраженияРасходов(ПустыеСпособыОтраженияРасходов) Экспорт
	
	//++ Локализация
	ПустыеСпособыОтраженияРасходов.Добавить(Документы.ИзменениеПараметровОС.ПустаяСсылка());
	ПустыеСпособыОтраженияРасходов.Добавить(Документы.ИзменениеПараметровНМА.ПустаяСсылка());
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьТипыДокументовКоторыеМогутИзменитьСтоимость(ТипыОбъектов) Экспорт

	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьТипыДокументовДвиженияКоторыхНужноПеренестиНаНачалоМесяца(ТипыОбъектов) Экспорт

	//++ Локализация
	//-- Локализация
	
КонецПроцедуры
 
Процедура ДанныеВыбораНематериальныхАктивов2_2(Параметры) Экспорт

	//++ Локализация         
	//-- Локализация
	
КонецПроцедуры

Процедура ДанныеВыбораОбъектовЭксплуатации2_2(Параметры) Экспорт

	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьНаличиеУчета(НаличиеУчета) Экспорт

	//++ Локализация
	НаличиеУчета.Вставить("ЕстьУчет2_2", ЕстьУчетВнеоборотныхАктивов2_2());
	НаличиеУчета.Вставить("ИспользуетсяУУНаПланеСчетовХозрасчетный", Константы.ВестиУУНаПланеСчетовХозрасчетный.Получить());
	НаличиеУчета.Вставить("ИспользоватьРеглУчет", Константы.ИспользоватьРеглУчет.Получить());

	НаличиеУчета.МожноОтключитьУчет = 
		НаличиеУчета.МожноОтключитьУчет
		И НЕ НаличиеУчета.ЕстьУчет2_2; 
		

	//-- Локализация
	
КонецПроцедуры

Процедура ДобавитьВТекстЗапросаВтТаблицаОСПоляЛокализации(ТекстЗапроса, ИмяДокумента) Экспорт

	ПоляЛокализации = "NULL";
	
	//++ Локализация
	//-- Локализация
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПоляЛокализации", ПоляЛокализации);
	
КонецПроцедуры

Процедура ПроверитьВозможностьПринятияКУчетуОС(Выборка, Объект, ДанныеСтроки, МестонахождениеВТабличнойЧасти, Путь, Отказ) Экспорт

	//++ Локализация
	//-- Локализация
	
КонецПроцедуры
 
Процедура ПроверитьВозможностьПринятияКУчетуНМА(Выборка, Объект, Путь, Отказ) Экспорт
	
	Если Выборка.ДругаяОрганизация И НЕ Выборка.УжеПринятоКУчету Тогда
		Если Объект.ОтражатьВУпрУчете Тогда
			ТекстСообщения = НСтр("ru='Нематериальный актив ""%1"" должен быть принят в организацию ""%2"", соответствующую регламентированному учету.';uk='Нематеріальний актив ""%1"" має бути прийнятий в організацію ""%2"", яка відповідає регламентованому обліку.'");
		Иначе
			ТекстСообщения = НСтр("ru='Нематериальный актив ""%1"" должен быть принят в организацию ""%2"", соответствующую управленческому учету.';uk='Нематеріальний актив ""%1"" має бути прийнятий в організацію ""%2"", яка відповідає управлінського обліку.'");
		КонецЕсли; 
		ТекстСообщения = СтрШаблон(ТекстСообщения, Выборка.Представление, Выборка.ТекущаяОрганизация);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект, Путь,, Отказ);
	КонецЕсли;
	
	Если Выборка.ДругоеПодразделение И НЕ Выборка.УжеПринятоКУчету Тогда
		Если Объект.ОтражатьВУпрУчете Тогда
			ТекстСообщения = НСтр("ru='Нематериальный актив ""%1"" должен быть принят в подразделение ""%2"", соответствующее регламентированному учету.';uk='Нематеріальний актив ""%1"" має бути прийнятий до підрозділу "" %2"",  який відповідає регламентованому обліку.'");
		Иначе
			ТекстСообщения = НСтр("ru='Нематериальный актив ""%1"" должен быть принят в подразделение ""%2"", соответствующее управленческому учету.';uk='Нематеріальний актив ""%1"" має бути прийнятий до підрозділу ""%2"",  який відповідає управлінського обліку.'");
		КонецЕсли; 
		ТекстСообщения = СтрШаблон(ТекстСообщения, Выборка.Представление, Выборка.ТекущееПодразделение);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект, Путь,, Отказ);
	КонецЕсли;

КонецПроцедуры

Процедура ДополнитьОписаниеРегистровОСДляКонтроляДатЗапретаИзменения(ИсточникиДанных) Экспорт

	//++ Локализация
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "РегистрСведений.ПорядокУчетаОСБУ", "Период", "РегламентныеОперации", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "РегистрСведений.ПараметрыАмортизацииОСБУ", "Период", "РегламентныеОперации", "Организация");
	//-- Локализация
	
КонецПроцедуры
 
Процедура ДополнитьОписаниеРегистровНМАДляКонтроляДатЗапретаИзменения(ИсточникиДанных) Экспорт

	//++ Локализация
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "РегистрСведений.ПорядокУчетаНМАБУ", "Период", "РегламентныеОперации", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "РегистрСведений.ПараметрыАмортизацииНМАБУ", "Период", "РегламентныеОперации", "Организация");
	//-- Локализация
	
КонецПроцедуры

Функция ИспользуетсяУправлениеВНА_2_4(Период) Экспорт

	ИспользуетсяУправлениеВНА_2_4 = Истина;
	
	//++ Локализация
	
	ДатаНачалаУчета = ДатаНачалаУчетаВнеоборотныхАктивов2_4();
	
	ИспользуетсяУправлениеВНА_2_4 = 
		(Период >= ДатаНачалаУчета
			ИЛИ Период = '000101010000' 
				И ТекущаяДатаСеанса() >= ДатаНачалаУчета);
					
	//-- Локализация

	Возврат ИспользуетсяУправлениеВНА_2_4;
	
КонецФункции
 
Функция ИспользуетсяУправлениеВНА() Экспорт

	ИспользуетсяУправлениеВНА = Ложь;
	
	//++ Локализация
	ИспользуетсяУправлениеВНА = ПолучитьФункциональнуюОпцию("ИспользоватьВнеоборотныеАктивы2_2");
	//-- Локализация
	
	Возврат ИспользуетсяУправлениеВНА;
	
КонецФункции

Функция УсловияПереходаНаУчет2_2() Экспорт

	КомментарийУчет2_2 = "";
	
	Если НЕ Константы.ИспользоватьРеглУчет.Получить() Тогда
		КомментарийУчет2_2 = КомментарийУчет2_2 + Символы.ПС
			+ НСтр("ru='- включить опцию ""Регламентированный учет""
|(раздел ""НСИ и администрирование"" - ""Регламентированный учет"")'
|;uk='- включити опцію ""Регламентований облік"" 
|(розділ ""НДІ і адміністрування"" - ""Регламентований облік"")'");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(КомментарийУчет2_2) Тогда
		КомментарийУчет2_2 = НСтр("ru='Для включения возможности учета версии 2.1 необходимо:';uk='Для включення можливості обліку версії 2.1 необхідно:'") + КомментарийУчет2_2;
	КонецЕсли; 
	
	ДоступностьУчета2_2 = Новый Структура;
	ДоступностьУчета2_2.Вставить("КомментарийУчет2_2", КомментарийУчет2_2);
	ДоступностьУчета2_2.Вставить("ДоступенУчет", НЕ ЗначениеЗаполнено(КомментарийУчет2_2));
	
	Возврат ДоступностьУчета2_2;
	
КонецФункции

Процедура УсловияПереходаНаУчет2_4(МинимальнаяДатаНачалаУчета2_4, КомментарийМинДатаНачалаУчета2_4, МаксимальнаяДатаНачалаУчета2_4, КомментарийМаксДатаНачалаУчета2_4) Экспорт

	//++ Локализация
	//-- Локализация
	
КонецПроцедуры
 
Процедура ДополнитьУсловияПереходаНаУчет2_4(ДоступностьУчета2_4) Экспорт

	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

Процедура ПроверитьРеквизитыОСПриПринятииКУчету(Выборка, Объект, Путь, Отказ) Экспорт

	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

Функция ЕстьПраваНаЧтениеСостоянияОС() Экспорт

	ЕстьПрава = Истина;
	
	//++ Локализация                         
	ЕстьПрава = ПравоДоступа("Чтение", Метаданные.РегистрыСведений.ПорядокУчетаОСБУ);
	//-- Локализация
	
	Возврат ЕстьПрава;
	
КонецФункции

Функция ЕстьПраваНаЧтениеСостоянияНМА() Экспорт

	ЕстьПрава = Истина;
	
	//++ Локализация
	ЕстьПрава = ПравоДоступа("Чтение", Метаданные.РегистрыСведений.ПорядокУчетаНМАБУ);
	//-- Локализация
	
	Возврат ЕстьПрава;

КонецФункции
 
Функция ПараметрыРасшифровкиОтчета(ПолноеИмяОтчета, Расшифровка, АдресДанныхРасшифровки, КомпоновщикНастроек) Экспорт

	ПараметрыРасшифровки = Неопределено;
	
	//++ Локализация
	//-- Локализация

	Возврат ПараметрыРасшифровки;
	
КонецФункции

Процедура ДополнитьОписаниеОперацийИТиповДокументовДляЖурналаДокументовЗакупки(ХозяйственныеОперацииИДокументы) Экспорт

	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

Функция ТекстЗапросаПринятыеКУчетуОС() Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	//-- Локализация

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПринятыеКУчетуНМА() Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	//-- Локализация

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ПредельнаяСтоимостьСписанияНаРасходы() Экспорт

	Возврат 100000;
	
КонецФункции

#КонецОбласти

//++ Локализация

#Область ПроведениеПоРеглУчету

Процедура ТекстЗапросаПеремещениеСтоимостиОС(СписокЗапросов) Экспорт
	
	ЯзыкСодержания = МультиязычностьУкр.КодЯзыкаИнформационнойБазы();
	
	#Область ПеремещениеСтоимости
	ТекстЗапроса = 
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Перемещение стоимости ОС (Дт СчетУчетаСтоимости :: Кт СчетУчетаСтоимости)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.СтоимостьРегл КАК Сумма,
	|	Строки.Стоимость КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.ОсновноеСредство КАК СубконтоДт1,
	|	Строки.Арендатор КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СтоимостьНУ КАК СуммаНУДт,
	|	Строки.СтоимостьПР КАК СуммаПРДт,
	|	Строки.СтоимостьВР КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА) КАК ВидСчетаКт,
	|	Строки.КорГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.КорПодразделение КАК ПодразделениеКт,
	|	Строки.КорНаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	ВЫБОР 
	|		КОГДА Строки.КорКонтрагент <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА Строки.КорКонтрагент 
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО 
	|	КОНЕЦ КАК СубконтоКт2,
	|	ВЫБОР 
	|		КОГДА Строки.КорОрганизация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА Строки.КорОрганизация 
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО 
	|	КОНЕЦ КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СтоимостьНУ КАК СуммаНУКт,
	|	Строки.СтоимостьПР КАК СуммаПРКт,
	|	Строки.СтоимостьВР КАК СуммаВРКт,
	|	""%1"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|ГДЕ
	|	Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И Строки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИзменениеПараметровСтоимостиОС)
	|	И (Строки.Стоимость <> 0
	|		ИЛИ Строки.СтоимостьРегл <> 0
	|		ИЛИ Строки.СтоимостьНУ <> 0
	|		ИЛИ Строки.СтоимостьПР <> 0
	|		ИЛИ Строки.СтоимостьВР <> 0)";


	ТекстЗапроса = СтрШаблон(ТекстЗапроса, 
		НСтр("ru='Перемещение стоимости ОС';uk='Переміщення вартості ОЗ'",ЯзыкСодержания));
 
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ПеремещениеСтоимостиЦФ_Дт_СчетУчетаСтоимости_ЦФ__Кт_СчетУчетаСтоимости_ЦФ
	ТекстЗапроса = 
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Перемещение стоимости ОС (Дт СчетУчетаСтоимости_ЦФ :: Кт СчетУчетаСтоимости_ЦФ)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.СтоимостьЦФ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА_ЦФ) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.ОсновноеСредство КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СтоимостьНУЦФ КАК СуммаНУДт,
	|	Строки.СтоимостьПРЦФ КАК СуммаПРДт,
	|	Строки.СтоимостьВРЦФ КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА_ЦФ) КАК ВидСчетаКт,
	|	Строки.КорГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.КорПодразделение КАК ПодразделениеКт,
	|	Строки.КорНаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СтоимостьНУЦФ КАК СуммаНУКт,
	|	Строки.СтоимостьПРЦФ КАК СуммаПРКт,
	|	Строки.СтоимостьВРЦФ КАК СуммаВРКт,
	|	""%1"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|ГДЕ
	|	Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И Строки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИзменениеПараметровСтоимостиОС)
	|	И (Строки.СтоимостьЦФ <> 0
	|		ИЛИ Строки.СтоимостьНУЦФ <> 0
	|		ИЛИ Строки.СтоимостьПРЦФ <> 0
	|		ИЛИ Строки.СтоимостьВРЦФ <> 0)";
	
	ТекстЗапроса = СтрШаблон(ТекстЗапроса, 
		НСтр("ru='Перемещение стоимости ОС';uk='Переміщення вартості ОЗ'",ЯзыкСодержания));
	 
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
КонецПроцедуры

Процедура ТекстЗапросаПеремещениеАмортизацииОС(СписокЗапросов) Экспорт
	
	ЯзыкСодержания = МультиязычностьУкр.КодЯзыкаИнформационнойБазы();
	
	#Область ПеремещениеАмортизации_Дт_СчетУчетаАмортизации__Кт_СчетУчетаАмортизации
	ТекстЗапроса = 
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Перемещение амортизации ОС (Дт СчетУчетаАмортизации :: Кт СчетУчетаАмортизации)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.АмортизацияРегл	КАК Сумма,
	|	Строки.Амортизация КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.ОсновноеСредство КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	///////////////////////////////////////////////////
	|	Строки.АмортизацияНУ	КАК СуммаНУДт,
	|	0	КАК СуммаПРДт,
	|	0	КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА) КАК ВидСчетаКт,
	|	Строки.КорГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.КорПодразделение КАК ПодразделениеКт,
	|	Строки.КорНаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.АмортизацияНУ КАК СуммаНУКт,
	|	0	КАК СуммаПРКт,
	|	0	КАК СуммаВРКт,
	|	""%1"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|ГДЕ
	|	Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И Строки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИзменениеПараметровАмортизацииОС)
	|	И (Строки.Амортизация <> 0
	//////////////////////////////
	|			ИЛИ Строки.АмортизацияРегл <> 0
	|			ИЛИ Строки.АмортизацияНУ <> 0)";

	ТекстЗапроса = СтрШаблон(ТекстЗапроса, 
		НСтр("ru='Перемещение амортизации ОС';uk='Переміщення амортизації ОЗ'",ЯзыкСодержания));
 
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти

	#Область ПеремещениеАмортизацииЦФ_Дт_СчетУчетаАмортизации_ЦФ__Кт_СчетУчетаАмортизации_ЦФ
	ТекстЗапроса = 
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Перемещение амортизации ОС (Дт СчетУчетаАмортизации_ЦФ :: Кт СчетУчетаАмортизации_ЦФ) за счет целевого финансирования
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.АмортизацияЦФ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА_ЦФ) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.ОсновноеСредство КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.АмортизацияНУЦФ КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА_ЦФ) КАК ВидСчетаКт,
	|	Строки.КорГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.КорПодразделение КАК ПодразделениеКт,
	|	Строки.КорНаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.АмортизацияНУЦФ КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""%1"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|ГДЕ
	|	Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И Строки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИзменениеПараметровАмортизацииОС)
	|	И (Строки.АмортизацияЦФ <> 0
	|		ИЛИ Строки.АмортизацияНУЦФ <> 0)";

	ТекстЗапроса = СтрШаблон(ТекстЗапроса, 
		НСтр("ru='Перемещение амортизации ОС';uk='Переміщення амортизації ОЗ'",ЯзыкСодержания));
 	
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
КонецПроцедуры

Процедура ТекстЗапросаПеремещениеСтоимостиНМА(СписокЗапросов) Экспорт
	
	ЯзыкСодержания = МультиязычностьУкр.КодЯзыкаИнформационнойБазы();
	
	#Область ПеремещениеСтоимости
	ТекстЗапроса = 
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Перемещение стоимости НМА (Дт СчетУчетаСтоимости :: Кт СчетУчетаСтоимости)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.СтоимостьРегл КАК Сумма,
	|	Строки.Стоимость КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.НематериальныйАктив КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СтоимостьНУ КАК СуммаНУДт,
	|	Строки.СтоимостьПР КАК СуммаПРДт,
	|	Строки.СтоимостьВР КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА) КАК ВидСчетаКт,
	|	Строки.КорГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.КорПодразделение КАК ПодразделениеКт,
	|	Строки.КорНаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.НематериальныйАктив КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СтоимостьНУ КАК СуммаНУКт,
	|	Строки.СтоимостьПР КАК СуммаПРКт,
	|	Строки.СтоимостьВР КАК СуммаВРКт,
	|	""%1"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьНМА КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|ГДЕ
	|	Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И Строки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИзменениеПараметровСтоимостиНМА)
	|	И (Строки.Стоимость <> 0
	|		ИЛИ Строки.СтоимостьРегл <> 0
	|		ИЛИ Строки.СтоимостьНУ <> 0
	|		ИЛИ Строки.СтоимостьПР <> 0
	|		ИЛИ Строки.СтоимостьВР <> 0)";

	ТекстЗапроса = СтрШаблон(ТекстЗапроса, 
		НСтр("ru='Перемещение стоимости НМА';uk='Переміщення вартості НМА'",ЯзыкСодержания));
 
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти

	#Область ПеремещениеСтоимостиЦФ_Дт_СчетУчетаСтоимости_ЦФ__Кт_СчетУчетаСтоимости_ЦФ
	ТекстЗапроса = 
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Перемещение стоимости НМА (Дт СчетУчетаСтоимости_ЦФ :: Кт СчетУчетаСтоимости_ЦФ)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.СтоимостьЦФ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА_ЦФ) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.НематериальныйАктив КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СтоимостьНУЦФ КАК СуммаНУДт,
	|	Строки.СтоимостьПРЦФ КАК СуммаПРДт,
	|	Строки.СтоимостьВРЦФ КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА_ЦФ) КАК ВидСчетаКт,
	|	Строки.КорГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.КорПодразделение КАК ПодразделениеКт,
	|	Строки.КорНаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.НематериальныйАктив КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СтоимостьНУЦФ КАК СуммаНУКт,
	|	Строки.СтоимостьПРЦФ КАК СуммаПРКт,
	|	Строки.СтоимостьВРЦФ КАК СуммаВРКт,
	|	""%1"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьНМА КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|ГДЕ
	|	Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И Строки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИзменениеПараметровСтоимостиНМА)
	|	И (Строки.СтоимостьЦФ <> 0
	|		ИЛИ Строки.СтоимостьНУЦФ <> 0
	|		ИЛИ Строки.СтоимостьПРЦФ <> 0
	|		ИЛИ Строки.СтоимостьВРЦФ <> 0)";

	ТекстЗапроса = СтрШаблон(ТекстЗапроса, 
		НСтр("ru='Перемещение стоимости НМА';uk='Переміщення вартості НМА'",ЯзыкСодержания));
 
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти

КонецПроцедуры

Процедура ТекстЗапросаПеремещениеАмортизацииНМА(СписокЗапросов) Экспорт
	
	ЯзыкСодержания = МультиязычностьУкр.КодЯзыкаИнформационнойБазы();
	
	#Область ПеремещениеАмортизации_Дт_СчетУчетаАмортизации__Кт_СчетУчетаАмортизации
	ТекстЗапроса = 
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Перемещение амортизации НМА (Дт СчетУчетаАмортизации :: Кт СчетУчетаАмортизации)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.АмортизацияРегл КАК Сумма,
	|	Строки.Амортизация КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.НематериальныйАктив КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.АмортизацияНУ КАК СуммаНУДт,
	|	Строки.АмортизацияПР КАК СуммаПРДт,
	|	Строки.АмортизацияВР КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА) КАК ВидСчетаКт,
	|	Строки.КорГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.КорПодразделение КАК ПодразделениеКт,
	|	Строки.КорНаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.НематериальныйАктив КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.АмортизацияНУ КАК СуммаНУКт,
	|	Строки.АмортизацияПР КАК СуммаПРКт,
	|	Строки.АмортизацияВР КАК СуммаВРКт,
	|	""%1"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияНМА КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|ГДЕ
	|	Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И Строки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИзменениеПараметровАмортизацииНМА)
	|	И (Строки.Амортизация <> 0
	|		ИЛИ Строки.АмортизацияРегл <> 0
	|		ИЛИ Строки.АмортизацияНУ <> 0
	|		ИЛИ Строки.АмортизацияПР <> 0
	|		ИЛИ Строки.АмортизацияВР <> 0)";

	ТекстЗапроса = СтрШаблон(ТекстЗапроса, 
		НСтр("ru='Перемещение амортизации НМА';uk='Переміщення амортизації НМА'",ЯзыкСодержания));
 
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти

	#Область ПеремещениеАмортизацииЦФ_Дт_СчетУчетаАмортизации_ЦФ__Кт_СчетУчетаАмортизации_ЦФ
	ТекстЗапроса = 
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Перемещение амортизации НМА (Дт СчетУчетаАмортизации_ЦФ :: Кт СчетУчетаАмортизации_ЦФ) за счет целевого финансирования
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.АмортизацияЦФ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА_ЦФ) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.НематериальныйАктив КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.АмортизацияНУЦФ КАК СуммаНУДт,
	|	Строки.АмортизацияПРЦФ КАК СуммаПРДт,
	|	Строки.АмортизацияВРЦФ КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА_ЦФ) КАК ВидСчетаКт,
	|	Строки.КорГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.КорПодразделение КАК ПодразделениеКт,
	|	Строки.КорНаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.НематериальныйАктив КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.АмортизацияНУЦФ КАК СуммаНУКт,
	|	Строки.АмортизацияПРЦФ КАК СуммаПРКт,
	|	Строки.АмортизацияВРЦФ КАК СуммаВРКт,
	|	""%1"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияНМА КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|ГДЕ
	|	Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И Строки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИзменениеПараметровАмортизацииНМА)
	|	И (Строки.АмортизацияЦФ <> 0
	|		ИЛИ Строки.АмортизацияНУЦФ <> 0
	|		ИЛИ Строки.АмортизацияПРЦФ <> 0
	|		ИЛИ Строки.АмортизацияВРЦФ <> 0)";

	ТекстЗапроса = СтрШаблон(ТекстЗапроса, 
		НСтр("ru='Перемещение амортизации НМА';uk='Переміщення амортизації НМА'",ЯзыкСодержания));
 	
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти

КонецПроцедуры

Процедура ТекстЗапросаНачислениеАмортизацииОС(СписокЗапросов) Экспорт

	ЯзыкСодержания = МультиязычностьУкр.КодЯзыкаИнформационнойБазы();
	
	#Область Амортизация // (Дт <СчетУчетаЗатрат> :: Кт <СчетНакопленияАмортизации>
	
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Амортизация (Дт СчетУчетаЗатрат :: Кт СчетНакопленияАмортизации)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	Строки.АмортизацияРегл КАК Сумма,
	|	Строки.Амортизация КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Строки.КорСтатьяРасходов КАК АналитикаУчетаДт,
	|	Строки.КорПодразделение КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.КорПодразделение КАК ПодразделениеДт,
	|	Строки.КорНаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|   ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее) КАК СубконтоДт1,
	|	Строки.КорСтатьяРасходов КАК СубконтоДт2,
	|	Строки.КорАналитикаРасходов КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.АмортизацияНУ КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА) КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.АмортизацияНУ КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	""%1"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиСтроительства
	|	ПО Строки.КорСтатьяРасходов = СтатьиСтроительства.Ссылка
	|		И СтатьиСтроительства.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиНаПрочиеАктивы
	|	ПО Строки.КорСтатьяРасходов = СтатьиНаПрочиеАктивы.Ссылка
	|		И СтатьиНаПрочиеАктивы.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыСтроительства КАК ОбъектыСтроительства
	|	ПО ОбъектыСтроительства.Ссылка = Строки.КорАналитикаРасходов
	|ГДЕ
	|	СтатьиНаПрочиеАктивы.Ссылка ЕСТЬ NULL
	|	И Строки.КорСтатьяРасходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|	И Строки.КорОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|	И (Строки.Амортизация <> 0
	|		ИЛИ Строки.АмортизацияРегл <> 0
	|		ИЛИ Строки.АмортизацияНУ <> 0)";
	
	
	ТекстЗапроса = СтрШаблон(ТекстЗапроса, 
		НСтр("ru='Начисление амортизации';uk='Нарахування амортизації'",ЯзыкСодержания));
	 
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	#КонецОбласти
	
	#Область Амортизация_ЦФ // Дт <СчетУчетаЗатрат> :: Кт <СчетНакопленияАмортизации>
	
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Амортизация (Дт СчетУчетаЗатрат :: Кт СчетНакопленияАмортизации)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	Строки.АмортизацияЦФ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Строки.КорСтатьяРасходов КАК АналитикаУчетаДт,
	|	Строки.КорПодразделение КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.КорПодразделение КАК ПодразделениеДт,
	|	Строки.КорНаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|   ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее) КАК СубконтоДт1,
	|	Строки.КорСтатьяРасходов КАК СубконтоДт2,
	|	Строки.КорАналитикаРасходов КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.АмортизацияНУЦФ КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА_ЦФ) КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.АмортизацияНУЦФ КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	""%1"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиСтроительства
	|	ПО Строки.КорСтатьяРасходов = СтатьиСтроительства.Ссылка
	|		И СтатьиСтроительства.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиНаПрочиеАктивы
	|	ПО Строки.КорСтатьяРасходов = СтатьиНаПрочиеАктивы.Ссылка
	|		И СтатьиНаПрочиеАктивы.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыСтроительства КАК ОбъектыСтроительства
	|	ПО ОбъектыСтроительства.Ссылка = Строки.КорАналитикаРасходов
	|ГДЕ
	|	СтатьиНаПрочиеАктивы.Ссылка ЕСТЬ NULL
	|	И Строки.КорСтатьяРасходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|	И Строки.КорОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|	И (Строки.АмортизацияЦФ <> 0
	|		ИЛИ Строки.АмортизацияНУЦФ <> 0)";
	

	ТекстЗапроса = СтрШаблон(ТекстЗапроса, 
		НСтр("ru='Начисление амортизации';uk='Нарахування амортизації'",ЯзыкСодержания));
 	
	СписокЗапросов.Добавить(ТекстЗапроса);
		
		#КонецОбласти

#Область ДоходыОтЦелевогоФинансирования // Дт <69> :: Кт <745>

	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Признание доходов от целевого финансирования (Дт 69 :: Кт 745)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	Строки.АмортизацияЦФ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДоходыБудущихПериодов) КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.АмортизацияНУЦФ КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Доходы) КАК ВидСчетаКт,
	|	ПараметрыЦелевогоФинансированияОС.СтатьяДоходов КАК АналитикаУчетаКт,
	|	Строки.КорПодразделение КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.КорПодразделение КАК ПодразделениеКт,
	|	Строки.КорНаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	ПараметрыЦелевогоФинансированияОС.СтатьяДоходов КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.АмортизацияНУЦФ СуммаНУКт,
	
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	""%1"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ втПараметрыЦелевогоФинансированияОС КАК ПараметрыЦелевогоФинансированияОС
	|	ПО Строки.Регистратор = ПараметрыЦелевогоФинансированияОС.Ссылка
	|		И Строки.ОсновноеСредство = ПараметрыЦелевогоФинансированияОС.ОсновноеСредство
	|		И Строки.Организация = ПараметрыЦелевогоФинансированияОС.Организация
	|ГДЕ
	|	Строки.АмортизацияЦФ <> 0
	|		ИЛИ Строки.АмортизацияНУЦФ <> 0";

	ТекстЗапроса = СтрШаблон(ТекстЗапроса, 
		НСтр("ru='Признание доходов от целевого финансирования';uk='Визнання доходів від цільового фінансування'",ЯзыкСодержания));
 	
	СписокЗапросов.Добавить(ТекстЗапроса);

	#КонецОбласти

	#Область АмортизацияНаПрочиеОперации // Дт <СчетУчетаЗатрат> :: Кт <СчетНакопленияАмортизации>

	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Амортизация (Дт СчетУчетаЗатрат :: Кт СчетНакопленияАмортизации)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	Строки.АмортизацияРегл КАК Сумма,
	|	Строки.Амортизация КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеОперации) КАК ВидСчетаДт,
	|	Строки.КорСтатьяРасходов КАК АналитикаУчетаДт,
	|	Строки.КорПодразделение КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.КорПодразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.АмортизацияНУ КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА) КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.АмортизацияНУ КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	""%1"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиНаПрочиеАктивы
	|	ПО Строки.КорСтатьяРасходов = СтатьиНаПрочиеАктивы.Ссылка
	|		И СтатьиНаПрочиеАктивы.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|	
	|ГДЕ
	|	Строки.КорОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|	И Строки.КорСтатьяРасходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|	И (Строки.Амортизация <> 0
	|		ИЛИ Строки.АмортизацияЦФ <> 0
	|		ИЛИ Строки.АмортизацияНУЦФ <> 0)";
	

	ТекстЗапроса = СтрШаблон(ТекстЗапроса, 
		НСтр("ru='Начисление амортизации';uk='Нарахування амортизації'",ЯзыкСодержания));
 
	СписокЗапросов.Добавить(ТекстЗапроса);

	#КонецОбласти

//#Область АмортизацияПолучатель // Дт <СчетУчетаЗатрат> :: Кт <СчетНакопленияАмортизации>
		
КонецПроцедуры




Процедура ТекстЗапросаВТНачислениеАмортизацииОС(СписокЗапросов) Экспорт

	#Область втПервоначальныеСведенияОС
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПервоначальныеСведенияОС.Организация КАК Организация,
	|	ПервоначальныеСведенияОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюБУ
	|ПОМЕСТИТЬ втПервоначальныеСведенияОС
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОС КАК Строки
	|		ПО (Строки.Регистратор = ДокументыКОтражению.Ссылка)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОС.СрезПоследних КАК ПервоначальныеСведенияОС
	|		ПО (Строки.Организация = ПервоначальныеСведенияОС.Организация)
	|			И (Строки.ОсновноеСредство = ПервоначальныеСведенияОС.ОсновноеСредство)
	|ГДЕ
	|	Строки.АмортизационнаяПремия <> 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ОсновноеСредство";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	#КонецОбласти
	
	#Область втПараметрыЦелевогоФинансированияОС
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДокументыКОтражению.Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	Строки.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ втСписокОС
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияОС КАК Строки
	|		ПО (Строки.Регистратор = ДокументыКОтражению.Ссылка)
	|ГДЕ
	|	(Строки.АмортизацияЦФ <> 0
	|			ИЛИ Строки.АмортизацияНУЦФ <> 0
	|			ИЛИ Строки.АмортизацияПРЦФ <> 0
	|			ИЛИ Строки.АмортизацияВРЦФ <> 0)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПараметрыЦелевогоФинансированияОС.Ссылка КАК Ссылка,
	|	ПараметрыЦелевогоФинансированияОС.Организация КАК Организация,
	|	ПараметрыЦелевогоФинансированияОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ПараметрыЦелевогоФинансированияОСПоследнее.СтатьяДоходов,
	|	ПараметрыЦелевогоФинансированияОСПоследнее.АналитикаДоходов
	|ПОМЕСТИТЬ втПараметрыЦелевогоФинансированияОС
	|ИЗ
	|	(ВЫБРАТЬ
	|		СписокОС.Ссылка КАК Ссылка,
	|		СписокОС.Организация КАК Организация,
	|		СписокОС.ОсновноеСредство КАК ОсновноеСредство,
	|		МАКСИМУМ(ПараметрыЦелевогоФинансированияОС.Период) КАК ПоследнийПериод
	|	ИЗ
	|		втСписокОС КАК СписокОС
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыЦелевогоФинансированияОС КАК ПараметрыЦелевогоФинансированияОС
	|			ПО СписокОС.ОсновноеСредство = ПараметрыЦелевогоФинансированияОС.ОсновноеСредство
	|	
	|	СГРУППИРОВАТЬ ПО
	|		СписокОС.Ссылка,
	|		СписокОС.Организация,
	|		СписокОС.ОсновноеСредство) КАК ПараметрыЦелевогоФинансированияОС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыЦелевогоФинансированияОС КАК ПараметрыЦелевогоФинансированияОСПоследнее
	|		ПО ПараметрыЦелевогоФинансированияОС.ОсновноеСредство = ПараметрыЦелевогоФинансированияОСПоследнее.ОсновноеСредство
	|			И ПараметрыЦелевогоФинансированияОС.ПоследнийПериод = ПараметрыЦелевогоФинансированияОСПоследнее.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	Организация,
	|	ОсновноеСредство";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	#КонецОбласти
	
КонецПроцедуры

Функция ТекстЗапросаВтСчетаВложенияВоВнеоборотныеАктивы(ДобавитьСчетаУчетаНМА, СписокЗапросов) Экспорт

	ИмяТаблицы = "втСчетаВложенияВоВнеоборотныеАктивы";
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	План.Ссылка КАК Счет
	|ПОМЕСТИТЬ втСчетаВложенияВоВнеоборотныеАктивы
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК План
	|ГДЕ
	|	План.Ссылка В (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.КапитальноеСтроительство), 
	|					ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПриобретениеОсновныхСредств), 
	|					ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ИзготовлениеОсновныхСредств),
	|					ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПриобретениеДругихНеоборотныхМатериальныхАктивов), 
	|					ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ИзготовлениеДругихНеоборотныхМатериальныхАктивов)
	|					//ДобавитьСчетаУчетаНМА//
	|					)
	|   
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	План.Ссылка КАК Счет
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК План
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ХозрасчетныйВидыСубконто
	|		ПО ХозрасчетныйВидыСубконто.Ссылка = План.Ссылка
	|			И ХозрасчетныйВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства)
	|ГДЕ
	|	План.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.КапитальныеИнвестиции))";
	
	
	Если ДобавитьСчетаУчетаНМА Тогда
		ТекстСчетаНМА = 
		",ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПриобретениеНематериальныхАктивов), 
		|					ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ИзготовлениеНематериальныхАктивов)";
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ДобавитьСчетаУчетаНМА//", ТекстСчетаНМА);
	КонецЕсли; 
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, СписокЗапросов) Тогда
		СписокЗапросов.Добавить(ТекстЗапроса, ИмяТаблицы, Ложь);
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область Прочее

Процедура ТекстЗапросаТаблицаВтПорядокУчетаОСБУ(ТекстыЗапроса, ИмяДокумента) Экспорт

	ИмяТаблицы = "втПорядокУчетаОСБУ";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтСписокОС(ТекстыЗапроса, ИмяДокумента);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПорядокУчета.ОсновноеСредство КАК ОсновноеСредство,
	|	ПорядокУчета.Состояние КАК Состояние,
	|	ПорядокУчета.НачислятьАмортизациюБУ КАК НачислятьАмортизациюБУ,
	|	ПорядокУчета.НачислятьАмортизациюНУ КАК НачислятьАмортизациюНУ,
	|	ПорядокУчета.СтатьяРасходовБУ КАК СтатьяРасходовБУ,
	|	ПорядокУчета.АналитикаРасходовБУ КАК АналитикаРасходовБУ,
	|	ПорядокУчета.СтатьяРасходовНУ КАК СтатьяРасходовНУ,
	|	ПорядокУчета.АналитикаРасходовНУ КАК АналитикаРасходовНУ,
	|	ПорядокУчета.СпособОтраженияРасходовБУ КАК СпособОтраженияРасходовБУ,
	|	ПорядокУчета.СпособОтраженияРасходовНУ КАК СпособОтраженияРасходовНУ,
	|	ПорядокУчета.НалоговоеНазначение КАК НалоговоеНазначение
	|ПОМЕСТИТЬ втПорядокУчетаОСБУ
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(
	|			&Период,
	|			Регистратор <> &Ссылка
	|				И Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						втСписокОС КАК СписокОС)) КАК ПорядокУчета
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаВтПорядокУчетаНМАБУ(ТекстыЗапроса, ИмяДокумента) Экспорт

	ИмяТаблицы = "втПорядокУчетаНМАБУ";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтСписокНМА(ТекстыЗапроса, ИмяДокумента);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПорядокУчета.НематериальныйАктив КАК НематериальныйАктив,
	|	ПорядокУчета.Состояние КАК Состояние,
	|	ПорядокУчета.НачислятьАмортизациюБУ КАК НачислятьАмортизациюБУ,
	|	ПорядокУчета.НачислятьАмортизациюНУ КАК НачислятьАмортизациюНУ,
	|	ПорядокУчета.СтатьяРасходовБУ КАК СтатьяРасходовБУ,
	|	ПорядокУчета.АналитикаРасходовБУ КАК АналитикаРасходовБУ,
	|	ПорядокУчета.СтатьяРасходовНУ КАК СтатьяРасходовНУ,
	|	ПорядокУчета.АналитикаРасходовНУ КАК АналитикаРасходовНУ,
	|	ПорядокУчета.СпособОтраженияРасходовБУ КАК СпособОтраженияРасходовБУ,
	|	ПорядокУчета.СпособОтраженияРасходовНУ КАК СпособОтраженияРасходовНУ,
	|	ПорядокУчета.НалоговоеНазначение КАК НалоговоеНазначение
	|ПОМЕСТИТЬ втПорядокУчетаНМАБУ
	|ИЗ
	|	РегистрСведений.ПорядокУчетаНМАБУ.СрезПоследних(
	|			&Период,
	|			Регистратор <> &Ссылка
	|				И Организация = &Организация
	|				И НематериальныйАктив В
	|					(ВЫБРАТЬ
	|						СписокНМА.НематериальныйАктив
	|					ИЗ
	|						втСписокНМА КАК СписокНМА)) КАК ПорядокУчета
	|ИНДЕКСИРОВАТЬ ПО
	|	НематериальныйАктив";
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаВтПараметрыАмортизацииОСБУ(ТекстыЗапроса, ИмяДокумента) Экспорт

	ИмяТаблицы = "втПараметрыАмортизацииОСБУ";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтСписокОС(ТекстыЗапроса, ИмяДокумента);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	*
	|ПОМЕСТИТЬ втПараметрыАмортизацииОСБУ
	|ИЗ
	|	РегистрСведений.ПараметрыАмортизацииОСБУ.СрезПоследних(
	|			&Период,
	|			Регистратор <> &Ссылка
	|				И Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						втСписокОС КАК СписокОС)) КАК ПараметрыАмортизацииОСБУ";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаВтПараметрыАмортизацииНМАБУ(ТекстыЗапроса, ИмяДокумента) Экспорт

	ИмяТаблицы = "втПараметрыАмортизацииНМАБУ";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтСписокНМА(ТекстыЗапроса, ИмяДокумента);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	*
	|ПОМЕСТИТЬ втПараметрыАмортизацииНМАБУ
	|ИЗ
	|	РегистрСведений.ПараметрыАмортизацииНМАБУ.СрезПоследних(
	|			&Период,
	|			Регистратор <> &Ссылка
	|				И Организация = &Организация
	|				И НематериальныйАктив В
	|					(ВЫБРАТЬ
	|						СписокНМА.НематериальныйАктив
	|					ИЗ
	|						втСписокНМА КАК СписокНМА)) КАК ПараметрыАмортизацииНМАБУ";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете_Амортизация(Запрос, ТекстыЗапроса, Регистры) Экспорт

	ИмяРегистра = "ОтражениеДокументовВРеглУчете";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка КАК Документ,
	|	&Период КАК Период,
	|	НАЧАЛОПЕРИОДА(ТаблицаРасходы.ПериодРасчета, ДЕНЬ) КАК ДатаОтражения,
	|	&Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыОтраженияДокументовВРеглУчете.КОтражениюВРеглУчете) КАК Статус
	|ИЗ
	|	ВТ_НачисленнаяАмортизация КАК ТаблицаРасходы";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра, Истина);

	Возврат ТекстЗапроса;
	
КонецФункции


// Определяет в какой организации НМА принят к учету.
//
// Параметры:
//  НематериальныйАктив - СправочникСсылка.НематериальныеАктивы - НМА, для которого нужно проверить принятие к учету.
// 
// Возвращаемое значение:
//  СправочникСсылка.Организации - организация, в которой НМА принят к учету.
//
Функция ОрганизацияВКоторойНМАПринятКУчету(НематериальныйАктив) Экспорт
	
	Если НЕ ПравоДоступа("Чтение", Метаданные.РегистрыСведений.ПорядокУчетаНМАБУ) Тогда
		Возврат Справочники.Организации.ПустаяСсылка();
	КонецЕсли; 

	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ПорядокУчетаНМАБУ.Организация КАК Организация
	|ИЗ
	|	РегистрСведений.ПорядокУчетаНМАБУ.СрезПоследних(, НематериальныйАктив = &НМА) КАК ПорядокУчетаНМАБУ
	|ГДЕ
	|	ПорядокУчетаНМАБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.ПринятКУчету)";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("НМА", НематериальныйАктив);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Справочники.Организации.ПустаяСсылка();
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	
	Возврат Выборка.Организация;

КонецФункции


#КонецОбласти

//-- Локализация

#Область ПроверкаНаличияСчетовУчета

// Возвращает признак наличия ошибок заполнения настроек отражения амортизации НМА в регламентированном учете.
//
// Параметры:
// 		МассивОрганизаций - Массив, СправочникСсылка.Организации - Массив или ссылка на элемент справочника организаций, по которым выполняется проверка
// 		Период - Дата - Период отражения амортизации.
//
// Возвращаемое значение:
// 		Булево - Истина, если имеются ошибки заполнения настроек отражения расходов.
//
Функция ЕстьОшибкиЗаполненияРасходовПоАмортизацииНМА(МассивОрганизаций, Период) Экспорт
	
	ЗначениеВозврата = Ложь;
	//++ Локализация
	УстановитьПривилегированныйРежим(Истина);

	ПараметрОрганизации = Неопределено;
	Если ТипЗнч(МассивОрганизаций) = Тип("Массив") Тогда
		ПараметрОрганизации = МассивОрганизаций;
	Иначе
		ПараметрОрганизации = Новый Массив;
		ПараметрОрганизации.Добавить(МассивОрганизаций);
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОрганизаций", ПараметрОрганизации);
	Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца(Период));
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	МестоУчетаНМА.НематериальныйАктив КАК НематериальныйАктив,
	|	МестоУчетаНМА.Подразделение КАК Местонахождение
	|ПОМЕСТИТЬ втМестонахожденияНМА
	|ИЗ
	|	РегистрСведений.МестоУчетаНМА.СрезПоследних(&НачалоМесяца, Организация В (&МассивОрганизаций)) КАК МестоУчетаНМА
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПорядокУчетаНМАБУ.Организация КАК Организация,
	|	ЕСТЬNULL(ОтражениеАмортизационныхРасходов.Подразделение, ЕСТЬNULL(МестонахождениеНМА.Местонахождение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка))) КАК Подразделение,
	|	ЕСТЬNULL(ОтражениеАмортизационныхРасходов.СтатьяРасходов, ПорядокУчетаНМАБУ.СтатьяРасходовБУ) КАК СтатьяРасходов
	|ПОМЕСТИТЬ втСтатьиНМАКОтражению
	|ИЗ
	|	РегистрСведений.ПорядокУчетаНМАБУ.СрезПоследних(&НачалоМесяца, Организация В (&МассивОрганизаций)) КАК ПорядокУчетаНМАБУ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИзменениеПараметровНМА.ОтражениеАмортизационныхРасходов КАК ОтражениеАмортизационныхРасходов
	|		ПО ПорядокУчетаНМАБУ.СпособОтраженияРасходовБУ = ОтражениеАмортизационныхРасходов.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ втМестонахожденияНМА КАК МестонахождениеНМА
	|		ПО ПорядокУчетаНМАБУ.НематериальныйАктив = МестонахождениеНМА.НематериальныйАктив
	|ГДЕ
	|	ЕСТЬNULL(ОтражениеАмортизационныхРасходов.СтатьяРасходов, ПорядокУчетаНМАБУ.СтатьяРасходовБУ) <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	втСтатьиНМАКОтражению.СтатьяРасходов
	|ИЗ
	|	втСтатьиНМАКОтражению КАК втСтатьиНМАКОтражению
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПорядокОтраженияНаСчетахУчетаПереопределяемый КАК ПорядокОтраженияНаСчетахУчетаПереопределяемый
	|			ПО ПорядокОтраженияНаСчетахУчетаПереопределяемый.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы)
	|				И ПорядокОтраженияНаСчетахУчетаПереопределяемый.Организация = втСтатьиНМАКОтражению.Организация
	|				И ПорядокОтраженияНаСчетахУчетаПереопределяемый.АналитикаУчета = втСтатьиНМАКОтражению.СтатьяРасходов
	|				И ПорядокОтраженияНаСчетахУчетаПереопределяемый.МестоУчета = втСтатьиНМАКОтражению.Подразделение
	|ГДЕ
	|	ПорядокОтраженияНаСчетахУчетаПереопределяемый.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)";

	РегистрыСведений.ПорядокОтраженияНаСчетахУчета.ПереопределитьВТекстеЗапросаПорядокОтраженияСчетаУчета(Запрос.Текст);
	ЗначениеВозврата = Не Запрос.Выполнить().Пустой();
	//-- Локализация
	Возврат ЗначениеВозврата;
	
КонецФункции

// Возвращает признак наличия ошибок заполнения настроек отражения амортизации ОС в регламентированном учете.
//
// Параметры:
// 		МассивОрганизаций - Массив, СправочникСсылка.Организации - Массив или ссылка на элемент справочника организаций, по которым выполняется проверка
// 		Период - Дата - Период отражения амортизации.
//
// Возвращаемое значение:
// 		Булево - Истина, если имеются ошибки заполнения настроек отражения расходов.
//
Функция ЕстьОшибкиЗаполненияРасходовПоАмортизацииОС(МассивОрганизаций, Период) Экспорт
	
	ЗначениеВозврата = Ложь;
	
	//++ Локализация

	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПорядокУчетаОСБУ.Организация КАК Организация,
	|	ЕСТЬNULL(ОтражениеАмортизационныхРасходов.Подразделение, ЕСТЬNULL(МестонахождениеОС.Местонахождение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка))) КАК Подразделение,
	|	ЕСТЬNULL(ОтражениеАмортизационныхРасходов.СтатьяРасходов, ПорядокУчетаОСБУ.СтатьяРасходовБУ) КАК СтатьяРасходов
	|ПОМЕСТИТЬ втСтатьиОсновныхСредствКОтражению
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(&НачалоМесяца, Организация В (&МассивОрганизаций)) КАК ПорядокУчетаОСБУ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИзменениеПараметровОС.ОтражениеАмортизационныхРасходов КАК ОтражениеАмортизационныхРасходов
	|		ПО ПорядокУчетаОСБУ.СпособОтраженияРасходовБУ = ОтражениеАмортизационныхРасходов.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОС.СрезПоследних(&НачалоМесяца, Организация В (&МассивОрганизаций)) КАК МестонахождениеОС
	|		ПО ПорядокУчетаОСБУ.ОсновноеСредство = МестонахождениеОС.ОсновноеСредство
	|ГДЕ
	|	ЕСТЬNULL(ОтражениеАмортизационныхРасходов.СтатьяРасходов, ПорядокУчетаОСБУ.СтатьяРасходовБУ) <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	втСтатьиОсновныхСредствКОтражению.СтатьяРасходов
	|ИЗ
	|	втСтатьиОсновныхСредствКОтражению КАК втСтатьиОсновныхСредствКОтражению
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПорядокОтраженияНаСчетахУчетаПереопределяемый КАК ПорядокОтраженияНаСчетахУчетаПереопределяемый
	|			ПО ПорядокОтраженияНаСчетахУчетаПереопределяемый.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы)
	|				И ПорядокОтраженияНаСчетахУчетаПереопределяемый.Организация = втСтатьиОсновныхСредствКОтражению.Организация
	|				И ПорядокОтраженияНаСчетахУчетаПереопределяемый.АналитикаУчета = втСтатьиОсновныхСредствКОтражению.СтатьяРасходов
	|				И ПорядокОтраженияНаСчетахУчетаПереопределяемый.МестоУчета = втСтатьиОсновныхСредствКОтражению.Подразделение
	|ГДЕ
	|	ПорядокОтраженияНаСчетахУчетаПереопределяемый.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)";

	ПараметрОрганизации = Неопределено;
	Если ТипЗнч(МассивОрганизаций) = Тип("Массив") Тогда
		ПараметрОрганизации = МассивОрганизаций;
	Иначе
		ПараметрОрганизации = Новый Массив;
		ПараметрОрганизации.Добавить(МассивОрганизаций);
	КонецЕсли;
	РегистрыСведений.ПорядокОтраженияНаСчетахУчета.ПереопределитьВТекстеЗапросаПорядокОтраженияСчетаУчета(ТекстЗапроса);

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("МассивОрганизаций", ПараметрОрганизации);
	Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца(Период));
	УстановитьПривилегированныйРежим(Истина);
	ЗначениеВозврата = Не Запрос.Выполнить().Пустой();
	УстановитьПривилегированныйРежим(Ложь);
	//-- Локализация
	Возврат ЗначениеВозврата;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ДополнитьСписокТиповДокументовПоКоторымФормируютсяОтложенныеДвижения(СписокТипов) Экспорт

	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьТекстЗапросаРасчетСтоимости(ТекстЗапроса) Экспорт

	ТекстФактическаяСтоимостьПриПринятииКУчету = "ЛОЖЬ";
	
	//++ Локализация
	//-- Локализация
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ФактическаяСтоимостьПриПринятииКУчету", ТекстФактическаяСтоимостьПриПринятииКУчету);
	
КонецПроцедуры
 
Функция ИмяДокументаАмортизацияОС() Экспорт

	ИмяДокумента = "";
	
	//++ Локализация
	ИмяДокумента = Метаданные.Документы.АмортизацияОС.Имя;
	//-- Локализация
	
	Возврат ИмяДокумента;

КонецФункции

Функция ИмяДокументаАмортизацияНМА() Экспорт

	ИмяДокумента = "";
	
	//++ Локализация
	ИмяДокумента = Метаданные.Документы.АмортизацияНМА.Имя;
	//-- Локализация
	
	Возврат ИмяДокумента;

КонецФункции

Процедура УстановитьПараметрыНабораСвойствВНА22() Экспорт

	//++ Локализация
	
	УстановитьПривилегированныйРежим(Истина);
	
	ИспользоватьВнеоборотныеАктивы2_2 = Константы.ИспользоватьВнеоборотныеАктивы2_2.Получить();
	ИспользоватьВнеоборотныеАктивы2_4 = Константы.ИспользоватьВнеоборотныеАктивы2_4.Получить();
										
	ПараметрыНабора = УправлениеСвойствами.СтруктураПараметровНабораСвойств();
	ПараметрыНабора.Используется = ИспользоватьВнеоборотныеАктивы2_2;
	УправлениеСвойствами.УстановитьПараметрыНабораСвойств("Документ_ИзменениеПараметровНМА", ПараметрыНабора);
	УправлениеСвойствами.УстановитьПараметрыНабораСвойств("Документ_ИзменениеПараметровОС", ПараметрыНабора);
	УправлениеСвойствами.УстановитьПараметрыНабораСвойств("Документ_МодернизацияОС", ПараметрыНабора);
	УправлениеСвойствами.УстановитьПараметрыНабораСвойств("Документ_МодернизацияНМА", ПараметрыНабора);
	УправлениеСвойствами.УстановитьПараметрыНабораСвойств("Документ_ПеремещениеОС", ПараметрыНабора);
	УправлениеСвойствами.УстановитьПараметрыНабораСвойств("Документ_ПеремещениеНМА", ПараметрыНабора);
	УправлениеСвойствами.УстановитьПараметрыНабораСвойств("Документ_ПодготовкаКПередачеОС", ПараметрыНабора);
	УправлениеСвойствами.УстановитьПараметрыНабораСвойств("Документ_ПринятиеКУчетуНМА", ПараметрыНабора);
	УправлениеСвойствами.УстановитьПараметрыНабораСвойств("Документ_ПринятиеКУчетуОС", ПараметрыНабора);
	УправлениеСвойствами.УстановитьПараметрыНабораСвойств("Документ_СписаниеНМА", ПараметрыНабора);
	УправлениеСвойствами.УстановитьПараметрыНабораСвойств("Документ_СписаниеОС", ПараметрыНабора);
	
	ПараметрыНабора = УправлениеСвойствами.СтруктураПараметровНабораСвойств();
	ПараметрыНабора.Используется = 
		ИспользоватьВнеоборотныеАктивы2_2
		ИЛИ ИспользоватьВнеоборотныеАктивы2_4;
	УправлениеСвойствами.УстановитьПараметрыНабораСвойств("Справочник_НематериальныеАктивы", ПараметрыНабора);
	
	ПараметрыНабора = УправлениеСвойствами.СтруктураПараметровНабораСвойств();
	ПараметрыНабора.Используется = 
		ИспользоватьВнеоборотныеАктивы2_2
		ИЛИ ИспользоватьВнеоборотныеАктивы2_4
		ИЛИ Константы.ИспользоватьУправлениеРемонтами.Получить();
	УправлениеСвойствами.УстановитьПараметрыНабораСвойств("Справочник_ОбъектыЭксплуатации_Общие", ПараметрыНабора);
	
	//-- Локализация
	
КонецПроцедуры

Функция ДокументИмеетПрисоединенныеФайлы(ТипВладелецФайла) Экспорт

	ДокументИмеетПрисоединенныеФайлы = Ложь;
	
	//++ Локализация
	//-- Локализация
	
	Возврат ДокументИмеетПрисоединенныеФайлы;
	
КонецФункции
 
#Область ОбновлениеИнформационнойБазы

// Добавляет в список процедуры-обработчики обновления данных ИБ
// для всех поддерживаемых версий библиотеки или конфигурации.
// Вызывается перед началом обновления данных ИБ для построения плана обновления.
//
//  Обработчики - ТаблицаЗначений - описание полей, см. в процедуре
//                ОбновлениеИнформационнойБазы.НоваяТаблицаОбработчиковОбновления.
//
// Пример добавления процедуры-обработчика в список:
//  Обработчик = Обработчики.Добавить();
//  Обработчик.Версия              = "1.1.0.0";
//  Обработчик.Процедура           = "ОбновлениеИБ.ПерейтиНаВерсию_1_1_0_0";
//  Обработчик.МонопольныйРежим    = Ложь;
//
// Параметры:
// 	Обработчики - см. ОбновлениеИнформационнойБазы.НоваяТаблицаОбработчиковОбновления
//
Процедура ОписаниеОбработчиковОбновления(Обработчики) Экспорт

	Обработчик = Обработчики.Добавить();
	Обработчик.Процедура = "ВнеоборотныеАктивыЛокализация.РегламентированныйУчетВНА_ОбработатьДанныеДляПереходаНаНовуюВерсию";
	Обработчик.Версия = "2.5.4.400";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("1aea0b78-1b99-4d99-af47-8c7d3d2938d0");
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "ВнеоборотныеАктивыЛокализация.РегламентированныйУчетВНА_ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию";
	Обработчик.ПроцедураПроверки = "";
	Обработчик.Комментарий = НСтр("ru='Устанавливает константу ""Регламентированный учет ВНА""';uk='Встановлює константу ""Регламентований облік ВНА""'");
	
	Читаемые = Новый Массив;
	Читаемые.Добавить(Метаданные.Константы.РегламентированныйУчетВНА.ПолноеИмя());
	Обработчик.ЧитаемыеОбъекты = СтрСоединить(Читаемые, ",");
	
	Изменяемые = Новый Массив;
	Изменяемые.Добавить(Метаданные.Константы.РегламентированныйУчетВНА.ПолноеИмя());
	Обработчик.ИзменяемыеОбъекты = СтрСоединить(Изменяемые, ",");

КонецПроцедуры

Процедура ЗарегистрироватьДанныеКОбработкеРегистраПервоначальныеСведенияОСДляПереходаНаНовуюВерсию(Параметры) Экспорт

	//++ Локализация
	
	ПолноеИмяРегистра = "РегистрСведений.ПервоначальныеСведенияОС";
	
		
#Область ЗаполнениеРегистраДляДокументовВерсии21
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Регистраторы.Регистратор КАК Регистратор
	|ИЗ
	|	(ВЫБРАТЬ
	|		РегистрИсточник.Регистратор
	|	ИЗ
	|		РегистрСведений.УдалитьПервоначальныеСведенияОСБухгалтерскийУчет КАК РегистрИсточник
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОС КАК РегистрПриемник
	|			ПО РегистрПриемник.Регистратор = РегистрИсточник.Регистратор
	|	ГДЕ
	|		РегистрПриемник.Регистратор ЕСТЬ NULL
	|		И НЕ РегистрИсточник.Регистратор ССЫЛКА Документ.КорректировкаРегистров
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		РегистрИсточник.Регистратор
	|	ИЗ
	|		РегистрСведений.УдалитьПервоначальныеСведенияОСНалоговыйУчет КАК РегистрИсточник
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОС КАК РегистрПриемник
	|			ПО РегистрПриемник.Регистратор = РегистрИсточник.Регистратор
	|	ГДЕ
	|		РегистрПриемник.Регистратор ЕСТЬ NULL
	|		И НЕ РегистрИсточник.Регистратор ССЫЛКА Документ.КорректировкаРегистров
	|
	|	) Регистраторы";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Регистраторы = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Регистратор");
	ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(Параметры, Регистраторы, ПолноеИмяРегистра);
	
#КонецОбласти
	
	//-- Локализация
	
КонецПроцедуры
  
Процедура ЗарегистрироватьДанныеКОбработкеРегистраДокументыПоОСДляПереходаНаНовуюВерсию(Параметры) Экспорт

	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

Процедура ЗарегистрироватьДанныеКОбработкеРегистраРеестрДокументов(Параметры) Экспорт

	//++ Локализация
	//-- Локализация
	
КонецПроцедуры
 
#КонецОбласти

//++ Локализация

#Область РасчетСтоимостиВнеоборотныхАктивов

Процедура ОпределитьРазницуВСтоимостиОСПослеРасчетаСтоимости(НачалоРасчета, МенеджерВременныхТаблиц)

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СтоимостьОС.Организация КАК Организация,
	|	СтоимостьОС.ОсновноеСредство КАК ОбъектУчета,
	|	СУММА(СтоимостьОС.ФактическаяСтоимостьУУ - СтоимостьОС.ПредварительнаяСтоимостьУУ) КАК Стоимость,
	|	СУММА(СтоимостьОС.ФактическаяСтоимостьБУ - СтоимостьОС.ПредварительнаяСтоимостьБУ) КАК СтоимостьРегл
	|ПОМЕСТИТЬ ВТ_РазницаВСтоимостиОС
	|ИЗ
	|	(ВЫБРАТЬ
	|		СтоимостьОС.Организация КАК Организация,
	|		СтоимостьОС.ОсновноеСредство КАК ОсновноеСредство,
	|		СтоимостьОС.Стоимость КАК ФактическаяСтоимостьУУ,
	|		СтоимостьОС.СтоимостьРегл + СтоимостьОС.СтоимостьЦФ КАК ФактическаяСтоимостьБУ,
	|		0 КАК ПредварительнаяСтоимостьУУ,
	|		0 КАК ПредварительнаяСтоимостьБУ
	|	ИЗ
	|		РегистрНакопления.СтоимостьОС КАК СтоимостьОС
	|	ГДЕ
	|		СтоимостьОС.РасчетСтоимости
	|		И СтоимостьОС.Регистратор В
	|				(ВЫБРАТЬ
	|					ДанныеКРасчету.Регистратор
	|				ИЗ
	|					ДанныеКРасчету КАК ДанныеКРасчету)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СтоимостьОС.Организация,
	|		СтоимостьОС.ОсновноеСредство,
	|		СтоимостьОС.Стоимость,
	|		СтоимостьОС.СтоимостьРегл + СтоимостьОС.СтоимостьЦФ,
	|		0,
	|		0
	|	ИЗ
	|		РегистрНакопления.СтоимостьОС КАК СтоимостьОС
	|	ГДЕ
	|		СтоимостьОС.Период МЕЖДУ &НачалоМесяца И &КонецМесяца
	|		И СтоимостьОС.Регистратор ССЫЛКА Документ.РаспределениеНДС
	|		И (СтоимостьОС.Организация, СтоимостьОС.ОсновноеСредство) В
	|				(ВЫБРАТЬ
	|					ДанныеКРасчету.Организация,
	|					ДанныеКРасчету.АналитикаКапитализацииРасходов
	|				ИЗ
	|					ДанныеКРасчету КАК ДанныеКРасчету)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СтоимостьОС.Ссылка.Организация,
	|		СтоимостьОС.ОсновноеСредство,
	|		0,
	|		0,
	|		СтоимостьОС.СтоимостьУУ,
	|		СтоимостьОС.СтоимостьБУ
	|	ИЗ
	|		Документ.ПринятиеКУчетуОС2_4.ОС КАК СтоимостьОС
	|	ГДЕ
	|		СтоимостьОС.Ссылка В
	|				(ВЫБРАТЬ
	|					ДанныеКРасчету.Регистратор
	|				ИЗ
	|					ДанныеКРасчету КАК ДанныеКРасчету)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СтоимостьОС.Ссылка.Организация,
	|		СтоимостьОС.ОсновноеСредство,
	|		0,
	|		0,
	|		СтоимостьОС.СтоимостьУУ,
	|		СтоимостьОС.СтоимостьБУ
	|	ИЗ
	|		Документ.МодернизацияОС2_4.ОС КАК СтоимостьОС
	|	ГДЕ
	|		СтоимостьОС.Ссылка В
	|				(ВЫБРАТЬ
	|					ДанныеКРасчету.Регистратор
	|				ИЗ
	|					ДанныеКРасчету КАК ДанныеКРасчету)
	|
	|	) КАК СтоимостьОС
	|
	|СГРУППИРОВАТЬ ПО
	|	СтоимостьОС.Организация,
	|	СтоимостьОС.ОсновноеСредство
	|
	|ИМЕЮЩИЕ
	|	(СУММА(СтоимостьОС.ФактическаяСтоимостьУУ) > СУММА(СтоимостьОС.ПредварительнаяСтоимостьУУ)
	|		ИЛИ СУММА(СтоимостьОС.ФактическаяСтоимостьБУ) > СУММА(СтоимостьОС.ПредварительнаяСтоимостьБУ))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца(НачалоРасчета));
	Запрос.УстановитьПараметр("КонецМесяца", КонецМесяца(НачалоРасчета));
	
	Запрос.Выполнить();
	
КонецПроцедуры

#КонецОбласти

#Область КорректировкаНалоговогоНазначенияКапитальныхИнвестиций_2_2

Процедура ВключитьВСтоимостьВНАРезультатКорректировкиНалоговогоНазначенияКапитальныхИнвестиций_2_2(ТаблицаВнеоборотныхАктивов, РезультатРаспределения, ТаблицыДляДвижений, Реквизиты)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВнеоборотныеАктивы.Организация,
	|	ВнеоборотныеАктивы.Объект
	|ПОМЕСТИТЬ Отбор
	|ИЗ
	|	&ВнеоборотныеАктивы КАК ВнеоборотныеАктивы
	|;
	|
	|///////////////////////////////////
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ПараметрыАмортизацииОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ПараметрыАмортизацииОС.Организация КАК Организация,
	|	ПараметрыАмортизацииОС.СрокПолезногоИспользованияБУ КАК СрокПолезногоИспользованияБУ,
	|	ПараметрыАмортизацииОС.СрокПолезногоИспользованияНУ КАК СрокПолезногоИспользованияНУ,
	|	ПараметрыАмортизацииОС.СрокИспользованияДляВычисленияАмортизации КАК СрокИспользованияДляВычисленияАмортизации,
	|	ПараметрыАмортизацииОС.СрокИспользованияДляВычисленияАмортизацииНУ КАК СрокИспользованияДляВычисленияАмортизацииНУ,
	|	ПараметрыАмортизацииОС.ОбъемПродукцииРаботДляВычисленияАмортизации КАК ОбъемПродукцииРаботДляВычисленияАмортизации,
	|	ПараметрыАмортизацииОС.СтоимостьДляВычисленияАмортизации КАК СтоимостьДляВычисленияАмортизации,
	|	ПараметрыАмортизацииОС.СтоимостьДляВычисленияАмортизацииНУ КАК СтоимостьДляВычисленияАмортизацииНУ,
	|	ПараметрыАмортизацииОС.ГрафикАмортизации КАК ГрафикАмортизации,
	|	ПараметрыАмортизацииОС.ДатаПоследнегоИзменения КАК ДатаПоследнегоИзменения,
	|	ПараметрыАмортизацииОС.ЛиквидационнаяСтоимость КАК ЛиквидационнаяСтоимость,
	|	ЛОЖЬ КАК ЕстьИзменения
	|ИЗ
	|	РегистрСведений.ПараметрыАмортизацииОСБУ.СрезПоследних(
	|			&Граница,
	|			Регистратор <> &ДокументСсылка
	|			И (Организация, ОсновноеСредство) В (
	|					ВЫБРАТЬ 
	|						Т.Организация,
	|						Т.Объект 
	|					ИЗ 
	|						Отбор КАК Т)
	|	) КАК ПараметрыАмортизацииОС
	|;
	|
	|////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ПервоначальныеСведенияНМА.НематериальныйАктив КАК НематериальныйАктив,
	|	ПервоначальныеСведенияНМА.Организация КАК Организация,
	|	ПервоначальныеСведенияНМА.ПервоначальнаяСтоимостьБУ КАК ПервоначальнаяСтоимостьБУ,
	|	ПервоначальныеСведенияНМА.ПервоначальнаяСтоимостьНУ КАК ПервоначальнаяСтоимостьНУ,
	|	ПервоначальныеСведенияНМА.МетодНачисленияАмортизацииБУ КАК МетодНачисленияАмортизацииБУ,
	|	ПервоначальныеСведенияНМА.МетодНачисленияАмортизацииНУ КАК МетодНачисленияАмортизацииНУ,
	|	ПервоначальныеСведенияНМА.ДатаПринятияКУчетуБУ КАК ДатаПринятияКУчетуБУ,
	|	ПервоначальныеСведенияНМА.ДокументПринятияКУчетуБУ КАК ДокументПринятияКУчетуБУ,
	|	ПервоначальныеСведенияНМА.ДокументСписания КАК ДокументСписания,
	|	ЛОЖЬ КАК ЕстьИзменения
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияНМА.СрезПоследних(
	|			&Граница,
	|			Регистратор <> &ДокументСсылка
	|			И (Организация, НематериальныйАктив) В (
	|					ВЫБРАТЬ 
	|						Т.Организация,
	|						Т.Объект 
	|					ИЗ 
	|						Отбор КАК Т)
	|	) КАК ПервоначальныеСведенияНМА
	|;
	|
	|////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ПервоначальныеСведенияОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ПервоначальныеСведенияОС.Организация КАК Организация, 
	|	ПервоначальныеСведенияОС.МетодНачисленияАмортизацииБУ КАК МетодНачисленияАмортизацииБУ,
	|	ПервоначальныеСведенияОС.МетодНачисленияАмортизацииНУ КАК МетодНачисленияАмортизацииНУ,
	|	ПервоначальныеСведенияОС.ПервоначальнаяСтоимостьБУ КАК ПервоначальнаяСтоимостьБУ,
	|	ПервоначальныеСведенияОС.ПервоначальнаяСтоимостьНУ КАК ПервоначальнаяСтоимостьНУ,
	|	ПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюБУ КАК ДатаВводаВЭксплуатациюБУ,
	|	ПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюБУ КАК ДокументВводаВЭксплуатациюБУ,
	|	ПервоначальныеСведенияОС.ДокументСнятияСУчета КАК ДокументСнятияСУчета,
	|	ПервоначальныеСведенияОС.Контрагент КАК Контрагент,
	|	ПервоначальныеСведенияОС.Договор КАК Договор,
	|	ИСТИНА КАК РесурсыОбновлены,
	|	ЛОЖЬ КАК ЕстьИзменения
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОС.СрезПоследних(
	|			&Граница,
	|			Регистратор <> &ДокументСсылка
	|			И (Организация, ОсновноеСредство) В (
	|					ВЫБРАТЬ 
	|						Т.Организация,
	|						Т.Объект 
	|					ИЗ 
	|						Отбор КАК Т)
	|	) КАК ПервоначальныеСведенияОС";
	
	Запрос.УстановитьПараметр("ВнеоборотныеАктивы", ТаблицаВнеоборотныхАктивов);
	Запрос.УстановитьПараметр("Граница",            Новый Граница(Реквизиты.ПериодОкончание, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Период",             Реквизиты.Период);
	Запрос.УстановитьПараметр("ДокументСсылка",     Реквизиты.Ссылка);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ПараметрыАмортизацииОСБУ  = РезультатЗапроса[1].Выгрузить();
	ПервоначальныеСведенияНМА = РезультатЗапроса[2].Выгрузить();
	ПервоначальныеСведенияОС  = РезультатЗапроса[3].Выгрузить();
	
	ТаблицыДляДвижений.Вставить("ТаблицаПараметрыАмортизацииОСБУ", 
		ТаблицаПараметрыАмортизацииОС(РезультатРаспределения, ПараметрыАмортизацииОСБУ));
		
	ТаблицыДляДвижений.Вставить("ТаблицаПервоначальныеСведенияОС", 
		ТаблицаПервоначальныеСведенияОС(РезультатРаспределения, ПервоначальныеСведенияОС));
	
	ТаблицыДляДвижений.Вставить("ТаблицаПервоначальныеСведенияНМА", 
		ТаблицаПервоначальныеСведенияНМА(РезультатРаспределения, ПервоначальныеСведенияНМА));
	
КонецПроцедуры

Функция ТаблицаПервоначальныеСведенияНМА(РезультатРаспределения, ТаблицаПервоначальныеСведенияНМА)
	
	ОтборСтрок = Новый Структура("ВнеоборотныйАктив", "НМА");
	
	ТаблицыИсточники = Новый Структура;
	ТаблицыИсточники.Вставить("ПартииПрочихРасходовУсловнаяПродажа");
	
	Для каждого ТаблицаРаспределения Из РезультатРаспределения Цикл
		
		Если НЕ ТаблицыИсточники.Свойство(ТаблицаРаспределения.Ключ) Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокиНМА = ТаблицаРаспределения.Значение.НайтиСтроки(ОтборСтрок);
		Для каждого СтрокаНМА Из СтрокиНМА Цикл
			
			
			ПервоначальныеСведения = ТаблицаПервоначальныеСведенияНМА.Найти(СтрокаНМА.АналитикаРасходов, "НематериальныйАктив");
			Если ПервоначальныеСведения = Неопределено Тогда
				ПервоначальныеСведения = ТаблицаПервоначальныеСведенияНМА.Найти(СтрокаНМА.АналитикаАктивовПассивов, "НематериальныйАктив");
			КонецЕсли;
			Если ПервоначальныеСведения = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			ПервоначальныеСведения.ПервоначальнаяСтоимостьБУ = 
				ПервоначальныеСведения.ПервоначальнаяСтоимостьБУ
				+ СтрокаНМА.НДСРегл;
				
			Если СтрокаНМА.НалоговоеНазначение <> Справочники.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяНеХозДеятельность Тогда
	
				ПервоначальныеСведения.ПервоначальнаяСтоимостьНУ = 
					ПервоначальныеСведения.ПервоначальнаяСтоимостьНУ 
					+ СтрокаНМА.НДСРегл;
					
			КонецЕсли;
				
			ПервоначальныеСведения.ЕстьИзменения = Истина;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат ТаблицаПервоначальныеСведенияНМА.Скопировать(Новый Структура("ЕстьИзменения", Истина));
	
КонецФункции

Функция ТаблицаПервоначальныеСведенияОС(РезультатРаспределения, ТаблицаПервоначальныеСведенияОС)
	
	ОтборСтрок = Новый Структура("ВнеоборотныйАктив", "ОС");
	
	ТаблицыИсточники = Новый Структура;
	ТаблицыИсточники.Вставить("ПартииПрочихРасходовУсловнаяПродажа");
	
	Для каждого ТаблицаРаспределения Из РезультатРаспределения Цикл
		
		Если НЕ ТаблицыИсточники.Свойство(ТаблицаРаспределения.Ключ) Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокиОС = ТаблицаРаспределения.Значение.НайтиСтроки(ОтборСтрок);
		Для каждого СтрокаОС Из СтрокиОС Цикл
			
			
			ПервоначальныеСведения = ТаблицаПервоначальныеСведенияОС.Найти(СтрокаОС.АналитикаРасходов, "ОсновноеСредство");
			Если ПервоначальныеСведения = Неопределено Тогда
				ПервоначальныеСведения = ТаблицаПервоначальныеСведенияОС.Найти(СтрокаОС.АналитикаАктивовПассивов, "ОсновноеСредство");
			КонецЕсли;
			Если ПервоначальныеСведения = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			ПервоначальныеСведения.ПервоначальнаяСтоимостьБУ = 
				ПервоначальныеСведения.ПервоначальнаяСтоимостьБУ 
				+ СтрокаОС.НДСРегл;
				
			Если СтрокаОС.НалоговоеНазначение <> Справочники.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяНеХозДеятельность Тогда
	
				ПервоначальныеСведения.ПервоначальнаяСтоимостьНУ = 
					ПервоначальныеСведения.ПервоначальнаяСтоимостьНУ 
					+ СтрокаОС.НДСРегл;
					
			КонецЕсли;
				
			ПервоначальныеСведения.ЕстьИзменения = Истина;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат ТаблицаПервоначальныеСведенияОС.Скопировать(Новый Структура("ЕстьИзменения", Истина));
	
КонецФункции

Функция ТаблицаПараметрыАмортизацииОС(РезультатРаспределения, ТаблицаПараметрыАмортизацииОС)
	
	ОтборСтрок = Новый Структура("ВнеоборотныйАктив", "ОС");
	
	ТаблицыИсточники = Новый Структура;
	ТаблицыИсточники.Вставить("ПартииПрочихРасходовУсловнаяПродажа");
	
	Для каждого ТаблицаРаспределения Из РезультатРаспределения Цикл
		
		Если НЕ ТаблицыИсточники.Свойство(ТаблицаРаспределения.Ключ) Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокиОС = ТаблицаРаспределения.Значение.НайтиСтроки(ОтборСтрок);
		Для каждого СтрокаОС Из СтрокиОС Цикл
			
			
			ПервоначальныеСведения = ТаблицаПараметрыАмортизацииОС.Найти(СтрокаОС.АналитикаРасходов, "ОсновноеСредство");
			Если ПервоначальныеСведения = Неопределено Тогда
				ПервоначальныеСведения = ТаблицаПараметрыАмортизацииОС.Найти(СтрокаОС.АналитикаАктивовПассивов, "ОсновноеСредство");
			КонецЕсли;
			Если ПервоначальныеСведения = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			ПервоначальныеСведения.СтоимостьДляВычисленияАмортизации = ПервоначальныеСведения.СтоимостьДляВычисленияАмортизации + СтрокаОС.НДСРегл;
			Если СтрокаОС.НалоговоеНазначение <> Справочники.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяНеХозДеятельность Тогда
				ПервоначальныеСведения.СтоимостьДляВычисленияАмортизацииНУ = ПервоначальныеСведения.СтоимостьДляВычисленияАмортизацииНУ + СтрокаОС.НДСРегл;
			КонецЕсли;	
			
			ПервоначальныеСведения.ЕстьИзменения = Истина;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат ТаблицаПараметрыАмортизацииОС.Скопировать(Новый Структура("ЕстьИзменения", Истина));
	
КонецФункции

#КонецОбласти

#Область Прочее

Процедура ДобавитьВРегистрНовыеЗаписи(Регистратор, ИмяРегистра, НовыеЗаписи, ВидИсточника)

	НаборЗаписей = РегистрыНакопления[ИмяРегистра].СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Регистратор.Установить(Регистратор);
	НаборЗаписей.Прочитать();
	
	Для Сч = -НаборЗаписей.Количество() + 1 По 0 Цикл
		Если НаборЗаписей[-Сч].ВидИсточника = ВидИсточника Тогда
			НаборЗаписей.Удалить(-Сч);
		КонецЕсли; 
	КонецЦикла; 
	
	Для Каждого СтрокаТаблицыИсточник Из НовыеЗаписи Цикл
		НоваяЗапись = НаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяЗапись, СтрокаТаблицыИсточник);
		НоваяЗапись.ВидИсточника = ВидИсточника;
	КонецЦикла;
	
	НаборЗаписей.Записать();
	
КонецПроцедуры

#КонецОбласти

//-- Локализация


Процедура СформироватьЗаданияПриЗаписиДвиженийРаспределенияВзаиморасчетов(МенеджерВременныхТаблиц) Экспорт
	
	//++ Локализация
	//-- Локализация	
	
КонецПроцедуры

Процедура ДополнитьЭтап_НачислениеАмортизацииОС(НоваяСтрока) Экспорт

	//++ Локализация  
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ДатаНачалаУчета", Константы.ДатаНачалаУчетаВнеоборотныхАктивов2_4.Получить());
	ДополнительныеПараметры.Вставить("ИспользоватьВнеоборотныеАктивы2_4", Константы.ИспользоватьВнеоборотныеАктивы2_4.Получить());
	НоваяСтрока.ДействиеПодробнее.ПараметрыФормы.Вставить("ДополнительныеПараметры", ДополнительныеПараметры);
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьЭтап_НачислениеАмортизацииНМА(НоваяСтрока) Экспорт

	//++ Локализация
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ДатаНачалаУчета", Константы.ДатаНачалаУчетаВнеоборотныхАктивов2_4.Получить());
	ДополнительныеПараметры.Вставить("ИспользоватьВнеоборотныеАктивы2_4", Константы.ИспользоватьВнеоборотныеАктивы2_4.Получить());
	НоваяСтрока.ДействиеПодробнее.ПараметрыФормы.Вставить("ДополнительныеПараметры", ДополнительныеПараметры);
	//-- Локализация
	
КонецПроцедуры

//++ Локализация
//-- Локализация

#КонецОбласти
