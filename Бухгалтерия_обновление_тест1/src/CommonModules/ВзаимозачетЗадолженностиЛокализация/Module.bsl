
#Область ПрограммныйИнтерфейс

#Область Проведение

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	//++ Локализация
	//++ НЕ УТ
	МеханизмыДокумента.Добавить("РегламентированныйУчет");
	//-- НЕ УТ
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый документ.
//  Отказ - Булево - Признак проведения документа.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то проведение документа выполнено не будет.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ОбработкаПроведения(Объект, Отказ, РежимПроведения) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то будет выполнен отказ от продолжения работы после выполнения проверки заполнения.
//  ПроверяемыеРеквизиты - Массив - Массив путей к реквизитам, для которых будет выполнена проверка заполнения.
//
Процедура ОбработкаПроверкиЗаполнения(Объект, Отказ, ПроверяемыеРеквизиты) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект.
//  ДанныеЗаполнения - Произвольный - Значение, которое используется как основание для заполнения.
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения стандартной (системной) обработки события.
//
Процедура ОбработкаЗаполнения(Объект, ДанныеЗаполнения, СтандартнаяОбработка) Экспорт

	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//
Процедура ОбработкаУдаленияПроведения(Объект, Отказ) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//  РежимЗаписи - РежимЗаписиДокумента - В параметр передается текущий режим записи документа. Позволяет определить в теле процедуры режим записи.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ПередЗаписью(Объект, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина, то запись выполнена не будет и будет вызвано исключение.
//
Процедура ПриЗаписи(Объект, Отказ) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  ОбъектКопирования - ДокументОбъект.<Имя документа> - Исходный документ, который является источником копирования.
//
Процедура ПриКопировании(Объект, ОбъектКопирования) Экспорт
	
	
КонецПроцедуры

#КонецОбласти

#Область ПодключаемыеКоманды

// Определяет список команд создания на основании.
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//  Параметры - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.Параметры
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	
КонецПроцедуры

// Добавляет команду создания документа "Авансовый отчет".
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//
Процедура ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт


КонецПроцедуры

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//   Параметры - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.Параметры
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	
КонецПроцедуры

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	
КонецПроцедуры

#КонецОбласти

#Область Печать

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	
КонецПроцедуры

#КонецОбласти

//++ НЕ УТ

#Область ПроводкиРегУчета

// Функция возвращает текст запроса для отражения документа в регламентированном учете.
//
// Возвращаемое значение:
//	Строка - Текст запроса
//
Функция ТекстОтраженияВРеглУчете() Экспорт
	
	//++ Локализация
	Возврат ТекстОтраженияВРеглУчетеУКР(); 
	//-- Локализация
	Возврат "";
	
КонецФункции

// Функция возвращает текст запроса дополнительных временных таблиц,
// необходимых для отражения в регламентированном учете
//
// Возвращаемое значение:
//   Строка - сформированный текст запроса.
//
Функция ТекстЗапросаВТОтраженияВРеглУчете() Экспорт
	
	//++ Локализация
	Возврат ТекстЗапросаВТОтраженияВРеглУчетеУКР();
	//-- Локализация
	Возврат "";
	
КонецФункции

//++ Локализация
//-- Локализация

#КонецОбласти
//-- НЕ УТ

//++ НЕ УТ

#Область ПроводкиРегУчетаУКР

// Функция возвращает текст запроса для отражения документа в регламентированном учете.
//
// Возвращаемое значение:
//	Строка - Текст запроса
//
Функция ТекстОтраженияВРеглУчетеУКР() Экспорт
	
	//++ Локализация
	ЯзыкСодержания = МультиязычностьУкр.КодЯзыкаИнформационнойБазы();


#Область ВзаимозачетНапрямую   // (Дт 3X, 6X :: Кт 3X, 6X)

	ТекстВзаимозачетаНапрямую = 
	"
	|ВЫБРАТЬ // Дт 3X, 6X :: Кт 3X, 6X
	|	ДвиженияКК.Регистратор,
	|	ДвиженияКК.Период,
	|	ДвиженияКК.Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	ДвиженияКК.СуммаРегл КАК Сумма,	
	|	ДвиженияКК.Сумма	 КАК СуммаУУ,
	|	
	|	ВЫБОР
	|		КОГДА ДвиженияКК.КорТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммЗадолженности.АвансВыданный)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АвансыВыданные)
	|		КОГДА ДвиженияКК.КорТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммЗадолженности.АвансПолученный)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АвансыПолученные)
	|		КОГДА ДвиженияКК.КорТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммЗадолженности.ДолгПоставщику)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСПоставщиками)
	|		КОГДА ДвиженияКК.КорТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммЗадолженности.ДолгКлиента)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКлиентами)
	|	КОНЕЦ КАК ВидСчетаДт,
	|	ЕСТЬNULL(КорОбъектыРасчетов.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаРасчетов.ПустаяСсылка)) КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ДвиженияКК.КорВалютаВзаиморасчетов КАК ВалютаДт,
	|	ЕСТЬNULL(КорОбъектыРасчетов.Подразделение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)) КАК ПодразделениеДт,
	|	ЕСТЬNULL(КорОбъектыРасчетов.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельностиДт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеДт,	
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	ДвиженияКК.КорКонтрагент КАК СубконтоДт1,
	|	ДвиженияКК.КорДоговор КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	ДвиженияКК.КорСуммаВВалютеВзаиморасчетов КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	ВЫБОР
	|		КОГДА ДвиженияКК.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммЗадолженности.АвансВыданный)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АвансыВыданные)
	|		КОГДА ДвиженияКК.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммЗадолженности.АвансПолученный)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АвансыПолученные)
	|		КОГДА ДвиженияКК.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммЗадолженности.ДолгПоставщику)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСПоставщиками)
	|		КОГДА ДвиженияКК.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммЗадолженности.ДолгКлиента)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКлиентами)
	|	КОНЕЦ КАК ВидСчетаКт,
	|	ОбъектыРасчетов.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	ДвиженияКК.ВалютаВзаиморасчетов КАК ВалютаКт,
	|	ОбъектыРасчетов.Подразделение КАК ПодразделениеКт,
	|	ОбъектыРасчетов.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеКт,	
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	
	|	ДвиженияКК.Контрагент КАК СубконтоКт1,
	|	ДвиженияКК.Договор КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	ДвиженияКК.СуммаВВалютеВзаиморасчетов КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""%1"" КАК Содержание
	|ИЗ  
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВзаимозачетЗадолженности КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|		
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		РегистрНакопления.ДвиженияКонтрагентКонтрагент КАК ДвиженияКК
	|	ПО 
	|		Операция.Ссылка = ДвиженияКК.Регистратор
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Справочник.ОбъектыРасчетов КАК ОбъектыРасчетов
	|	ПО
	|		ДвиженияКК.ОбъектРасчетов = ОбъектыРасчетов.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		Справочник.ОбъектыРасчетов КАК КорОбъектыРасчетов
	|	ПО
	|		ДвиженияКК.КорОбъектРасчетов = КорОбъектыРасчетов.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		втУчетнаяПолитика КАК УчетнаяПолитикаОрганизаций
	|	ПО 
	|		ДвиженияКК.Регистратор = УчетнаяПолитикаОрганизаций.Ссылка
	|		И ДвиженияКК.Организация = УчетнаяПолитикаОрганизаций.Организация
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Константы КАК Константы
	|	ПО
	|		ИСТИНА
	|ГДЕ
	|	ДвиженияКК.Организация.ГоловнаяОрганизация <> ЕСТЬNULL(ДвиженияКК.Контрагент.ГоловнаяОрганизация, НЕОПРЕДЕЛЕНО)
	|	И ДвиженияКК.Организация.ГоловнаяОрганизация <> ЕСТЬNULL(ДвиженияКК.КорКонтрагент.ГоловнаяОрганизация, НЕОПРЕДЕЛЕНО)
	|	И ДвиженияКК.ТипСуммы <> ЗНАЧЕНИЕ(Перечисление.ТипыСуммЗадолженности.ПустаяСсылка)
	|	И ДвиженияКК.КорТипСуммы <> ЗНАЧЕНИЕ(Перечисление.ТипыСуммЗадолженности.ПустаяСсылка)
	|";

	ТекстВзаимозачетаНапрямую = СтрШаблон(ТекстВзаимозачетаНапрямую, 
		НСтр("ru='Взаимозачет задолженности';uk='Взаємозалік заборгованості'",ЯзыкСодержания));
 	
#КонецОбласти

	ТекстыОтражения = Новый Массив;
	ТекстыОтражения.Добавить(ТекстВзаимозачетаНапрямую);
	
	Возврат СтрСоединить(ТекстыОтражения, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
	//-- Локализация
	Возврат "";
	
КонецФункции

// Функция возвращает текст запроса дополнительных временных таблиц,
// необходимых для отражения в регламентированном учете
//
// Возвращаемое значение:
//   Строка - сформированный текст запроса.
//
Функция ТекстЗапросаВТОтраженияВРеглУчетеУКР() Экспорт
	
	//++ Локализация

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВсеДокументы.Ссылка КАК Ссылка,
	|	ВсеДокументы.Организация КАК Организация,
	|	ВсеДокументы.Организация.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	ВсеДокументы.Дата КАК Дата
	|ПОМЕСТИТЬ втДокументы
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВзаимозачетЗадолженности КАК ВсеДокументы
	|	ПО ДокументыКОтражению.Ссылка = ВсеДокументы.Ссылка
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ВсеДокументы.Ссылка,
	|	ВсеДокументы.КонтрагентДебитор,
	|	ВЫРАЗИТЬ(ВсеДокументы.КонтрагентДебитор КАК Справочник.Организации).ГоловнаяОрганизация,
	|	ВсеДокументы.Дата
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВзаимозачетЗадолженности КАК ВсеДокументы
	|	ПО ДокументыКОтражению.Ссылка = ВсеДокументы.Ссылка
	|	И ТИПЗНАЧЕНИЯ(ВсеДокументы.КонтрагентДебитор) = ТИП(Справочник.Организации)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ВсеДокументы.Ссылка,
	|	ВсеДокументы.КонтрагентКредитор,
	|	ВЫРАЗИТЬ(ВсеДокументы.КонтрагентКредитор КАК Справочник.Организации).ГоловнаяОрганизация,
	|	ВсеДокументы.Дата
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Документ.ВзаимозачетЗадолженности КАК ВсеДокументы
	|	ПО 
	|		ДокументыКОтражению.Ссылка = ВсеДокументы.Ссылка
	|		И ТИПЗНАЧЕНИЯ(ВсеДокументы.КонтрагентКредитор) = ТИП(Справочник.Организации)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ВсеДокументы.Ссылка,
	|	ВсеДокументы.ОрганизацияКредитор,
	|	ВсеДокументы.ОрганизацияКредитор.ГоловнаяОрганизация,
	|	ВсеДокументы.Дата
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Документ.ВзаимозачетЗадолженности КАК ВсеДокументы
	|	ПО 
	|		ДокументыКОтражению.Ссылка = ВсеДокументы.Ссылка
	|		И ВсеДокументы.ОрганизацияКредитор <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втДокументы.Ссылка,
	|	втДокументы.Организация,
	|	УчетнаяПолитикаОрганизаций.Организация КАК ГоловнаяОрганизация,
	|	МАКСИМУМ(УчетнаяПолитикаОрганизаций.Период) КАК Период
	|ПОМЕСТИТЬ втПериодыУчетнойПолитики
	|ИЗ
	|	втДокументы КАК втДокументы
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.УчетнаяПолитикаБухУчета КАК УчетнаяПолитикаОрганизаций
	|	ПО 
	|		втДокументы.ГоловнаяОрганизация = УчетнаяПолитикаОрганизаций.Организация
	|		И втДокументы.Дата >= УчетнаяПолитикаОрганизаций.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	втДокументы.Ссылка,
	|	втДокументы.Организация,
	|	УчетнаяПолитикаОрганизаций.Организация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втДокументы.Ссылка КАК Ссылка,
	|	втДокументы.Организация КАК Организация
	|	
	|ПОМЕСТИТЬ втУчетнаяПолитика
	|ИЗ
	|	втДокументы КАК втДокументы
	|	ЛЕВОЕ СОЕДИНЕНИЕ втПериодыУчетнойПолитики КАК ПериодыУчетнойПолитики
	|	ПО 
	|		втДокументы.Ссылка = ПериодыУчетнойПолитики.Ссылка
	|		И втДокументы.Организация = ПериодыУчетнойПолитики.Организация
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаБухУчета КАК УчетнаяПолитикаОрганизаций
	|	ПО
	|		ПериодыУчетнойПолитики.ГоловнаяОрганизация = УчетнаяПолитикаОрганизаций.Организация
	|		И ПериодыУчетнойПолитики.Период = УчетнаяПолитикаОрганизаций.Период
	|		
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	Организация"
	+"
	|;
	|";

	Возврат ТекстЗапроса;

	//-- Локализация
	Возврат "";
	
КонецФункции

//++ Локализация
//-- Локализация

#КонецОбласти
//-- НЕ УТ

//++ Локализация
//-- Локализация

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

// Процедура дополняет тексты запросов проведения документа.
//
// Параметры:
//  Запрос - Запрос - Общий запрос проведения документа.
//  ТекстыЗапроса - СписокЗначений - Список текстов запроса проведения.
//  Регистры - Строка, Структура - Список регистров проведения документа через запятую или в ключах структуры.
//
Процедура ДополнитьТекстыЗапросовПроведения(Запрос, ТекстыЗапроса, Регистры) Экспорт
	
	//++ Локализация
	//++ НЕ УТ
	ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(Запрос, ТекстыЗапроса, Регистры);
	//-- НЕ УТ
	//-- Локализация
	
КонецПроцедуры

//++ Локализация
//++ НЕ УТ


Функция ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ОтражениеДокументовВРеглУчете";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Документы.ВзаимозачетЗадолженности.ИнициализироватьВтДебиторскаяКредиторскаяЗадолженность(Запрос);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период      КАК Период,
	|	&Организация КАК Организация,
	|	НАЧАЛОПЕРИОДА(&Период, ДЕНЬ) КАК ДатаОтражения
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	&Период            КАК Период,
	|	ДанныеДокумента.КонтрагентДебитор КАК Организация,
	|	НАЧАЛОПЕРИОДА(&Период, ДЕНЬ) КАК ДатаОтражения
	|ИЗ ВтДанныеДокумента КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.ДебиторОрганизация
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	&Период             КАК Период,
	|	ДанныеДокумента.КонтрагентКредитор КАК Организация,
	|	НАЧАЛОПЕРИОДА(&Период, ДЕНЬ) КАК ДатаОтражения
	|ИЗ ВтДанныеДокумента КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.КредиторОрганизация
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&Период                              КАК Период,
	|	ДебиторскаяЗадолженность.Организация КАК Организация,
	|	НАЧАЛОПЕРИОДА(&Период, ДЕНЬ) КАК ДатаОтражения
	|ИЗ
	|	ВтДебиторскаяЗадолженность КАК ДебиторскаяЗадолженность
	|ГДЕ
	|	ДебиторскаяЗадолженность.Организация <> &Организация
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&Период                               КАК Период,
	|	КредиторскаяЗадолженность.Организация КАК Организация,
	|	НАЧАЛОПЕРИОДА(&Период, ДЕНЬ) КАК ДатаОтражения
	|ИЗ
	|	ВтКредиторскаяЗадолженность КАК КредиторскаяЗадолженность
	|ГДЕ
	|	КредиторскаяЗадолженность.Организация <> &Организация";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции
//-- НЕ УТ
//-- Локализация

#КонецОбласти

#Область Прочее

//++ Локализация
//-- Локализация

#КонецОбласти

//++ Локализация
//-- Локализация

#КонецОбласти
