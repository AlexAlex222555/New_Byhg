////////////////////////////////////////////////////////////////////////////////
// Процедуры, используемые для локализации документа "Ввод остатков внеоборотных активов".
// 
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

#Область ФормаОсновныеСредства

// Параметры:
// 	Команда - КомандаФормы - 
// 	Форма - ФормаКлиентскогоПриложения - 
Процедура ФормаОсновныеСредства_ПриВыполненииКоманды(Команда, Форма) Экспорт

	ДополнительныеПараметры = Неопределено;
	ТребуетсяВызовСервера = Ложь;
	ПродолжитьВыполнениеКоманды = Истина;
	
	//++ Локализация
	//-- Локализация
	
	Если ПродолжитьВыполнениеКоманды Тогда
		
		ОбщегоНазначенияУТКлиент.ПродолжитьВыполнениеКоманды(
			Форма, 
			Команда.Имя, 
			ТребуетсяВызовСервера,
			ДополнительныеПараметры);
			
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

#Область ФормаНематериальныеАктивы

// Параметры:
// 	Команда - КомандаФормы - 
// 	Форма - ФормаКлиентскогоПриложения - 
Процедура ФормаНематериальныеАктивы_ПриВыполненииКоманды(Команда, Форма) Экспорт

	ДополнительныеПараметры = Неопределено;
	ТребуетсяВызовСервера = Ложь;
	ПродолжитьВыполнениеКоманды = Истина;
	
	//++ Локализация
	//-- Локализация
	
	Если ПродолжитьВыполнениеКоманды Тогда
		
		ОбщегоНазначенияУТКлиент.ПродолжитьВыполнениеКоманды(
			Форма, 
			Команда.Имя, 
			ТребуетсяВызовСервера,
			ДополнительныеПараметры);
			
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

#Область ФормаПереданныеВАрендуОсновныеСредства

// Параметры:
// 	Команда - КомандаФормы - 
// 	Форма - ФормаКлиентскогоПриложения - 
Процедура ФормаПереданныеВАрендуОсновныеСредства_ПриВыполненииКоманды(Команда, Форма) Экспорт

	ДополнительныеПараметры = Неопределено;
	ТребуетсяВызовСервера = Ложь;
	ПродолжитьВыполнениеКоманды = Истина;
	
	//++ Локализация
	//-- Локализация
	
	Если ПродолжитьВыполнениеКоманды Тогда
		
		ОбщегоНазначенияУТКлиент.ПродолжитьВыполнениеКоманды(
			Форма, 
			Команда.Имя, 
			ТребуетсяВызовСервера,
			ДополнительныеПараметры);
			
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

#Область ФормаАрендованныеОсновныеСредства

// Параметры:
// 	Команда - КомандаФормы - 
// 	Форма - ФормаКлиентскогоПриложения - 
Процедура ФормаАрендованныеОсновныеСредства_ПриВыполненииКоманды(Команда, Форма) Экспорт

	ДополнительныеПараметры = Неопределено;
	ТребуетсяВызовСервера = Ложь;
	ПродолжитьВыполнениеКоманды = Истина;
	
	//++ Локализация
	//-- Локализация
	
	Если ПродолжитьВыполнениеКоманды Тогда
		
		ОбщегоНазначенияУТКлиент.ПродолжитьВыполнениеКоманды(
			Форма, 
			Команда.Имя, 
			ТребуетсяВызовСервера,
			ДополнительныеПараметры);
			
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

#Область ФормаПредметыЛизингаЗаБалансом

// Параметры:
// 	Команда - КомандаФормы - 
// 	Форма - ФормаКлиентскогоПриложения - 
Процедура ФормаПредметыЛизингаЗаБалансом_ПриВыполненииКоманды(Команда, Форма) Экспорт

	ДополнительныеПараметры = Неопределено;
	ТребуетсяВызовСервера = Ложь;
	ПродолжитьВыполнениеКоманды = Истина;
	
	//++ Локализация
	//-- Локализация
	
	Если ПродолжитьВыполнениеКоманды Тогда
		
		ОбщегоНазначенияУТКлиент.ПродолжитьВыполнениеКоманды(
			Форма, 
			Команда.Имя, 
			ТребуетсяВызовСервера,
			ДополнительныеПараметры);
			
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

#Область ФормаРасчетыПоДоговорамЛизинга

// Параметры:
// 	Команда - КомандаФормы - 
// 	Форма - ФормаКлиентскогоПриложения - 
Процедура ФормаРасчетыПоДоговорамЛизинга_ПриВыполненииКоманды(Команда, Форма) Экспорт

	ДополнительныеПараметры = Неопределено;
	ТребуетсяВызовСервера = Ложь;
	ПродолжитьВыполнениеКоманды = Истина;
	
	//++ Локализация
	//-- Локализация
	
	Если ПродолжитьВыполнениеКоманды Тогда
		
		ОбщегоНазначенияУТКлиент.ПродолжитьВыполнениеКоманды(
			Форма, 
			Команда.Имя, 
			ТребуетсяВызовСервера,
			ДополнительныеПараметры);
			
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

#Область ФормаРедактированияСтрокиОС

// Параметры:
// 	Элемент - ПолеФормы - 
// 	Форма - ФормаКлиентскогоПриложения - 
Процедура ФормаРедактированияСтрокиОС_ПриИзмененииРеквизита(Элемент, Форма) Экспорт

	ДополнительныеПараметры = Неопределено;
	ТребуетсяВызовСервера = Ложь;
	
	//++ Локализация

		Элементы = Форма.Элементы;
		
		Если Элемент.Имя = Элементы.ПрименениеЦелевогоФинансирования.Имя
			ИЛИ Элемент.Имя = Элементы.ЕстьИзменениеПараметровАмортизацииБУ.Имя
			ИЛИ Элемент.Имя = Элементы.НачислятьАмортизациюНУ.Имя Тогда	
			
			ДополнительныеПараметры = Новый Структура;
			ДополнительныеПараметры.Вставить("Выполнить_НастроитьЗависимыеЭлементыФормы", Элемент.Имя);
		
	ИначеЕсли Элемент.Имя = Элементы.ТекущаяСтоимостьНУ.Имя
			ИЛИ Элемент.Имя = Элементы.ПервоначальнаяСтоимостьНУ.Имя
			ИЛИ Элемент.Имя = Элементы.НакопленнаяАмортизацияНУ.Имя
			ИЛИ Элемент.Имя = Элементы.НакопленнаяАмортизацияБУЦФ.Имя Тогда	
			
			ДополнительныеПараметры = Новый Структура;
			ДополнительныеПараметры.Вставить("Выполнить_ПересчитатьЗависимыеСуммы");
			ДополнительныеПараметры.Вставить("Выполнить_НастроитьЗависимыеЭлементыФормы", Элемент.Имя);
			
		ИначеЕсли Элемент.Имя = Элементы.СрокИспользованияБУ.Имя Тогда
			
			ДополнительныеПараметры = Новый Структура;
			
			ПараметрыДействия = Новый Структура("ИмяРеквизита,ОбновитьЕслиСовпадают", Элемент.Имя, Истина);
			ДополнительныеПараметры.Вставить("Выполнить_ПриИзмененииСрокаИспользования", ПараметрыДействия);
			
		ИначеЕсли Элемент.Имя = Элементы.СрокИспользованияБУОстаточный.Имя Тогда
			
			ДополнительныеПараметры = Новый Структура;
			
			ПараметрыДействия = Новый Структура("ИмяРеквизита,ОбновитьЕслиСовпадают", Элемент.Имя, Ложь);
			ДополнительныеПараметры.Вставить("Выполнить_ПриИзмененииСрокаИспользования", ПараметрыДействия);
			
		ИначеЕсли Элемент.Имя = Элементы.ДатаПринятияКУчетуБУ.Имя Тогда
			
			ФормаРедактированияСтрокиОС_ДатаПринятияКУчетуБУПриИзменении(Форма, ДополнительныеПараметры);
			
		ИначеЕсли Элемент.Имя = Элементы.МетодНачисленияАмортизацииБУ.Имя 
			ИЛИ Элемент.Имя = Элементы.МетодНачисленияАмортизацииНУ.Имя Тогда
			
			ТребуетсяВызовСервера = Истина;

		ИначеЕсли Элемент.Имя = Элементы.НачислятьАмортизациюБУ.Имя Тогда
			
			ФормаРедактированияСтрокиОС_НачислятьАмортизациюБУПриИзменении(Форма, ДополнительныеПараметры);
			
		ИначеЕсли Элемент.Имя = Элементы.НачислятьАмортизациюНУ.Имя Тогда
			
			ФормаРедактированияСтрокиОС_НачислятьАмортизациюНУПриИзменении(Форма, ДополнительныеПараметры);
			
		ИначеЕсли Элемент.Имя = Элементы.СтатьяРасходовБУ.Имя Тогда
			
			ФормаРедактированияСтрокиОС_СтатьяРасходовБУПриИзменении(Форма, ДополнительныеПараметры);
			
		ИначеЕсли Элемент.Имя = Элементы.СтатьяРасходовНУ.Имя Тогда
			
			ДоходыИРасходыКлиентСервер.СтатьяПриИзменении(Форма, Элемент);
			
			ДополнительныеПараметры = Новый Структура;
			ДополнительныеПараметры.Вставить("Выполнить_НастроитьЗависимыеЭлементыФормы", Элемент.Имя);
			
		Иначе
			ВызватьИсключение СтрШаблон(НСтр("ru='Отсутствует обработка события ""ПриИзменении"" для элемента ""%1""';uk='Відсутня обробка події ""ПриИзменении"" для елемента "" %1""'"), Элемент.Имя);
		КонецЕсли; 
	
	//-- Локализация
	
	ОбщегоНазначенияУТКлиент.ПродолжитьИзменениеРеквизита(
		Форма, 
		Элемент.Имя, 
		ТребуетсяВызовСервера,
		ДополнительныеПараметры);
	
КонецПроцедуры

Процедура ФормаРедактированияСтрокиОС_НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка, Форма) Экспорт

	//++ Локализация
	//-- Локализация
	
	Возврат; // В WE пустой обработчик.
	
КонецПроцедуры

Процедура ФормаРедактированияСтрокиОС_АвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка, Форма) Экспорт

	//++ Локализация
	//-- Локализация
	
	Возврат; // В WE пустой обработчик.
	
КонецПроцедуры

Процедура ФормаРедактированияСтрокиОС_ОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка, Форма) Экспорт

	//++ Локализация
	//-- Локализация
	
	Возврат; // В WE пустой обработчик.
	
КонецПроцедуры

Функция ФормаРедактированияСтрокиОС_ТребуетсяВызовСервераДляНастройкиЭлементовФормы(Форма, СтруктураИзмененныхРеквизитов) Экспорт

	//++ Локализация
	//-- Локализация
	
	Возврат Ложь;

КонецФункции

Процедура ФормаРедактированияСтрокиОС_ПриИзмененииСрокаИспользования(Форма, ИмяРеквизита, ОбновитьЕслиСовпадают, СписокРеквизитов) Экспорт

	//++ Локализация
	//-- Локализация
	
	Возврат; // В WE пустой обработчик.
	
КонецПроцедуры

Процедура ФормаРедактированияСтрокиОС_ЗавершитьРедактированиеЗавершение(Форма, РезультатРедактирования) Экспорт

	//++ Локализация
	//-- Локализация
	
	Возврат; // В WE пустой обработчик.
	
КонецПроцедуры

Процедура ФормаРедактированияСтрокиОС_ТекущаяСтоимостьБУПриИзменении(Форма) Экспорт
	
	//++ Локализация
	//-- Локализация
	
	Возврат; // В WE пустой обработчик.
	
КонецПроцедуры

Процедура ФормаРедактированияСтрокиОС_НакопленнаяАмортизацияБУПриИзменении(Форма) Экспорт
	
	//++ Локализация
	//-- Локализация
	
	Возврат; // В WE пустой обработчик.
	
КонецПроцедуры

Процедура ФормаРедактированияСтрокиОС_ПервоначальнаяСтоимостьБУПриИзменении(Форма) Экспорт
	
	//++ Локализация
	//-- Локализация
	
	Возврат; // В WE пустой обработчик.
	
КонецПроцедуры

#КонецОбласти

#Область ФормаРедактированияСтрокиНМА

// Параметры:
// 	Элемент - ПолеФормы - 
// 	Форма - ФормаКлиентскогоПриложения - 
Процедура ФормаРедактированияСтрокиНМА_ПриИзмененииРеквизита(Элемент, Форма) Экспорт

	ДополнительныеПараметры = Неопределено;
	ТребуетсяВызовСервера = Ложь;
	
	//++ Локализация
	//-- Локализация
	
	ОбщегоНазначенияУТКлиент.ПродолжитьИзменениеРеквизита(
		Форма, 
		Элемент.Имя, 
		ТребуетсяВызовСервера,
		ДополнительныеПараметры);
	
КонецПроцедуры

Процедура ФормаРедактированияСтрокиНМА_НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка, Форма) Экспорт

	//++ Локализация
	//-- Локализация
	
	Возврат; // В WE пустой обработчик.
	
КонецПроцедуры

Процедура ФормаРедактированияСтрокиНМА_АвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка, Форма) Экспорт

	//++ Локализация
	//-- Локализация
	
	Возврат; // В WE пустой обработчик.
	
КонецПроцедуры

Процедура ФормаРедактированияСтрокиНМА_ОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка, Форма) Экспорт

	//++ Локализация
	//-- Локализация
	
	Возврат; // В WE пустой обработчик.
	
КонецПроцедуры

Процедура ФормаРедактированияСтрокиНМА_ПриИзмененииСрокаИспользования(Форма, ИмяРеквизита, ОбновитьЕслиСовпадают, СписокРеквизитов) Экспорт

	//++ Локализация
	//-- Локализация
	
	Возврат; // В WE пустой обработчик.
	
КонецПроцедуры

Процедура ФормаРедактированияСтрокиНМА_ЗавершитьРедактированиеЗавершение(Форма, РезультатРедактирования) Экспорт

	//++ Локализация
	//-- Локализация
	
	Возврат; // В WE пустой обработчик.
	
КонецПроцедуры

Процедура ФормаРедактированияСтрокиНМА_ТекущаяСтоимостьБУПриИзменении(Форма) Экспорт
	
	//++ Локализация
	//-- Локализация

	Возврат; // В WE пустой обработчик.
	
КонецПроцедуры

Процедура ФормаРедактированияСтрокиНМА_НакопленнаяАмортизацияБУПриИзменении(Форма) Экспорт
	
	//++ Локализация
	//-- Локализация
	
	Возврат; // В WE пустой обработчик.
	
КонецПроцедуры

Процедура ФормаРедактированияСтрокиНМА_ПервоначальнаяСтоимостьБУПриИзменении(Форма) Экспорт
	
	//++ Локализация
	//-- Локализация
	
	Возврат; // В WE пустой обработчик.
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

//++ Локализация

#Область СлужебныеПроцедурыИФункции

#Область ФормаРедактированияСтрокиОС


Процедура ФормаРедактированияСтрокиОС_ДатаПринятияКУчетуБУПриИзменении(Форма, ДополнительныеПараметры)
	
	Если Форма.ОтражатьВУпрУчете 
		И Форма.ЗначенияРеквизитовДоИзменения.ДатаПринятияКУчетуБУ = Форма.ЗначенияРеквизитовДоИзменения.ДатаПринятияКУчетуУУ Тогда
		Форма.ДатаПринятияКУчетуУУ = Форма.ДатаПринятияКУчетуБУ;
	КонецЕсли; 
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Выполнить_НастроитьЗависимыеЭлементыФормы", "ДатаПринятияКУчетуБУ");
	ДополнительныеПараметры.Вставить("Выполнить_ЗаполнитьЗначенияРеквизитовДоИзменения");
	
КонецПроцедуры

Процедура ФормаРедактированияСтрокиОС_НачислятьАмортизациюБУПриИзменении(Форма, ДополнительныеПараметры)
	
	ИзмененныеРеквизиты = "НачислятьАмортизациюБУ";
	
	Если Форма.НачислятьАмортизациюБУ <> Форма.НачислятьАмортизациюНУ Тогда
		Форма.НачислятьАмортизациюНУ = Форма.НачислятьАмортизациюБУ;
		ИзмененныеРеквизиты = ИзмененныеРеквизиты + ",НачислятьАмортизациюНУ";
	КонецЕсли;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Выполнить_НастроитьЗависимыеЭлементыФормы", ИзмененныеРеквизиты);
	
КонецПроцедуры

Процедура ФормаРедактированияСтрокиОС_СтатьяРасходовБУПриИзменении(Форма, ДополнительныеПараметры)
	
	ДоходыИРасходыКлиентСервер.СтатьяПриИзменении(Форма, Форма.Элементы.СтатьяРасходовБУ);
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Выполнить_НастроитьЗависимыеЭлементыФормы", "СтатьяРасходовБУ");
	
КонецПроцедуры

Процедура ФормаРедактированияСтрокиОС_НачислятьАмортизациюНУПриИзменении(Форма, ДополнительныеПараметры)
	
	ИзмененныеРеквизиты = "НачислятьАмортизациюНУ";
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Выполнить_НастроитьЗависимыеЭлементыФормы", ИзмененныеРеквизиты);
	
КонецПроцедуры


#КонецОбласти

#Область ФормаРедактированияСтрокиНМА

Процедура ФормаРедактированияСтрокиНМА_ДатаПринятияКУчетуБУПриИзменении(Форма, ДополнительныеПараметры)
	
	Если Форма.ОтражатьВУпрУчете 
		И Форма.ЗначенияРеквизитовДоИзменения.ДатаПринятияКУчетуБУ = Форма.ЗначенияРеквизитовДоИзменения.ДатаПринятияКУчетуУУ Тогда
		Форма.ДатаПринятияКУчетуУУ = Форма.ДатаПринятияКУчетуБУ;
	КонецЕсли; 
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Выполнить_НастроитьЗависимыеЭлементыФормы", "ДатаПринятияКУчетуБУ");
	ДополнительныеПараметры.Вставить("Выполнить_ЗаполнитьЗначенияРеквизитовДоИзменения");
	
КонецПроцедуры

#КонецОбласти

#Область ЗаполнениеПоДаннымОперативногоУчета

Процедура ЗаполнитьПоДаннымОУ(Форма, ТабличнаяЧасть, ИмяКоманды, ТребуетсяВызовСервера, ПродолжитьВыполнениеКоманды)
	
	Если ТабличнаяЧасть.Количество() <> 0 Тогда

		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("Форма", Форма);
		ДополнительныеПараметры.Вставить("ИмяКоманды", ИмяКоманды);
		ОповещениеВопросЗаполнитьПоОстаткам = Новый ОписаниеОповещения("ЗаполнитьПоДаннымОУЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ТекстВопроса = НСтр("ru='При заполнении текущие данные табличной части будут очищены. Продолжить?';uk='При заповненні поточні дані табличній частині будуть очищені. Продовжити?'");
		ПоказатьВопрос(ОповещениеВопросЗаполнитьПоОстаткам, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	
		ПродолжитьВыполнениеКоманды = Ложь;
		
	Иначе
		
		ТребуетсяВызовСервера = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьПоДаннымОУЗавершение(РезультатВопроса, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		
		ОбщегоНазначенияУТКлиент.ПродолжитьВыполнениеКоманды(
			ДополнительныеПараметры.Форма, 
			ДополнительныеПараметры.ИмяКоманды, 
			Истина,
			Неопределено);
			
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

//-- Локализация
