#Область ПрограммныйИнтерфейс

// Возвращает страну ведения учета
// 
// Возвращаемое значение:
//  СправочникСсылка.СтраныМира - ссылка на страну ведения учета
//
Функция СтранаВеденияУчета() Экспорт
	СтранаВеденияУчета = Неопределено;
	//++ Локализация
    СтранаВеденияУчета = ПредопределенноеЗначение("Справочник.СтраныМира.Украина");
	//-- Локализация
	Возврат СтранаВеденияУчета
КонецФункции

// Определяет тип ЮрФизЛицо в форме помощника нового
// 
// Параметры:
// 	ЭтоКомпания - Число - признак, что партнер является компанией
// 	ВидКомпании - Число - вид компании
// Возвращаемое значение:
// 	ПеречислениеСсылка.ЮрФизЛицо - перечисление ЮрФизЛицо
//
Функция ТипЮрФизЛицаКонтрагента(ЭтоКомпания, ВидКомпании) Экспорт
	
	Если ЭтоКомпания = 0 Тогда
		Если ВидКомпании = 0 Или ВидКомпании = 3 Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ЮрЛицо");
		ИначеЕсли ВидКомпании = 1 Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ЮрЛицоНеРезидент");
		Иначе
			Возврат ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ИндивидуальныйПредприниматель"); 
		КонецЕсли;
	Иначе
		Возврат ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ФизЛицо");
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#Область УправлениеДоступностью

// Устанавливает доступность элементов формы элемента справочника Контрагенты.
//
// Параметры:
//	Форма - ФормаКлиентскогоПриложения - форма, для которой настраивается доступность.
//
Процедура УправлениеДоступностьюКонтрагент(Форма) Экспорт
	//++ Локализация
	РеквизитыКонтрагента = ПартнерыИКонтрагентыЛокализацияКлиентСервер.РеквизитыОбъектаКонтрагента(Форма);
    Если РеквизитыКонтрагента.ЭтоФормаПартнера Тогда
        ИсторияПлательщикаНДС = Форма.ИсторияПлательщикаНДС;
    Иначе
        ИсторияПлательщикаНДС = Форма.Объект.ИсторияПлательщикаНДС;
	КонецЕсли;
	
    Если РеквизитыКонтрагента.ЭтоФормаПомощника Тогда
	Иначе
	
		ПартнерыИКонтрагентыЛокализацияКлиентСервер.УстановитьВидимостьПредупрежденийГоловногоКонтрагента(Форма,
			РеквизитыКонтрагента.ОбособленноеПодразделение,
			РеквизитыКонтрагента.ГоловнойКонтрагент,
            РеквизитыКонтрагента.ИННПлательщикаНДС);
            
		ПартнерыИКонтрагентыЛокализацияКлиентСервер.ОбновитьСтрокиИсторииПлательщикаНДС(
            ИсторияПлательщикаНДС, 
			Форма.ПереходКИсторииПлательщикаНДС,
			Форма.ЦветГиперссылки
        );
        Форма.Элементы.ПлательщикНДС.ТолькоПросмотр     = ИсторияПлательщикаНДС.Количество() > 1;
        Форма.Элементы.ИННПлательщикаНДС.ТолькоПросмотр = ИсторияПлательщикаНДС.Количество() > 1;
        Форма.Элементы.КодФилиала.ТолькоПросмотр        = ИсторияПлательщикаНДС.Количество() > 1;
	КонецЕсли;
	//-- Локализация
КонецПроцедуры

// Устанавливает доступность элементов формы элемента справочника Контрагенты.
//
// Параметры:
//	Форма - ФормаКлиентскогоПриложения - форма, для которой настраивается доступность.
//
Процедура УправлениеДоступностьюГоловнойКонтрагент(Форма) Экспорт
	//++ Локализация
	Элементы = Форма.Элементы;
    
    ТекстПредупреждения = ПартнерыИКонтрагентыЛокализацияКлиентСервер.ТекстПредупрежденияГоловногоКонтрагента(Элементы.ГоловнойКонтрагент.СписокВыбора, Форма.ИННПлательщикаНДС);
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы, "ПредупреждениеГоловнойКонтрагент", "Заголовок", ТекстПредупреждения);
	
	МассивЭлементов = Новый Массив;
	МассивЭлементов.Добавить("КартинкаПредупреждениеГоловнойКонтрагент");
	МассивЭлементов.Добавить("ПредупреждениеГоловнойКонтрагент");
	
	ЕстьПредупреждение = Не ПустаяСтрока(ТекстПредупреждения);
	
	Если Форма.ВыбратьГоловногоКонтрагента = 0 И ЕстьПредупреждение Тогда
		 Форма.ВыбратьГоловногоКонтрагента = 1;
	КонецЕсли;
	
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементовФормы(
		Элементы, МассивЭлементов, "Видимость", ЕстьПредупреждение);
	
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы, "ВыбратьГоловногоКонтрагента", "Доступность", Не ЕстьПредупреждение);
	
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы, "ГруппаГоловнойКонтрагент", "Доступность", Не ЕстьПредупреждение И Форма.ВыбратьГоловногоКонтрагента = 0);
	
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы, "ГруппаДанныеГоловногоКонтрагента", "Доступность",  Форма.ВыбратьГоловногоКонтрагента = 1);
		
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(
        Элементы, "КодФилиалаГоловногоКонтрагента", "Доступность", Форма.ВыбратьГоловногоКонтрагента = 1 И ЗначениеЗаполнено(Форма.ИННПлательщикаНДС));
        
	//-- Локализация
КонецПроцедуры

// Устанавливает доступность и видимость юридическим реквизитам: ИННПлательщикаНДС, КодПоЕДРПОУ, ГоловнойКонтрагент
// в зависимости от вида контрагента.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - форма, для которой выполняются действия.
//
Процедура УправлениеЭлементамиЮридическихРеквизитов(Форма) Экспорт
	
	//++ Локализация
	
	Элементы = Форма.Элементы;
	РеквизитыКонтрагента = ПартнерыИКонтрагентыЛокализацияКлиентСервер.РеквизитыОбъектаКонтрагента(Форма);
	ЮрФизЛицо = РеквизитыКонтрагента.ЮрФизЛицо;

	ЭтоЮрЛицо             = (ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ЮрЛицо"));
	ЭтоФизЛицо            = (ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ФизЛицо"));
	ЭтоИндПредприниматель = (ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ИндивидуальныйПредприниматель"));
	ЭтоНеРезидент         = (ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ЮрЛицоНеРезидент"));
    
    Если ПартнерыИКонтрагентыЛокализацияКлиентСервер.СтранаВеденияУчета() = ПредопределенноеЗначение("Справочник.СтраныМира.Украина") Тогда    
		
		// Страна регистрации видна только в том случае, когда контрагент не является резидентом Украины. 
		// В противном случае - и для физ. лиц и для ФОП и для юр. лиц страна регистрации всегда Украина.
		Элементы.ГруппаСтраницыДанныхРегистрацииКонтрагента.ТекущаяСтраница = 
			?(ЭтоНеРезидент, 
            Элементы.ГруппаСтраницаИностраннойРегистрации, Элементы.ЛокализацияГруппаСтраницаУкраинскогоКонтрагента);
            
        
        
	    МожетБытьПлательщикомНДС = ЮрФизЛицо <> ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ФизЛицо") И ЮрФизЛицо <> ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ЮрЛицоНеРезидент");
	    
	    ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ПлательщикНДС",                 "Видимость", МожетБытьПлательщикомНДС);
	    ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ИННПлательщикаНДС",             "Видимость", РеквизитыКонтрагента.ПлательщикНДС);
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ПереходКИсторииПлательщикаНДС", "Видимость", МожетБытьПлательщикомНДС);
        
		МассивЭлементов = Новый Массив;
		МассивЭлементов.Добавить("ГоловнойКонтрагент");
		МассивЭлементов.Добавить("ЗаполнитьГоловногоКонтрагента");
        МассивЭлементов.Добавить("ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН");
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементовФормы(
			Элементы, МассивЭлементов, "Видимость", РеквизитыКонтрагента.ОбособленноеПодразделение);
	    ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "КодФилиала", "Видимость", РеквизитыКонтрагента.ПлательщикНДС И РеквизитыКонтрагента.ОбособленноеПодразделение);
		
	Иначе
		МассивЭлементов = Новый Массив;
        МассивЭлементов.Добавить("ПлательщикНДС");
		МассивЭлементов.Добавить("ИННПлательщикаНДС");
		МассивЭлементов.Добавить("КодФилиала");
		МассивЭлементов.Добавить("ПереходКИсторииИННПлательщикаНДС");
		МассивЭлементов.Добавить("КодПоЕДРПОУ");
        МассивЭлементов.Добавить("ЗаполнитьПоЕГРПОУ");
        МассивЭлементов.Добавить("ДекорацияЗаполнитьПоЕГРПОУ");
		
		МассивЭлементов.Добавить("ГоловнойКонтрагент");
		МассивЭлементов.Добавить("ЗаполнитьГоловногоКонтрагента");
        МассивЭлементов.Добавить("ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН");
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементовФормы(Элементы, МассивЭлементов, "Видимость", ЛОЖЬ);
		
		Элементы.ГруппаСтраницыДанныхРегистрацииКонтрагента.ТекущаяСтраница = Форма.Элементы.ГруппаСтраницаИностраннойРегистрации;
	КонецЕсли;
	//-- Локализация
КонецПроцедуры

//++ Локализация
//-- Локализация

#КонецОбласти

#Область ЗаполнениеГоловногоКонтрагента

// Дополнить параметры формы создания головного контрагента
//
// Параметры:
//  ПараметрыСоздания	 - Структура - дополняемая структура параметров
//  ИсточникДанных		 - ДанныеФормыСтруктура, Структура - данные выбранной строки
//
Процедура ДополнитьПараметрыЗаполнитьГоловногоКонтрагента(ПараметрыСоздания, ИсточникДанных = Неопределено) Экспорт
	//++ Локализация
    ПараметрыСоздания.Вставить("ИННПлательщикаНДС", "");
    Если ИсточникДанных <> Неопределено Тогда
    	ПараметрыСоздания.ИННПлательщикаНДС = ИсточникДанных.ИННПлательщикаНДС;
    КонецЕсли;
	//-- Локализация	
КонецПроцедуры

#КонецОбласти

#Область ПрочиеСлужебныеМетоды

Процедура ОбновитьСтрокиИсторииНаименований(Знач ИсторияНаименований, ПереходКИсторииНаименования, ЦветГиперссылки) Экспорт
	
	ТекстКомандыИсторииНаименования = "";
	Если ИсторияНаименований.Количество() = 0 Тогда
		ТекстКомандыИсторииНаименования = НСтр("ru='установлено изначально';uk='встановлено від початку'");
	Иначе
		ИсторияНаименований.Сортировать("Период Убыв");
		ТекстКомандыИсторииНаименования = СтрШаблон(НСтр("ru='установлено с %1';uk='встановлено з %1'"), Формат(ИсторияНаименований[0].Период,"ДЛФ=D"));
	КонецЕсли;
	
	ПереходКИсторииНаименования = Новый ФорматированнаяСтрока(ТекстКомандыИсторииНаименования,,ЦветГиперссылки,, "ИсторияНаименований");

КонецПроцедуры

//++ Локализация
Функция РеквизитыОбъектаКонтрагента(Форма) Экспорт

	СтруктураРеквизитов = Новый Структура;
	СтруктураРеквизитов.Вставить("ЭтоФормаПомощника", СтрНайти(Форма.ИмяФормы, "ПомощникНового") > 0);
	СтруктураРеквизитов.Вставить("ЭтоФормаПартнера", Не СтрНайти(Форма.ИмяФормы, "Контрагенты") > 0);
	СтруктураРеквизитов.Вставить("ЭтоФормаКонтрагента", СтрНайти(Форма.ИмяФормы, "Контрагенты") > 0);
	
	Если СтруктураРеквизитов.ЭтоФормаПомощника Тогда
		СтруктураРеквизитов.Вставить("ЮрФизЛицо", ТипЮрФизЛицаКонтрагента(Форма.ЭтоКомпания, Форма.ВидКомпании));
        СтруктураРеквизитов.Вставить("ПлательщикНДС", Форма.ПлательщикНДС);
		СтруктураРеквизитов.Вставить("ИННПлательщикаНДС", Форма.ИННПлательщикаНДС);
		СтруктураРеквизитов.Вставить("ПутьИННПлательщикаНДС", "ИННПлательщикаНДС");
		СтруктураРеквизитов.Вставить("КодФилиала", Форма.КодФилиала);
		СтруктураРеквизитов.Вставить("ПутьКодФилиала", "КодФилиала");
		СтруктураРеквизитов.Вставить("КодПоЕДРПОУ", Форма.КодПоЕДРПОУ);
		СтруктураРеквизитов.Вставить("ПутьКодПоЕДРПОУ", "КодПоЕДРПОУ");
		СтруктураРеквизитов.Вставить("ОбособленноеПодразделение", Форма.ВидКомпании = 3);
		СтруктураРеквизитов.Вставить("ГоловнойКонтрагент", Форма.ГоловнойКонтрагент);
    ИначеЕсли СтруктураРеквизитов.ЭтоФормаПартнера Тогда
        СтруктураРеквизитов.Вставить("ЮрФизЛицо", Форма.ЮрФизЛицо);
        СтруктураРеквизитов.Вставить("ПлательщикНДС", Форма.ПлательщикНДС);
		СтруктураРеквизитов.Вставить("ИННПлательщикаНДС", Форма.ИННПлательщикаНДС);
		СтруктураРеквизитов.Вставить("ПутьИННПлательщикаНДС", "ИННПлательщикаНДС");
		СтруктураРеквизитов.Вставить("КодФилиала", Форма.КодФилиала);
		СтруктураРеквизитов.Вставить("ПутьКодФилиала", "КодФилиала");
		СтруктураРеквизитов.Вставить("КодПоЕДРПОУ", Форма.КодПоЕДРПОУ);
		СтруктураРеквизитов.Вставить("ПутьКодПоЕДРПОУ", "КодПоЕДРПОУ");
		СтруктураРеквизитов.Вставить("ОбособленноеПодразделение", Форма.ОбособленноеПодразделение);
		СтруктураРеквизитов.Вставить("ГоловнойКонтрагент", Форма.ГоловнойКонтрагент);
	Иначе
		Объект = Форма.Объект;
		СтруктураРеквизитов.Вставить("ЮрФизЛицо", Объект.ЮрФизЛицо);
        СтруктураРеквизитов.Вставить("ПлательщикНДС", Объект.ПлательщикНДС);
		СтруктураРеквизитов.Вставить("ИННПлательщикаНДС", Объект.ИННПлательщикаНДС);
		СтруктураРеквизитов.Вставить("ПутьИННПлательщикаНДС", "Объект.ИННПлательщикаНДС");
		СтруктураРеквизитов.Вставить("КодФилиала", Объект.КодФилиала);
		СтруктураРеквизитов.Вставить("ПутьКодФилиала", "Объект.КодФилиала");
		СтруктураРеквизитов.Вставить("КодПоЕДРПОУ", Объект.КодПоЕДРПОУ);
		СтруктураРеквизитов.Вставить("ПутьКодПоЕДРПОУ", "Объект.КодПоЕДРПОУ");
		СтруктураРеквизитов.Вставить("ОбособленноеПодразделение", Объект.ОбособленноеПодразделение);
		СтруктураРеквизитов.Вставить("ГоловнойКонтрагент", Объект.ГоловнойКонтрагент);
	КонецЕсли;
	
	Возврат СтруктураРеквизитов
	
КонецФункции


Процедура ОбновитьСтрокиИсторииПлательщикаНДС(Знач ИсторияПлательщикаНДС, ПереходКИсторииПлательщикаНДС, ЦветГиперссылки) Экспорт

	ТекстКомандыИсторииПлательщикаНДС = "";
	Если ИсторияПлательщикаНДС.Количество() = 0 Тогда
		ТекстКомандыИсторииПлательщикаНДС = НСтр("ru='установлен изначально';uk='встановлений від початку'");
	Иначе
	    ИсторияПлательщикаНДС.Сортировать("Период Убыв");
		ТекстКомандыИсторииПлательщикаНДС = СтрШаблон(НСтр("ru='установлен с %1';uk='встановлений з %1'"), Формат(ИсторияПлательщикаНДС[0].Период,"ДЛФ=D"));
	КонецЕсли;
	
	ПереходКИсторииПлательщикаНДС = Новый ФорматированнаяСтрока(ТекстКомандыИсторииПлательщикаНДС,,ЦветГиперссылки,, "ИсторияПлательщикаНДС");
	
КонецПроцедуры



// Устанавливает видимость элементов предупреждения, что не заполнен головной контрагент.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - форма, для которой выполняются действия.
//  ОбособленноеПодразделение - Булево - признак обособленного контрагента.
//  ГоловнойКонтрагент - Справочник.Контрагенты - значение головного контрагент.
//
Процедура УстановитьВидимостьПредупрежденийГоловногоКонтрагента(Форма, Знач ОбособленноеПодразделение, Знач ГоловнойКонтрагент, Знач ИНН) Экспорт
	
	ВидимостьЭлементов = Ложь;
	Если ОбособленноеПодразделение Тогда
		ВидимостьЭлементов = Не ЗначениеЗаполнено(ГоловнойКонтрагент);
	КонецЕсли;
	
	МассивЭлементов = Новый Массив;
	МассивЭлементов.Добавить("ЗаполнитьГоловногоКонтрагента");
	МассивЭлементов.Добавить("КартинкаПредупреждениеГоловнойКонтрагент");
	МассивЭлементов.Добавить("ПредупреждениеГоловнойКонтрагент");
	
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементовФормы(
		Форма.Элементы, МассивЭлементов, "Видимость", ВидимостьЭлементов);
		
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы, "ЗаполнитьГоловногоКонтрагента", "Доступность", Не ПустаяСтрока(ИНН)); 
	
КонецПроцедуры

// Формирует текст предупреждения головного контрагента
// 
// Параметры:
// 	СписокВыбораГоловногоКонтрагента - СписокЗначений - список выбора
// 	ИНН - Строка - инн контрагента
// Возвращаемое значение:
// 	Строка - текст предупреждения
//
Функция ТекстПредупрежденияГоловногоКонтрагента(СписокВыбораГоловногоКонтрагента, ИНН) Экспорт
	
	ТекстПредупреждения = "";
	Если НЕ ЗначениеЗаполнено(ИНН) Тогда
		ТекстПредупреждения = НСтр("ru='Не задан ИНН: невозможно установить головного контрагента.';uk='Не заданий ІПН: неможливо встановити головного контрагента.'");
	ИначеЕсли СписокВыбораГоловногоКонтрагента.Количество() = 0 Тогда
		ТекстПредупреждения = НСтр("ru='Не найдены головные контрагенты по указанному ИНН.';uk='Не знайдені головні контрагенти за вказаному ІПН.'")
	КонецЕсли;
	
	Возврат ТекстПредупреждения;
	
КонецФункции

//-- Локализация

#КонецОбласти

#КонецОбласти
