
#Область ПрограммныйИнтерфейс

#Область ОбщиеПроцедурыИФункцииФормЭлементаСправочникаПартнеры

// Определяет необходимость задания вопроса перед закрытием формы
// 
// Параметры:
// 	Форма - ФормаКлиентскогоПриложения - проверяемая форма
// Возвращаемое значение:
// 	Булево - Признак необходимости вопроса
//
Функция НеобходимостьВопросаПередЗакрытием(Форма) Экспорт
	НеобходимостьВопроса = Ложь;
	//++ Локализация
	Элементы = Форма.Элементы;
	
	Если Элементы.СтраницыПомощника.ТекущаяСтраница = Элементы.СтраницаНайдено И Форма.ДействиеПоРезультатамНайдено = 0 Тогда
		НеобходимостьВопроса = Ложь;
	ИначеЕсли Элементы.СтраницыПомощника.ТекущаяСтраница <> Элементы.СтраницаПервичнаяИнформация Тогда
		НеобходимостьВопроса = Истина;
	Иначе
		Если Форма.ЭтоКомпания = 0 Тогда
			Если Форма.УказыватьЮридическиеРеквизиты И (Форма.ВидКомпании = 0 Или Форма.ВидКомпании = 3) Тогда
                Если ЗначениеЗаполнено(Форма.НаименованиеКонтрагента) ИЛИ ЗначениеЗаполнено(Форма.ИННПлательщикаНДС) ИЛИ ЗначениеЗаполнено(Форма.КодФилиала) ИЛИ ЗначениеЗаполнено(Форма.КодПоЕДРПОУ) Тогда    
					НеобходимостьВопроса = Истина;
				КонецЕсли;
			ИначеЕсли Форма.УказыватьЮридическиеРеквизиты И Форма.ВидКомпании = 2 Тогда
				Если ЗначениеЗаполнено(Форма.ФамилияКонтрагента) ИЛИ ЗначениеЗаполнено(Форма.ИмяКонтрагента) ИЛИ ЗначениеЗаполнено(Форма.ОтчествоКонтрагента) ИЛИ ЗначениеЗаполнено(Форма.ИННПлательщикаНДС) ИЛИ ЗначениеЗаполнено(Форма.КодПоЕДРПОУ) Тогда
					НеобходимостьВопроса = Истина;
				КонецЕсли;
			КонецЕсли;
        Иначе
            Если ЗначениеЗаполнено(Форма.ИННПлательщикаНДС) ИЛИ ЗначениеЗаполнено(Форма.КодПоЕДРПОУ) Тогда     
				НеобходимостьВопроса = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	//-- Локализация
	Возврат НеобходимостьВопроса;
	
КонецФункции

// Проверяет сведения головного контрагента
// 
// Параметры:
// 	Форма - ФормаКлиентскогоПриложения - форма контрагента
// 	Отказ - Булево - признак отказа
Процедура СведенияГоловногоКонтрагентаЗаполненыНеправильно(Форма, Отказ) Экспорт
	//++ Локализация
	Если Форма.ВыбратьГоловногоКонтрагента = 1 Тогда
        Если ЗначениеЗаполнено(Форма.ИННПлательщикаНДС) Тогда    
			Если ПартнерыИКонтрагентыЛокализацияВызовСервера.ИННПлательщикаНДСКодФилиалаГоловногоКонтрагентаИспользуютсяВИнформационнойБазе(Форма.ИННПлательщикаНДС, Форма.КодФилиалаГоловногоКонтрагента) Тогда
				Отказ = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	//-- Локализация
КонецПроцедуры

// Проверяет первичную информацию на корректное заполнение
// 
// Параметры:
// 	Форма - ФормаКлиентскогоПриложения - форма обработчика
// 	Отказ - Булево - признак отказа обработки
//
Процедура ПервичнаяИнформацияЗаполненаНеправильно(Форма, Отказ) Экспорт
	//++ Локализация
	Если Форма.УказыватьЮридическиеРеквизиты Тогда
		Если Форма.ПлательщикНДС Тогда
			Если ПустаяСтрока(Форма.ИННПлательщикаНДС) Тогда
				ПартнерыИКонтрагентыКлиент.ВывестиСообщениеПользователю(НСтр("ru='Не указано значение ИНН плательщика НДС';uk='Не вказано ІПН платника ПДВ'"), Форма.ИспользуютсяТолькоПартнеры, "ИННПлательщикаНДС");
				Отказ = Истина;
			КонецЕсли;
			
			Если ПустаяСтрока(Форма.ИННПлательщикаНДС) И Не ПустаяСтрока(Форма.КодФилиала) Тогда
				ПартнерыИКонтрагентыКлиент.ВывестиСообщениеПользователю(НСтр("ru='Указан код филиала, но не указан ИНН плательщика НДС';uk='Зазначений код філії, але не зазначений ІПН платника ПДВ'"), Форма.ИспользуютсяТолькоПартнеры, "ИННПлательщикаНДС");
				Отказ = Истина;
			КонецЕсли;
		КонецЕсли; 
	КонецЕсли;
	//-- Локализация
КонецПроцедуры

// Проверяет необходимость
// 
// Параметры:
// 	Форма
// Возвращаемое значение:
// 	Булево - необходим поиск
//
Функция НеобходимПоискНепривязанныхОбособленныхПодразделений(Форма) Экспорт
	
	НеобходимПоиск = Ложь;
	//++ Локализация
    НеобходимПоиск = ЗначениеЗаполнено(Форма.ИННПлательщикаНДС);
	//-- Локализация
	Возврат НеобходимПоиск
	
КонецФункции

#КонецОбласти

#Область ОбщиеПроцедурыИФункцииФормЭлементаСправочникаКонтрагенты

//++ Локализация
//-- Локализация


#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#Область ОбработчикиСобытийФормы_Контрагенты

// Обработчик события ПередЗаписью формы элемента справочника Контрагенты
//
// Параметры:
//  Отказ           - Булево - признак отказа от создания формы.
//  ПараметрыЗаписи - Структура - структура, содержащая параметры записи.
//  Форма           - ФормаКлиентскогоПриложения - форма, для которой выполняется обработчик.
//
Процедура ПередЗаписьюКонтрагент(Отказ, ПараметрыЗаписи, Форма) Экспорт
	//++ Локализация
	РеквизитыКонтрагента = ПартнерыИКонтрагентыЛокализацияКлиентСервер.РеквизитыОбъектаКонтрагента(Форма);
	ЮрФизЛицо = РеквизитыКонтрагента.ЮрФизЛицо;
	ЭтоФормаПартнера = РеквизитыКонтрагента.ЭтоФормаПартнера;
	
	Объект = Форма.Объект;
    Если ЗначениеЗаполнено(РеквизитыКонтрагента.КодПоЕДРПОУ) 
        И (Объект.ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ЮрЛицоНеРезидент"))Тогда
		Если ЭтоФормаПартнера Тогда
			Форма.КодПоЕДРПОУ = "";
		Иначе
			Объект.КодПоЕДРПОУ = "";
		КонецЕсли;
    КонецЕсли;
	
    
	//-- Локализация
КонецПроцедуры

// Обработчик события ПослеЗаписи формы элемента справочника Контрагенты
//
// Параметры:
//  см. описание платформенного метода ПослеЗаписи
//
Процедура ПослеЗаписиКонтрагент(ПараметрыЗаписи, Форма) Экспорт
	//++ Локализация
	//-- Локализация
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы_Контрагент

Процедура ОбработкаНавигационнойСсылкиФормы_Контрагент(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка, Форма) Экспорт
	//++ Локализация
	СтандартнаяОбработка = Ложь;
    
    Если НавигационнаяСсылкаФорматированнойСтроки = "ИсторияПлательщикаНДС" Тогда    
		
		РеквизитыКонтрагента = ПартнерыИКонтрагентыЛокализацияКлиентСервер.РеквизитыОбъектаКонтрагента(Форма);
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ТолькоПросмотр", Форма.ТолькоПросмотр);
        Если РеквизитыКонтрагента.ЭтоФормаПартнера Тогда
            ПараметрыФормы.Вставить("ТекущийПлательщикНДС", Форма.ПлательщикНДС);
			ПараметрыФормы.Вставить("ТекущийИННПлательщикаНДС", Форма.ИННПлательщикаНДС);
            ПараметрыФормы.Вставить("ТекущийКодФилиала", Форма.КодФилиала);
			ПараметрыФормы.Вставить("ИсторияПлательщикаНДС", Форма.ИсторияПлательщикаНДС);
        Иначе
            ПараметрыФормы.Вставить("ТекущийПлательщикНДС", Форма.Объект.ПлательщикНДС);
			ПараметрыФормы.Вставить("ТекущийИННПлательщикаНДС", Форма.Объект.ИННПлательщикаНДС);
            ПараметрыФормы.Вставить("ТекущийКодФилиала", Форма.Объект.КодФилиала);
			ПараметрыФормы.Вставить("ИсторияПлательщикаНДС", Форма.Объект.ИсторияПлательщикаНДС);
        КонецЕсли;
		ОповещениеОЗакрытии = Новый ОписаниеОповещения("ИсторияПлательщикаНДСПослеЗакрытия", ЭтотОбъект, Новый Структура("Форма, ИмяЭлемента", Форма, Элемент.Имя));
		ОткрытьФорму("Справочник.Контрагенты.Форма.РедактированиеИсторииПлательщикаНДС", ПараметрыФормы, ЭтотОбъект,,,,ОповещениеОЗакрытии);
	КонецЕсли;
    
	Если НавигационнаяСсылкаФорматированнойСтроки = "ЗагрузитьИзФайла" Тогда
	  	
	  	ТекстПредложения = НСтр("ru='Для загрузки из файла необходимо""
|  ""установить расширение для работы с файлами.'
|;uk='Для завантаження з файлу необхідно ""
| ""встановити розширення для роботи з файлами.'");
	  	
	  	ОписаниеОповещения = Новый ОписаниеОповещения(
	  		"ПодключеноРасширениеРаботыСФайлами",
	  		ЭтотОбъект,
	  		Новый Структура("Элемент, Форма", Элемент, Форма));
	      
	  	ФайловаяСистемаКлиент.ПодключитьРасширениеДляРаботыСФайлами(
	  		ОписаниеОповещения,
	  		ТекстПредложения,
	  		Ложь);
	  	
    КонецЕсли;
	//-- Локализация
КонецПроцедуры

Процедура ПриИзмененииРеквизита_Контрагент(Элемент, Форма) Экспорт
	//++ Локализация
	ЭтоФормаПомощника = СтрНайти(Форма.ИмяФормы, "ПомощникНового") > 0;
    Если ЭтоФормаПомощника Тогда
        Если Элемент.Имя = "ИННПлательщикаНДС" Тогда
         	ИННПлательщикаНДСПриИзменении_ПомощникНового(Элемент, Форма);
        КонецЕсли;
		Если Элемент.Имя = "ИННПлательщикаНДСГоловногоКонтрагента" Тогда
		  	ИННПлательщикаНДСГоловногоКонтрагентаПриИзменении_ПомощникНового(Элемент, Форма);
        КонецЕсли;
    Иначе
		Если Элемент.Имя = "ГоловнойКонтрагент" Тогда
			ГоловнойКонтрагентПриИзменении(Элемент, Форма);
        КонецЕсли;
	КонецЕсли;
	//-- Локализация
КонецПроцедуры

Процедура ОкончаниеВводаТекста_Контрагент(Элемент, Текст, ДанныеВыбора, Параметры, СтандартнаяОбработка, Форма) Экспорт
	//++ Локализация
	ЭтоФормаПомощника = СтрНайти(Форма.ИмяФормы, "ПомощникНового") > 0;
    Если ЭтоФормаПомощника Тогда
		Если Элемент.Имя = "КодПоЕДРПОУ" ИЛИ Элемент.Имя = "КодПоЕДРПОУФЛ" Тогда
			КодПоЕДРПОУОкончаниеВводаТекста_ПомощникНового(Элемент,
				Текст,
				ДанныеВыбора,
				Параметры,
				СтандартнаяОбработка,
				Форма);
		КонецЕсли;
		Если Элемент.Имя = "КодПоЕДРПОУГоловногоКонтрагента" Тогда
			КодПоЕДРПОУГоловногоКонтрагентаОкончаниеВводаТекста_ПомощникНового(Элемент,
				Текст,
				ДанныеВыбора,
				Параметры,
				СтандартнаяОбработка,
				Форма);
        КонецЕсли;
		Если Элемент.Имя = "ИННПлательщикаНДС" Тогда
			ИННПлательщикаНДСОкончаниеВводаТекста_ПомощникНового(Элемент,
				Текст,
				ДанныеВыбора,
				Параметры,
				СтандартнаяОбработка,
				Форма);
        КонецЕсли;
		Если Элемент.Имя = "ИННПлательщикаНДСГоловногоКонтрагента" Тогда
			ИННПлательщикаНДСГоловногоКонтрагентаОкончаниеВводаТекста_ПомощникНового(Элемент,
				Текст,
				ДанныеВыбора,
				Параметры,
				СтандартнаяОбработка,
				Форма);
		КонецЕсли;
    Иначе
		Если Элемент.Имя = "КодПоЕДРПОУ" Тогда
			КодПоЕДРПОУОкончаниеВводаТекста(Элемент,
				Текст,
				ДанныеВыбора,
				Параметры,
				СтандартнаяОбработка,
				Форма);
        КонецЕсли;
        
		Если Элемент.Имя = "ИННПлательщикаНДС" Тогда
			ИННПлательщикаНДСОкончаниеВводаТекста(Элемент,
				Текст,
				ДанныеВыбора,
				Параметры,
				СтандартнаяОбработка,
				Форма);
        КонецЕсли;
	КонецЕсли;
	//-- Локализация
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы_Контрагенты

Процедура ВыполнитьКомандуЛокализации(Команда, Форма) Экспорт
	//++Локализация
	ЭтоФормаПомощника = СтрНайти(Форма.ИмяФормы, "ПомощникНового") > 0;
	Если ЭтоФормаПомощника Тогда
		Если Команда.Имя = "ЗаполнитьПоЕГРПОУ" Тогда
			Пактум_Клиент.ЗаполнитьПоЕГРПОУ(Команда, Форма);
		КонецЕсли;
	Иначе
		Если Команда.Имя = "ЗаполнитьГоловногоКонтрагента" Тогда
			ЗаполнитьГоловногоКонтрагента(Команда, Форма);
		КонецЕсли;
		Если Команда.Имя = "ЗаполнитьПоЕГРПОУ" Тогда
			Пактум_Клиент.ЗаполнитьПоЕГРПОУ(Команда, Форма);
		КонецЕсли;
	КонецЕсли;
	//-- Локализация	
КонецПроцедуры

#КонецОбласти

#Область ПрочиеСлужебныеМетоды

Процедура ДополнитьДанныеИсторияНаименованияИП(СтрокаНаименование, ДанныеЗаполнения, НаименованиеСокращенное, НаименованиеПолное) Экспорт
	//++ Локализация

	ФИО = СтрокаНаименование.Фамилия + " " + СтрокаНаименование.Имя + " " + СтрокаНаименование.Отчество;
	ЯзыкЗаполнения = МультиязычностьУкр.КодЯзыкаИнформационнойБазы();
	НаименованиеПолное = СтрШаблон(НСтр("ru='Физическое лицо - предприниматель %1';uk= 'Фізична особа - підприємець %1'", ЯзыкЗаполнения), ФИО);
	НаименованиеСокращенное = СтрШаблон(НСтр("ru='ФЛП %1';uk= 'ФОП %1'", ЯзыкЗаполнения), ФизическиеЛицаКлиентСервер.ФамилияИнициалы(ФИО));
	ДанныеЗаполнения.Вставить("ФамилияИП", СтрокаНаименование.Фамилия);
	ДанныеЗаполнения.Вставить("ИмяИП", СтрокаНаименование.Имя);
	ДанныеЗаполнения.Вставить("ОтчествоИП", СтрокаНаименование.Отчество);
	//-- Локализация
КонецПроцедуры
 
//++ Локализация
//-- Локализация

#КонецОбласти

//++ Локализация
//-- Локализация

//++ Локализация
//-- Локализация
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

//++ Локализация
//-- Локализация

#Область ОбработчикиСобытийЭлементовШапкиФормы_Контрагент_Служебные
//++ Локализация
Процедура ГоловнойКонтрагентПриИзменении(Элемент, Форма) 
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	РеквизитыКонтрагента = ПартнерыИКонтрагентыЛокализацияКлиентСервер.РеквизитыОбъектаКонтрагента(Форма);
    
    Если ЗначениеЗаполнено(РеквизитыКонтрагента.ГоловнойКонтрагент) Тогда
		ИННПлательщикаНДС = ПартнерыИКонтрагентыЛокализацияВызовСервера.ЗначениеРеквизитаПартнеры(РеквизитыКонтрагента.ГоловнойКонтрагент, "ИННПлательщикаНДС");
		Если РеквизитыКонтрагента.ЭтоФормаПартнера Тогда
			Форма.ИННПлательщикаНДС = ИННПлательщикаНДС;
		Иначе
			Объект.ИННПлательщикаНДС = ИННПлательщикаНДС;
        КонецЕсли;
	КонецЕсли;
	
	ПартнерыИКонтрагентыЛокализацияКлиентСервер.УстановитьВидимостьПредупрежденийГоловногоКонтрагента(
		Форма,
		РеквизитыКонтрагента.ОбособленноеПодразделение,
		РеквизитыКонтрагента.ГоловнойКонтрагент,
        РеквизитыКонтрагента.ИННПлательщикаНДС);
	
КонецПроцедуры


Процедура КодПоЕДРПОУОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, Параметры, СтандартнаяОбработка, Форма)
	
	Перем ТекстСообщения;
	ОчиститьСообщения();
	
	РеквизитыКонтрагента = ПартнерыИКонтрагентыЛокализацияКлиентСервер.РеквизитыОбъектаКонтрагента(Форма);
	
	ЮрФизЛицо = РеквизитыКонтрагента.ЮрФизЛицо;
	
	ЭтоЮрЛицо = ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ЮрЛицо")
		ИЛИ ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ЮрЛицоНеРезидент");
	
	Если НЕ ПустаяСтрока(Текст) 
		И НЕ РегламентированныеДанныеКлиентСервер.КодПоЕДРПОУСоответствуетТребованиям(Текст,
			ЭтоЮрЛицо, 
			ТекстСообщения) Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстСообщения,,
			РеквизитыКонтрагента.ПутьКодПоЕДРПОУ,,);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ИННПлательщикаНДСОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, Параметры, СтандартнаяОбработка, Форма)
	
	Перем ТекстСообщения;
	ОчиститьСообщения();
	
	РеквизитыКонтрагента = ПартнерыИКонтрагентыЛокализацияКлиентСервер.РеквизитыОбъектаКонтрагента(Форма);
	
	ЮрФизЛицо = РеквизитыКонтрагента.ЮрФизЛицо;
	
	ЭтоЮрЛицо = ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ЮрЛицо")
		ИЛИ ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ЮрЛицоНеРезидент");
	
	Если НЕ ПустаяСтрока(Текст) 
		И НЕ РегламентированныеДанныеКлиентСервер.ИННПлательщикаНДССоответствуетТребованиям(Текст,
			ЭтоЮрЛицо, 
			ТекстСообщения) Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстСообщения,,
			РеквизитыКонтрагента.ПутьИННПлательщикаНДС,,);
		
	КонецЕсли;
	
КонецПроцедуры


Процедура ИсторияПлательщикаНДСПослеЗакрытия(Результат, ДополнительныеПараметры) Экспорт

	Перем ТекстСообщения;
	
	ОчиститьСообщения();
	
	Если ТипЗнч(Результат) = Тип("Структура") 
        И Результат.Свойство("ИсторияПлательщикаНДС") Тогда
		
		Форма = ДополнительныеПараметры.Форма;
		Объект = Форма.Объект;
		РеквизитыКонтрагента = ПартнерыИКонтрагентыЛокализацияКлиентСервер.РеквизитыОбъектаКонтрагента(Форма);
		
		Форма.Модифицированность = Истина;
		НоваяИсторияПлательщикаНДС = Результат.ИсторияПлательщикаНДС;
		НоваяИсторияПлательщикаНДС.Сортировать("Период");
		
		Если РеквизитыКонтрагента.ЭтоФормаПартнера Тогда
            Форма.ИсторияПлательщикаНДС.Очистить();
		Иначе
            Объект.ИсторияПлательщикаНДС.Очистить();
		КонецЕсли;
		
        Если НоваяИсторияПлательщикаНДС.Количество() = 0 Тогда    
            
            НовыйТекущийПлательщикНДС   = "";
            НовыйТекущийИННПлательщикаНДС   = "";
            НовыйТекущийКодФилиала          = "";
			
		Иначе
			
            Если НоваяИсторияПлательщикаНДС.Количество() > 1 Тогда        
                Для Каждого СтрокаИстории Из НоваяИсторияПлательщикаНДС Цикл    
                    
					Если РеквизитыКонтрагента.ЭтоФормаПартнера Тогда
                        ЗаписьИстории = Форма.ИсторияПлательщикаНДС.Добавить();
					Иначе
                        ЗаписьИстории = Объект.ИсторияПлательщикаНДС.Добавить();
					КонецЕсли;
					ЗаполнитьЗначенияСвойств(ЗаписьИстории, СтрокаИстории);
				КонецЦикла;
			КонецЕсли;
            
            НовыйТекущийПлательщикНДС = НоваяИсторияПлательщикаНДС[НоваяИсторияПлательщикаНДС.Количество()-1].ПлательщикНДС;
            НовыйТекущийИННПлательщикаНДС = НоваяИсторияПлательщикаНДС[НоваяИсторияПлательщикаНДС.Количество()-1].ИННПлательщикаНДС;
            НовыйТекущийКодФилиала = НоваяИсторияПлательщикаНДС[НоваяИсторияПлательщикаНДС.Количество()-1].КодФилиала;
		
		КонецЕсли;
        
        Если НовыйТекущийПлательщикНДС <> РеквизитыКонтрагента.ПлательщикНДС ИЛИ НовыйТекущийИННПлательщикаНДС <> РеквизитыКонтрагента.ИННПлательщикаНДС ИЛИ НовыйТекущийКодФилиала <> РеквизитыКонтрагента.КодФилиала Тогда    
		
			Если РеквизитыКонтрагента.ЭтоФормаПартнера Тогда
                Форма.ПлательщикНДС = НовыйТекущийПлательщикНДС;
                Форма.ИННПлательщикаНДС = НовыйТекущийИННПлательщикаНДС;
                Форма.КодФилиала = НовыйТекущийКодФилиала;
            Иначе
                Объект.ПлательщикНДС = НовыйТекущийПлательщикНДС;
                Объект.ИННПлательщикаНДС = НовыйТекущийИННПлательщикаНДС;
                Объект.КодФилиала = НовыйТекущийКодФилиала;
			КонецЕсли;
            
			Если НЕ ПустаяСтрока(НовыйТекущийИННПлательщикаНДС)
				И НЕ РегламентированныеДанныеКлиентСервер.ИННПлательщикаНДССоответствуетТребованиям(НовыйТекущийИННПлательщикаНДС, 
					РеквизитыКонтрагента.ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ЮрЛицо") ИЛИ РеквизитыКонтрагента.ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ЮрЛицоНеРезидент"),
					ТекстСообщения) Тогда
			
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					ТекстСообщения,
					,
                    РеквизитыКонтрагента.ПутьИННПлательщикаНДС
                    ,
                    ,
                );
		
            КонецЕсли;
			
			ПартнерыИКонтрагентыЛокализацияКлиентСервер.УправлениеДоступностьюКонтрагент(Форма);
			
			ОбщегоНазначенияУТКлиент.ПродолжитьИзменениеРеквизита(Форма, ДополнительныеПараметры.ИмяЭлемента, Истина);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

//-- Локализация
#КонецОбласти

#Область ОбработчикиКомандФормы_Контрагенты_Служебные
//++ Локализация

Процедура ЗаполнитьГоловногоКонтрагента(Команда, Форма)
	
	ДопПараметры = Новый Структура("Форма", Форма);
	Оповещение = Новый ОписаниеОповещения("ЗаполнитьГоловногоКонтрагентаЗавершение", ЭтотОбъект, ДопПараметры);
	
	РеквизитыКонтрагента = ПартнерыИКонтрагентыЛокализацияКлиентСервер.РеквизитыОбъектаКонтрагента(Форма);
    ИНН = РеквизитыКонтрагента.ИННПлательщикаНДС;
	Если РеквизитыКонтрагента.ЭтоФормаКонтрагента Тогда
		КонтрагентПартнера = Форма.Объект.Ссылка;
		Партнер = Форма.Объект.Партнер;
	Иначе
		КонтрагентПартнера = Форма.КонтрагентПартнера;
		Партнер = Форма.Объект.Ссылка;
	КонецЕсли;
	Если КоличествоВозможныхГоловныхКонтрагентов(ИНН, КонтрагентПартнера) = 0 Тогда
		
		ПараметрыФормы = Новый Структура;
		ЗначенияЗаполнения = Новый Структура;
		
        ЗначенияЗаполнения.Вставить("ИННПлательщикаНДС",       ИНН);
		ЗначенияЗаполнения.Вставить("ЮрФизЛицо", ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ЮрЛицо"));
		
		ПараметрыФормы.Вставить("ЗначенияЗаполнения",              ЗначенияЗаполнения);
		ПараметрыФормы.Вставить("ОснованиеОбособленныйКонтрагент", КонтрагентПартнера);
		
		ОткрытьФорму("Справочник.Контрагенты.Форма.ФормаЭлемента", ПараметрыФормы,
			Форма, , , , Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
	Иначе
	
		ПараметрыЗаполнения = Новый Структура;
		ПараметрыЗаполнения.Вставить("Контрагент", КонтрагентПартнера);
        ПараметрыЗаполнения.Вставить("ИННПлательщикаНДС",        ИНН);
		ПараметрыЗаполнения.Вставить("Партнер",    Партнер);
		ПараметрыЗаполнения.Вставить("ИспользоватьПартнеровКакКонтрагентов", Ложь);
		
		ПартнерыИКонтрагентыКлиент.ЗаполнитьГоловногоКонтрагента(Форма, ПараметрыЗаполнения, Ложь, Оповещение);
		
	КонецЕсли
	
КонецПроцедуры

Функция КоличествоВозможныхГоловныхКонтрагентов(ИНН, Ссылка)
	Возврат ПартнерыИКонтрагентыЛокализацияВызовСервера.КоличествоВозможныхГоловныхКонтрагентов(ИНН, Ссылка);
КонецФункции

Процедура ЗаполнитьГоловногоКонтрагентаЗавершение(ВыбранноеЗначение, ДополнительныеПараметры) Экспорт
	
	Если ВыбранноеЗначение <> Неопределено Тогда
		Объект = ДополнительныеПараметры.Форма.Объект;
		Форма = ДополнительныеПараметры.Форма;
		РеквизитыКонтрагента = ПартнерыИКонтрагентыЛокализацияКлиентСервер.РеквизитыОбъектаКонтрагента(Форма);
		Если РеквизитыКонтрагента.ЭтоФормаПартнера Тогда
			Форма.ГоловнойКонтрагент = ВыбранноеЗначение;
		Иначе
			Объект.ГоловнойКонтрагент = ВыбранноеЗначение;
		КонецЕсли;
		Форма.Модифицированность = Истина;
		ОбщегоНазначенияУТКлиент.ПродолжитьИзменениеРеквизита(Форма, "ГоловнойКонтрагент");
	КонецЕсли;
	
КонецПроцедуры

//-- Локализация
#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы_ПомощникНового_Служебные

//++ Локализация

Процедура ИННПлательщикаНДСПриИзменении_ПомощникНового(Элемент, Форма)    
	
	Форма.ОтключитьОтметкуНезаполненного();
	
КонецПроцедуры


Процедура ИННПлательщикаНДСГоловногоКонтрагентаПриИзменении_ПомощникНового(Элемент, Форма)    
	ПартнерыИКонтрагентыЛокализацияКлиентСервер.УправлениеДоступностьюГоловнойКонтрагент(Форма);
КонецПроцедуры


Процедура КодПоЕДРПОУОкончаниеВводаТекста_ПомощникНового(Элемент, Текст, ДанныеВыбора, Параметры, СтандартнаяОбработка, Форма)
	Если Форма.УказыватьЮридическиеРеквизиты И Форма.ЭтоКомпания = 0 И Форма.ВидКомпании <> 1 И Не ПустаяСтрока(Текст) Тогда
		ОчиститьСообщения();
		ТекстСообщения = "";
		Если НЕ РегламентированныеДанныеКлиентСервер.КодПоЕДРПОУСоответствуетТребованиям(Текст, 
				?(Форма.ЭтоКомпания = 0, ?(Форма.ВидКомпании <> 2, Истина, Ложь), Ложь),ТекстСообщения) Тогда
			ПартнерыИКонтрагентыКлиент.ВывестиСообщениеПользователю(ТекстСообщения, Форма.ИспользуютсяТолькоПартнеры, Элемент.Имя);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура КодПоЕДРПОУГоловногоКонтрагентаОкончаниеВводаТекста_ПомощникНового(Элемент, Текст, ДанныеВыбора, Параметры, СтандартнаяОбработка, Форма)
	
	ОчиститьСообщения();
	ТекстСообщения = "";
	Если НЕ РегламентированныеДанныеКлиентСервер.КодПоЕДРПОУСоответствуетТребованиям(Текст, Истина,ТекстСообщения) Тогда
		ПартнерыИКонтрагентыКлиент.ВывестиСообщениеПользователю(ТекстСообщения, Форма.ИспользуютсяТолькоПартнеры, "КодПоЕДРПОУГоловногоКонтрагента");
    КонецЕсли;
    
КонецПроцедуры

Процедура ИННПлательщикаНДСОкончаниеВводаТекста_ПомощникНового(Элемент, Текст, ДанныеВыбора, Параметры, СтандартнаяОбработка, Форма)
	
	Если Форма.УказыватьЮридическиеРеквизиты И (Форма.ЭтоКомпания = 0 И Форма.ВидКомпании <> 1) И Форма.ПлательщикНДС И (НЕ ПустаяСтрока(Текст)) Тогда	
		ОчиститьСообщения();
		ТекстСообщения = "";
		Если НЕ РегламентированныеДанныеКлиентСервер.ИННПлательщикаНДССоответствуетТребованиям(Текст, 	
			?(Форма.ЭтоКомпания = 0, ?(Форма.ВидКомпании = 0, Истина, Ложь), Ложь), ТекстСообщения) Тогда
			
			ПартнерыИКонтрагентыКлиент.ВывестиСообщениеПользователю(ТекстСообщения, Форма.ИспользуютсяТолькоПартнеры, "ИННПлательщикаНДС");
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ИННПлательщикаНДСГоловногоКонтрагентаОкончаниеВводаТекста_ПомощникНового(Элемент, Текст, ДанныеВыбора, Параметры, СтандартнаяОбработка, Форма)
	
    ОчиститьСообщения();
    ТекстСообщения = "";
    Если НЕ РегламентированныеДанныеКлиентСервер.ИННПлательщикаНДССоответствуетТребованиям(Текст, Истина, ТекстСообщения) Тогда
        ПартнерыИКонтрагентыКлиент.ВывестиСообщениеПользователю(ТекстСообщения, Форма.ИспользуютсяТолькоПартнеры, "ИННПлательщикаНДСГоловногоКонтрагента");
    КонецЕсли;
	
КонецПроцедуры


Процедура ПодключеноРасширениеРаботыСФайлами(Знач РасширениеПодключено, Знач ДополнительныеПараметры) Экспорт
	
	Если РасширениеПодключено <> Истина Тогда
		Возврат;
	КонецЕсли;
	
	ДекорацияПервичнаяИнформацияЗагрузитьНажатие(ДополнительныеПараметры.Элемент, ДополнительныеПараметры.Форма);
	
КонецПроцедуры

Процедура ДекорацияПервичнаяИнформацияЗагрузитьНажатие(Элемент, Форма)
	
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогОткрытияФайла.Фильтр = НСтр("ru='XML файл';uk='XML файл'")+"(*.xml)|*.xml";
	ДиалогОткрытияФайла.МножественныйВыбор = Ложь;
	ДиалогОткрытияФайла.Заголовок = НСтр("ru='Выберите файл';uk='Виберіть файл'");
	ПараметрыОповещения = Новый Структура("Форма, ИмяЭлемента", Форма, Элемент.Имя);
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ДекорацияПервичнаяИнформацияЗагрузитьНажатиеВыборФайла",
		ЭтотОбъект,
		ПараметрыОповещения);
	
	ДиалогОткрытияФайла.Показать(ОписаниеОповещения);
	
КонецПроцедуры

Процедура ДекорацияПервичнаяИнформацияЗагрузитьНажатиеВыборФайла(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныеФайлы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ОчиститьСообщения();
	
	ФайлЗагрузки = ВыбранныеФайлы[0];
	
	Оповещение = Новый ОписаниеОповещения("ПослеСозданияДвоичныхДанныхИзФайла", ЭтотОбъект, ДополнительныеПараметры);
	НачатьСозданиеДвоичныхДанныхИзФайла(Оповещение, ФайлЗагрузки);
	
КонецПроцедуры

Процедура ПослеСозданияДвоичныхДанныхИзФайла(ДвоичныеДанные, ДополнительныеПараметры) Экспорт
	
	СсылкаНаФайл = ПоместитьВоВременноеХранилище(ДвоичныеДанные);
	ЕстьОшибкаЧтенияФайла = Ложь;
	ПараметрыОбработки = Новый Структура("СсылкаНаФайл, ЕстьОшибкаЧтенияФайла", СсылкаНаФайл, ЕстьОшибкаЧтенияФайла);
	ОбщегоНазначенияУТКлиент.ПродолжитьВыполнениеКоманды(
		ДополнительныеПараметры.Форма, "РазобратьФайлНаСервере", Истина, ПараметрыОбработки);
	
КонецПроцедуры

//-- Локализация

#КонецОбласти

#КонецОбласти
