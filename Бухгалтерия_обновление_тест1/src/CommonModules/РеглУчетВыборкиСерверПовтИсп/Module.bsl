//////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// В модуле описаны контекстные запросы данных из оперативных документов в формате (протоколе), необходимом
// для проведения по регламентированному учету (по регистру бухгалтерии Хозрасчетный).
//
// Экспорт в служебных процедурах и функциях указан для включения повторного использования.
//
//////////////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Возвращает параметры учетной политики, значимые для заполнения сумм НУ, ПР, ВР в проводках.
//
// Параметры:
// 	Организация - СправочникСсылка.Организации - Организация, для которой получаются параметры учетной политики
// 	Период - Дата - Период действия учетной политики.
// 
// Возвращаемое значение:
// 	 Структура - значения параметров учетной политики:
// 		* ПлательщикНалогаНаПрибыль - Булево - Признак, что организация является плательщиком налога на прибыль
//
Функция ДанныеУчетнойПолитики(Организация, Период) Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("ПлательщикНалогаНаПрибыль");
	
	Если УчетнаяПолитика.Существует(Организация, Период) Тогда
		Результат.ПлательщикНалогаНаПрибыль             =
			УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Организация, Период);
	Иначе
		// Если нет учетной политики, то считаем, что все включено, 
		// для того, чтобы избежать потери данных, подготовленным прикладным кодом.
		// Это может быть полезно, например, при вводе начальных остатков.
		// В этом случае документ сам заботится о правильности интерпретации учетной политики.
		Результат.ПлательщикНалогаНаПрибыль             = Истина;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ЗапросыОтражения

Функция ЗапросДанных(ДокументИмя, ЭтоОбъектРасчетов = Истина) Экспорт
	
	ТаблицаДокумента = "Документ." + ДокументИмя;
	
	МассивПустыхВТ = Новый Массив;
	ТекстыСозданияВременныхТаблиц = Новый Массив;
	
	Если ДокументИмя = "РасчетСебестоимостиТоваров" Или ДокументИмя = "РегистраторРасчетов" Тогда
		МассивПустыхВТ.Добавить("ВтСтроки");
		МассивПустыхВТ.Добавить("ВтСтоимости");
		МассивПустыхВТ.Добавить("Партии");
	Иначе
		ТекстыСозданияВременныхТаблиц.Добавить(ТекстСебестоимость());
		ТекстыСозданияВременныхТаблиц.Добавить(ТекстПартии()); 
	КонецЕсли;
	
	Если ЭтоРасчетныйДокумент(ДокументИмя) Тогда
		ТекстыСозданияВременныхТаблиц.Добавить(ТекстРасчетовПоНовойАрхитектуре());
		ТекстыСозданияВременныхТаблиц.Добавить(ТекстВТРасчетов());
	Иначе
		МассивПустыхВТ.Добавить("РасчетыСКлиентамиНоваяАрхитектура");
		МассивПустыхВТ.Добавить("РасчетыСПоставщикамиНоваяАрхитектура");
		МассивПустыхВТ.Добавить("ВТРасчетыСКлиентами");
		МассивПустыхВТ.Добавить("ВТРасчетыСПоставщиками");
	КонецЕсли;
	
	Если ЭтоОбъектРасчетов Тогда
		ТекстыСозданияВременныхТаблиц.Добавить(ТекстВТРасчетовПоДокументам(ТаблицаДокумента));
	Иначе
		МассивПустыхВТ.Добавить("ВТРасчетыСКлиентамиПоДокументам");
		МассивПустыхВТ.Добавить("ВТРасчетыСПоставщикамиПоДокументам");
	КонецЕсли;
	
	Если МассивПустыхВТ.Количество() Тогда
		ТекстыСозданияВременныхТаблиц.Добавить(ТекстПустыеВТ(МассивПустыхВТ));
	КонецЕсли;
	
	ТекстыСозданияВременныхТаблиц.Добавить(ТекстУчетнаяПолитика());
	ТекстыСозданияВременныхТаблиц.Добавить(ТекстКурсыВалют());
	ТекстыСозданияВременныхТаблиц.Добавить(ТекстВТОтраженияДокумента(ДокументИмя));
	
	ТекстыСозданияЗапросаДанных = Новый Массив;
	ТекстыСозданияЗапросаДанных.Добавить(ТекстИнициализации());
	Если ДокументИмя <> "РасчетСебестоимостиТоваров" И ДокументИмя <> "РегистраторРасчетов" Тогда
		Если ЭтоОбъектРасчетов Тогда
			ТекстыСозданияЗапросаДанных.Добавить(ТекстЗачетАвансов(ТаблицаДокумента));
		КонецЕсли;
		ТекстыСозданияЗапросаДанных.Добавить(ТекстРаспределениеРасходов(ТаблицаДокумента));
		ТекстыСозданияЗапросаДанных.Добавить(ТекстСписаниеРасходовУОрганизацииИсточника(ТаблицаДокумента));
		ТекстыСозданияЗапросаДанных.Добавить(ТекстРегистрацияРасходовУОрганизацииПолучателя(ТаблицаДокумента));
		ТекстыСозданияЗапросаДанных.Добавить(ТекстНДСПоДаннымФинпартий());
	КонецЕсли;
	ТекстОтраженияДокумента = ТекстОтраженияДокумента(ДокументИмя);
	Если ТекстОтраженияДокумента <> "" Тогда
		ТекстыСозданияЗапросаДанных.Добавить(ТекстОтраженияДокумента);
	КонецЕсли;
	
	ТекстСозданияВременныхТаблиц = СтрСоединить(ТекстыСозданияВременныхТаблиц);
	ТекстСозданияЗапросаДанных = СтрСоединить(ТекстыСозданияЗапросаДанных, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	ТекстыОбщегоЗапросаОтражения = Новый Массив(2);
	ТекстыОбщегоЗапросаОтражения[0] = ТекстСозданияВременныхТаблиц;
	ТекстыОбщегоЗапросаОтражения[1] = ТекстСозданияЗапросаДанных;
	ТекстОбщегоЗапросаОтражения = СтрСоединить(ТекстыОбщегоЗапросаОтражения);
	
	Возврат Новый Запрос(ТекстОбщегоЗапросаОтражения);
	
КонецФункции

Функция ЗапросДанныхПараметры(ДокументИмя, ЭтоОбъектРасчетов) Экспорт
	
	Возврат РеглУчетВыборкиСерверПовтИсп.ЗапросДанных(ДокументИмя, ЭтоОбъектРасчетов).НайтиПараметры();
	
КонецФункции

Функция ЗапросСчетовПоУмолчанию() Экспорт
	
	ТекстИнициализации = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПустаяСсылка) КАК ВидСчетаРеглУчета,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетУчета,
	|	НЕОПРЕДЕЛЕНО КАК ВидСубконто1,
	|	НЕОПРЕДЕЛЕНО КАК ВидСубконто2,
	|	НЕОПРЕДЕЛЕНО КАК ВидСубконто3,
	|	ЛОЖЬ КАК ИспользоватьСубконто,
	|	НЕОПРЕДЕЛЕНО КАК ВидСубконто,
	|	НЕОПРЕДЕЛЕНО КАК Субконто
	|ПОМЕСТИТЬ СчетаПоУмолчанию
	|ГДЕ ЛОЖЬ
	|ИНДЕКСИРОВАТЬ ПО
	|	ВидСчетаРеглУчета,
	|	АналитикаУчета
	|";
	
	Возврат Новый Запрос(ТекстИнициализации);
	
КонецФункции

Функция ЗапросСопоставлений() Экспорт
	
	Запрос = Новый Запрос("
		|ВЫБРАТЬ
		|	Данные.Ссылка                       КАК Ссылка,
		|	Данные.Период                       КАК Период,
		|	НАЧАЛОПЕРИОДА(Данные.Период, ДЕНЬ)  КАК ДатаОтражения,
		|	Данные.ИдентификаторСтроки          КАК ИдентификаторСтроки,
		|
		|	Данные.Организация                  КАК Организация,
		|
		|	Данные.Сумма                        КАК Сумма,
		|	ВЫБОР 
		|		КОГДА &ВестиУУ
		|				И (&ДатаНачалаВеденияУУ = ДАТАВРЕМЯ(1,1,1) 
		|					ИЛИ &ДатаНачалаВеденияУУ <= Данные.Период
		|					ИЛИ ТИПЗНАЧЕНИЯ(Данные.Ссылка) = ТИП(Документ.ВводОстатков)
		|					ИЛИ ТИПЗНАЧЕНИЯ(Данные.Ссылка) = ТИП(Документ.ВводОстатковВзаиморасчетов)
		|					ИЛИ ТИПЗНАЧЕНИЯ(Данные.Ссылка) = ТИП(Документ.ВводОстатковДенежныхСредств)
		|					ИЛИ ТИПЗНАЧЕНИЯ(Данные.Ссылка) = ТИП(Документ.ВводОстатковОПродажахЗаПрошлыеПериоды)
		|					ИЛИ ТИПЗНАЧЕНИЯ(Данные.Ссылка) = ТИП(Документ.ВводОстатковПоФинансовымИнструментам)
		|					ИЛИ ТИПЗНАЧЕНИЯ(Данные.Ссылка) = ТИП(Документ.ВводОстатковПрочиеРасходы)
		|					ИЛИ ТИПЗНАЧЕНИЯ(Данные.Ссылка) = ТИП(Документ.ВводОстатковПрочихАктивовПассивов)
		|					ИЛИ ТИПЗНАЧЕНИЯ(Данные.Ссылка) = ТИП(Документ.ВводОстатковРасчетовПоЭквайрингу)
		|					ИЛИ ТИПЗНАЧЕНИЯ(Данные.Ссылка) = ТИП(Документ.ВводОстатковСПодотчетниками)
		|					ИЛИ ТИПЗНАЧЕНИЯ(Данные.Ссылка) = ТИП(Документ.ВводОстатковТМЦВЭксплуатации)
		|					ИЛИ ТИПЗНАЧЕНИЯ(Данные.Ссылка) = ТИП(Документ.ВводОстатковТоваров)
		|					ИЛИ ТИПЗНАЧЕНИЯ(Данные.Ссылка) = ТИП(Документ.ВводОстатковВнеоборотныхАктивов2_4)
		|					) 
		|			ТОГДА Данные.СуммаУУ
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СуммаУУ,
		|	
		|	Данные.ВидСчетаДт                   КАК ВидСчетаДт,
		|	Данные.АналитикаУчетаДт             КАК АналитикаУчетаДт,
		|	Данные.МестоУчетаДт                 КАК МестоУчетаДт,
		|
		|	Данные.ВалютаДт                     КАК ВалютаДт,
		|	Данные.ПодразделениеДт              КАК ПодразделениеДт,
		|	ВЫБОР
		|		КОГДА (Данные.ВидСчетаДт В (&УчетЗатрат) И ЕСТЬNULL(Данные.НаправлениеДеятельностиДт.УчетЗатрат, ЛОЖЬ))
		|				ИЛИ (Данные.ВидСчетаДт В (&УчетДоходов) И ЕСТЬNULL(Данные.НаправлениеДеятельностиДт.УчетДоходов, ЛОЖЬ))
		|				ИЛИ (Данные.ВидСчетаДт В (&УчетДенежныхСредств) И ЕСТЬNULL(Данные.НаправлениеДеятельностиДт.УчетДенежныхСредствРаздельно, ЛОЖЬ))
		|				ИЛИ (Данные.ВидСчетаДт В (&УчетДенежныхСредств) И ЕСТЬNULL(Данные.НаправлениеДеятельностиДт.УчетДенежныхСредствПоКорреспонденции, ЛОЖЬ))
		|				ИЛИ (Данные.ВидСчетаДт В (&УчетВнеоборотныхАктивов) И ЕСТЬNULL(Данные.НаправлениеДеятельностиДт.УчетВнеоборотныхАктивов, ЛОЖЬ))
		|				ИЛИ (Данные.ВидСчетаДт В (&УчетРасчетовСПоставщиками) И ЕСТЬNULL(Данные.НаправлениеДеятельностиДт.УчетРасчетовСПоставщиками, ЛОЖЬ))
		|				ИЛИ Данные.ВидСчетаДт В (&ЗаполнятьВсегда)
		|			ТОГДА Данные.НаправлениеДеятельностиДт 
		|		КОГДА Данные.ВидСчетаДт В (&НикогдаНеЗаполнять)
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
		|		ИНАЧЕ Данные.НаправлениеДеятельностиДт 
		|	КОНЕЦ КАК НаправлениеДеятельностиДт,
		|	Данные.НалоговоеНазначениеДт        КАК НалоговоеНазначениеДт,
		|	
		|	ВЫБОР 
		|		КОГДА ЕСТЬNULL(ПрочиеДт.СчетУчета, &ПустаяСсылка) <> &ПустаяСсылка
		|			ТОГДА ПрочиеДт.СчетУчета
		|		ИНАЧЕ ЕСТЬNULL(СчетаДтПоМестуУчета.СчетУчета, ЕСТЬNULL(СчетаДтПоОрганизации.СчетУчета,
		|							ЕСТЬNULL(СчетаДтПоАналитикеУчета.СчетУчета, ВЫРАЗИТЬ(Данные.СчетДт КАК ПланСчетов.Хозрасчетный))))
		|	КОНЕЦ КАК СчетДт,
		|
		|	ВЫБОР 
		|		КОГДА ПрочиеДт.ИспользоватьСубконто 
		|			ТОГДА ПрочиеДт.ВидСубконто1
		|		КОГДА НЕ ВидыДт1.Ссылка ЕСТЬ NULL
		|			ТОГДА ВидыДт1.Ссылка
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО 
		|	КОНЕЦ КАК ВидСубконтоДт1,
		|	ВЫБОР 
		|		КОГДА ПрочиеДт.ИспользоватьСубконто 
		|			ТОГДА ПрочиеДт.Субконто1 
		|		ИНАЧЕ Данные.СубконтоДт1 
		|	КОНЕЦ КАК СубконтоДт1,
		|
		|	ВЫБОР 
		|		КОГДА ПрочиеДт.ИспользоватьСубконто 
		|			ТОГДА ПрочиеДт.ВидСубконто2
		|		КОГДА НЕ ВидыДт2.Ссылка ЕСТЬ NULL
		|			ТОГДА ВидыДт2.Ссылка
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО 
		|	КОНЕЦ КАК ВидСубконтоДт2,
		|	ВЫБОР 
		|		КОГДА ПрочиеДт.ИспользоватьСубконто 
		|			ТОГДА ПрочиеДт.Субконто2 
		|		ИНАЧЕ Данные.СубконтоДт2 
		|	КОНЕЦ КАК СубконтоДт2,
		|
		|	ВЫБОР 
		|		КОГДА ПрочиеДт.ИспользоватьСубконто 
		|			ТОГДА ПрочиеДт.ВидСубконто3
		|		КОГДА НЕ ВидыДт3.Ссылка ЕСТЬ NULL
		|			ТОГДА ВидыДт3.Ссылка
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО 
		|	КОНЕЦ КАК ВидСубконтоДт3,
		|	ВЫБОР 
		|		КОГДА ПрочиеДт.ИспользоватьСубконто 
		|			ТОГДА ПрочиеДт.Субконто3 
		|		ИНАЧЕ Данные.СубконтоДт3 
		|	КОНЕЦ КАК СубконтоДт3,
		|	
		|	ВЫБОР 
		|		КОГДА ЕСТЬNULL(СчетаДтПоМестуУчета.ИспользоватьСубконто, ЛОЖЬ)
		|			ТОГДА СчетаДтПоМестуУчета.ВидСубконто
		|		КОГДА ЕСТЬNULL(СчетаДтПоОрганизации.ИспользоватьСубконто, ЛОЖЬ)
		|			ТОГДА СчетаДтПоОрганизации.ВидСубконто
		|		КОГДА ЕСТЬNULL(СчетаДтПоАналитикеУчета.ИспользоватьСубконто, ЛОЖЬ)
		|			ТОГДА СчетаДтПоАналитикеУчета.ВидСубконто
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК ВидСубконтоДт,
		|	ВЫБОР 
		|		КОГДА ЕСТЬNULL(СчетаДтПоМестуУчета.ИспользоватьСубконто, ЛОЖЬ)
		|			ТОГДА СчетаДтПоМестуУчета.Субконто
		|		КОГДА ЕСТЬNULL(СчетаДтПоОрганизации.ИспользоватьСубконто, ЛОЖЬ)
		|			ТОГДА СчетаДтПоОрганизации.Субконто
		|		КОГДА ЕСТЬNULL(СчетаДтПоАналитикеУчета.ИспользоватьСубконто, ЛОЖЬ)
		|			ТОГДА СчетаДтПоАналитикеУчета.Субконто
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК СубконтоДт,
		|
		|	Данные.ВалютнаяСуммаДт           КАК ВалютнаяСуммаДт,
		|	Данные.КоличествоДт              КАК КоличествоДт,
		|	Данные.СуммаНУДт                 КАК СуммаНУДт,
		|	Данные.СуммаПРДт                 КАК СуммаПРДт,
		|	Данные.СуммаВРДт                 КАК СуммаВРДт,
		|
		|	Данные.ВидСчетаКт                КАК ВидСчетаКт,
		|	Данные.АналитикаУчетаКт          КАК АналитикаУчетаКт,
		|	Данные.МестоУчетаКт              КАК МестоУчетаКт,
		|
		|	Данные.ВалютаКт                  КАК ВалютаКт,
		|	Данные.ПодразделениеКт           КАК ПодразделениеКт,
		|	ВЫБОР
		|		КОГДА (Данные.ВидСчетаКт В (&УчетЗатрат) И ЕСТЬNULL(Данные.НаправлениеДеятельностиКт.УчетЗатрат, ЛОЖЬ))
		|				ИЛИ (Данные.ВидСчетаКт В (&УчетДоходов) И ЕСТЬNULL(Данные.НаправлениеДеятельностиКт.УчетДоходов, ЛОЖЬ))
		|				ИЛИ (Данные.ВидСчетаКт В (&УчетДенежныхСредств) И ЕСТЬNULL(Данные.НаправлениеДеятельностиКт.УчетДенежныхСредствРаздельно, ЛОЖЬ))
		|				ИЛИ (Данные.ВидСчетаКт В (&УчетДенежныхСредств) И ЕСТЬNULL(Данные.НаправлениеДеятельностиКт.УчетДенежныхСредствПоКорреспонденции, ЛОЖЬ))
		|				ИЛИ (Данные.ВидСчетаКт В (&УчетВнеоборотныхАктивов) И ЕСТЬNULL(Данные.НаправлениеДеятельностиКт.УчетВнеоборотныхАктивов, ЛОЖЬ))
		|				ИЛИ (Данные.ВидСчетаКт В (&УчетРасчетовСПоставщиками) И ЕСТЬNULL(Данные.НаправлениеДеятельностиКт.УчетРасчетовСПоставщиками, ЛОЖЬ))
		|				ИЛИ Данные.ВидСчетаКт В (&ЗаполнятьВсегда)
		|			ТОГДА Данные.НаправлениеДеятельностиКт 
		|		КОГДА Данные.ВидСчетаКт В (&НикогдаНеЗаполнять)
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
		|		ИНАЧЕ Данные.НаправлениеДеятельностиКт 
		|	КОНЕЦ КАК НаправлениеДеятельностиКт,
		|	Данные.НалоговоеНазначениеКт        КАК НалоговоеНазначениеКт,
		|	
		|	ВЫБОР 
		|		КОГДА ЕСТЬNULL(ПрочиеКт.СчетУчета, &ПустаяСсылка) <> &ПустаяСсылка
		|			ТОГДА ПрочиеКт.СчетУчета
		|		ИНАЧЕ ЕСТЬNULL(СчетаКтПоМестуУчета.СчетУчета, ЕСТЬNULL(СчетаКтПоОрганизации.СчетУчета,
		|							ЕСТЬNULL(СчетаКтПоАналитикеУчета.СчетУчета, ВЫРАЗИТЬ(Данные.СчетКт КАК ПланСчетов.Хозрасчетный))))
		|	КОНЕЦ КАК СчетКт,
		|	
		|	ВЫБОР 
		|		КОГДА ПрочиеКт.ИспользоватьСубконто 
		|			ТОГДА ПрочиеКт.ВидСубконто1
		|		КОГДА НЕ ВидыКт1.Ссылка ЕСТЬ NULL
		|			ТОГДА ВидыКт1.Ссылка
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО 
		|	КОНЕЦ КАК ВидСубконтоКт1,
		|	ВЫБОР 
		|		КОГДА ПрочиеКт.ИспользоватьСубконто 
		|			ТОГДА ПрочиеКт.Субконто1 
		|		ИНАЧЕ Данные.СубконтоКт1 
		|	КОНЕЦ КАК СубконтоКт1,
		|
		|	ВЫБОР 
		|		КОГДА ПрочиеКт.ИспользоватьСубконто 
		|			ТОГДА ПрочиеКт.ВидСубконто2
		|		КОГДА НЕ ВидыКт2.Ссылка ЕСТЬ NULL
		|			ТОГДА ВидыКт2.Ссылка
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО 
		|	КОНЕЦ КАК ВидСубконтоКт2,
		|	ВЫБОР 
		|		КОГДА ПрочиеКт.ИспользоватьСубконто 
		|			ТОГДА ПрочиеКт.Субконто2 
		|		ИНАЧЕ Данные.СубконтоКт2 
		|	КОНЕЦ КАК СубконтоКт2,
		|
		|	ВЫБОР 
		|		КОГДА ПрочиеКт.ИспользоватьСубконто 
		|			ТОГДА ПрочиеКт.ВидСубконто3
		|		КОГДА НЕ ВидыКт3.Ссылка ЕСТЬ NULL
		|			ТОГДА ВидыКт3.Ссылка
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО 
		|	КОНЕЦ КАК ВидСубконтоКт3,
		|	ВЫБОР 
		|		КОГДА ПрочиеКт.ИспользоватьСубконто 
		|			ТОГДА ПрочиеКт.Субконто3 
		|		ИНАЧЕ Данные.СубконтоКт3 
		|	КОНЕЦ КАК СубконтоКт3,
		|
		|	ВЫБОР 
		|		КОГДА ЕСТЬNULL(СчетаКтПоМестуУчета.ИспользоватьСубконто, ЛОЖЬ)
		|			ТОГДА СчетаКтПоМестуУчета.ВидСубконто
		|		КОГДА ЕСТЬNULL(СчетаКтПоОрганизации.ИспользоватьСубконто, ЛОЖЬ)
		|			ТОГДА СчетаКтПоОрганизации.ВидСубконто
		|		КОГДА ЕСТЬNULL(СчетаКтПоАналитикеУчета.ИспользоватьСубконто, ЛОЖЬ)
		|			ТОГДА СчетаКтПоАналитикеУчета.ВидСубконто
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК ВидСубконтоКт,
		|	ВЫБОР 
		|		КОГДА ЕСТЬNULL(СчетаКтПоМестуУчета.ИспользоватьСубконто, ЛОЖЬ)
		|			ТОГДА СчетаКтПоМестуУчета.Субконто
		|		КОГДА ЕСТЬNULL(СчетаКтПоОрганизации.ИспользоватьСубконто, ЛОЖЬ)
		|			ТОГДА СчетаКтПоОрганизации.Субконто
		|		КОГДА ЕСТЬNULL(СчетаКтПоАналитикеУчета.ИспользоватьСубконто, ЛОЖЬ)
		|			ТОГДА СчетаКтПоАналитикеУчета.Субконто
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК СубконтоКт,
		|
		|	Данные.ВалютнаяСуммаКт          КАК ВалютнаяСуммаКт,
		|	Данные.КоличествоКт             КАК КоличествоКт,
		|	Данные.СуммаНУКт                КАК СуммаНУКт,
		|	Данные.СуммаПРКт                КАК СуммаПРКт,
		|	Данные.СуммаВРКт                КАК СуммаВРКт,
		|	
		|	Данные.Содержание               КАК Содержание
		|
		|ПОМЕСТИТЬ Хозрасчетный
		|
		|ИЗ 
		|	Данные КАК Данные
		|	
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		РазрезыКОтражению КАК РазрезыКОтражению
		|	ПО
		|		Данные.Ссылка = РазрезыКОтражению.Ссылка
		|		И Данные.Организация =  РазрезыКОтражению.Организация
		|		И НАЧАЛОПЕРИОДА(Данные.Период, ДЕНЬ) = РазрезыКОтражению.ДатаОтражения
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ 
		|		Счета КАК СчетаДтПоМестуУчета
		|	ПО 
		|		Данные.Организация = СчетаДтПоМестуУчета.Организация
		|		И Данные.ВидСчетаДт = СчетаДтПоМестуУчета.ВидСчетаРеглУчета
		|		И Данные.АналитикаУчетаДт = СчетаДтПоМестуУчета.АналитикаУчета
		|		И Данные.МестоУчетаДт = СчетаДтПоМестуУчета.МестоУчета
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ 
		|		Счета КАК СчетаДтПоОрганизации
		|	ПО 
		|		Данные.Организация = СчетаДтПоОрганизации.Организация
		|		И Данные.ВидСчетаДт = СчетаДтПоОрганизации.ВидСчетаРеглУчета
		|		И Данные.АналитикаУчетаДт = СчетаДтПоОрганизации.АналитикаУчета
		|		И СчетаДтПоОрганизации.МестоУчета = НЕОПРЕДЕЛЕНО
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ 
		|		Счета КАК СчетаДтПоАналитикеУчета
		|	ПО 
		|		СчетаДтПоАналитикеУчета.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|		И Данные.ВидСчетаДт = СчетаДтПоАналитикеУчета.ВидСчетаРеглУчета
		|		И Данные.АналитикаУчетаДт = СчетаДтПоАналитикеУчета.АналитикаУчета
		|		И СчетаДтПоАналитикеУчета.МестоУчета = НЕОПРЕДЕЛЕНО
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ 
		|		ПланХозрасчетный КАК СчетаДтДанных
		|	ПО 
		|		Данные.СчетДт = СчетаДтДанных.Ссылка
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ 
		|		ВидыСубконто КАК ВидыДт1
		|	ПО 
		|		ВидыДт1.Ссылка = ЕСТЬNULL(СчетаДтПоМестуУчета.ВидСубконто1, ЕСТЬNULL(СчетаДтПоОрганизации.ВидСубконто1, ЕСТЬNULL(СчетаДтПоАналитикеУчета.ВидСубконто1, ЕСТЬNULL(СчетаДтДанных.ВидСубконто1, НЕОПРЕДЕЛЕНО))))
		|		И ВидыДт1.ТипЗначения = ТИПЗНАЧЕНИЯ(Данные.СубконтоДт1)
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ 
		|		ВидыСубконто КАК ВидыДт2
		|	ПО 
		|		ВидыДт2.Ссылка = ЕСТЬNULL(СчетаДтПоМестуУчета.ВидСубконто2, ЕСТЬNULL(СчетаДтПоОрганизации.ВидСубконто2, ЕСТЬNULL(СчетаДтПоАналитикеУчета.ВидСубконто2, ЕСТЬNULL(СчетаДтДанных.ВидСубконто2, НЕОПРЕДЕЛЕНО))))
		|		И ВидыДт2.ТипЗначения = ТИПЗНАЧЕНИЯ(Данные.СубконтоДт2)
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ 
		|		ВидыСубконто КАК ВидыДт3
		|	ПО 
		|		ВидыДт3.Ссылка = ЕСТЬNULL(СчетаДтПоМестуУчета.ВидСубконто3, ЕСТЬNULL(СчетаДтПоОрганизации.ВидСубконто3, ЕСТЬNULL(СчетаДтПоАналитикеУчета.ВидСубконто3, ЕСТЬNULL(СчетаДтДанных.ВидСубконто3, НЕОПРЕДЕЛЕНО))))
		|		И ВидыДт3.ТипЗначения = ТИПЗНАЧЕНИЯ(Данные.СубконтоДт3)
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ 
		|		ПрочиеСчета КАК ПрочиеДт
		|	ПО 
		|		Данные.Ссылка = ПрочиеДт.Документ 
		|		И Данные.Организация = ПрочиеДт.Организация 
		|		И Данные.ВидСчетаДт = ПрочиеДт.ВидСчетаРеглУчета
		|		И Данные.ИдентификаторСтроки = ПрочиеДт.ИдентификаторСтроки
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ 
		|		Счета КАК СчетаКтПоМестуУчета
		|	ПО
		|		Данные.Организация = СчетаКтПоМестуУчета.Организация
		|		И Данные.ВидСчетаКт = СчетаКтПоМестуУчета.ВидСчетаРеглУчета
		|		И Данные.АналитикаУчетаКт = СчетаКтПоМестуУчета.АналитикаУчета
		|		И Данные.МестоУчетаКт = СчетаКтПоМестуУчета.МестоУчета
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ 
		|		Счета КАК СчетаКтПоОрганизации
		|	ПО
		|		Данные.Организация = СчетаКтПоОрганизации.Организация
		|		И Данные.ВидСчетаКт = СчетаКтПоОрганизации.ВидСчетаРеглУчета
		|		И Данные.АналитикаУчетаКт = СчетаКтПоОрганизации.АналитикаУчета
		|		И СчетаКтПоОрганизации.МестоУчета = НЕОПРЕДЕЛЕНО
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ 
		|		Счета КАК СчетаКтПоАналитикеУчета
		|	ПО 
		|		СчетаКтПоАналитикеУчета.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|		И Данные.ВидСчетаКт = СчетаКтПоАналитикеУчета.ВидСчетаРеглУчета
		|		И Данные.АналитикаУчетаКт = СчетаКтПоАналитикеУчета.АналитикаУчета
		|		И СчетаКтПоАналитикеУчета.МестоУчета = НЕОПРЕДЕЛЕНО
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ 
		|		ПланХозрасчетный КАК СчетаКтДанных
		|	ПО 
		|		Данные.СчетКт = СчетаКтДанных.Ссылка
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ 
		|		ВидыСубконто КАК ВидыКт1
		|	ПО 
		|		ВидыКт1.Ссылка = ЕСТЬNULL(СчетаКтПоМестуУчета.ВидСубконто1, ЕСТЬNULL(СчетаКтПоОрганизации.ВидСубконто1, ЕСТЬNULL(СчетаКтПоАналитикеУчета.ВидСубконто1, ЕСТЬNULL(СчетаКтДанных.ВидСубконто1, НЕОПРЕДЕЛЕНО))))
		|		И ВидыКт1.ТипЗначения = ТИПЗНАЧЕНИЯ(Данные.СубконтоКт1)
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ 
		|		ВидыСубконто КАК ВидыКт2
		|	ПО 
		|		ВидыКт2.Ссылка = ЕСТЬNULL(СчетаКтПоМестуУчета.ВидСубконто2, ЕСТЬNULL(СчетаКтПоОрганизации.ВидСубконто2, ЕСТЬNULL(СчетаКтПоАналитикеУчета.ВидСубконто2, ЕСТЬNULL(СчетаКтДанных.ВидСубконто2, НЕОПРЕДЕЛЕНО))))
		|		И ВидыКт2.ТипЗначения = ТИПЗНАЧЕНИЯ(Данные.СубконтоКт2)
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ 
		|		ВидыСубконто КАК ВидыКт3
		|	ПО 
		|		ВидыКт3.Ссылка = ЕСТЬNULL(СчетаКтПоМестуУчета.ВидСубконто3, ЕСТЬNULL(СчетаКтПоОрганизации.ВидСубконто3, ЕСТЬNULL(СчетаКтПоАналитикеУчета.ВидСубконто3, ЕСТЬNULL(СчетаКтДанных.ВидСубконто3, НЕОПРЕДЕЛЕНО))))
		|		И ВидыКт3.ТипЗначения = ТИПЗНАЧЕНИЯ(Данные.СубконтоКт3)
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ 
		|		ПрочиеСчета КАК ПрочиеКт
		|	ПО 
		|		Данные.Ссылка = ПрочиеКт.Документ 
		|		И Данные.Организация = ПрочиеКт.Организация 
		|		И Данные.ВидСчетаКт = ПрочиеКт.ВидСчетаРеглУчета
		|		И Данные.ИдентификаторСтроки = ПрочиеКт.ИдентификаторСтроки
		|	
		|");
	
	Запрос.УстановитьПараметр("ПустаяСсылка",        ПланыСчетов.Хозрасчетный.ПустаяСсылка());
	Запрос.УстановитьПараметр("ВестиУУ",             Константы.ВестиУУНаПланеСчетовХозрасчетный.Получить());
	Запрос.УстановитьПараметр("ДатаНачалаВеденияУУ", Константы.ДатаНачалаУУНаПланеСчетовХозрасчетный.Получить());
	
	Условия = УсловияЗаполненияНаправленийДеятельностиПоВидамСчетов();
	Запрос.УстановитьПараметр("УчетЗатрат",                Условия.УчетЗатрат);
	Запрос.УстановитьПараметр("УчетДоходов",               Условия.УчетДоходов);
	Запрос.УстановитьПараметр("УчетДенежныхСредств",       Условия.УчетДенежныхСредств);
	Запрос.УстановитьПараметр("УчетВнеоборотныхАктивов",   Условия.УчетВнеоборотныхАктивов);
	Запрос.УстановитьПараметр("УчетРасчетовСПоставщиками", Условия.УчетРасчетовСПоставщиками);
	Запрос.УстановитьПараметр("НикогдаНеЗаполнять",        Условия.НикогдаНеЗаполнять);
	Запрос.УстановитьПараметр("ЗаполнятьВсегда",           Условия.ЗаполнятьВсегда);
	
	Возврат Запрос;
	
КонецФункции

Функция ЗапросПроверки() Экспорт
	Возврат Новый Запрос("
		|ВЫБРАТЬ
		|	
		|	ХЗ.Ссылка                       КАК Ссылка,
		|	ХЗ.ИдентификаторСтроки          КАК ИдентификаторСтроки,
		|	ХЗ.Организация                  КАК Организация,
		|	ХЗ.ДатаОтражения                КАК ДатаОтражения,
		|	
		|	ХЗ.ВидСчетаДт                   КАК ВидСчетаДт,
		|	ХЗ.АналитикаУчетаДт             КАК АналитикаУчетаДт,
		|	ХЗ.МестоУчетаДт                 КАК МестоУчетаДт,
		|	ХЗ.СчетДт                       КАК СчетДт,
		|	(ВЫБОР
		|		КОГДА ПланДт.ЗапретитьИспользоватьВПроводках ТОГДА ""СЧЕТ_ЗАПРЕЩЕН""
		|		КОГДА (ЕСТЬNULL(ПланДт.Забалансовый, ЛОЖЬ) ИЛИ НЕ ЗабалансовыеВидыСчетовДт.Ссылка ЕСТЬ NULL)
		|				И НЕ ЕСТЬNULL(ПланКт.Забалансовый, ЛОЖЬ) И ЗабалансовыеВидыСчетовКт.Ссылка ЕСТЬ NULL И НЕ ПланКт.Ссылка ЕСТЬ NULL
		|			ТОГДА ""СЧЕТ_ЗАБАЛАНСОВЫЙ""
		|		КОГДА НЕ ЕСТЬNULL(ПланКт.Забалансовый, ЛОЖЬ) И ЗабалансовыеВидыСчетовКт.Ссылка ЕСТЬ NULL И ПланДт.Ссылка ЕСТЬ NULL
		|			ТОГДА ""СЧЕТ_ПУСТОЙ""
		|		КОГДА НЕ ЗабалансовыеВидыСчетовДт.Ссылка ЕСТЬ NULL И ПланДт.Ссылка ЕСТЬ NULL
		|			ТОГДА ""СЧЕТ_ПУСТОЙ""
		|		ИНАЧЕ """" КОНЕЦ)          КАК КодОшибкиДт,
		|
		|	ХЗ.ВидСчетаКт                  КАК ВидСчетаКт,
		|	ХЗ.АналитикаУчетаКт            КАК АналитикаУчетаКт,
		|	ХЗ.МестоУчетаКт                КАК МестоУчетаКт,
		|	ХЗ.СчетКт                      КАК СчетКт,
		|	(ВЫБОР
		|		КОГДА ПланКт.ЗапретитьИспользоватьВПроводках ТОГДА ""СЧЕТ_ЗАПРЕЩЕН""
		|		КОГДА (ЕСТЬNULL(ПланКт.Забалансовый, ЛОЖЬ) ИЛИ НЕ ЗабалансовыеВидыСчетовКт.Ссылка ЕСТЬ NULL)
		|				И НЕ ЕСТЬNULL(ПланДт.Забалансовый, ЛОЖЬ) И ЗабалансовыеВидыСчетовДт.Ссылка ЕСТЬ NULL И НЕ ПланДт.Ссылка ЕСТЬ NULL
		|			ТОГДА ""СЧЕТ_ЗАБАЛАНСОВЫЙ""
		|		КОГДА НЕ ЕСТЬNULL(ПланДт.Забалансовый, ЛОЖЬ) И ЗабалансовыеВидыСчетовДт.Ссылка ЕСТЬ NULL И ПланКт.Ссылка ЕСТЬ NULL
		|			ТОГДА ""СЧЕТ_ПУСТОЙ""
		|		КОГДА НЕ ЗабалансовыеВидыСчетовКт.Ссылка ЕСТЬ NULL И ПланКт.Ссылка ЕСТЬ NULL
		|			ТОГДА ""СЧЕТ_ПУСТОЙ""
		|		ИНАЧЕ """" КОНЕЦ)          КАК КодОшибкиКт
		|	
		|ПОМЕСТИТЬ ОшибкиПроверки
		|ИЗ
		|	Хозрасчетный КАК ХЗ
		|	ЛЕВОЕ СОЕДИНЕНИЕ ПланХозрасчетный КАК ПланДт
		|		ПО ПланДт.Ссылка = ХЗ.СчетДт
		|	ЛЕВОЕ СОЕДИНЕНИЕ ПланХозрасчетный КАК ПланКт
		|		ПО ПланКт.Ссылка = ХЗ.СчетКт
		|	ЛЕВОЕ СОЕДИНЕНИЕ Перечисление.ВидыСчетовРеглУчета КАК ЗабалансовыеВидыСчетовДт
		|		ПО ЗабалансовыеВидыСчетовДт.Ссылка = ХЗ.ВидСчетаДт
		|			И ЗабалансовыеВидыСчетовДт.Ссылка В (ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ЗабалансовыйУчетВНА),
		|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТМЦНаСкладах),
		|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТМЦВПроизводстве),
		|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТМЦУХранителей),
		|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТМЦКСписанию),
		|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.МатериалыПринятыеВПереработку),
		|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.МатериалыПринятыеВПереработкуВПроизводстве),
		|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТоварыНаСкладе),
		|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТоварыПереданныеНаКомиссию))
		|	ЛЕВОЕ СОЕДИНЕНИЕ Перечисление.ВидыСчетовРеглУчета КАК ЗабалансовыеВидыСчетовКт
		|		ПО ЗабалансовыеВидыСчетовКт.Ссылка = ХЗ.ВидСчетаКт
		|			И ЗабалансовыеВидыСчетовКт.Ссылка В (ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ЗабалансовыйУчетВНА),
		|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТМЦНаСкладах),
		|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТМЦВПроизводстве),
		|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТМЦУХранителей),
		|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТМЦКСписанию),
		|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.МатериалыПринятыеВПереработку),
		|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.МатериалыПринятыеВПереработкуВПроизводстве),
		|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТоварыНаСкладе),
		|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТоварыПереданныеНаКомиссию))
		|ГДЕ ЛОЖЬ
		|	//// для балансового (не забалансового) счета должна быть задана корреспонденция
		|	ИЛИ НЕ ПланДт.Забалансовый И ЗабалансовыеВидыСчетовДт.Ссылка ЕСТЬ NULL И ПланКт.Ссылка ЕСТЬ NULL
		|	ИЛИ НЕ ПланКт.Забалансовый И ЗабалансовыеВидыСчетовКт.Ссылка ЕСТЬ NULL И ПланДт.Ссылка ЕСТЬ NULL
		|	//// Для забалансового счета корреспонденция может быть только с забалансовым
		|	ИЛИ (ПланДт.Забалансовый ИЛИ НЕ ЗабалансовыеВидыСчетовДт.Ссылка ЕСТЬ NULL)
		|		И НЕ (ПланКт.Забалансовый ИЛИ НЕ ЗабалансовыеВидыСчетовКт.Ссылка ЕСТЬ NULL)
		|	ИЛИ (ПланКт.Забалансовый ИЛИ НЕ ЗабалансовыеВидыСчетовКт.Ссылка ЕСТЬ NULL)
		|		И НЕ (ПланДт.Забалансовый ИЛИ НЕ ЗабалансовыеВидыСчетовДт.Ссылка ЕСТЬ NULL)
		|	//// оба счета не заданы
		|	ИЛИ ПланДт.Ссылка ЕСТЬ NULL И ПланКт.Ссылка ЕСТЬ NULL
		|	//// счет дебета или счет кредита запрещен к использованию
		|	ИЛИ ПланДт.ЗапретитьИспользоватьВПроводках
		|	ИЛИ ПланКт.ЗапретитьИспользоватьВПроводках
		|	//// Для забалансового вида счета должны проверять наличие соответстующего счета для него:
		|	ИЛИ НЕ ЗабалансовыеВидыСчетовДт.Ссылка ЕСТЬ NULL И ПланДт.Ссылка ЕСТЬ NULL
		|	ИЛИ НЕ ЗабалансовыеВидыСчетовКт.Ссылка ЕСТЬ NULL И ПланКт.Ссылка ЕСТЬ NULL
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ХЗ.Ссылка,
		|	ХЗ.Организация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ОП.Ссылка              КАК Ссылка,
		|	ОП.ИдентификаторСтроки КАК ИдентификаторСтроки,
		|	ОП.Организация         КАК Организация,
		|	ОП.ДатаОтражения       КАК ДатаОтражения,
		|	ОП.ВидСчета            КАК ВидСчета, 
		|	ОП.АналитикаУчета      КАК АналитикаУчета, 
		|	ОП.МестоУчета          КАК МестоУчета, 
		|	ОП.Счет                КАК Счет,
		|	ВЫБОР
		|		КОГДА ГФУ.Ссылка ЕСТЬ NULL
		|		ТОГДА """"
		|		КОГДА ГФУ.РасчетыСКомиссионерами И НЕ ГФУ.РасчетыСКлиентами И НЕ ГФУ.РасчетыСКомитентами
		|		ТОГДА ""РасчетыСКомиссионерами""
		|		КОГДА ГФУ.РасчетыСКомитентами И НЕ ГФУ.РасчетыСПоставщиками И НЕ ГФУ.РасчетыСКомиссионерами
		|		ТОГДА ""РасчетыСКомитентами""
		|		ИНАЧЕ """"
		|	КОНЕЦ КАК ДопИнформацияПоРасчетамСПартнерами, 
		|	ОП.КодОшибки           КАК КодОшибки
		|ИЗ (
		|	ВЫБРАТЬ
		|		ОП.Ссылка КАК Ссылка,
		|		ОП.ИдентификаторСтроки КАК ИдентификаторСтроки,
		|		ОП.Организация КАК Организация,
		|		ОП.ДатаОтражения КАК ДатаОтражения,
		|		ОП.ВидСчетаДт КАК ВидСчета,
		|		ОП.АналитикаУчетаДт КАК АналитикаУчета,
		|		ОП.МестоУчетаДт КАК МестоУчета,
		|		ОП.СчетДт КАК Счет,
		|		ОП.КодОшибкиДт КАК КодОшибки
		|	ИЗ
		|		ОшибкиПроверки КАК ОП
		|	ГДЕ
		|		ОП.КодОшибкиДт <> """"
		|	ОБЪЕДИНИТЬ ВСЕ
		|	ВЫБРАТЬ
		|		ОП.Ссылка КАК Ссылка,
		|		ОП.ИдентификаторСтроки,
		|		ОП.Организация КАК Организация,
		|		ОП.ДатаОтражения КАК ДатаОтражения,
		|		ОП.ВидСчетаКт КАК ВидСчета,
		|		ОП.АналитикаУчетаКт КАК АналитикаУчета,
		|		ОП.МестоУчетаКт КАК МестоУчета,
		|		ОП.СчетКт КАК Счет,
		|		ОП.КодОшибкиКт КАК КодОшибки
		|	ИЗ
		|		ОшибкиПроверки КАК ОП
		|	ГДЕ
		|		ОП.КодОшибкиКт <> """"
		|) КАК ОП
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГруппыФинансовогоУчетаРасчетов КАК ГФУ
		|	ПО ОП.АналитикаУчета = ГФУ.Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка, Организация, ДатаОтражения
		|
		|ИТОГИ ПО
		|	Ссылка, Организация, ДатаОтражения
		|");
КонецФункции

Функция ЗапросХозрасчетный() Экспорт
	
	Запрос = Новый Запрос("
		|ВЫБРАТЬ
		|	ХЗ.Ссылка КАК Ссылка,
		|	ХЗ.Период КАК Период,
		|	ХЗ.Организация КАК Организация,
		|
		|	СУММА(ХЗ.Сумма)   КАК Сумма,
		|	СУММА(ХЗ.СуммаУУ) КАК СуммаУУ,
		|	СУММА(ВЫБОР 
		|			КОГДА ПланДт.Валютный И ХЗ.ВалютаДт = &ВалютаФинОтчетности
		|				ТОГДА ХЗ.ВалютнаяСуммаДт
		|			КОГДА ПланКт.Валютный И ХЗ.ВалютаКт = &ВалютаФинОтчетности
		|				ТОГДА ХЗ.ВалютнаяСуммаКт
		|			КОГДА &ИсточникСуммыДляПересчетаВВалютуФО = ЗНАЧЕНИЕ(Перечисление.ИсточникиСуммыДляПересчетаВВалютуФинОтчетности.БУ)
		|				ТОГДА ХЗ.Сумма / КурсыВалютыФинОтчетности.Курс
		|			КОГДА &ИсточникСуммыДляПересчетаВВалютуФО = ЗНАЧЕНИЕ(Перечисление.ИсточникиСуммыДляПересчетаВВалютуФинОтчетности.УУ)
		|				ТОГДА ХЗ.СуммаУУ * КурсыВалютыУпрУчета.Курс / КурсыВалютыФинОтчетности.Курс
		|			КОНЕЦ) КАК СуммаФО,
		|		
		|	(ВЫБОР КОГДА ПланДт.Валютный ТОГДА ХЗ.ВалютаДт ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КОНЕЦ) КАК ВалютаДт,
		|	(ВЫБОР КОГДА ПланДт.УчетПоПодразделениям ТОГДА ХЗ.ПодразделениеДт
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КОНЕЦ) КАК ПодразделениеДт,
		|	(ВЫБОР КОГДА ПланДт.УчетПоНаправлениямДеятельности ТОГДА ХЗ.НаправлениеДеятельностиДт
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КОНЕЦ) КАК НаправлениеДеятельностиДт,
		|	(ВЫБОР КОГДА ПланДт.УчетПоНалоговымНазначениямНДС ТОГДА ХЗ.НалоговоеНазначениеДт ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КОНЕЦ) КАК НалоговоеНазначениеДт,
		|	ХЗ.СчетДт КАК СчетДт,
		|
		|	(ВЫБОР 
		|		КОГДА ХЗ.ВидСубконтоДт1 <> НЕОПРЕДЕЛЕНО ТОГДА ХЗ.ВидСубконтоДт1
		|		КОГДА (ВидыДт1.Ссылка ЕСТЬ NULL) И (НЕОПРЕДЕЛЕНО <> ХЗ.ВидСубконтоДт) ТОГДА ХЗ.ВидСубконтоДт
		|		ИНАЧЕ ЕСТЬNULL(ВидыДт1.Ссылка, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка)) КОНЕЦ) КАК ВидСубконтоДт1,
		|	(ВЫБОР 
		|		КОГДА ХЗ.ВидСубконтоДт1 <> НЕОПРЕДЕЛЕНО ТОГДА ХЗ.СубконтоДт1
		|		КОГДА (ВидыДт1.Ссылка ЕСТЬ NULL) И (НЕОПРЕДЕЛЕНО <> ХЗ.ВидСубконтоДт) ТОГДА ХЗ.СубконтоДт
		|		КОГДА (ВидыДт1.Ссылка ЕСТЬ NULL) ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ ХЗ.СубконтоДт1 КОНЕЦ) КАК СубконтоДт1,
		|
		|	(ВЫБОР
		|		КОГДА ХЗ.ВидСубконтоДт2 <> НЕОПРЕДЕЛЕНО ТОГДА ХЗ.ВидСубконтоДт2
		|		КОГДА (ЕСТЬNULL(ВидыДт1.Ссылка, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка)) <> ХЗ.ВидСубконтоДт) И (ВидыДт2.Ссылка ЕСТЬ NULL) И (НЕОПРЕДЕЛЕНО <> ХЗ.ВидСубконтоДт)
		|			ТОГДА ХЗ.ВидСубконтоДт
		|		ИНАЧЕ ЕСТЬNULL(ВидыДт2.Ссылка, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка)) КОНЕЦ) КАК ВидСубконтоДт2,
		|	(ВЫБОР
		|		КОГДА ХЗ.ВидСубконтоДт2 <> НЕОПРЕДЕЛЕНО ТОГДА ХЗ.СубконтоДт2
		|		КОГДА (ЕСТЬNULL(ВидыДт1.Ссылка, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка)) <> ХЗ.ВидСубконтоДт) И (ВидыДт2.Ссылка ЕСТЬ NULL) И (НЕОПРЕДЕЛЕНО <> ХЗ.ВидСубконтоДт)
		|			ТОГДА ХЗ.СубконтоДт
		|		КОГДА (ВидыДт2.Ссылка ЕСТЬ NULL)
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ ХЗ.СубконтоДт2 КОНЕЦ) КАК СубконтоДт2,
		|
		|	(ВЫБОР
		|		КОГДА ХЗ.ВидСубконтоДт3 <> НЕОПРЕДЕЛЕНО ТОГДА ХЗ.ВидСубконтоДт3
		|		КОГДА (НЕ ХЗ.ВидСубконтоДт В (ВидыДт1.Ссылка, ВидыДт2.Ссылка)) И (ВидыДт3.Ссылка ЕСТЬ NULL) И (НЕОПРЕДЕЛЕНО <> ХЗ.ВидСубконтоДт)
		|			ТОГДА ХЗ.ВидСубконтоДт
		|		ИНАЧЕ ЕСТЬNULL(ВидыДт3.Ссылка, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка)) КОНЕЦ) КАК ВидСубконтоДт3,
		|	(ВЫБОР
		|		КОГДА ХЗ.ВидСубконтоДт3 <> НЕОПРЕДЕЛЕНО ТОГДА ХЗ.СубконтоДт3
		|		КОГДА (НЕ ХЗ.ВидСубконтоДт В (ВидыДт1.Ссылка, ВидыДт2.Ссылка)) И (ВидыДт3.Ссылка ЕСТЬ NULL) И (НЕОПРЕДЕЛЕНО <> ХЗ.ВидСубконтоДт)
		|			ТОГДА ХЗ.СубконтоДт
		|		КОГДА (ВидыДт3.Ссылка ЕСТЬ NULL)
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ ХЗ.СубконтоДт3 КОНЕЦ) КАК СубконтоДт3,
		|
		|	СУММА(ВЫБОР КОГДА ПланДт.Валютный ТОГДА ХЗ.ВалютнаяСуммаДт ИНАЧЕ 0.0 КОНЕЦ) КАК ВалютнаяСуммаДт,
		|	СУММА(ВЫБОР КОГДА ПланДт.Количественный ТОГДА ХЗ.КоличествоДт ИНАЧЕ 0.0 КОНЕЦ) КАК КоличествоДт,
		|	СУММА(ВЫБОР КОГДА ПланДт.НалоговыйУчет ТОГДА ХЗ.СуммаНУДт ИНАЧЕ 0.0 КОНЕЦ) КАК СуммаНУДт,
		|	0.0 КАК СуммаПРДт,
		|	0.0 КАК СуммаВРДт,
		|
		|	(ВЫБОР КОГДА ПланКт.Валютный ТОГДА ХЗ.ВалютаКт ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КОНЕЦ) КАК ВалютаКт,
		|	(ВЫБОР КОГДА ПланКт.УчетПоПодразделениям ТОГДА ХЗ.ПодразделениеКт
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КОНЕЦ) КАК ПодразделениеКт,
		|	(ВЫБОР КОГДА ПланКт.УчетПоНаправлениямДеятельности ТОГДА ХЗ.НаправлениеДеятельностиКт
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КОНЕЦ) КАК НаправлениеДеятельностиКт,
		|	(ВЫБОР КОГДА ПланКт.УчетПоНалоговымНазначениямНДС ТОГДА ХЗ.НалоговоеНазначениеКт ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КОНЕЦ) КАК НалоговоеНазначениеКт,
		|	ХЗ.СчетКт КАК СчетКт,
		|
		|	(ВЫБОР
		|		КОГДА ХЗ.ВидСубконтоКт1 <> НЕОПРЕДЕЛЕНО ТОГДА ХЗ.ВидСубконтоКт1
		|		КОГДА (ВидыКт1.Ссылка ЕСТЬ NULL) И (НЕОПРЕДЕЛЕНО <> ХЗ.ВидСубконтоКт) ТОГДА ХЗ.ВидСубконтоКт
		|		ИНАЧЕ ЕСТЬNULL(ВидыКт1.Ссылка, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка)) КОНЕЦ) КАК ВидСубконтоКт1,
		|	(ВЫБОР
		|		КОГДА ХЗ.ВидСубконтоКт1 <> НЕОПРЕДЕЛЕНО ТОГДА ХЗ.СубконтоКт1
		|		КОГДА (ВидыКт1.Ссылка ЕСТЬ NULL) И (НЕОПРЕДЕЛЕНО <> ХЗ.ВидСубконтоКт) ТОГДА ХЗ.СубконтоКт
		|		КОГДА (ВидыКт1.Ссылка ЕСТЬ NULL) ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ ХЗ.СубконтоКт1 КОНЕЦ) КАК СубконтоКт1,
		|
		|	(ВЫБОР
		|		КОГДА ХЗ.ВидСубконтоКт2 <> НЕОПРЕДЕЛЕНО ТОГДА ХЗ.ВидСубконтоКт2
		|		КОГДА (ЕСТЬNULL(ВидыКт1.Ссылка, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка)) <> ХЗ.ВидСубконтоКт) И (ВидыКт2.Ссылка ЕСТЬ NULL) И (НЕОПРЕДЕЛЕНО <> ХЗ.ВидСубконтоКт)
		|			ТОГДА ХЗ.ВидСубконтоКт
		|		ИНАЧЕ ЕСТЬNULL(ВидыКт2.Ссылка, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка)) КОНЕЦ) КАК ВидСубконтоКт2,
		|	(ВЫБОР
		|		КОГДА ХЗ.ВидСубконтоКт2 <> НЕОПРЕДЕЛЕНО ТОГДА ХЗ.СубконтоКт2
		|		КОГДА (ЕСТЬNULL(ВидыКт1.Ссылка, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка)) <> ХЗ.ВидСубконтоКт) И (ВидыКт2.Ссылка ЕСТЬ NULL) И (НЕОПРЕДЕЛЕНО <> ХЗ.ВидСубконтоКт)
		|			ТОГДА ХЗ.СубконтоКт
		|		КОГДА (ВидыКт2.Ссылка ЕСТЬ NULL)
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ ХЗ.СубконтоКт2 КОНЕЦ) КАК СубконтоКт2,
		|
		|	(ВЫБОР
		|		КОГДА ХЗ.ВидСубконтоКт3 <> НЕОПРЕДЕЛЕНО ТОГДА ХЗ.ВидСубконтоКт3
		|		КОГДА (НЕ ХЗ.ВидСубконтоКт В (ВидыКт1.Ссылка, ВидыКт2.Ссылка)) И (ВидыКт3.Ссылка ЕСТЬ NULL) И (НЕОПРЕДЕЛЕНО <> ХЗ.ВидСубконтоКт)
		|			ТОГДА ХЗ.ВидСубконтоКт
		|		ИНАЧЕ ЕСТЬNULL(ВидыКт3.Ссылка, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка)) КОНЕЦ) КАК ВидСубконтоКт3,
		|	(ВЫБОР
		|		КОГДА ХЗ.ВидСубконтоКт3 <> НЕОПРЕДЕЛЕНО ТОГДА ХЗ.СубконтоКт3
		|		КОГДА (НЕ ХЗ.ВидСубконтоКт В (ВидыКт1.Ссылка, ВидыКт2.Ссылка)) И (ВидыКт3.Ссылка ЕСТЬ NULL) И (НЕОПРЕДЕЛЕНО <> ХЗ.ВидСубконтоКт)
		|			ТОГДА ХЗ.СубконтоКт
		|		КОГДА (ВидыКт3.Ссылка ЕСТЬ NULL)
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ ХЗ.СубконтоКт3 КОНЕЦ) КАК СубконтоКт3,
		|
		|	СУММА(ВЫБОР КОГДА ПланКт.Валютный ТОГДА ХЗ.ВалютнаяСуммаКт ИНАЧЕ 0.0 КОНЕЦ) КАК ВалютнаяСуммаКт,
		|	СУММА(ВЫБОР КОГДА ПланКт.Количественный ТОГДА ХЗ.КоличествоКт ИНАЧЕ 0.0 КОНЕЦ) КАК КоличествоКт,
		|	СУММА(ВЫБОР КОГДА ПланКт.НалоговыйУчет ТОГДА ХЗ.СуммаНУКт ИНАЧЕ 0.0 КОНЕЦ) КАК СуммаНУКт,
		|	0.0 КАК СуммаПРКт,
		|	0.0 КАК СуммаВРКт,
		|	
		|	ХЗ.Содержание КАК Содержание
		|
		|ИЗ
		|	Хозрасчетный КАК ХЗ
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ 
		|		ОшибкиПроверки КАК ОшибкиПроверки 
		|	ПО
		|		ХЗ.Ссылка = ОшибкиПроверки.Ссылка
		|		И ХЗ.Организация = ОшибкиПроверки.Организация
		|		И ХЗ.ДатаОтражения = ОшибкиПроверки.ДатаОтражения
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ 
		|		ПланХозрасчетный КАК ПланДт
		|	ПО 
		|		ХЗ.СчетДт = ПланДт.Ссылка
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ 
		|		ВидыСубконто КАК ВидыДт1
		|	ПО 
		|		ВидыДт1.Ссылка В (
		|				ВЫБОР КОГДА ХЗ.ВидСубконтоДт1 = НЕОПРЕДЕЛЕНО ТОГДА ПланДт.ВидСубконто1 ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ,
		|				ВЫБОР КОГДА ХЗ.ВидСубконтоДт2 = НЕОПРЕДЕЛЕНО ТОГДА ПланДт.ВидСубконто2 ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ,
		|				ВЫБОР КОГДА ХЗ.ВидСубконтоДт3 = НЕОПРЕДЕЛЕНО ТОГДА ПланДт.ВидСубконто3 ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ)
		|		И ВидыДт1.ТипЗначения = ТИПЗНАЧЕНИЯ(ХЗ.СубконтоДт1)
		|		
		|		
		|	ЛЕВОЕ СОЕДИНЕНИЕ 
		|		ВидыСубконто КАК ВидыДт2
		|	ПО 
		|		ВидыДт2.Ссылка В (
		|				ВЫБОР КОГДА ХЗ.ВидСубконтоДт1 = НЕОПРЕДЕЛЕНО ТОГДА ПланДт.ВидСубконто1 ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ,
		|				ВЫБОР КОГДА ХЗ.ВидСубконтоДт2 = НЕОПРЕДЕЛЕНО ТОГДА ПланДт.ВидСубконто2 ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ,
		|				ВЫБОР КОГДА ХЗ.ВидСубконтоДт3 = НЕОПРЕДЕЛЕНО ТОГДА ПланДт.ВидСубконто3 ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ)
		|		И ВидыДт2.ТипЗначения = ТИПЗНАЧЕНИЯ(ХЗ.СубконтоДт2)
		|		И ВидыДт2.Ссылка <> ЕСТЬNULL(ВидыДт1.Ссылка, НЕОПРЕДЕЛЕНО)
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ 
		|		ВидыСубконто КАК ВидыДт3
		|	ПО 
		|		ВидыДт3.Ссылка В (
		|				ВЫБОР КОГДА ХЗ.ВидСубконтоДт1 = НЕОПРЕДЕЛЕНО ТОГДА ПланДт.ВидСубконто1 ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ,
		|				ВЫБОР КОГДА ХЗ.ВидСубконтоДт2 = НЕОПРЕДЕЛЕНО ТОГДА ПланДт.ВидСубконто2 ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ,
		|				ВЫБОР КОГДА ХЗ.ВидСубконтоДт3 = НЕОПРЕДЕЛЕНО ТОГДА ПланДт.ВидСубконто3 ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ)
		|		И ВидыДт3.ТипЗначения = ТИПЗНАЧЕНИЯ(ХЗ.СубконтоДт3)
		|		И ВидыДт3.Ссылка <> ЕСТЬNULL(ВидыДт1.Ссылка, НЕОПРЕДЕЛЕНО)
		|		И ВидыДт3.Ссылка <> ЕСТЬNULL(ВидыДт2.Ссылка, НЕОПРЕДЕЛЕНО)
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ 
		|		ПланХозрасчетный КАК ПланКт
		|	ПО 
		|		ХЗ.СчетКт = ПланКт.Ссылка
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ 
		|		ВидыСубконто КАК ВидыКт1
		|	ПО 
		|		ВидыКт1.Ссылка В (
		|				ВЫБОР КОГДА ХЗ.ВидСубконтоКт1 = НЕОПРЕДЕЛЕНО ТОГДА ПланКт.ВидСубконто1 ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ,
		|				ВЫБОР КОГДА ХЗ.ВидСубконтоКт2 = НЕОПРЕДЕЛЕНО ТОГДА ПланКт.ВидСубконто2 ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ,
		|				ВЫБОР КОГДА ХЗ.ВидСубконтоКт3 = НЕОПРЕДЕЛЕНО ТОГДА ПланКт.ВидСубконто3 ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ)
		|		И ВидыКт1.ТипЗначения = ТИПЗНАЧЕНИЯ(ХЗ.СубконтоКт1)
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ 
		|		ВидыСубконто КАК ВидыКт2
		|	ПО 
		|		ВидыКт2.Ссылка В (
		|				ВЫБОР КОГДА ХЗ.ВидСубконтоКт1 = НЕОПРЕДЕЛЕНО ТОГДА ПланКт.ВидСубконто1 ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ,
		|				ВЫБОР КОГДА ХЗ.ВидСубконтоКт2 = НЕОПРЕДЕЛЕНО ТОГДА ПланКт.ВидСубконто2 ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ,
		|				ВЫБОР КОГДА ХЗ.ВидСубконтоКт3 = НЕОПРЕДЕЛЕНО ТОГДА ПланКт.ВидСубконто3 ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ)
		|		И ВидыКт2.ТипЗначения = ТИПЗНАЧЕНИЯ(ХЗ.СубконтоКт2)
		|		И ВидыКт2.Ссылка <> ЕСТЬNULL(ВидыКт1.Ссылка, НЕОПРЕДЕЛЕНО)
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		ВидыСубконто КАК ВидыКт3
		|	ПО 
		|		ВидыКт3.Ссылка В (
		|				ВЫБОР КОГДА ХЗ.ВидСубконтоКт1 = НЕОПРЕДЕЛЕНО ТОГДА ПланКт.ВидСубконто1 ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ,
		|				ВЫБОР КОГДА ХЗ.ВидСубконтоКт2 = НЕОПРЕДЕЛЕНО ТОГДА ПланКт.ВидСубконто2 ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ,
		|				ВЫБОР КОГДА ХЗ.ВидСубконтоКт3 = НЕОПРЕДЕЛЕНО ТОГДА ПланКт.ВидСубконто3 ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ)
		|		И ВидыКт3.ТипЗначения = ТИПЗНАЧЕНИЯ(ХЗ.СубконтоКт3)
		|		И ВидыКт3.Ссылка <> ЕСТЬNULL(ВидыКт1.Ссылка, НЕОПРЕДЕЛЕНО)
		|		И ВидыКт3.Ссылка <> ЕСТЬNULL(ВидыКт2.Ссылка, НЕОПРЕДЕЛЕНО)
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
		|	ПО
		|		ХЗ.Ссылка = УчетнаяПолитикаОрганизаций.Ссылка
		|		И ХЗ.Организация = УчетнаяПолитикаОрганизаций.Организация
		|		И ХЗ.ДатаОтражения = УчетнаяПолитикаОрганизаций.ДатаОтражения
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		КурсыВалют КАК КурсыВалютыФинОтчетности
		|	ПО
		|		КурсыВалютыФинОтчетности.Валюта = &ВалютаФинОтчетности
		|		И ХЗ.ДатаОтражения = КурсыВалютыФинОтчетности.Дата
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		КурсыВалют КАК КурсыВалютыУпрУчета
		|	ПО
		|		КурсыВалютыУпрУчета.Валюта = &ВалютаУпрУчета
		|		И ХЗ.ДатаОтражения = КурсыВалютыУпрУчета.Дата
		|
		|ГДЕ
		|	ОшибкиПроверки.Ссылка ЕСТЬ NULL
		|	И (ХЗ.Сумма <> 0
		|		ИЛИ ХЗ.СуммаУУ <> 0
		|		ИЛИ (ВЫБОР КОГДА ПланДт.Валютный ТОГДА ХЗ.ВалютнаяСуммаДт <> 0 ИНАЧЕ ЛОЖЬ КОНЕЦ)
		|		ИЛИ (ВЫБОР КОГДА ПланДт.Количественный ТОГДА ХЗ.КоличествоДт <> 0 ИНАЧЕ ЛОЖЬ КОНЕЦ)
		|		ИЛИ (ВЫБОР 
		|				КОГДА ПланДт.НалоговыйУчет
		|					ТОГДА ХЗ.СуммаНУДт <> 0
		|				ИНАЧЕ ЛОЖЬ 
		|			КОНЕЦ)  
		|		ИЛИ (ВЫБОР КОГДА ПланКт.Валютный ТОГДА ХЗ.ВалютнаяСуммаКт <> 0 ИНАЧЕ ЛОЖЬ КОНЕЦ)
		|		ИЛИ (ВЫБОР КОГДА ПланКт.Количественный ТОГДА ХЗ.КоличествоКт <> 0 ИНАЧЕ ЛОЖЬ КОНЕЦ)
		|		ИЛИ (ВЫБОР 
		|				КОГДА ПланКт.НалоговыйУчет
		|					ТОГДА ХЗ.СуммаНУКт <> 0
		|				ИНАЧЕ ЛОЖЬ 
		|			КОНЕЦ))
		|	И (ХЗ.СчетДт <> ХЗ.СчетКт
		|		ИЛИ (ВЫБОР
		|				КОГДА ХЗ.ВидСубконтоДт1 <> НЕОПРЕДЕЛЕНО 
		|					ТОГДА ХЗ.СубконтоДт1
		|				КОГДА (ВидыДт1.Ссылка ЕСТЬ NULL) И (НЕОПРЕДЕЛЕНО <> ХЗ.ВидСубконтоДт) 
		|					ТОГДА ЕСТЬNULL(ХЗ.СубконтоДт, НЕОПРЕДЕЛЕНО)
		|				КОГДА (ВидыДт1.Ссылка ЕСТЬ NULL) 
		|					ТОГДА НЕОПРЕДЕЛЕНО
		|				ИНАЧЕ ХЗ.СубконтоДт1 КОНЕЦ) <>
		|			(ВЫБОР
		|				КОГДА ХЗ.ВидСубконтоКт1 <> НЕОПРЕДЕЛЕНО 
		|					ТОГДА ХЗ.СубконтоКт1
		|				КОГДА (ВидыКт1.Ссылка ЕСТЬ NULL) И (НЕОПРЕДЕЛЕНО <> ХЗ.ВидСубконтоКт) 
		|					ТОГДА ЕСТЬNULL(ХЗ.СубконтоКт, НЕОПРЕДЕЛЕНО)
		|				КОГДА (ВидыКт1.Ссылка ЕСТЬ NULL) 
		|					ТОГДА НЕОПРЕДЕЛЕНО
		|				ИНАЧЕ ХЗ.СубконтоКт1 КОНЕЦ)
		|		ИЛИ (ВЫБОР
		|				КОГДА ХЗ.ВидСубконтоДт2 <> НЕОПРЕДЕЛЕНО 
		|					ТОГДА ХЗ.СубконтоДт2
		|				КОГДА (ЕСТЬNULL(ВидыДт1.Ссылка, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка)) <> ХЗ.ВидСубконтоДт) И (ВидыДт2.Ссылка ЕСТЬ NULL) И (НЕОПРЕДЕЛЕНО <> ХЗ.ВидСубконтоДт)
		|					ТОГДА ЕСТЬNULL(ХЗ.СубконтоДт, НЕОПРЕДЕЛЕНО)
		|				КОГДА (ВидыДт2.Ссылка ЕСТЬ NULL)
		|					ТОГДА НЕОПРЕДЕЛЕНО
		|				ИНАЧЕ ХЗ.СубконтоДт2 КОНЕЦ) <>
		|			(ВЫБОР
		|				КОГДА ХЗ.ВидСубконтоКт2 <> НЕОПРЕДЕЛЕНО 
		|					ТОГДА ХЗ.СубконтоКт2
		|				КОГДА (ЕСТЬNULL(ВидыКт1.Ссылка, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка)) <> ХЗ.ВидСубконтоКт) И (ВидыКт2.Ссылка ЕСТЬ NULL) И (НЕОПРЕДЕЛЕНО <> ХЗ.ВидСубконтоКт)
		|					ТОГДА ЕСТЬNULL(ХЗ.СубконтоКт, НЕОПРЕДЕЛЕНО)
		|				КОГДА 
		|					(ВидыКт2.Ссылка ЕСТЬ NULL)
		|				ТОГДА НЕОПРЕДЕЛЕНО
		|			ИНАЧЕ ХЗ.СубконтоКт2 КОНЕЦ)
		|		ИЛИ (ВЫБОР
		|				КОГДА ХЗ.ВидСубконтоДт3 <> НЕОПРЕДЕЛЕНО 
		|					ТОГДА ХЗ.СубконтоДт3
		|				КОГДА (НЕ ХЗ.ВидСубконтоДт В (ВидыДт1.Ссылка, ВидыДт2.Ссылка)) И (ВидыДт3.Ссылка ЕСТЬ NULL) И (НЕОПРЕДЕЛЕНО <> ХЗ.ВидСубконтоДт)
		|					ТОГДА ЕСТЬNULL(ХЗ.СубконтоДт, НЕОПРЕДЕЛЕНО)
		|				КОГДА (ВидыДт3.Ссылка ЕСТЬ NULL)
		|					ТОГДА НЕОПРЕДЕЛЕНО
		|				ИНАЧЕ ХЗ.СубконтоДт3 КОНЕЦ) <>
		|			(ВЫБОР
		|				КОГДА ХЗ.ВидСубконтоКт3 <> НЕОПРЕДЕЛЕНО 
		|					ТОГДА ХЗ.СубконтоКт3
		|				КОГДА (НЕ ХЗ.ВидСубконтоКт В (ВидыКт1.Ссылка, ВидыКт2.Ссылка)) И (ВидыКт3.Ссылка ЕСТЬ NULL) И (НЕОПРЕДЕЛЕНО <> ХЗ.ВидСубконтоКт)
		|					ТОГДА ЕСТЬNULL(ХЗ.СубконтоКт, НЕОПРЕДЕЛЕНО)
		|				КОГДА (ВидыКт3.Ссылка ЕСТЬ NULL)
		|					ТОГДА НЕОПРЕДЕЛЕНО
		|				ИНАЧЕ ХЗ.СубконтоКт3 КОНЕЦ)
		|		ИЛИ (ВЫБОР 
		|				КОГДА ПланДт.Валютный ТОГДА ЕСТЬNULL(ХЗ.ВалютаДт, ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)) 
		|				ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) 
		|			КОНЕЦ) <>
		|			(ВЫБОР 
		|				КОГДА ПланКт.Валютный ТОГДА ЕСТЬNULL(ХЗ.ВалютаКт, ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)) 
		|				ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) 
		|			КОНЕЦ)
		|		ИЛИ (ВЫБОР 
		|				КОГДА ПланДт.УчетПоПодразделениям ТОГДА ЕСТЬNULL(ХЗ.ПодразделениеДт, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка))
		|				ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
		|			КОНЕЦ) <> 
		|			(ВЫБОР 
		|				КОГДА ПланКт.УчетПоПодразделениям ТОГДА ЕСТЬNULL(ХЗ.ПодразделениеКт, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка))
		|				ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
		|			КОНЕЦ)
		|		ИЛИ (ВЫБОР 
		|				КОГДА ПланДт.УчетПоНалоговымНазначениямНДС ТОГДА ХЗ.НалоговоеНазначениеДт
		|				ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка)
		|			КОНЕЦ) <> 
		|			(ВЫБОР 
		|				КОГДА ПланКт.УчетПоНалоговымНазначениямНДС ТОГДА ХЗ.НалоговоеНазначениеКт
		|				ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка)
		|			КОНЕЦ) 		
		|		ИЛИ ((ПланДт.Количественный ИЛИ ПланКт.Количественный) И ЕСТЬNULL(ХЗ.КоличествоДт, 0) <> ЕСТЬNULL(ХЗ.КоличествоКт, 0))
		|		ИЛИ (ЕСТЬNULL(ХЗ.НаправлениеДеятельностиКт, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) <> ЕСТЬNULL(ХЗ.НаправлениеДеятельностиДт, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка))))
		|
		|СГРУППИРОВАТЬ ПО
		|	ХЗ.Ссылка,
		|	ХЗ.Период,
		|	ХЗ.Организация,
		|
		|	(ВЫБОР КОГДА ПланДт.Валютный ТОГДА ХЗ.ВалютаДт ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КОНЕЦ),
		|	(ВЫБОР КОГДА ПланДт.УчетПоПодразделениям ТОГДА ХЗ.ПодразделениеДт
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КОНЕЦ),
		|	(ВЫБОР КОГДА ПланДт.УчетПоНаправлениямДеятельности ТОГДА ХЗ.НаправлениеДеятельностиДт
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КОНЕЦ),
		|	(ВЫБОР КОГДА ПланДт.УчетПоНалоговымНазначениямНДС ТОГДА ХЗ.НалоговоеНазначениеДт 
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КОНЕЦ),
		|	ХЗ.СчетДт,
		|
		|	(ВЫБОР 
		|		КОГДА ХЗ.ВидСубконтоДт1 <> НЕОПРЕДЕЛЕНО ТОГДА ХЗ.ВидСубконтоДт1
		|		КОГДА (ВидыДт1.Ссылка ЕСТЬ NULL) И (НЕОПРЕДЕЛЕНО <> ХЗ.ВидСубконтоДт) ТОГДА ХЗ.ВидСубконтоДт
		|		ИНАЧЕ ЕСТЬNULL(ВидыДт1.Ссылка, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка)) КОНЕЦ),
		|	(ВЫБОР 
		|		КОГДА ХЗ.ВидСубконтоДт1 <> НЕОПРЕДЕЛЕНО ТОГДА ХЗ.СубконтоДт1
		|		КОГДА (ВидыДт1.Ссылка ЕСТЬ NULL) И (НЕОПРЕДЕЛЕНО <> ХЗ.ВидСубконтоДт) ТОГДА ХЗ.СубконтоДт
		|		КОГДА (ВидыДт1.Ссылка ЕСТЬ NULL) ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ ХЗ.СубконтоДт1 КОНЕЦ),
		|
		|	(ВЫБОР
		|		КОГДА ХЗ.ВидСубконтоДт2 <> НЕОПРЕДЕЛЕНО ТОГДА ХЗ.ВидСубконтоДт2
		|		КОГДА (ЕСТЬNULL(ВидыДт1.Ссылка, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка)) <> ХЗ.ВидСубконтоДт) И (ВидыДт2.Ссылка ЕСТЬ NULL) И (НЕОПРЕДЕЛЕНО <> ХЗ.ВидСубконтоДт)
		|			ТОГДА ХЗ.ВидСубконтоДт
		|		ИНАЧЕ ЕСТЬNULL(ВидыДт2.Ссылка, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка)) КОНЕЦ),
		|	(ВЫБОР
		|		КОГДА ХЗ.ВидСубконтоДт2 <> НЕОПРЕДЕЛЕНО ТОГДА ХЗ.СубконтоДт2
		|		КОГДА (ЕСТЬNULL(ВидыДт1.Ссылка, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка)) <> ХЗ.ВидСубконтоДт) И (ВидыДт2.Ссылка ЕСТЬ NULL) И (НЕОПРЕДЕЛЕНО <> ХЗ.ВидСубконтоДт)
		|			ТОГДА ХЗ.СубконтоДт
		|		КОГДА (ВидыДт2.Ссылка ЕСТЬ NULL)
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ ХЗ.СубконтоДт2 КОНЕЦ),
		|
		|	(ВЫБОР
		|		КОГДА ХЗ.ВидСубконтоДт3 <> НЕОПРЕДЕЛЕНО ТОГДА ХЗ.ВидСубконтоДт3
		|		КОГДА (НЕ ХЗ.ВидСубконтоДт В (ВидыДт1.Ссылка, ВидыДт2.Ссылка)) И (ВидыДт3.Ссылка ЕСТЬ NULL) И (НЕОПРЕДЕЛЕНО <> ХЗ.ВидСубконтоДт)
		|			ТОГДА ХЗ.ВидСубконтоДт
		|		ИНАЧЕ ЕСТЬNULL(ВидыДт3.Ссылка, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка)) КОНЕЦ),
		|	(ВЫБОР
		|		КОГДА ХЗ.ВидСубконтоДт3 <> НЕОПРЕДЕЛЕНО ТОГДА ХЗ.СубконтоДт3
		|		КОГДА (НЕ ХЗ.ВидСубконтоДт В (ВидыДт1.Ссылка, ВидыДт2.Ссылка)) И (ВидыДт3.Ссылка ЕСТЬ NULL) И (НЕОПРЕДЕЛЕНО <> ХЗ.ВидСубконтоДт)
		|			ТОГДА ХЗ.СубконтоДт
		|		КОГДА (ВидыДт3.Ссылка ЕСТЬ NULL)
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ ХЗ.СубконтоДт3 КОНЕЦ),
		|
		|	(ВЫБОР КОГДА ПланКт.Валютный ТОГДА ХЗ.ВалютаКт ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КОНЕЦ),
		|	(ВЫБОР КОГДА ПланКт.УчетПоПодразделениям ТОГДА ХЗ.ПодразделениеКт
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КОНЕЦ),
		|	(ВЫБОР КОГДА ПланКт.УчетПоНаправлениямДеятельности ТОГДА ХЗ.НаправлениеДеятельностиКт
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КОНЕЦ),
		|	(ВЫБОР КОГДА ПланКт.УчетПоНалоговымНазначениямНДС ТОГДА ХЗ.НалоговоеНазначениеКт 
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КОНЕЦ),
		|	ХЗ.СчетКт,
		|
		|	(ВЫБОР
		|		КОГДА ХЗ.ВидСубконтоКт1 <> НЕОПРЕДЕЛЕНО ТОГДА ХЗ.ВидСубконтоКт1
		|		КОГДА (ВидыКт1.Ссылка ЕСТЬ NULL) И (НЕОПРЕДЕЛЕНО <> ХЗ.ВидСубконтоКт) ТОГДА ХЗ.ВидСубконтоКт
		|		ИНАЧЕ ЕСТЬNULL(ВидыКт1.Ссылка, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка)) КОНЕЦ),
		|	(ВЫБОР
		|		КОГДА ХЗ.ВидСубконтоКт1 <> НЕОПРЕДЕЛЕНО ТОГДА ХЗ.СубконтоКт1
		|		КОГДА (ВидыКт1.Ссылка ЕСТЬ NULL) И (НЕОПРЕДЕЛЕНО <> ХЗ.ВидСубконтоКт) ТОГДА ХЗ.СубконтоКт
		|		КОГДА (ВидыКт1.Ссылка ЕСТЬ NULL) ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ ХЗ.СубконтоКт1 КОНЕЦ),
		|
		|	(ВЫБОР
		|		КОГДА ХЗ.ВидСубконтоКт2 <> НЕОПРЕДЕЛЕНО ТОГДА ХЗ.ВидСубконтоКт2
		|		КОГДА (ЕСТЬNULL(ВидыКт1.Ссылка, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка)) <> ХЗ.ВидСубконтоКт) И (ВидыКт2.Ссылка ЕСТЬ NULL) И (НЕОПРЕДЕЛЕНО <> ХЗ.ВидСубконтоКт)
		|			ТОГДА ХЗ.ВидСубконтоКт
		|		ИНАЧЕ ЕСТЬNULL(ВидыКт2.Ссылка, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка)) КОНЕЦ),
		|	(ВЫБОР
		|		КОГДА ХЗ.ВидСубконтоКт2 <> НЕОПРЕДЕЛЕНО ТОГДА ХЗ.СубконтоКт2
		|		КОГДА (ЕСТЬNULL(ВидыКт1.Ссылка, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка)) <> ХЗ.ВидСубконтоКт) И (ВидыКт2.Ссылка ЕСТЬ NULL) И (НЕОПРЕДЕЛЕНО <> ХЗ.ВидСубконтоКт)
		|			ТОГДА ХЗ.СубконтоКт
		|		КОГДА (ВидыКт2.Ссылка ЕСТЬ NULL)
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ ХЗ.СубконтоКт2 КОНЕЦ),
		|
		|	(ВЫБОР
		|		КОГДА ХЗ.ВидСубконтоКт3 <> НЕОПРЕДЕЛЕНО ТОГДА ХЗ.ВидСубконтоКт3
		|		КОГДА (НЕ ХЗ.ВидСубконтоКт В (ВидыКт1.Ссылка, ВидыКт2.Ссылка)) И (ВидыКт3.Ссылка ЕСТЬ NULL) И (НЕОПРЕДЕЛЕНО <> ХЗ.ВидСубконтоКт)
		|			ТОГДА ХЗ.ВидСубконтоКт
		|		ИНАЧЕ ЕСТЬNULL(ВидыКт3.Ссылка, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка)) КОНЕЦ),
		|	(ВЫБОР
		|		КОГДА ХЗ.ВидСубконтоКт3 <> НЕОПРЕДЕЛЕНО ТОГДА ХЗ.СубконтоКт3
		|		КОГДА (НЕ ХЗ.ВидСубконтоКт В (ВидыКт1.Ссылка, ВидыКт2.Ссылка)) И (ВидыКт3.Ссылка ЕСТЬ NULL) И (НЕОПРЕДЕЛЕНО <> ХЗ.ВидСубконтоКт)
		|			ТОГДА ХЗ.СубконтоКт
		|		КОГДА (ВидыКт3.Ссылка ЕСТЬ NULL)
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ ХЗ.СубконтоКт3 КОНЕЦ),
		|	
		|	ХЗ.Содержание
		|
		|ИМЕЮЩИЕ
		|	СУММА(ХЗ.Сумма) <> 0.0
		|	ИЛИ СУММА(ХЗ.СуммаУУ) <> 0.0
		|	ИЛИ СУММА(ВЫБОР КОГДА ПланДт.Валютный ТОГДА ХЗ.ВалютнаяСуммаДт ИНАЧЕ 0.0 КОНЕЦ) <> 0.0
		|	ИЛИ СУММА(ВЫБОР КОГДА ПланДт.Количественный ТОГДА ХЗ.КоличествоДт ИНАЧЕ 0.0 КОНЕЦ) <> 0.0
		|	ИЛИ СУММА(ВЫБОР КОГДА ПланДт.НалоговыйУчет ТОГДА ХЗ.СуммаНУДт ИНАЧЕ 0.0 КОНЕЦ) <> 0.0
		|	ИЛИ СУММА(ВЫБОР КОГДА ПланДт.НалоговыйУчет ТОГДА ХЗ.СуммаПРДт ИНАЧЕ 0.0 КОНЕЦ) <> 0.0
		|	ИЛИ СУММА(ВЫБОР КОГДА ПланДт.НалоговыйУчет ТОГДА ХЗ.СуммаВРДт ИНАЧЕ 0.0 КОНЕЦ) <> 0.0
		|	ИЛИ СУММА(ВЫБОР КОГДА ПланКт.Валютный ТОГДА ХЗ.ВалютнаяСуммаКт ИНАЧЕ 0.0 КОНЕЦ) <> 0.0
		|	ИЛИ СУММА(ВЫБОР КОГДА ПланКт.Количественный ТОГДА ХЗ.КоличествоКт ИНАЧЕ 0.0 КОНЕЦ) <> 0.0
		|	ИЛИ СУММА(ВЫБОР КОГДА ПланКт.НалоговыйУчет ТОГДА ХЗ.СуммаНУКт ИНАЧЕ 0.0 КОНЕЦ) <> 0.0
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка
		|	
		|ИТОГИ ПО
		|	Ссылка
		|");
	
	Запрос.УстановитьПараметр("ИсточникСуммыДляПересчетаВВалютуФО", Константы.ИсточникСуммыДляПересчетаВВалютуФинОтчетности.Получить());
	Запрос.УстановитьПараметр("ВалютаФинОтчетности",     Константы.ВалютаФинОтчетности.Получить());
	Запрос.УстановитьПараметр("ВалютаУпрУчета",          Константы.ВалютаУправленческогоУчета.Получить());
	
	Возврат Запрос;
	
КонецФункции

Функция ЗапросХозрасчетныйДополнение() Экспорт
	
	Возврат Новый Запрос(
		"ВЫБРАТЬ
		|	Хозрасчетный.Регистратор                  КАК Ссылка,
		|	НАЧАЛОПЕРИОДА(Хозрасчетный.Период, ДЕНЬ)  КАК ДатаОтражения,
		|	Хозрасчетный.Период                       КАК Период,
		|	Хозрасчетный.СчетДт                       КАК СчетДт,
		|	Хозрасчетный.СубконтоДт1                  КАК СубконтоДт1,
		|	Хозрасчетный.ВидСубконтоДт1               КАК ВидСубконтоДт1,
		|	Хозрасчетный.СубконтоДт2                  КАК СубконтоДт2,
		|	Хозрасчетный.ВидСубконтоДт2               КАК ВидСубконтоДт2,
		|	Хозрасчетный.СубконтоДт3                  КАК СубконтоДт3,
		|	Хозрасчетный.ВидСубконтоДт3               КАК ВидСубконтоДт3,
		|	Хозрасчетный.СчетКт                       КАК СчетКт,
		|	Хозрасчетный.СубконтоКт1                  КАК СубконтоКт1,
		|	Хозрасчетный.ВидСубконтоКт1               КАК ВидСубконтоКт1,
		|	Хозрасчетный.СубконтоКт2                  КАК СубконтоКт2,
		|	Хозрасчетный.ВидСубконтоКт2               КАК ВидСубконтоКт2,
		|	Хозрасчетный.СубконтоКт3                  КАК СубконтоКт3,
		|	Хозрасчетный.ВидСубконтоКт3               КАК ВидСубконтоКт3,
		|	Хозрасчетный.Организация                  КАК Организация,
		|	Хозрасчетный.ВалютаДт                     КАК ВалютаДт,
		|	Хозрасчетный.ВалютаКт                     КАК ВалютаКт,
		|	Хозрасчетный.ПодразделениеДт              КАК ПодразделениеДт,
		|	Хозрасчетный.НаправлениеДеятельностиДт    КАК НаправлениеДеятельностиДт,
		|	Хозрасчетный.НалоговоеНазначениеДт    	  КАК НалоговоеНазначениеДт,
		|	Хозрасчетный.ПодразделениеКт              КАК ПодразделениеКт,
		|	Хозрасчетный.НаправлениеДеятельностиКт    КАК НаправлениеДеятельностиКт,
		|	Хозрасчетный.НалоговоеНазначениеКт    	  КАК НалоговоеНазначениеКт,
		|	Хозрасчетный.Сумма                        КАК Сумма,
		|	Хозрасчетный.СуммаУУ                      КАК СуммаУУ,
		|	Хозрасчетный.СуммаФО                      КАК СуммаФО,
		|	Хозрасчетный.ВалютнаяСуммаДт              КАК ВалютнаяСуммаДт,
		|	Хозрасчетный.ВалютнаяСуммаКт              КАК ВалютнаяСуммаКт,
		|	Хозрасчетный.КоличествоДт                 КАК КоличествоДт,
		|	Хозрасчетный.КоличествоКт                 КАК КоличествоКт,
		|	Хозрасчетный.СуммаНУДт                    КАК СуммаНУДт,
		|	Хозрасчетный.СуммаНУКт                    КАК СуммаНУКт,
		|	Хозрасчетный.СуммаПРДт                    КАК СуммаПРДт,
		|	Хозрасчетный.СуммаПРКт                    КАК СуммаПРКт,
		|	Хозрасчетный.СуммаВРДт                    КАК СуммаВРДт,
		|	Хозрасчетный.СуммаВРКт                    КАК СуммаВРКт,
		|	Хозрасчетный.Содержание                   КАК Содержание,
		|	Хозрасчетный.НеКорректироватьСтоимостьАвтоматически КАК НеКорректироватьСтоимостьАвтоматически
		|ПОМЕСТИТЬ ТекущееСостояние
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ДвиженияССубконто(
		|			,
		|			,
		|			Регистратор В
		|				(ВЫБРАТЬ
		|					Таблица.Ссылка КАК Ссылка
		|				ИЗ
		|					ДокументыКОтражению КАК Таблица)
		|			И НЕ ТИПЗНАЧЕНИЯ(Регистратор) В (&ДокументыОтражаемыеПоследовательно),
		|			,
		|			) КАК Хозрасчетный
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Хозрасчетный.Ссылка                       КАК Ссылка,
		|	Хозрасчетный.Период                       КАК Период,
		|	Хозрасчетный.СчетДт                       КАК СчетДт,
		|	Хозрасчетный.СубконтоДт1                  КАК СубконтоДт1,
		|	Хозрасчетный.ВидСубконтоДт1               КАК ВидСубконтоДт1,
		|	Хозрасчетный.СубконтоДт2                  КАК СубконтоДт2,
		|	Хозрасчетный.ВидСубконтоДт2               КАК ВидСубконтоДт2,
		|	Хозрасчетный.СубконтоДт3                  КАК СубконтоДт3,
		|	Хозрасчетный.ВидСубконтоДт3               КАК ВидСубконтоДт3,
		|	Хозрасчетный.СчетКт                       КАК СчетКт,
		|	Хозрасчетный.СубконтоКт1                  КАК СубконтоКт1,
		|	Хозрасчетный.ВидСубконтоКт1               КАК ВидСубконтоКт1,
		|	Хозрасчетный.СубконтоКт2                  КАК СубконтоКт2,
		|	Хозрасчетный.ВидСубконтоКт2               КАК ВидСубконтоКт2,
		|	Хозрасчетный.СубконтоКт3                  КАК СубконтоКт3,
		|	Хозрасчетный.ВидСубконтоКт3               КАК ВидСубконтоКт3,
		|	Хозрасчетный.Организация                  КАК Организация,
		|	Хозрасчетный.ВалютаДт                     КАК ВалютаДт,
		|	Хозрасчетный.ВалютаКт                     КАК ВалютаКт,
		|	Хозрасчетный.ПодразделениеДт              КАК ПодразделениеДт,
		|	Хозрасчетный.НаправлениеДеятельностиДт    КАК НаправлениеДеятельностиДт,
		|	Хозрасчетный.НалоговоеНазначениеДт    	  КАК НалоговоеНазначениеДт,
		|	Хозрасчетный.ПодразделениеКт              КАК ПодразделениеКт,
		|	Хозрасчетный.НаправлениеДеятельностиКт    КАК НаправлениеДеятельностиКт,
		|	Хозрасчетный.НалоговоеНазначениеКт    	  КАК НалоговоеНазначениеКт,
		|	Хозрасчетный.Сумма                        КАК Сумма,
		|	Хозрасчетный.СуммаУУ                      КАК СуммаУУ,
		|	Хозрасчетный.СуммаФО                      КАК СуммаФО,
		|	Хозрасчетный.ВалютнаяСуммаДт              КАК ВалютнаяСуммаДт,
		|	Хозрасчетный.ВалютнаяСуммаКт              КАК ВалютнаяСуммаКт,
		|	Хозрасчетный.КоличествоДт                 КАК КоличествоДт,
		|	Хозрасчетный.КоличествоКт                 КАК КоличествоКт,
		|	Хозрасчетный.СуммаНУДт                    КАК СуммаНУДт,
		|	Хозрасчетный.СуммаНУКт                    КАК СуммаНУКт,
		|	Хозрасчетный.СуммаПРДт                    КАК СуммаПРДт,
		|	Хозрасчетный.СуммаПРКт                    КАК СуммаПРКт,
		|	Хозрасчетный.СуммаВРДт                    КАК СуммаВРДт,
		|	Хозрасчетный.СуммаВРКт                    КАК СуммаВРКт,
		|	Хозрасчетный.Содержание                   КАК Содержание,
		|	Хозрасчетный.НеКорректироватьСтоимостьАвтоматически КАК НеКорректироватьСтоимостьАвтоматически
		|ИЗ
		|	ТекущееСостояние КАК Хозрасчетный
		|	ЛЕВОЕ СОЕДИНЕНИЕ 
		|		РазрезыКОтражению КАК РазрезыКОтражению
		|	ПО 
		|		Хозрасчетный.Ссылка = РазрезыКОтражению.Ссылка
		|		И Хозрасчетный.ДатаОтражения = РазрезыКОтражению.ДатаОтражения
		|		И Хозрасчетный.Организация = РазрезыКОтражению.Организация
		|	
		|ГДЕ
		|	РазрезыКОтражению.Ссылка ЕСТЬ NULL 
		|
		|УПОРЯДОЧИТЬ ПО
		|	Хозрасчетный.Ссылка
		|
		|ИТОГИ ПО
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ТекущееСостояние");
	
КонецФункции

Функция ЗапросОтражениеДокументовВРеглУчете() Экспорт
	
	Возврат Новый Запрос(
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Статусы.Регистратор                  КАК Ссылка,
		|	Статусы.Период                       КАК Период,
		|	Статусы.Организация                  КАК Организация,
		|	Статусы.ДатаОтражения                КАК ДатаОтражения,
		|	ВЫБОР
		|		КОГДА НЕ РазрезыКОтражению.Ссылка ЕСТЬ NULL
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ Статусы.Статус
		|	КОНЕЦ                                КАК Статус,
		|	Статусы.ИдентификаторСтатуса         КАК ИдентификаторСтатуса
		|ИЗ
		|	ДокументыКОтражению КАК ДокументыКОтражению
		|	
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
		|		РегистрСведений.ОтражениеДокументовВРеглУчете КАК Статусы
		|	ПО 
		|		ДокументыКОтражению.Ссылка = Статусы.Регистратор
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		РазрезыКОтражению КАК РазрезыКОтражению
		|	ПО
		|		Статусы.Регистратор = РазрезыКОтражению.Ссылка
		|		И Статусы.Период = РазрезыКОтражению.Период
		|		И Статусы.Организация = РазрезыКОтражению.Организация
		|		И Статусы.ДатаОтражения = РазрезыКОтражению.ДатаОтражения
		|		
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка,
		|	Организация,
		|	ДатаОтражения
		|
		|ИТОГИ
		|	МАКСИМУМ(Период),
		|	МАКСИМУМ(ИдентификаторСтатуса)
		|ПО
		|	Ссылка");
	
КонецФункции

Функция ЗапросСвязанныеОперацииБух() Экспорт
	
	Возврат Новый Запрос(
		"ВЫБРАТЬ
		|	ДокументыКОтражению.Ссылка            КАК Ссылка,
		|	ОперацияБух.Ссылка                    КАК Регистратор,
		|	ОперацияБух.Дата                      КАК Период,
		|	ОперацияБух.Организация               КАК Организация,
		|	НАЧАЛОПЕРИОДА(ОперацияБух.Дата, ДЕНЬ) КАК ДатаОтражения,
		|	ЗНАЧЕНИЕ(Перечисление.СтатусыОтраженияДокументовВРеглУчете.КОтражениюВУчетеВручную) КАК Статус
		|ИЗ
		|	Документ.ОперацияБух.ЗаполнениеДвижений КАК ОперацияБухОснования
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		ДокументыКОтражению КАК ДокументыКОтражению
		|	ПО
		|		ОперацияБухОснования.Документ = ДокументыКОтражению.Ссылка
		|	
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		Документ.ОперацияБух КАК ОперацияБух
		|	ПО
		|		ОперацияБухОснования.Ссылка = ОперацияБух.Ссылка
		|ГДЕ
		|	НЕ ОперацияБух.ПометкаУдаления
		|	
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка
		|
		|ИТОГИ ПО
		|	Ссылка");
	
КонецФункции

Функция ЗапросЗаданияКФормированиюФинРезультата() Экспорт
	
	Возврат Новый Запрос(
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	РазрезыКОтражению.Организация КАК Организация,
		|	ЗНАЧЕНИЕ(Перечисление.ОперацииЗакрытияМесяца.ФормированиеФинансовогоРезультата) КАК Операция,
		|	НАЧАЛОПЕРИОДА(РазрезыКОтражению.ДатаОтражения, МЕСЯЦ) КАК Месяц
		|ИЗ
		|	РазрезыКОтражению КАК РазрезыКОтражению
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗаданияКЗакрытиюМесяца КАК Задания
		|	ПО
		|		РазрезыКОтражению.Организация = Задания.Организация
		|		И Задания.Операция = ЗНАЧЕНИЕ(Перечисление.ОперацииЗакрытияМесяца.ФормированиеФинансовогоРезультата)
		|		И НАЧАЛОПЕРИОДА(РазрезыКОтражению.ДатаОтражения, МЕСЯЦ) = НАЧАЛОПЕРИОДА(Задания.Месяц, МЕСЯЦ)
		|ГДЕ
		|	КОНЕЦПЕРИОДА(РазрезыКОтражению.Период, ГОД) <= КОНЕЦПЕРИОДА(РазрезыКОтражению.ДатаОтражения, ГОД)
		|	И Задания.Операция ЕСТЬ NULL
		|");
	
КонецФункции


Функция ЗапросОчистки(ИмяДокумента) Экспорт
	
	ТекстЗапросаОчистки = "
	|УНИЧТОЖИТЬ УчетнаяПолитикаОрганизаций;
	|УНИЧТОЖИТЬ КурсыВалют;
	|УНИЧТОЖИТЬ ВтСтроки;
	|УНИЧТОЖИТЬ ВтСтоимости;
	|УНИЧТОЖИТЬ Партии;
	|УНИЧТОЖИТЬ РасчетыСКлиентамиНоваяАрхитектура;
	|УНИЧТОЖИТЬ РасчетыСПоставщикамиНоваяАрхитектура;
	|УНИЧТОЖИТЬ ВТРасчетыСКлиентами;
	|УНИЧТОЖИТЬ ВТРасчетыСПоставщиками;
	|УНИЧТОЖИТЬ ВТРасчетыСКлиентамиПоДокументам;
	|УНИЧТОЖИТЬ ВТРасчетыСПоставщикамиПоДокументам;
	|УНИЧТОЖИТЬ РазрезыКОтражению;
	|УНИЧТОЖИТЬ ДокументыКОтражению;
	|УНИЧТОЖИТЬ Данные;
	|УНИЧТОЖИТЬ ПрочиеСчета;
	|УНИЧТОЖИТЬ Хозрасчетный;
	|УНИЧТОЖИТЬ ОшибкиПроверки;";
	
	ТекстЗапросаВТОтражения = ТекстВТОтраженияДокумента(ИмяДокумента);
	
	Если ТекстЗапросаВТОтражения <> "" Тогда
		ВТЗапросаДанных = РеглУчетВыборкиСерверПовтИсп.ВТЗапроса(ТекстЗапросаВТОтражения);
		Для каждого ВТ Из ВТЗапросаДанных Цикл
			ТекстЗапросаОчистки = ТекстЗапросаОчистки + "
				|УНИЧТОЖИТЬ " + ВТ + ";";
		КонецЦикла;
	КонецЕсли;
	
	Возврат Новый Запрос(ТекстЗапросаОчистки);
	
КонецФункции

#КонецОбласти

#Область ВременныеТаблицы

Функция ТекстПустыеВТ(МассивВТ)
	
	МассивТекстовЗапросаОчисткиВТ = Новый Массив;
	Для каждого ТаблицаВТ из МассивВТ Цикл
		ТекстЗапросаОчисткиВТ =
		"ВЫБРАТЬ
		|	1
		|ПОМЕСТИТЬ #ИмяВременнойТаблицы";
		ТекстЗапросаОчисткиВТ = СтрЗаменить(ТекстЗапросаОчисткиВТ, "#ИмяВременнойТаблицы", ТаблицаВТ);
		МассивТекстовЗапросаОчисткиВТ.Добавить(ТекстЗапросаОчисткиВТ);
	КонецЦикла;
	ТекстЗапросаОчисткиВТ = СтрСоединить(МассивТекстовЗапросаОчисткиВТ, ОбщегоНазначения.РазделительПакетаЗапросов()) + ОбщегоНазначения.РазделительПакетаЗапросов();
	Возврат ТекстЗапросаОчисткиВТ;
	
КонецФункции

Функция ТекстУчетнаяПолитика()
	
	Возврат "
		|ВЫБРАТЬ
		|	РазрезыКОтражению.Ссылка              КАК Ссылка,
		|	РазрезыКОтражению.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
		|	РазрезыКОтражению.ДатаОтражения       КАК ДатаОтражения,
		|	МАКСИМУМ(НастройкиСистемыНалогообложения.Период) КАК ПериодУчетнойПолитики
		|ПОМЕСТИТЬ ПериодыНастройкиСистемыНалогообложения
		|ИЗ
		|	РазрезыКОтражению КАК РазрезыКОтражению
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		РегистрСведений.НастройкиСистемыНалогообложения КАК НастройкиСистемыНалогообложения
		|	ПО
		|		РазрезыКОтражению.ГоловнаяОрганизация = НастройкиСистемыНалогообложения.Организация
		|		И РазрезыКОтражению.ДатаОтражения >= НастройкиСистемыНалогообложения.Период
		|
		|СГРУППИРОВАТЬ ПО
		|	РазрезыКОтражению.Ссылка,
		|	РазрезыКОтражению.ГоловнаяОрганизация,
		|	РазрезыКОтражению.ДатаОтражения
		|	
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка,
		|	ГоловнаяОрганизация
		|;
		|
		|ВЫБРАТЬ
		|	РазрезыКОтражению.Ссылка              КАК Ссылка,
		|	РазрезыКОтражению.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
		|	РазрезыКОтражению.ДатаОтражения       КАК ДатаОтражения,
		|	МАКСИМУМ(УчетнаяПолитикаБухУчета.Период) КАК ПериодУчетнойПолитики
		|ПОМЕСТИТЬ ПериодыНастройкиУчетнаяПолитикаБухУчета
		|ИЗ
		|	РазрезыКОтражению КАК РазрезыКОтражению
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		РегистрСведений.УчетнаяПолитикаБухУчета КАК УчетнаяПолитикаБухУчета
		|	ПО
		|		РазрезыКОтражению.ГоловнаяОрганизация = УчетнаяПолитикаБухУчета.Организация
		|		И РазрезыКОтражению.ДатаОтражения >= УчетнаяПолитикаБухУчета.Период
		|
		|СГРУППИРОВАТЬ ПО
		|	РазрезыКОтражению.Ссылка,
		|	РазрезыКОтражению.ГоловнаяОрганизация,
		|	РазрезыКОтражению.ДатаОтражения
		|	
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка,
		|	ГоловнаяОрганизация
		|;
		|
		|ВЫБРАТЬ
		|	РазрезыКОтражению.Ссылка              КАК Ссылка,
		|	РазрезыКОтражению.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
		|	РазрезыКОтражению.ДатаОтражения       КАК ДатаОтражения,
		|	МАКСИМУМ(НастройкиУчетаНалогаНаПрибыль.Период) КАК ПериодУчетнойПолитики
		|ПОМЕСТИТЬ ПериодыНастройкиУчетаНалогаНаПрибыль
		|ИЗ
		|	РазрезыКОтражению КАК РазрезыКОтражению
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		РегистрСведений.НастройкиУчетаНалогаНаПрибыль КАК НастройкиУчетаНалогаНаПрибыль
		|	ПО
		|		РазрезыКОтражению.ГоловнаяОрганизация = НастройкиУчетаНалогаНаПрибыль.Организация
		|		И РазрезыКОтражению.ДатаОтражения >= НастройкиУчетаНалогаНаПрибыль.Период
		|
		|СГРУППИРОВАТЬ ПО
		|	РазрезыКОтражению.Ссылка,
		|	РазрезыКОтражению.ГоловнаяОрганизация,
		|	РазрезыКОтражению.ДатаОтражения
		|	
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка,
		|	ГоловнаяОрганизация
		|;
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	РазрезыКОтражению.Ссылка        КАК Ссылка,
		|	РазрезыКОтражению.Организация   КАК Организация,
		|	РазрезыКОтражению.Период        КАК Период,
		|	РазрезыКОтражению.ДатаОтражения КАК ДатаОтражения,
		|	ЕСТЬNULL(УчетнаяПолитикаБухУчета.СборкаТоваровЧерезСчет23, ЛОЖЬ) КАК СборкаТоваровЧерезСчет23,
		|	ЕСТЬNULL(УчетнаяПолитикаБухУчета.ВключатьСуммуДооценокОСВСоставНераспределеннойПрибыли, ЛОЖЬ) КАК ВключатьСуммуДооценокОСВСоставНераспределеннойПрибыли,
		|	ЕСТЬNULL(НастройкиСистемыНалогообложения.СистемаНалогообложения, ЗНАЧЕНИЕ(Перечисление.СистемыНалогообложения.Неплательщик)) КАК СистемаНалогообложения
		|ПОМЕСТИТЬ УчетнаяПолитикаОрганизаций
		|ИЗ
		|	РазрезыКОтражению КАК РазрезыКОтражению
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		ПериодыНастройкиСистемыНалогообложения КАК ПериодыНастройкиСистемыНалогообложения
		|	ПО
		|		РазрезыКОтражению.Ссылка = ПериодыНастройкиСистемыНалогообложения.Ссылка
		|		И РазрезыКОтражению.ГоловнаяОрганизация = ПериодыНастройкиСистемыНалогообложения.ГоловнаяОрганизация
		|		И РазрезыКОтражению.ДатаОтражения = ПериодыНастройкиСистемыНалогообложения.ДатаОтражения
		|		
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		РегистрСведений.НастройкиСистемыНалогообложения КАК НастройкиСистемыНалогообложения
		|	ПО
		|		ПериодыНастройкиСистемыНалогообложения.ГоловнаяОрганизация = НастройкиСистемыНалогообложения.Организация
		|		И ПериодыНастройкиСистемыНалогообложения.ПериодУчетнойПолитики = НастройкиСистемыНалогообложения.Период
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		ПериодыНастройкиУчетнаяПолитикаБухУчета КАК ПериодыНастройкиУчетнаяПолитикаБухУчета
		|	ПО
		|		РазрезыКОтражению.Ссылка = ПериодыНастройкиУчетнаяПолитикаБухУчета.Ссылка
		|		И РазрезыКОтражению.ГоловнаяОрганизация = ПериодыНастройкиУчетнаяПолитикаБухУчета.ГоловнаяОрганизация
		|		И РазрезыКОтражению.ДатаОтражения = ПериодыНастройкиУчетнаяПолитикаБухУчета.ДатаОтражения
		|		
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		РегистрСведений.УчетнаяПолитикаБухУчета КАК УчетнаяПолитикаБухУчета
		|	ПО
		|		ПериодыНастройкиУчетнаяПолитикаБухУчета.ГоловнаяОрганизация = УчетнаяПолитикаБухУчета.Организация
		|		И ПериодыНастройкиУчетнаяПолитикаБухУчета.ПериодУчетнойПолитики = УчетнаяПолитикаБухУчета.Период
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		ПериодыНастройкиУчетаНалогаНаПрибыль КАК ПериодыНастройкиУчетаНалогаНаПрибыль
		|	ПО
		|		РазрезыКОтражению.Ссылка = ПериодыНастройкиУчетаНалогаНаПрибыль.Ссылка
		|		И РазрезыКОтражению.ГоловнаяОрганизация = ПериодыНастройкиУчетаНалогаНаПрибыль.ГоловнаяОрганизация
		|		И РазрезыКОтражению.ДатаОтражения = ПериодыНастройкиУчетаНалогаНаПрибыль.ДатаОтражения
		|		
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		РегистрСведений.НастройкиУчетаНалогаНаПрибыль КАК НастройкиУчетаНалогаНаПрибыль
		|	ПО
		|		ПериодыНастройкиУчетаНалогаНаПрибыль.ГоловнаяОрганизация = НастройкиУчетаНалогаНаПрибыль.Организация
		|		И ПериодыНастройкиУчетаНалогаНаПрибыль.ПериодУчетнойПолитики = НастройкиУчетаНалогаНаПрибыль.Период
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка,
		|	Организация
		|;
		|
		|УНИЧТОЖИТЬ ПериодыНастройкиСистемыНалогообложения
		|;
		|УНИЧТОЖИТЬ ПериодыНастройкиУчетаНалогаНаПрибыль
		|;
		|УНИЧТОЖИТЬ ПериодыНастройкиУчетнаяПолитикаБухУчета
		|;
		|";
	
КонецФункции

Функция ТекстСебестоимость()
	
#Область ВтСтроки
	ТекстСебестоимость = "
	|ВЫБРАТЬ
	|	Движения.Регистратор КАК Ссылка,
	|	Движения.Период КАК Период,
	|	Движения.ВидДвижения КАК ВидДвижения,
	|	Аналитика.Номенклатура КАК Номенклатура,
	|	ЕСТЬNULL(КорАналитика.Номенклатура, НЕОПРЕДЕЛЕНО) КАК КорНоменклатура,
	|	Аналитика.МестоХранения КАК Склад,
	|	ЕСТЬNULL(КорАналитика.МестоХранения, Аналитика.МестоХранения) КАК КорСклад,
	|	ВЫБОР
	|		КОГДА Движения.РазделУчета В (ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию),
	|										ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение),
	|										ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаХраненииСПравомПродажи))
	|		ТОГДА ЕСТЬNULL(ВидыЗапасов.Договор.Подразделение, НЕОПРЕДЕЛЕНО)
	|		КОГДА Движения.РазделУчета В (ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаХраненииСПравомПродажиПереданныеПартнерам),
	|										ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.СобственныеТоварыПереданныеПартнерам))
	|		ТОГДА ЕСТЬNULL(Аналитика.Договор.Подразделение, НЕОПРЕДЕЛЕНО)
	|		КОГДА Аналитика.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Склад)
	|		ТОГДА Аналитика.СкладскаяТерритория.Подразделение
	|		КОГДА Аналитика.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение)
	|		ТОГДА Аналитика.Подразделение
	|	ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ КАК ПодразделениеАналитики,
	|	ВЫБОР
	|		КОГДА Движения.КорРазделУчета В (ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию),
	|										ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение),
	|										ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаХраненииСПравомПродажи))
	|		ТОГДА ЕСТЬNULL(ЕСТЬNULL(КорВидыЗапасов.Договор.Подразделение, ВидыЗапасов.Договор.Подразделение), НЕОПРЕДЕЛЕНО)
	|		КОГДА Движения.КорРазделУчета В (ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаХраненииСПравомПродажиПереданныеПартнерам),
	|										ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.СобственныеТоварыПереданныеПартнерам))
	|		ТОГДА ЕСТЬNULL(ЕСТЬNULL(КорАналитика.Договор.Подразделение, Аналитика.Договор.Подразделение), НЕОПРЕДЕЛЕНО)
	|		КОГДА ЕСТЬNULL(КорАналитика.ТипМестаХранения, Аналитика.ТипМестаХранения) = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Склад)
	|			ТОГДА ЕСТЬNULL(КорАналитика.СкладскаяТерритория.Подразделение, Аналитика.СкладскаяТерритория.Подразделение)
	|		КОГДА ЕСТЬNULL(КорАналитика.ТипМестаХранения, Аналитика.ТипМестаХранения) = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение)
	|			ТОГДА ЕСТЬNULL(КорАналитика.Подразделение, Аналитика.Подразделение)
	|	ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ КАК КорПодразделениеАналитики,
	|
	|	ВЫБОР КОГДА Аналитика.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа) ТОГДА
	|		Аналитика.Номенклатура.ГруппаФинансовогоУчета
	|	КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|		ЕСТЬNULL(ВидыЗапасов.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка))
	|	ИНАЧЕ
	|		Аналитика.Номенклатура.ГруппаФинансовогоУчета
	|	КОНЕЦ КАК ГруппаФинансовогоУчета,
	|
	|	ВЫБОР КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|		ЕСТЬNULL(КорВидыЗапасов.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка))
	|	ИНАЧЕ
	|		ЕСТЬNULL(КорАналитика.Номенклатура.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка))
	|	КОНЕЦ КАК КорГруппаФинансовогоУчета,
	|
	|	ЕСТЬNULL(ВидыЗапасов.ТипЗапасов, ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка)) КАК ТипЗапасов,
	|	ЕСТЬNULL(КорВидыЗапасов.ТипЗапасов, ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка)) КАК КорТипЗапасов,
	|
	|	ВЫБОР
	|		КОГДА КорВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ИЛИ КорВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца)
	|			ИЛИ КорВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца)
	|			ИЛИ КорВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи)
	|		ТОГДА КорВидыЗапасов.Контрагент
	|		КОГДА ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ИЛИ ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца)
	|			ИЛИ ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца)
	|			ИЛИ ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи)
	|		ТОГДА ВидыЗапасов.Контрагент
	|		КОГДА Движения.РазделУчета В (ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаХраненииСПравомПродажиПереданныеПартнерам),
	|									ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.СобственныеТоварыПереданныеПартнерам))
	|		ТОГДА ЕСТЬNULL(Аналитика.Контрагент, НЕОПРЕДЕЛЕНО)
	|		КОГДА Движения.АналитикаУчетаПоПартнерам <> ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПоПартнерам.ПустаяСсылка)
	|		ТОГДА Движения.АналитикаУчетаПоПартнерам.Контрагент
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|	КОНЕЦ КАК Контрагент,
	|	ВЫБОР
	|		КОГДА КорВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ИЛИ КорВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца)
	|			ИЛИ КорВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца)
	|			ИЛИ КорВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи)
	|		ТОГДА ЕСТЬNULL(КорВидыЗапасов.Договор.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаРасчетов.ПустаяСсылка))
	|		КОГДА ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ИЛИ ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца)
	|			ИЛИ ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца)
	|			ИЛИ ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи)
	|		ТОГДА ЕСТЬNULL(ВидыЗапасов.Договор.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаРасчетов.ПустаяСсылка))
	|		КОГДА Движения.РазделУчета В (ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаХраненииСПравомПродажиПереданныеПартнерам),
	|									ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.СобственныеТоварыПереданныеПартнерам))
	|		ТОГДА ЕСТЬNULL(Аналитика.Договор.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаРасчетов.ПустаяСсылка))
	|		КОГДА Движения.АналитикаУчетаПоПартнерам <> ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПоПартнерам.ПустаяСсылка)
	|		ТОГДА ЕСТЬNULL(Движения.АналитикаУчетаПоПартнерам.Договор.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаРасчетов.ПустаяСсылка))
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаРасчетов.ПустаяСсылка)
	|	КОНЕЦ КАК ГруппаФинансовогоУчетаРасчетов,
	|
	|	ВЫБОР
	|		КОГДА &ПартионныйУчетВерсии22 И Движения.Период >= НАЧАЛОПЕРИОДА(&ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|			И ТИПЗНАЧЕНИЯ(Движения.АналитикаФинансовогоУчета) = ТИП(Справочник.ГруппыАналитическогоУчетаНоменклатуры)
	|			ТОГДА Движения.АналитикаФинансовогоУчета
	|		КОГДА НЕ &АналитическийУчетПоГруппамПродукции
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|		КОГДА НЕ Движения.ГруппаПродукции = ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|		 И НЕ ТИПЗНАЧЕНИЯ(Движения.Регистратор) В (&ТипыДокументовПроизводства22)
	|		 И НЕ Движения.ХозяйственнаяОперация В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзКладовой),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзПроизводства),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратМатериаловИзПроизводства),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратМатериаловИзКладовой))
	|			ТОГДА Движения.ГруппаПродукции
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК ГруппаПродукции,
	|	ВЫБОР
	|		КОГДА &ПартионныйУчетВерсии22 И Движения.Период >= НАЧАЛОПЕРИОДА(&ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|			И ТИПЗНАЧЕНИЯ(Движения.КорАналитикаФинансовогоУчета) = ТИП(Справочник.ГруппыАналитическогоУчетаНоменклатуры)
	|			ТОГДА Движения.КорАналитикаФинансовогоУчета
	|		КОГДА НЕ &АналитическийУчетПоГруппамПродукции
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|		КОГДА НЕ Движения.ГруппаПродукции = ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|		 И НЕ ТИПЗНАЧЕНИЯ(Движения.Регистратор) В (&ТипыДокументовПроизводства22)
	|		 И НЕ Движения.ХозяйственнаяОперация В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзКладовой),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзПроизводства),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратМатериаловИзПроизводства),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратМатериаловИзКладовой))
	|			ТОГДА Движения.ГруппаПродукции
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК КорГруппаПродукции,
	|
	|	Движения.РазделУчета КАК РазделУчета,
	|	Движения.КорРазделУчета КАК КорРазделУчета,
	|	Движения.Подразделение КАК Подразделение,
	|	Движения.АналитикаРасходов КАК АналитикаРасходов,
	|	Движения.СтатьяРасходовСписания КАК СтатьяРасходов,
	|	Движения.АналитикаДоходов КАК АналитикаДоходов,
	|	Движения.СтатьяДоходов КАК СтатьяДоходов,
	|	Движения.АналитикаАктивовПассивов КАК АналитикаАктивовПассивов,
	|	Движения.СтатьяАктивовПассивов КАК СтатьяАктивовПассивов,
	|	Движения.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|
	|	ВЫБОР
	|		КОГДА Движения.ИдентификаторСтроки = ""ВО"" ТОГДА """"
	|		ИНАЧЕ Движения.ИдентификаторСтроки КОНЕЦ КАК ИдентификаторСтроки,
	|	Движения.ПериодПродажи КАК ПериодПродажи,
	|
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(Движения.Партия) = ТИП(Справочник.ПартииПроизводства)
	|			ТОГДА ВЫРАЗИТЬ(Движения.Партия КАК Справочник.ПартииПроизводства).НаправлениеДеятельности
	|		ИНАЧЕ ЕСТЬNULL(Назначения.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка))
	|	КОНЕЦ КАК НаправлениеДеятельности,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(Движения.КорПартия) = ТИП(Справочник.ПартииПроизводства)
	|			ТОГДА ВЫРАЗИТЬ(Движения.КорПартия КАК Справочник.ПартииПроизводства).НаправлениеДеятельности
	|		ИНАЧЕ ЕСТЬNULL(КорНазначения.НаправлениеДеятельности, Движения.КорНаправлениеДеятельности)
	|	КОНЕЦ КАК КорНаправлениеДеятельности,
	|
	|	ВЫБОР КОГДА Движения.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
	|			-1
	|		ИНАЧЕ
	|			1
	|	КОНЕЦ КАК Знак,
	|	СУММА(Движения.Количество) КАК Количество,
	|	СУММА(
	|		ВЫБОР 
	|			КОГДА Движения.СтоимостьРегл <> 0
	|				ТОГДА Движения.СтоимостьРегл
	|			КОГДА РасчетСебестоимостиТоваровОкончательный.Ссылка ЕСТЬ NULL
	|				ТОГДА ВЫРАЗИТЬ(ЕСТЬNULL(СтоимостьТоваров.СтоимостьРегл, 0) КАК ЧИСЛО(31,2)) * ВЫРАЗИТЬ(Движения.Количество КАК ЧИСЛО(31,3))
	|					+ ВЫРАЗИТЬ(ЕСТЬNULL(СтоимостьТоваров.ДопРасходыРегл, 0) КАК ЧИСЛО(31,2)) * ВЫРАЗИТЬ(Движения.Количество КАК ЧИСЛО(31,3))
	|					+ ВЫРАЗИТЬ(ЕСТЬNULL(СтоимостьТоваров.ТрудозатратыРегл, 0) КАК ЧИСЛО(31,2)) * ВЫРАЗИТЬ(Движения.Количество КАК ЧИСЛО(31,3))
	|					+ ВЫРАЗИТЬ(ЕСТЬNULL(СтоимостьТоваров.ПостатейныеПостоянныеРегл, 0) КАК ЧИСЛО(31,2)) * ВЫРАЗИТЬ(Движения.Количество КАК ЧИСЛО(31,3))
	|					+ ВЫРАЗИТЬ(ЕСТЬNULL(СтоимостьТоваров.ПостатейныеПеременныеРегл, 0) КАК ЧИСЛО(31,2)) * ВЫРАЗИТЬ(Движения.Количество КАК ЧИСЛО(31,3))
	|			ИНАЧЕ 0
	|		КОНЕЦ
	|	) КАК Сумма,
	|	СУММА(
	|		ВЫБОР 
	|			КОГДА Движения.СтоимостьРеглБезНДС <> 0
	|				ТОГДА Движения.СтоимостьРеглБезНДС
	|			КОГДА РасчетСебестоимостиТоваровОкончательный.Ссылка ЕСТЬ NULL
	|				ТОГДА ВЫРАЗИТЬ(ЕСТЬNULL(СтоимостьТоваров.СтоимостьРеглБезНДС, 0) КАК ЧИСЛО(31,2)) * ВЫРАЗИТЬ(Движения.Количество КАК ЧИСЛО(31,3))
	|					+ ВЫРАЗИТЬ(ЕСТЬNULL(СтоимостьТоваров.ДопРасходыРеглБезНДС, 0) КАК ЧИСЛО(31,2)) * ВЫРАЗИТЬ(Движения.Количество КАК ЧИСЛО(31,3))
	|					+ ВЫРАЗИТЬ(ЕСТЬNULL(СтоимостьТоваров.ТрудозатратыРегл, 0) КАК ЧИСЛО(31,2)) * ВЫРАЗИТЬ(Движения.Количество КАК ЧИСЛО(31,3))
	|					+ ВЫРАЗИТЬ(ЕСТЬNULL(СтоимостьТоваров.ПостатейныеПостоянныеРеглБезНДС, 0) КАК ЧИСЛО(31,2)) * ВЫРАЗИТЬ(Движения.Количество КАК ЧИСЛО(31,3))
	|					+ ВЫРАЗИТЬ(ЕСТЬNULL(СтоимостьТоваров.ПостатейныеПеременныеРеглБезНДС, 0) КАК ЧИСЛО(31,2)) * ВЫРАЗИТЬ(Движения.Количество КАК ЧИСЛО(31,3))
	|			ИНАЧЕ 0
	|		КОНЕЦ
	|	) КАК СуммаБезНДС,
	|	СУММА(
	|		ВЫБОР 
	|			КОГДА Движения.СтоимостьУпр <> 0
	|				ТОГДА Движения.СтоимостьУпр
	|			КОГДА РасчетСебестоимостиТоваровОкончательный.Ссылка ЕСТЬ NULL
	|				ТОГДА ВЫРАЗИТЬ(ЕСТЬNULL(СтоимостьТоваров.СтоимостьУпр, 0) КАК ЧИСЛО(31,2)) * ВЫРАЗИТЬ(Движения.Количество КАК ЧИСЛО(31,3))
	|					+ ВЫРАЗИТЬ(ЕСТЬNULL(СтоимостьТоваров.ДопРасходыУпр, 0) КАК ЧИСЛО(31,2)) * ВЫРАЗИТЬ(Движения.Количество КАК ЧИСЛО(31,3))
	|					+ ВЫРАЗИТЬ(ЕСТЬNULL(СтоимостьТоваров.ТрудозатратыУпр, 0) КАК ЧИСЛО(31,2)) * ВЫРАЗИТЬ(Движения.Количество КАК ЧИСЛО(31,3))
	|					+ ВЫРАЗИТЬ(ЕСТЬNULL(СтоимостьТоваров.ПостатейныеПостоянныеУпр, 0) КАК ЧИСЛО(31,2)) * ВЫРАЗИТЬ(Движения.Количество КАК ЧИСЛО(31,3))
	|					+ ВЫРАЗИТЬ(ЕСТЬNULL(СтоимостьТоваров.ПостатейныеПеременныеУпр, 0) КАК ЧИСЛО(31,2)) * ВЫРАЗИТЬ(Движения.Количество КАК ЧИСЛО(31,3))
	|			ИНАЧЕ 0
	|		КОНЕЦ
	|	) КАК СуммаУУ,
	|	СУММА(
	|		ВЫБОР 
	|			КОГДА Движения.СтоимостьУпрБезНДС <> 0
	|				ТОГДА Движения.СтоимостьУпрБезНДС
	|			КОГДА РасчетСебестоимостиТоваровОкончательный.Ссылка ЕСТЬ NULL
	|				ТОГДА ВЫРАЗИТЬ(ЕСТЬNULL(СтоимостьТоваров.СтоимостьУпрБезНДС, 0) КАК ЧИСЛО(31,2)) * ВЫРАЗИТЬ(Движения.Количество КАК ЧИСЛО(31,3))
	|					+ ВЫРАЗИТЬ(ЕСТЬNULL(СтоимостьТоваров.ДопРасходыУпрБезНДС, 0) КАК ЧИСЛО(31,2)) * ВЫРАЗИТЬ(Движения.Количество КАК ЧИСЛО(31,3))
	|					+ ВЫРАЗИТЬ(ЕСТЬNULL(СтоимостьТоваров.ТрудозатратыУпр, 0) КАК ЧИСЛО(31,2)) * ВЫРАЗИТЬ(Движения.Количество КАК ЧИСЛО(31,3))
	|					+ ВЫРАЗИТЬ(ЕСТЬNULL(СтоимостьТоваров.ПостатейныеПостоянныеУпрБезНДС, 0) КАК ЧИСЛО(31,2)) * ВЫРАЗИТЬ(Движения.Количество КАК ЧИСЛО(31,3))
	|					+ ВЫРАЗИТЬ(ЕСТЬNULL(СтоимостьТоваров.ПостатейныеПеременныеУпрБезНДС, 0) КАК ЧИСЛО(31,2)) * ВЫРАЗИТЬ(Движения.Количество КАК ЧИСЛО(31,3))
	|			ИНАЧЕ 0
	|		КОНЕЦ
	|	) КАК СуммаУУБезНДС,
	|	СУММА(
	|		ВЫБОР 
	|			КОГДА Движения.СтоимостьРегл <> 0
	|				ТОГДА Движения.СтоимостьРегл
	|			КОГДА РасчетСебестоимостиТоваровОкончательный.Ссылка ЕСТЬ NULL
	|				ТОГДА ВЫРАЗИТЬ(ЕСТЬNULL(СтоимостьТоваров.СтоимостьРегл, 0) КАК ЧИСЛО(31,2)) * ВЫРАЗИТЬ(Движения.Количество КАК ЧИСЛО(31,3))
	|					+ ВЫРАЗИТЬ(ЕСТЬNULL(СтоимостьТоваров.ДопРасходыРегл, 0) КАК ЧИСЛО(31,2)) * ВЫРАЗИТЬ(Движения.Количество КАК ЧИСЛО(31,3))
	|					+ ВЫРАЗИТЬ(ЕСТЬNULL(СтоимостьТоваров.ТрудозатратыРегл, 0) КАК ЧИСЛО(31,2)) * ВЫРАЗИТЬ(Движения.Количество КАК ЧИСЛО(31,3))
	|					+ ВЫРАЗИТЬ(ЕСТЬNULL(СтоимостьТоваров.ПостатейныеПостоянныеРегл, 0) КАК ЧИСЛО(31,2)) * ВЫРАЗИТЬ(Движения.Количество КАК ЧИСЛО(31,3))
	|					+ ВЫРАЗИТЬ(ЕСТЬNULL(СтоимостьТоваров.ПостатейныеПеременныеРегл, 0) КАК ЧИСЛО(31,2)) * ВЫРАЗИТЬ(Движения.Количество КАК ЧИСЛО(31,3))
	|			ИНАЧЕ 0
	|		КОНЕЦ
	|	) КАК СуммаБалансовая,
	|	СУММА(
	|		ВЫБОР 
	|			КОГДА Движения.СтоимостьРеглБезНДС <> 0
	|				ТОГДА Движения.СтоимостьРеглБезНДС
	|			КОГДА РасчетСебестоимостиТоваровОкончательный.Ссылка ЕСТЬ NULL
	|				ТОГДА ВЫРАЗИТЬ(ЕСТЬNULL(СтоимостьТоваров.СтоимостьРеглБезНДС, 0) КАК ЧИСЛО(31,2)) * ВЫРАЗИТЬ(Движения.Количество КАК ЧИСЛО(31,3))
	|					+ ВЫРАЗИТЬ(ЕСТЬNULL(СтоимостьТоваров.ДопРасходыРеглБезНДС, 0) КАК ЧИСЛО(31,2)) * ВЫРАЗИТЬ(Движения.Количество КАК ЧИСЛО(31,3))
	|					+ ВЫРАЗИТЬ(ЕСТЬNULL(СтоимостьТоваров.ТрудозатратыРегл, 0) КАК ЧИСЛО(31,2)) * ВЫРАЗИТЬ(Движения.Количество КАК ЧИСЛО(31,3))
	|					+ ВЫРАЗИТЬ(ЕСТЬNULL(СтоимостьТоваров.ПостатейныеПостоянныеРеглБезНДС, 0) КАК ЧИСЛО(31,2)) * ВЫРАЗИТЬ(Движения.Количество КАК ЧИСЛО(31,3))
	|					+ ВЫРАЗИТЬ(ЕСТЬNULL(СтоимостьТоваров.ПостатейныеПеременныеРеглБезНДС, 0) КАК ЧИСЛО(31,2)) * ВЫРАЗИТЬ(Движения.Количество КАК ЧИСЛО(31,3))
	|			ИНАЧЕ 0
	|		КОНЕЦ
	|	) КАК СуммаБалансоваяБезНДС,
	|	СУММА(
	|		ВЫБОР 
	|			КОГДА Движения.СтоимостьУпр <> 0
	|				ТОГДА Движения.СтоимостьУпр
	|			КОГДА РасчетСебестоимостиТоваровОкончательный.Ссылка ЕСТЬ NULL
	|				ТОГДА ВЫРАЗИТЬ(ЕСТЬNULL(СтоимостьТоваров.СтоимостьУпр, 0) КАК ЧИСЛО(31,2)) * ВЫРАЗИТЬ(Движения.Количество КАК ЧИСЛО(31,3))
	|					+ ВЫРАЗИТЬ(ЕСТЬNULL(СтоимостьТоваров.ДопРасходыУпр, 0) КАК ЧИСЛО(31,2)) * ВЫРАЗИТЬ(Движения.Количество КАК ЧИСЛО(31,3))
	|					+ ВЫРАЗИТЬ(ЕСТЬNULL(СтоимостьТоваров.ТрудозатратыУпр, 0) КАК ЧИСЛО(31,2)) * ВЫРАЗИТЬ(Движения.Количество КАК ЧИСЛО(31,3))
	|					+ ВЫРАЗИТЬ(ЕСТЬNULL(СтоимостьТоваров.ПостатейныеПостоянныеУпр, 0) КАК ЧИСЛО(31,2)) * ВЫРАЗИТЬ(Движения.Количество КАК ЧИСЛО(31,3))
	|					+ ВЫРАЗИТЬ(ЕСТЬNULL(СтоимостьТоваров.ПостатейныеПеременныеУпр, 0) КАК ЧИСЛО(31,2)) * ВЫРАЗИТЬ(Движения.Количество КАК ЧИСЛО(31,3))
	|			ИНАЧЕ 0
	|		КОНЕЦ
	|	) КАК СуммаБалансоваяУУ,
	|	СУММА(
	|		ВЫБОР 
	|			КОГДА Движения.СтоимостьУпрБезНДС <> 0
	|				ТОГДА Движения.СтоимостьУпрБезНДС
	|			КОГДА РасчетСебестоимостиТоваровОкончательный.Ссылка ЕСТЬ NULL
	|				ТОГДА ВЫРАЗИТЬ(ЕСТЬNULL(СтоимостьТоваров.СтоимостьУпрБезНДС, 0) КАК ЧИСЛО(31,2)) * ВЫРАЗИТЬ(Движения.Количество КАК ЧИСЛО(31,3))
	|					+ ВЫРАЗИТЬ(ЕСТЬNULL(СтоимостьТоваров.ДопРасходыУпрБезНДС, 0) КАК ЧИСЛО(31,2)) * ВЫРАЗИТЬ(Движения.Количество КАК ЧИСЛО(31,3))
	|					+ ВЫРАЗИТЬ(ЕСТЬNULL(СтоимостьТоваров.ТрудозатратыУпр, 0) КАК ЧИСЛО(31,2)) * ВЫРАЗИТЬ(Движения.Количество КАК ЧИСЛО(31,3))
	|					+ ВЫРАЗИТЬ(ЕСТЬNULL(СтоимостьТоваров.ПостатейныеПостоянныеУпрБезНДС, 0) КАК ЧИСЛО(31,2)) * ВЫРАЗИТЬ(Движения.Количество КАК ЧИСЛО(31,3))
	|					+ ВЫРАЗИТЬ(ЕСТЬNULL(СтоимостьТоваров.ПостатейныеПеременныеУпрБезНДС, 0) КАК ЧИСЛО(31,2)) * ВЫРАЗИТЬ(Движения.Количество КАК ЧИСЛО(31,3))
	|			ИНАЧЕ 0
	|		КОНЕЦ
	|	) КАК СуммаБалансоваяУУБезНДС,
	|	СУММА(
	|		ВЫБОР 
	|			КОГДА Движения.СтоимостьЗабалансоваяРегл <> 0
	|				ТОГДА Движения.СтоимостьЗабалансоваяРегл
	|			КОГДА РасчетСебестоимостиТоваровОкончательный.Ссылка ЕСТЬ NULL
	|				ТОГДА ВЫРАЗИТЬ(ЕСТЬNULL(СтоимостьТоваров.СтоимостьЗабалансоваяРегл, 0) КАК ЧИСЛО(31,2)) * ВЫРАЗИТЬ(Движения.Количество КАК ЧИСЛО(31,3))
	|			ИНАЧЕ 0
	|		КОНЕЦ
	|	) КАК СуммаЗабалансовая,
	|	СУММА(
	|		ВЫБОР 
	|			КОГДА Движения.СтоимостьЗабалансовая <> 0
	|				ТОГДА Движения.СтоимостьЗабалансовая
	|			КОГДА РасчетСебестоимостиТоваровОкончательный.Ссылка ЕСТЬ NULL
	|				ТОГДА ВЫРАЗИТЬ(ЕСТЬNULL(СтоимостьТоваров.СтоимостьЗабалансовая, 0) КАК ЧИСЛО(31,2)) * ВЫРАЗИТЬ(Движения.Количество КАК ЧИСЛО(31,3))
	|			ИНАЧЕ 0
	|		КОНЕЦ
	|	) КАК СуммаЗабалансоваяУУ,
	|	СУММА(
	|		ВЫБОР 
	|			КОГДА Движения.НДСРегл <> 0
	|				ТОГДА Движения.НДСРегл
	|			КОГДА РасчетСебестоимостиТоваровОкончательный.Ссылка ЕСТЬ NULL
	|				ТОГДА ВЫРАЗИТЬ(ЕСТЬNULL(СтоимостьТоваров.НДСРегл, 0) КАК ЧИСЛО(31,2)) * ВЫРАЗИТЬ(Движения.Количество КАК ЧИСЛО(31,3))
	|			ИНАЧЕ 0
	|		КОНЕЦ
	|	) КАК НДСРегл,
	|	СУММА(
	|		0
	|	) КАК СуммаПР,
	|	СУММА(
	|		0
	|	) КАК СуммаВР,
	|	СУММА(
	|		0
	|	) КАК СуммаНУ
	|
	|ПОМЕСТИТЬ ВтСтроки
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.СебестоимостьТоваров КАК Движения
	|	ПО
	|		Движения.Регистратор = ДокументыКОтражению.Ссылка
	|		И НЕ Движения.РасчетСебестоимости
	|		И Движения.Активность
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
	|	ПО Движения.ВидЗапасов = ВидыЗапасов.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК КорВидыЗапасов
	|	ПО Движения.КорВидЗапасов = КорВидыЗапасов.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		Движения.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Назначения КАК Назначения
	|		ПО Аналитика.Назначение = Назначения.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.КлючиАналитикиУчетаНоменклатуры КАК КорАналитика
	|	ПО
	|		Движения.КорАналитикаУчетаНоменклатуры = КорАналитика.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Назначения КАК КорНазначения
	|		ПО КорАналитика.Назначение = КорНазначения.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СтоимостьТоваров КАК СтоимостьТоваров
	|	ПО
	|		НАЧАЛОПЕРИОДА(Движения.Период, Месяц) = СтоимостьТоваров.Период
	|		И Движения.АналитикаУчетаНоменклатуры = СтоимостьТоваров.АналитикаУчетаНоменклатуры
	|		И Движения.РазделУчета = СтоимостьТоваров.РазделУчета
	|		И Движения.ВидЗапасов = СтоимостьТоваров.ВидЗапасов
	|		И Движения.Организация = СтоимостьТоваров.Организация
	|		И СтоимостьТоваров.Активность
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.РасчетСебестоимостиТоваров.Организации КАК РасчетСебестоимостиТоваровОкончательный
	|	ПО
	|		НАЧАЛОПЕРИОДА(Движения.Период, Месяц) = НАЧАЛОПЕРИОДА(РасчетСебестоимостиТоваровОкончательный.Ссылка.Дата, МЕСЯЦ)
	|		И Движения.Организация = РасчетСебестоимостиТоваровОкончательный.Организация
	|		И РасчетСебестоимостиТоваровОкончательный.Ссылка.Проведен
	|		И НЕ РасчетСебестоимостиТоваровОкончательный.Ссылка.ПредварительныйРасчет
	|
	|ГДЕ
	|	ВЫБОР 
	|		КОГДА Движения.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение)
	|			И Движения.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|			И Движения.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции)
	|			ТОГДА 
	|				Движения.Количество > 0
	|			ИНАЧЕ
	|				ИСТИНА
	|	КОНЕЦ
	|	И Движения.Количество <> 0
	|	И Движения.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|
	|СГРУППИРОВАТЬ ПО
	|	Движения.Регистратор,
	|	Движения.Период,
	|	Движения.ВидДвижения,
	|	Аналитика.Номенклатура,
	|	ЕСТЬNULL(КорАналитика.Номенклатура, НЕОПРЕДЕЛЕНО),
	|	Аналитика.МестоХранения,
	|	ЕСТЬNULL(КорАналитика.МестоХранения, Аналитика.МестоХранения),
	|	ВЫБОР
	|		КОГДА Движения.РазделУчета В (ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию),
	|										ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение),
	|										ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаХраненииСПравомПродажи))
	|		ТОГДА ЕСТЬNULL(ВидыЗапасов.Договор.Подразделение, НЕОПРЕДЕЛЕНО)
	|		КОГДА Движения.РазделУчета В (ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаХраненииСПравомПродажиПереданныеПартнерам),
	|										ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.СобственныеТоварыПереданныеПартнерам))
	|		ТОГДА ЕСТЬNULL(Аналитика.Договор.Подразделение, НЕОПРЕДЕЛЕНО)
	|		КОГДА Аналитика.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Склад)
	|		ТОГДА Аналитика.СкладскаяТерритория.Подразделение
	|		КОГДА Аналитика.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение)
	|		ТОГДА Аналитика.Подразделение
	|	ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Движения.КорРазделУчета В (ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию),
	|										ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение),
	|										ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаХраненииСПравомПродажи))
	|		ТОГДА ЕСТЬNULL(ЕСТЬNULL(КорВидыЗапасов.Договор.Подразделение, ВидыЗапасов.Договор.Подразделение), НЕОПРЕДЕЛЕНО)
	|		КОГДА Движения.КорРазделУчета В (ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаХраненииСПравомПродажиПереданныеПартнерам),
	|										ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.СобственныеТоварыПереданныеПартнерам))
	|		ТОГДА ЕСТЬNULL(ЕСТЬNULL(КорАналитика.Договор.Подразделение, Аналитика.Договор.Подразделение), НЕОПРЕДЕЛЕНО)
	|		КОГДА ЕСТЬNULL(КорАналитика.ТипМестаХранения, Аналитика.ТипМестаХранения) = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Склад)
	|			ТОГДА ЕСТЬNULL(КорАналитика.СкладскаяТерритория.Подразделение, Аналитика.СкладскаяТерритория.Подразделение)
	|		КОГДА ЕСТЬNULL(КорАналитика.ТипМестаХранения, Аналитика.ТипМестаХранения) = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение)
	|			ТОГДА ЕСТЬNULL(КорАналитика.Подразделение, Аналитика.Подразделение)
	|	ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ,
	|
	|	ВЫБОР КОГДА Аналитика.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа) ТОГДА
	|		Аналитика.Номенклатура.ГруппаФинансовогоУчета
	|	КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|		ЕСТЬNULL(ВидыЗапасов.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка))
	|	ИНАЧЕ
	|		Аналитика.Номенклатура.ГруппаФинансовогоУчета
	|	КОНЕЦ,
	|
	|	ВЫБОР КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|		ЕСТЬNULL(КорВидыЗапасов.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка))
	|	ИНАЧЕ
	|		ЕСТЬNULL(КорАналитика.Номенклатура.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка))
	|	КОНЕЦ,
	|
	|	ЕСТЬNULL(ВидыЗапасов.ТипЗапасов, ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка)),
	|	ЕСТЬNULL(КорВидыЗапасов.ТипЗапасов, ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка)),
	|
	|	ВЫБОР
	|		КОГДА КорВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ИЛИ КорВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца)
	|			ИЛИ КорВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца)
	|			ИЛИ КорВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи)
	|		ТОГДА КорВидыЗапасов.Контрагент
	|		КОГДА ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ИЛИ ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца)
	|			ИЛИ ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца)
	|			ИЛИ ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи)
	|		ТОГДА ВидыЗапасов.Контрагент
	|		КОГДА Движения.РазделУчета В (ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаХраненииСПравомПродажиПереданныеПартнерам),
	|									ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.СобственныеТоварыПереданныеПартнерам))
	|		ТОГДА ЕСТЬNULL(Аналитика.Контрагент, НЕОПРЕДЕЛЕНО)
	|		КОГДА Движения.АналитикаУчетаПоПартнерам <> ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПоПартнерам.ПустаяСсылка)
	|		ТОГДА Движения.АналитикаУчетаПоПартнерам.Контрагент
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА КорВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ИЛИ КорВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца)
	|			ИЛИ КорВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца)
	|			ИЛИ КорВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи)
	|		ТОГДА ЕСТЬNULL(КорВидыЗапасов.Договор.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаРасчетов.ПустаяСсылка))
	|		КОГДА ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ИЛИ ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца)
	|			ИЛИ ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца)
	|			ИЛИ ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи)
	|		ТОГДА ЕСТЬNULL(ВидыЗапасов.Договор.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаРасчетов.ПустаяСсылка))
	|		КОГДА Движения.РазделУчета В (ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаХраненииСПравомПродажиПереданныеПартнерам),
	|									ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.СобственныеТоварыПереданныеПартнерам))
	|		ТОГДА ЕСТЬNULL(Аналитика.Договор.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаРасчетов.ПустаяСсылка))
	|		КОГДА Движения.АналитикаУчетаПоПартнерам <> ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПоПартнерам.ПустаяСсылка)
	|		ТОГДА ЕСТЬNULL(Движения.АналитикаУчетаПоПартнерам.Договор.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаРасчетов.ПустаяСсылка))
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаРасчетов.ПустаяСсылка)
	|	КОНЕЦ,
	|
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(Движения.Партия) = ТИП(Справочник.ПартииПроизводства)
	|			ТОГДА ВЫРАЗИТЬ(Движения.Партия КАК Справочник.ПартииПроизводства).НаправлениеДеятельности
	|		ИНАЧЕ ЕСТЬNULL(Назначения.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка))
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(Движения.КорПартия) = ТИП(Справочник.ПартииПроизводства)
	|			ТОГДА ВЫРАЗИТЬ(Движения.КорПартия КАК Справочник.ПартииПроизводства).НаправлениеДеятельности
	|		ИНАЧЕ ЕСТЬNULL(КорНазначения.НаправлениеДеятельности, Движения.КорНаправлениеДеятельности)
	|	КОНЕЦ,
	|
	|	Движения.АналитикаРасходов,
	|	Движения.РазделУчета,
	|	Движения.КорРазделУчета,
	|	Движения.Подразделение,
	|	Движения.СтатьяРасходовСписания,
	|	Движения.АналитикаДоходов,
	|	Движения.СтатьяДоходов,
	|	Движения.АналитикаАктивовПассивов,
	|	Движения.СтатьяАктивовПассивов,
	|	Движения.ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА Движения.ИдентификаторСтроки = ""ВО"" ТОГДА """"
	|		ИНАЧЕ Движения.ИдентификаторСтроки КОНЕЦ,
	|	Движения.ПериодПродажи,
	|	ВЫБОР
	|		КОГДА &ПартионныйУчетВерсии22 И Движения.Период >= НАЧАЛОПЕРИОДА(&ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|			И ТИПЗНАЧЕНИЯ(Движения.АналитикаФинансовогоУчета) = ТИП(Справочник.ГруппыАналитическогоУчетаНоменклатуры)
	|			ТОГДА Движения.АналитикаФинансовогоУчета
	|		КОГДА НЕ &АналитическийУчетПоГруппамПродукции
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|		КОГДА НЕ Движения.ГруппаПродукции = ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|		 И НЕ ТИПЗНАЧЕНИЯ(Движения.Регистратор) В (&ТипыДокументовПроизводства22)
	|		 И НЕ Движения.ХозяйственнаяОперация В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзКладовой),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзПроизводства),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратМатериаловИзПроизводства),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратМатериаловИзКладовой))
	|			ТОГДА Движения.ГруппаПродукции
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ПартионныйУчетВерсии22 И Движения.Период >= НАЧАЛОПЕРИОДА(&ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|			И ТИПЗНАЧЕНИЯ(Движения.КорАналитикаФинансовогоУчета) = ТИП(Справочник.ГруппыАналитическогоУчетаНоменклатуры)
	|			ТОГДА Движения.КорАналитикаФинансовогоУчета
	|		КОГДА НЕ &АналитическийУчетПоГруппамПродукции
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|		КОГДА НЕ Движения.ГруппаПродукции = ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|		 И НЕ ТИПЗНАЧЕНИЯ(Движения.Регистратор) В (&ТипыДокументовПроизводства22)
	|		 И НЕ Движения.ХозяйственнаяОперация В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзКладовой),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзПроизводства),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратМатериаловИзПроизводства),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратМатериаловИзКладовой))
	|			ТОГДА Движения.ГруппаПродукции
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	Номенклатура
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
#КонецОбласти

#Область ВтСтоимости
	ТекстСебестоимость = ТекстСебестоимость + "
	|ВЫБРАТЬ
	|	Движения.ДокументДвижения КАК Ссылка,
	|	Движения.Период КАК Период,
	|	Движения.ВидДвижения КАК ВидДвижения,
	|	Аналитика.Номенклатура КАК Номенклатура,
	|	ЕСТЬNULL(КорАналитика.Номенклатура, НЕОПРЕДЕЛЕНО) КАК КорНоменклатура,
	|	Аналитика.МестоХранения КАК Склад,
	|	ЕСТЬNULL(КорАналитика.МестоХранения, Аналитика.МестоХранения) КАК КорСклад,
	|	ВЫБОР
	|		КОГДА Движения.РазделУчета В (ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию),
	|										ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение),
	|										ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаХраненииСПравомПродажи))
	|		ТОГДА ЕСТЬNULL(ВидыЗапасов.Договор.Подразделение, НЕОПРЕДЕЛЕНО)
	|		КОГДА Движения.РазделУчета В (ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаХраненииСПравомПродажиПереданныеПартнерам),
	|										ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.СобственныеТоварыПереданныеПартнерам))
	|		ТОГДА ЕСТЬNULL(Аналитика.Договор.Подразделение, НЕОПРЕДЕЛЕНО)
	|		КОГДА Аналитика.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Склад)
	|		ТОГДА Аналитика.СкладскаяТерритория.Подразделение
	|		КОГДА Аналитика.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение)
	|		ТОГДА Аналитика.Подразделение
	|	ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ КАК ПодразделениеАналитики,
	|	ВЫБОР
	|		КОГДА Движения.КорРазделУчета В (ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию),
	|										ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение),
	|										ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаХраненииСПравомПродажи))
	|		ТОГДА ЕСТЬNULL(ЕСТЬNULL(КорВидыЗапасов.Договор.Подразделение, ВидыЗапасов.Договор.Подразделение), НЕОПРЕДЕЛЕНО)
	|		КОГДА Движения.КорРазделУчета В (ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаХраненииСПравомПродажиПереданныеПартнерам),
	|										ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.СобственныеТоварыПереданныеПартнерам))
	|		ТОГДА ЕСТЬNULL(ЕСТЬNULL(КорАналитика.Договор.Подразделение, Аналитика.Договор.Подразделение), НЕОПРЕДЕЛЕНО)
	|		КОГДА ЕСТЬNULL(КорАналитика.ТипМестаХранения, Аналитика.ТипМестаХранения) = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Склад)
	|			ТОГДА ЕСТЬNULL(КорАналитика.СкладскаяТерритория.Подразделение, Аналитика.СкладскаяТерритория.Подразделение)
	|		КОГДА ЕСТЬNULL(КорАналитика.ТипМестаХранения, Аналитика.ТипМестаХранения) = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение)
	|			ТОГДА ЕСТЬNULL(КорАналитика.Подразделение, Аналитика.Подразделение)
	|	ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ КАК КорПодразделениеАналитики,
	|
	|	ВЫБОР КОГДА Аналитика.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа) ТОГДА
	|		Аналитика.Номенклатура.ГруппаФинансовогоУчета
	|	КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|		ЕСТЬNULL(ВидыЗапасов.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка))
	|	ИНАЧЕ
	|		Аналитика.Номенклатура.ГруппаФинансовогоУчета
	|	КОНЕЦ КАК ГруппаФинансовогоУчета,
	|	ВЫБОР КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|		ЕСТЬNULL(КорВидыЗапасов.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка))
	|	ИНАЧЕ
	|		ЕСТЬNULL(КорАналитика.Номенклатура.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка))
	|	КОНЕЦ КАК КорГруппаФинансовогоУчета,
	|
	|	ЕСТЬNULL(ВидыЗапасов.ТипЗапасов, ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка)) КАК ТипЗапасов,
	|	ЕСТЬNULL(КорВидыЗапасов.ТипЗапасов, ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка)) КАК КорТипЗапасов,
	|
	|	ВЫБОР
	|		КОГДА КорВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ИЛИ КорВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца)
	|			ИЛИ КорВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца)
	|			ИЛИ КорВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи)
	|		ТОГДА КорВидыЗапасов.Контрагент
	|		КОГДА ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ИЛИ ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца)
	|			ИЛИ ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца)
	|			ИЛИ ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи)
	|		ТОГДА ВидыЗапасов.Контрагент
	|		КОГДА Движения.РазделУчета В (ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаХраненииСПравомПродажиПереданныеПартнерам),
	|									ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.СобственныеТоварыПереданныеПартнерам))
	|		ТОГДА ЕСТЬNULL(Аналитика.Контрагент, НЕОПРЕДЕЛЕНО)
	|		КОГДА Движения.АналитикаУчетаПоПартнерам <> ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПоПартнерам.ПустаяСсылка)
	|		ТОГДА Движения.АналитикаУчетаПоПартнерам.Контрагент
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|	КОНЕЦ КАК Контрагент,
	|	ВЫБОР
	|		КОГДА КорВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ИЛИ КорВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца)
	|			ИЛИ КорВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца)
	|			ИЛИ КорВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи)
	|		ТОГДА ЕСТЬNULL(КорВидыЗапасов.Договор.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаРасчетов.ПустаяСсылка))
	|		КОГДА ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ИЛИ ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца)
	|			ИЛИ ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца)
	|			ИЛИ ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи)
	|		ТОГДА ЕСТЬNULL(ВидыЗапасов.Договор.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаРасчетов.ПустаяСсылка))
	|		КОГДА Движения.РазделУчета В (ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаХраненииСПравомПродажиПереданныеПартнерам),
	|									ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.СобственныеТоварыПереданныеПартнерам))
	|		ТОГДА ЕСТЬNULL(Аналитика.Договор.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаРасчетов.ПустаяСсылка))
	|		КОГДА Движения.АналитикаУчетаПоПартнерам <> ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПоПартнерам.ПустаяСсылка)
	|		ТОГДА ЕСТЬNULL(Движения.АналитикаУчетаПоПартнерам.Договор.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаРасчетов.ПустаяСсылка))
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаРасчетов.ПустаяСсылка)
	|	КОНЕЦ КАК ГруппаФинансовогоУчетаРасчетов,
	|
	|	ВЫБОР
	|		КОГДА &ПартионныйУчетВерсии22 И Движения.Период >= НАЧАЛОПЕРИОДА(&ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|			И ТИПЗНАЧЕНИЯ(Движения.АналитикаФинансовогоУчета) = ТИП(Справочник.ГруппыАналитическогоУчетаНоменклатуры)
	|			ТОГДА Движения.АналитикаФинансовогоУчета
	|		КОГДА НЕ &АналитическийУчетПоГруппамПродукции
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|		КОГДА НЕ Движения.ГруппаПродукции = ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|		 И НЕ ТИПЗНАЧЕНИЯ(Движения.Регистратор) В (&ТипыДокументовПроизводства22)
	|		 И НЕ Движения.ХозяйственнаяОперация В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзКладовой),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзПроизводства),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратМатериаловИзПроизводства),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратМатериаловИзКладовой))
	|			ТОГДА Движения.ГруппаПродукции
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК ГруппаПродукции,
	|	ВЫБОР
	|		КОГДА &ПартионныйУчетВерсии22 И Движения.Период >= НАЧАЛОПЕРИОДА(&ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|			И ТИПЗНАЧЕНИЯ(Движения.КорАналитикаФинансовогоУчета) = ТИП(Справочник.ГруппыАналитическогоУчетаНоменклатуры)
	|			ТОГДА Движения.КорАналитикаФинансовогоУчета
	|		КОГДА НЕ &АналитическийУчетПоГруппамПродукции
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|		КОГДА НЕ Движения.ГруппаПродукции = ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|		 И НЕ ТИПЗНАЧЕНИЯ(Движения.Регистратор) В (&ТипыДокументовПроизводства22)
	|		 И НЕ Движения.ХозяйственнаяОперация В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзКладовой),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзПроизводства),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратМатериаловИзПроизводства),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратМатериаловИзКладовой))
	|			ТОГДА Движения.ГруппаПродукции
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК КорГруппаПродукции,
	|
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(Движения.Партия) = ТИП(Справочник.ПартииПроизводства)
	|			ТОГДА ВЫРАЗИТЬ(Движения.Партия КАК Справочник.ПартииПроизводства).НаправлениеДеятельности
	|		ИНАЧЕ ЕСТЬNULL(Назначения.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка))
	|	КОНЕЦ КАК НаправлениеДеятельности,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(Движения.КорПартия) = ТИП(Справочник.ПартииПроизводства)
	|			ТОГДА ВЫРАЗИТЬ(Движения.КорПартия КАК Справочник.ПартииПроизводства).НаправлениеДеятельности
	|		ИНАЧЕ ЕСТЬNULL(КорНазначения.НаправлениеДеятельности, Движения.КорНаправлениеДеятельности)
	|	КОНЕЦ КАК КорНаправлениеДеятельности,
	|
	|	Движения.РазделУчета КАК РазделУчета,
	|	Движения.КорРазделУчета КАК КорРазделУчета,
	|	Движения.Подразделение КАК Подразделение,
	|	Движения.АналитикаРасходов КАК АналитикаРасходов,
	|	Движения.СтатьяРасходовСписания КАК СтатьяРасходов,
	|	Движения.АналитикаДоходов КАК АналитикаДоходов,
	|	Движения.СтатьяДоходов КАК СтатьяДоходов,
	|	Движения.АналитикаАктивовПассивов КАК АналитикаАктивовПассивов,
	|	Движения.СтатьяАктивовПассивов КАК СтатьяАктивовПассивов,
	|	Движения.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА Движения.ИдентификаторСтроки = ""ВО"" ТОГДА """"
	|		ИНАЧЕ Движения.ИдентификаторСтроки КОНЕЦ КАК ИдентификаторСтроки,
	|	Движения.ПериодПродажи КАК ПериодПродажи,
	|	ВЫБОР 
	|		КОГДА Движения.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
	|			-1
	|		ИНАЧЕ
	|			1
	|	КОНЕЦ КАК Знак,
	|	СУММА(Движения.СтоимостьРегл + Движения.ДопРасходыРегл + Движения.ТрудозатратыРегл + Движения.ПостатейныеПостоянныеРегл
	|		+ Движения.ПостатейныеПеременныеРегл + Движения.СтоимостьЗабалансоваяРегл) КАК Сумма,
	|	СУММА(Движения.СтоимостьРеглБезНДС + Движения.ДопРасходыРеглБезНДС + Движения.ТрудозатратыРегл + Движения.ПостатейныеПостоянныеРеглБезНДС
	|		+ Движения.ПостатейныеПеременныеРеглБезНДС + Движения.СтоимостьЗабалансоваяРегл) КАК СуммаБезНДС,
	|	СУММА(Движения.СтоимостьУпр + Движения.ДопРасходыУпр + Движения.ТрудозатратыУпр
	|		+ Движения.ПостатейныеПостоянныеУпр + Движения.ПостатейныеПеременныеУпр) КАК СуммаУУ,
	|	СУММА(Движения.СтоимостьУпрБезНДС + Движения.ДопРасходыУпрБезНДС + Движения.ТрудозатратыУпр
	|		+ Движения.ПостатейныеПостоянныеУпрБезНДС + Движения.ПостатейныеПеременныеУпрБезНДС) КАК СуммаУУБезНДС,
	|	СУММА(Движения.СтоимостьРегл + Движения.ДопРасходыРегл + Движения.ТрудозатратыРегл + Движения.ПостатейныеПостоянныеРегл
	|		+ Движения.ПостатейныеПеременныеРегл)КАК СуммаБалансовая,
	|	СУММА(Движения.СтоимостьРеглБезНДС + Движения.ДопРасходыРеглБезНДС + Движения.ТрудозатратыРегл + Движения.ПостатейныеПостоянныеРеглБезНДС
	|		+ Движения.ПостатейныеПеременныеРеглБезНДС)КАК СуммаБалансоваяБезНДС,
	|	СУММА(Движения.СтоимостьУпр + Движения.ДопРасходыУпр + Движения.ТрудозатратыУпр + Движения.ПостатейныеПостоянныеУпр
	|		+ Движения.ПостатейныеПеременныеУпр)КАК СуммаБалансоваяУУ,
	|	СУММА(Движения.СтоимостьУпрБезНДС + Движения.ДопРасходыУпрБезНДС + Движения.ТрудозатратыУпр + Движения.ПостатейныеПостоянныеУпрБезНДС
	|		+ Движения.ПостатейныеПеременныеУпрБезНДС)КАК СуммаБалансоваяУУБезНДС,
	|	СУММА(Движения.СтоимостьЗабалансоваяРегл) КАК СуммаЗабалансовая,
	|	0 КАК СуммаЗабалансоваяУУ,
	|	СУММА(0) КАК СуммаНУ,
	|	СУММА(0) КАК СуммаПР,
	|	СУММА(0) КАК СуммаВР,
	|	СУММА(Движения.НДСРегл) КАК НДСРегл,
	|	СУММА(ВЫБОР КОГДА Движения.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) И Движения.СтоимостьРегл < 0 ТОГДА -Движения.СтоимостьРегл ИНАЧЕ 0 КОНЕЦ) КАК СуммаИсключенияНДС,
	|	СУММА(ВЫБОР КОГДА Движения.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) И Движения.СтоимостьУпр < 0 ТОГДА -Движения.СтоимостьУпр ИНАЧЕ 0 КОНЕЦ) КАК СуммаИсключенияНДСУпр
	|
	|ПОМЕСТИТЬ ВтСтоимости
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.СебестоимостьТоваров КАК Движения
	|	ПО
	|		Движения.ДокументДвижения = ДокументыКОтражению.Ссылка
	|		И Движения.Активность
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		Движения.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.КлючиАналитикиУчетаНоменклатуры КАК КорАналитика
	|	ПО
	|		Движения.КорАналитикаУчетаНоменклатуры = КорАналитика.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
	|	ПО Движения.ВидЗапасов = ВидыЗапасов.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК КорВидыЗапасов
	|	ПО Движения.КорВидЗапасов = КорВидыЗапасов.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Назначения КАК Назначения
	|		ПО Аналитика.Назначение = Назначения.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Назначения КАК КорНазначения
	|		ПО КорАналитика.Назначение = КорНазначения.Ссылка
	|ГДЕ
	|	ВЫБОР 
	|		КОГДА Движения.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение)
	|			И Движения.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|			И Движения.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции)
	|			ТОГДА 
	|				Движения.СтоимостьЗабалансоваяРегл > 0
	|			ИНАЧЕ
	|				ИСТИНА
	|	КОНЕЦ
	|	И Движения.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	
	|СГРУППИРОВАТЬ ПО
	|	Движения.ДокументДвижения,
	|	Движения.Период,
	|	Движения.ВидДвижения,
	|	Аналитика.Номенклатура,
	|	ЕСТЬNULL(КорАналитика.Номенклатура, НЕОПРЕДЕЛЕНО),
	|	Аналитика.МестоХранения,
	|	ЕСТЬNULL(КорАналитика.МестоХранения, Аналитика.МестоХранения),
	|	ВЫБОР
	|		КОГДА Движения.РазделУчета В (ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию),
	|										ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение),
	|										ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаХраненииСПравомПродажи))
	|		ТОГДА ЕСТЬNULL(ВидыЗапасов.Договор.Подразделение, НЕОПРЕДЕЛЕНО)
	|		КОГДА Движения.РазделУчета В (ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаХраненииСПравомПродажиПереданныеПартнерам),
	|										ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.СобственныеТоварыПереданныеПартнерам))
	|		ТОГДА ЕСТЬNULL(Аналитика.Договор.Подразделение, НЕОПРЕДЕЛЕНО)
	|		КОГДА Аналитика.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Склад)
	|		ТОГДА Аналитика.СкладскаяТерритория.Подразделение
	|		КОГДА Аналитика.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение)
	|		ТОГДА Аналитика.Подразделение
	|	ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Движения.КорРазделУчета В (ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию),
	|										ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение),
	|										ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаХраненииСПравомПродажи))
	|		ТОГДА ЕСТЬNULL(ЕСТЬNULL(КорВидыЗапасов.Договор.Подразделение, ВидыЗапасов.Договор.Подразделение), НЕОПРЕДЕЛЕНО)
	|		КОГДА Движения.КорРазделУчета В (ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаХраненииСПравомПродажиПереданныеПартнерам),
	|										ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.СобственныеТоварыПереданныеПартнерам))
	|		ТОГДА ЕСТЬNULL(ЕСТЬNULL(КорАналитика.Договор.Подразделение, Аналитика.Договор.Подразделение), НЕОПРЕДЕЛЕНО)
	|		КОГДА ЕСТЬNULL(КорАналитика.ТипМестаХранения, Аналитика.ТипМестаХранения) = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Склад)
	|			ТОГДА ЕСТЬNULL(КорАналитика.СкладскаяТерритория.Подразделение, Аналитика.СкладскаяТерритория.Подразделение)
	|		КОГДА ЕСТЬNULL(КорАналитика.ТипМестаХранения, Аналитика.ТипМестаХранения) = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение)
	|			ТОГДА ЕСТЬNULL(КорАналитика.Подразделение, Аналитика.Подразделение)
	|	ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ,
	|
	|	ВЫБОР КОГДА Аналитика.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа) ТОГДА
	|		Аналитика.Номенклатура.ГруппаФинансовогоУчета
	|	КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|		ЕСТЬNULL(ВидыЗапасов.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка))
	|	ИНАЧЕ
	|		Аналитика.Номенклатура.ГруппаФинансовогоУчета
	|	КОНЕЦ,
	|	ВЫБОР КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|		ЕСТЬNULL(КорВидыЗапасов.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка))
	|	ИНАЧЕ
	|		ЕСТЬNULL(КорАналитика.Номенклатура.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка))
	|	КОНЕЦ,
	|
	|	ЕСТЬNULL(ВидыЗапасов.ТипЗапасов, ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка)),
	|	ЕСТЬNULL(КорВидыЗапасов.ТипЗапасов, ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка)),
	|
	|	ВЫБОР
	|		КОГДА КорВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ИЛИ КорВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца)
	|			ИЛИ КорВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца)
	|			ИЛИ КорВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи)
	|		ТОГДА КорВидыЗапасов.Контрагент
	|		КОГДА ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ИЛИ ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца)
	|			ИЛИ ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца)
	|			ИЛИ ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи)
	|		ТОГДА ВидыЗапасов.Контрагент
	|		КОГДА Движения.РазделУчета В (ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаХраненииСПравомПродажиПереданныеПартнерам),
	|									ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.СобственныеТоварыПереданныеПартнерам))
	|		ТОГДА ЕСТЬNULL(Аналитика.Контрагент, НЕОПРЕДЕЛЕНО)
	|		КОГДА Движения.АналитикаУчетаПоПартнерам <> ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПоПартнерам.ПустаяСсылка)
	|		ТОГДА Движения.АналитикаУчетаПоПартнерам.Контрагент
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА КорВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ИЛИ КорВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца)
	|			ИЛИ КорВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца)
	|			ИЛИ КорВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи)
	|		ТОГДА ЕСТЬNULL(КорВидыЗапасов.Договор.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаРасчетов.ПустаяСсылка))
	|		КОГДА ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ИЛИ ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца)
	|			ИЛИ ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца)
	|			ИЛИ ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи)
	|		ТОГДА ЕСТЬNULL(ВидыЗапасов.Договор.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаРасчетов.ПустаяСсылка))
	|		КОГДА Движения.РазделУчета В (ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаХраненииСПравомПродажиПереданныеПартнерам),
	|									ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.СобственныеТоварыПереданныеПартнерам))
	|		ТОГДА ЕСТЬNULL(Аналитика.Договор.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаРасчетов.ПустаяСсылка))
	|		КОГДА Движения.АналитикаУчетаПоПартнерам <> ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПоПартнерам.ПустаяСсылка)
	|		ТОГДА ЕСТЬNULL(Движения.АналитикаУчетаПоПартнерам.Договор.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаРасчетов.ПустаяСсылка))
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаРасчетов.ПустаяСсылка)
	|	КОНЕЦ,
	|
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(Движения.Партия) = ТИП(Справочник.ПартииПроизводства)
	|			ТОГДА ВЫРАЗИТЬ(Движения.Партия КАК Справочник.ПартииПроизводства).НаправлениеДеятельности
	|		ИНАЧЕ ЕСТЬNULL(Назначения.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка))
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(Движения.КорПартия) = ТИП(Справочник.ПартииПроизводства)
	|			ТОГДА ВЫРАЗИТЬ(Движения.КорПартия КАК Справочник.ПартииПроизводства).НаправлениеДеятельности
	|		ИНАЧЕ ЕСТЬNULL(КорНазначения.НаправлениеДеятельности, Движения.КорНаправлениеДеятельности)
	|	КОНЕЦ,
	|
	|	Движения.АналитикаРасходов,
	|	Движения.РазделУчета,
	|	Движения.КорРазделУчета,
	|	Движения.Подразделение,
	|	Движения.СтатьяРасходовСписания,
	|	Движения.АналитикаДоходов,
	|	Движения.СтатьяДоходов,
	|	Движения.АналитикаАктивовПассивов,
	|	Движения.СтатьяАктивовПассивов,
	|	Движения.ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА Движения.ИдентификаторСтроки = ""ВО"" ТОГДА """"
	|		ИНАЧЕ Движения.ИдентификаторСтроки КОНЕЦ,
	|	Движения.ПериодПродажи,
	|	ВЫБОР
	|		КОГДА &ПартионныйУчетВерсии22 И Движения.Период >= НАЧАЛОПЕРИОДА(&ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|			И ТИПЗНАЧЕНИЯ(Движения.АналитикаФинансовогоУчета) = ТИП(Справочник.ГруппыАналитическогоУчетаНоменклатуры)
	|			ТОГДА Движения.АналитикаФинансовогоУчета
	|		КОГДА НЕ &АналитическийУчетПоГруппамПродукции
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|		КОГДА НЕ Движения.ГруппаПродукции = ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|		 И НЕ ТИПЗНАЧЕНИЯ(Движения.Регистратор) В (&ТипыДокументовПроизводства22)
	|		 И НЕ Движения.ХозяйственнаяОперация В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзКладовой),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзПроизводства),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратМатериаловИзПроизводства),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратМатериаловИзКладовой))
	|			ТОГДА Движения.ГруппаПродукции
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ПартионныйУчетВерсии22 И Движения.Период >= НАЧАЛОПЕРИОДА(&ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|			И ТИПЗНАЧЕНИЯ(Движения.КорАналитикаФинансовогоУчета) = ТИП(Справочник.ГруппыАналитическогоУчетаНоменклатуры)
	|			ТОГДА Движения.КорАналитикаФинансовогоУчета
	|		КОГДА НЕ &АналитическийУчетПоГруппамПродукции
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|		КОГДА НЕ Движения.ГруппаПродукции = ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|		 И НЕ ТИПЗНАЧЕНИЯ(Движения.Регистратор) В (&ТипыДокументовПроизводства22)
	|		 И НЕ Движения.ХозяйственнаяОперация В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзКладовой),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзПроизводства),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратМатериаловИзПроизводства),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратМатериаловИзКладовой))
	|			ТОГДА Движения.ГруппаПродукции
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	Номенклатура,
	|	Склад,
	|	ГруппаФинансовогоУчета,
	|	ТипЗапасов,
	|	Контрагент
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
#КонецОбласти
	
	ТипыДокументовПроизводства22 = Новый Массив;
	ТипыДокументовПроизводства22.Добавить("ТИП(Документ.ДвижениеПродукцииИМатериалов)");
	ТипыДокументовПроизводства22.Добавить("ТИП(Документ.ПроизводствоБезЗаказа)");
	ТекстСебестоимость = СтрЗаменить(ТекстСебестоимость, "&ТипыДокументовПроизводства22", СтрСоединить(ТипыДокументовПроизводства22, ","));
	
	Возврат ТекстСебестоимость;
	
КонецФункции

Функция ТекстПартии() Экспорт
	
	
	Возврат	"
		|ВЫБРАТЬ
		|	КорректировкиНДСПартий.Регистратор КАК Ссылка,
		|	КорректировкиНДСПартий.Период КАК Период,
		|	КорректировкиНДСПартий.Организация КАК Организация,
		|	ВЫБОР 
		|		КОГДА (КорректировкиНДСПартий.НДСРегл - КорректировкиНДСПартий.НДСРеглПоФакту) < 0 
		|			ТОГДА -(КорректировкиНДСПартий.НДСРегл - КорректировкиНДСПартий.НДСРеглПоФакту) 
		|		ИНАЧЕ (КорректировкиНДСПартий.НДСРегл - КорректировкиНДСПартий.НДСРеглПоФакту) 
		|	КОНЕЦ КАК НДСРегл,
		|	ВЫБОР 
		|		КОГДА (КорректировкиНДСПартий.НДСУпр - КорректировкиНДСПартий.НДСУпрПоФакту) < 0 
		|			ТОГДА -(КорректировкиНДСПартий.НДСУпр - КорректировкиНДСПартий.НДСУпрПоФакту) 
		|		ИНАЧЕ (КорректировкиНДСПартий.НДСУпр - КорректировкиНДСПартий.НДСУпрПоФакту) 
		|	КОНЕЦ КАК НДСУпр,
		|	КорректировкиНДСПартий.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	КорректировкиНДСПартий.КорАналитикаУчетаНоменклатуры КАК КорАналитикаУчетаНоменклатуры,
		|	КорректировкиНДСПартий.ДокументПоступления КАК ДокументПоступления,
		|	КорректировкиНДСПартий.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
		|	КорректировкиНДСПартий.НалоговоеНазначение КАК НалоговоеНазначениеПартии,
		|	КорректировкиНДСПартий.НалоговоеНазначение.ВидДеятельностиНДС КАК ВидДеятельностиНДСПартии,
		|	КорректировкиНДСПартий.ВидЗапасов КАК ВидЗапасов,
		|	КорректировкиНДСПартий.КорВидЗапасов КАК КорВидЗапасов,
		|	КорректировкиНДСПартий.ГруппаПродукции КАК ГруппаПродукции,
		|	КорректировкиНДСПартий.КорГруппаПродукции КАК КорГруппаПродукции,
		|	КорректировкиНДСПартий.НалоговоеНазначениеПоФакту КАК НалоговоеНазначение,
		|	КорректировкиНДСПартий.НалоговоеНазначениеПоФакту.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
		|	КорректировкиНДСПартий.СтатьяРасходовСписания КАК СтатьяРасходов,
		|	КорректировкиНДСПартий.АналитикаРасходов КАК АналитикаРасходов,
		|	КорректировкиНДСПартий.АналитикаАктивовПассивов КАК АналитикаАктивовПассивов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяСписанияНДС,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаСписанияНДС,
		|	КорректировкиНДСПартий.ПодразделениеРасходов КАК ПодразделениеРасходов,
		|	КорректировкиНДСПартий.ПодразделениеПолучатель КАК КорПодразделение,
		|	КорректировкиНДСПартий.АналитикаУчетаНоменклатуры.Назначение.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	КорректировкиНДСПартий.КорАналитикаУчетаНоменклатуры.Назначение.НаправлениеДеятельности КАК КорНаправлениеДеятельности,
		|	NULL КАК ИдентификаторСтроки
		|	
		|ПОМЕСТИТЬ Партии_Предварительная
		|ИЗ
		|	ДокументыКОтражению КАК ДокументыКОтражению
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		РегистрНакопления.КорректировкиНДСПартий КАК КорректировкиНДСПартий
		|	ПО
		|		КорректировкиНДСПартий.Регистратор = ДокументыКОтражению.Ссылка
		//|	ЛЕВОЕ СОЕДИНЕНИЕ 
		//|		РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
		//|	ПО
		//|		ДанныеПервичныхДокументов.Организация = Партии.Организация
		//|		И ДанныеПервичныхДокументов.Документ = Партии.ДокументПоступления
		|ГДЕ
		|	КорректировкиНДСПартий.Активность
		|	И ((КорректировкиНДСПартий.НДСРегл - КорректировкиНДСПартий.НДСРеглПоФакту) <> 0
		|     ИЛИ (КорректировкиНДСПартий.НДСУпр - КорректировкиНДСПартий.НДСУпрПоФакту) <> 0 
		|     )
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Партии.Регистратор КАК Ссылка,
		|	Партии.Период,
		|	Партии.Организация,
		|	Партии.НДС КАК НДСРегл,
		|	Партии.НДСУпр КАК НДСУпр,
		|	Партии.АналитикаУчетаНоменклатуры,
		|	Партии.КорАналитикаУчетаНоменклатуры,
		|	Партии.ДокументПоступления,
		|	Партии.АналитикаУчетаПартий,
		|	Партии.НалоговоеНазначение КАК НалоговоеНазначениеПартии,
		|	Партии.НалоговоеНазначение.ВидДеятельностиНДС КАК ВидДеятельностиНДСПартии,
		|	Партии.ВидЗапасов,
		|	Партии.КорВидЗапасов КАК КорВидЗапасов,
		|	ВЫРАЗИТЬ(Партии.АналитикаФинансовогоУчета КАК Справочник.ГруппыАналитическогоУчетаНоменклатуры) КАК ГруппаПродукции,
		|	ВЫРАЗИТЬ(Партии.КорАналитикаФинансовогоУчета КАК Справочник.ГруппыАналитическогоУчетаНоменклатуры) КАК КорГруппаПродукции,
		|	Партии.КорНалоговоеНазначение КАК НалоговоеНазначение,
		|	Партии.КорНалоговоеНазначение.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
		|	Партии.СтатьяРасходовАктивов КАК СтатьяРасходов,
		|	Партии.АналитикаРасходов,
		|	Партии.АналитикаАктивов КАК АналитикаАктивовПассивов,
		|	(ВЫБОР
		|		КОГДА Партии.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратПрошлыхПериодов)
		|			ТОГДА Партии.ДокументИсточник
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ) КАК ДокументРеализации,
		|	Партии.СтатьяСписанияНДС КАК СтатьяСписанияНДС,
		|	Партии.АналитикаСписанияНДС КАК АналитикаСписанияНДС,
		|	(ВЫБОР
		|		КОГДА Партии.ТипЗаписи В (
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.РаспределениеПоВыбывшимТоварам),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретенияПрошлогоПериода))
        |			ИЛИ Партии.Регистратор ССЫЛКА Документ.РаспределениеПрочихЗатрат
        |			ИЛИ Партии.Регистратор ССЫЛКА Документ.РаспределениеПроизводственныхЗатрат
		|			ТОГДА Партии.Подразделение
		|		ИНАЧЕ NULL КОНЕЦ) КАК ПодразделениеРасходов,
		|	Партии.Подразделение КАК КорПодразделение,
		|	Партии.АналитикаУчетаНоменклатуры.Назначение.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	Партии.КорАналитикаУчетаНоменклатуры.Назначение.НаправлениеДеятельности КАК КорНаправлениеДеятельности,
		|	NULL КАК ИдентификаторСтроки
		|ИЗ
		|	ДокументыКОтражению КАК ДокументыКОтражению
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		РегистрНакопления.ДетализацияПартийТоваровДляНДС КАК Партии
		|	ПО
		|		Партии.Регистратор = ДокументыКОтражению.Ссылка
		|	ЛЕВОЕ СОЕДИНЕНИЕ 
		|		РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
		|	ПО
		|		ДанныеПервичныхДокументов.Организация = Партии.Организация
		|		И ДанныеПервичныхДокументов.Документ = Партии.ДокументПоступления
		|ГДЕ
		|	(Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|		ИЛИ Партии.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратПрошлыхПериодов)
		|		ИЛИ Партии.Регистратор ССЫЛКА Документ.РаспределениеПрочихЗатрат)
		|	И (Партии.НДС <> 0 ИЛИ Партии.НДСУпр <> 0)
		|	И Партии.Активность
		|	
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Партии.Регистратор КАК Ссылка,
		|	Партии.Период,
		|	Партии.Организация,
		|	Партии.НДС КАК НДСРегл,
		|	Партии.НДСУпр КАК НДСУпр,
		// |	ЕСТЬNULL(Партии.АналитикаУчетаДокументаПоступления.ВидЦенности, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)) КАК ВидЦенности,
		|	Партии.КорАналитикаУчетаНоменклатуры,
		|	Партии.КорАналитикаУчетаНоменклатуры,
		|	Партии.ДокументПоступления,
		|	Партии.АналитикаУчетаДокументаПоступления,
		|	Партии.НалоговоеНазначение КАК НалоговоеНазначениеПартии,
		|	Партии.НалоговоеНазначение.ВидДеятельностиНДС КАК ВидДеятельностиНДСПартии,
		|	Партии.КорВидЗапасов КАК ВидЗапасов,
		|	Партии.КорВидЗапасов КАК КорВидЗапасов,
        |	НЕОПРЕДЕЛЕНО КАК ГруппаПродукции,
		|	ВЫРАЗИТЬ(Партии.КорАналитикаФинансовогоУчета КАК Справочник.ГруппыАналитическогоУчетаНоменклатуры) КАК КорГруппаПродукции,
		|	Партии.КорНалоговоеНазначение КАК НалоговоеНазначение,
		|	Партии.КорНалоговоеНазначение.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
		|	Партии.СтатьяРасходовАктивов КАК СтатьяРасходов,
		|	Партии.АналитикаРасходов,
		|	Партии.АналитикаАктивов КАК АналитикаАктивовПассивов,
		|	(ВЫБОР
		|		КОГДА Партии.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратПрошлыхПериодов)
		|			ТОГДА Партии.ДокументИсточник
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ) КАК ДокументРеализации,
		|	Партии.СтатьяСписанияНДС КАК СтатьяСписанияНДС,
		|	Партии.АналитикаСписанияНДС КАК АналитикаСписанияНДС,
		|	(ВЫБОР
		|		КОГДА Партии.ТипЗаписи В (
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.РаспределениеПоВыбывшимТоварам),
		|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретенияПрошлогоПериода))
        |			ИЛИ Партии.Регистратор ССЫЛКА Документ.РаспределениеПрочихЗатрат
        |			ИЛИ Партии.Регистратор ССЫЛКА Документ.РаспределениеПроизводственныхЗатрат
		|			ТОГДА Партии.Подразделение
		|		ИНАЧЕ NULL КОНЕЦ) КАК ПодразделениеРасходов,
		|	Партии.КорПодразделение КАК КорПодразделение,
		|	Партии.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	Партии.КорНаправлениеДеятельности КАК КорНаправлениеДеятельности,
		|	NULL КАК ИдентификаторСтроки
		|ИЗ
		|	ДокументыКОтражению КАК ДокументыКОтражению
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		РегистрНакопления.ДетализацияПартийТоваровДляНДС2_4 КАК Партии
		|	ПО
		|		Партии.Регистратор = ДокументыКОтражению.Ссылка
		|	ЛЕВОЕ СОЕДИНЕНИЕ 
		|		РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
		|	ПО
		|		ДанныеПервичныхДокументов.Организация = Партии.Организация
		|		И ДанныеПервичныхДокументов.Документ = Партии.ДокументПоступления
		|ГДЕ
		|	(Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|		ИЛИ Партии.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратПрошлыхПериодов)
		|		ИЛИ Партии.Регистратор ССЫЛКА Документ.РаспределениеПрочихЗатрат)
		|	И (Партии.НДС <> 0 ИЛИ Партии.НДСУпр <> 0)
		|	И Партии.Активность
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Партии.Регистратор КАК Ссылка,
		|	Партии.Период КАК Период,
		|	Партии.Организация КАК Организация,
		|	ВЫБОР 
		|		КОГДА СтатьиРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
		|		ТОГДА Партии.НДСРегл
		|       ИНАЧЕ 0
		|   КОНЕЦ КАК НДСРегл,
		|	ВЫБОР 
		|		КОГДА СтатьиРасходов.ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
		|		ТОГДА Партии.НДСУпр
		|       ИНАЧЕ 0
		|   КОНЕЦ КАК НДСУпр,
		|	Партии.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	NULL КАК КорАналитикаУчетаНоменклатуры,
		|	Партии.ДокументПоступленияРасходов КАК ДокументПоступления,
		|	Партии.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
		|	Партии.НалоговоеНазначение КАК НалоговоеНазначениеПартии,
		|	Партии.НалоговоеНазначение.ВидДеятельностиНДС КАК ВидДеятельностиНДСПартии,
		|	NULL КАК ВидЗапасов,
		|	NULL КАК КорВидЗапасов,
		|	NULL КАК ГруппаПродукции,
		|	NULL КАК КорГруппаПродукции,
		|	Партии.НалоговоеНазначениеСписания КАК НалоговоеНазначение,
		|	Партии.НалоговоеНазначениеСписания.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
		|	Партии.СтатьяРасходов КАК СтатьяРасходов,
		|	Партии.АналитикаРасходов КАК АналитикаРасходов,
		|	Партии.АналитикаАктивовПассивов КАК АналитикаАктивовПассивов,
		|	Партии.ДокументРеализации КАК ДокументРеализации,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяСписанияНДС,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаСписанияНДС,
		|	Партии.Подразделение КАК ПодразделениеРасходов,
		|	Партии.Подразделение КАК КорПодразделение,
		|	Партии.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	Партии.НаправлениеДеятельности КАК КорНаправлениеДеятельности,
		|	NULL КАК ИдентификаторСтроки
		|ИЗ
		|	ДокументыКОтражению КАК ДокументыКОтражению
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		РегистрНакопления.ПартииПрочихРасходов КАК Партии
		|	ПО
		|		Партии.Регистратор = ДокументыКОтражению.Ссылка
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
		|	ПО 
		|		Партии.СтатьяРасходов = СтатьиРасходов.Ссылка
		|	
		|	ГДЕ
		|		Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|		И НЕ Партии.Регистратор ССЫЛКА Документ.РаспределениеПрочихЗатрат
		|		И (СтатьиРасходов.ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
		|			ИЛИ СтатьиРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров))
		|		И (Партии.НДСРегл <> 0 ИЛИ Партии.НДСУпр <> 0)
		|		И Партии.Активность
		|       И &ПартионныйУчетВерсии22
		|ИНДЕКСИРОВАТЬ ПО
		|	АналитикаУчетаПартий
		|;
		|
		|/////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Партии.Ссылка КАК Ссылка,
		|	Партии.Период КАК Период,
		|	Партии.Организация КАК Организация,
		|	СУММА(Партии.НДСРегл) КАК НДСРегл,
		|	СУММА(Партии.НДСУпр) КАК НДСУпр,
		|	Партии.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	Партии.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
		|	Партии.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
		|	Партии.АналитикаУчетаНоменклатуры.Серия КАК Серия,
		|
		|	Партии.КорАналитикаУчетаНоменклатуры.Номенклатура КАК КорНоменклатура,
		|
		|	ВЫБОР КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
		|	 И НЕ Партии.АналитикаУчетаНоменклатуры.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа) ТОГДА
		|		ЕСТЬNULL(ВидЗапасов.ГруппаФинансовогоУчета, ЕСТЬNULL(Партии.АналитикаУчетаПартий.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка)))
		|	ИНАЧЕ
		|		Партии.АналитикаУчетаНоменклатуры.Номенклатура.ГруппаФинансовогоУчета
		|	КОНЕЦ КАК ГруппаФинансовогоУчета,
		|
		|	ВЫБОР КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
		|	 И НЕ Партии.КорАналитикаУчетаНоменклатуры.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа) ТОГДА
		|		КорВидЗапасов.ГруппаФинансовогоУчета
		|	ИНАЧЕ
		|		Партии.КорАналитикаУчетаНоменклатуры.Номенклатура.ГруппаФинансовогоУчета
		|	КОНЕЦ КАК КорГруппаФинансовогоУчета,
		|	
		// |	Партии.ВидЦенности КАК ВидЦенности,
		|	
		|	Партии.НаправлениеДеятельности    КАК НаправлениеДеятельности,
		|	Партии.КорНаправлениеДеятельности КАК КорНаправлениеДеятельности,
		|
		|	ЕСТЬNULL(Партии.АналитикаУчетаНоменклатуры.СкладскаяТерритория,
		|		ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)) КАК Склад,
		|	ЕСТЬNULL(Партии.КорАналитикаУчетаНоменклатуры.СкладскаяТерритория,
		|		ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)) КАК КорСклад,
		|
		|	Партии.АналитикаУчетаНоменклатуры.СкладскаяТерритория.Подразделение КАК Подразделение,
		|	Партии.ДокументПоступления КАК ДокументПоступления,
		|	Партии.АналитикаУчетаПартий.Контрагент КАК Контрагент,
		|	ЕСТЬNULL(ВидыЗапасов.Договор, ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)) КАК Договор,
		|	Партии.ГруппаПродукции КАК ГруппаПродукции,
		|	Партии.КорГруппаПродукции КАК КорГруппаПродукции,
		|	
		|	ВЫБОР 
		|		КОГДА Партии.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиНДС.Необлагаемая) 
		|				И Партии.НалоговоеНазначениеПартии <> Партии.НалоговоеНазначение 
		|			ТОГДА Партии.НалоговоеНазначениеПартии
		|		КОГДА Партии.ВидДеятельностиНДСПартии = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиНДС.Необлагаемая) 
		|				И Партии.НалоговоеНазначениеПартии <> Партии.НалоговоеНазначение 
		|			ТОГДА Партии.НалоговоеНазначение
		|		ИНАЧЕ Партии.НалоговоеНазначениеПартии
		|	КОНЕЦ КАК НалоговоеНазначение,
		|	
		|	Партии.НалоговоеНазначение КАК НалоговоеНазначениеПартии,
		|	Партии.ДокументРеализации КАК ДокументРеализации,
		|	ВЫБОР 
		|		КОГДА Партии.СтатьяРасходов = НЕОПРЕДЕЛЕНО
		|			ТОГДА ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
		|		ИНАЧЕ Партии.СтатьяРасходов
		|	КОНЕЦ КАК СтатьяРасходов,
		|	Партии.АналитикаРасходов КАК АналитикаРасходов,
		|	Партии.АналитикаАктивовПассивов КАК АналитикаАктивовПассивов,
		|	Партии.ПодразделениеРасходов КАК ПодразделениеРасходов,
		|	Партии.КорПодразделение КАК КорПодразделение,
		|	Партии.ИдентификаторСтроки КАК ИдентификаторСтроки,
		|	ЕСТЬNULL(ВидыЗапасов.ТипЗапасов, ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка)) КАК ТипЗапасов,
		|
		|	ВЫБОР 
		|		КОГДА Партии.НалоговоеНазначение <> ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка)  
		|				И ((Партии.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиНДС.Необлагаемая) И Партии.ВидДеятельностиНДСПартии = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиНДС.Облагаемая))
		|					ИЛИ (Партии.ВидДеятельностиНДСПартии = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиНДС.ПропорциональноОблагаемая) И Партии.НалоговоеНазначение = ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяНеХозДеятельность)))
		|				И Партии.СтатьяСписанияНДС = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)  
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ВключениеНДСВСтоимость,
		|
		|	ВЫБОР 
		|		КОГДА Партии.НалоговоеНазначение <> ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка)
		|               И (Партии.ВидДеятельностиНДСПартии = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиНДС.Необлагаемая) И Партии.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиНДС.Облагаемая))
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ИсключениеНДСИзСтоимости
		|
		|ПОМЕСТИТЬ Партии
		|ИЗ 
		|	Партии_Предварительная КАК Партии
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
		|		ПО Партии.СтатьяРасходов = СтатьиРасходов.Ссылка
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
		|	ПО Партии.ВидЗапасов = ВидыЗапасов.Ссылка
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК КорВидыЗапасов
		|	ПО Партии.КорВидЗапасов = КорВидыЗапасов.Ссылка
		|	
		|ГДЕ
		|	НЕ Партии.НалоговоеНазначениеПартии ЕСТЬ NULL
		|	И (ВЫБОР 
		|			КОГДА Партии.НалоговоеНазначение <> ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка)  
		|					И ((Партии.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиНДС.Необлагаемая) И Партии.ВидДеятельностиНДСПартии = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиНДС.Облагаемая))
		|						ИЛИ (Партии.ВидДеятельностиНДСПартии = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиНДС.ПропорциональноОблагаемая) И Партии.НалоговоеНазначение = ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяНеХозДеятельность)))
		|					И Партии.СтатьяСписанияНДС = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)  
		|
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ
		|		КОНЕЦ 
		|		ИЛИ 
		|		ВЫБОР 
		|			КОГДА Партии.НалоговоеНазначение <> ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка)
		|               	И (Партии.ВидДеятельностиНДСПартии = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиНДС.Необлагаемая) И Партии.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиНДС.Облагаемая))
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ
		|		КОНЕЦ)
		|
		|СГРУППИРОВАТЬ ПО
		|	Партии.Ссылка,
		|	Партии.Период,
		|	Партии.Организация,
		|	Партии.АналитикаУчетаНоменклатуры,
		|	Партии.АналитикаУчетаНоменклатуры.Номенклатура,
		|	Партии.АналитикаУчетаНоменклатуры.Характеристика,
		|	Партии.АналитикаУчетаНоменклатуры.Серия,
		|	Партии.КорАналитикаУчетаНоменклатуры.Номенклатура,
		|	
		// |	Партии.ВидЦенности, 
		|	
		|	ВЫБОР 
		|		КОГДА Партии.КорАналитикаУчетаНоменклатуры.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
		|												    ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
		|	КОНЕЦ,
		|	ВЫБОР КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
		|	 И НЕ Партии.АналитикаУчетаНоменклатуры.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа) ТОГДА
		|		ЕСТЬNULL(ВидЗапасов.ГруппаФинансовогоУчета, ЕСТЬNULL(Партии.АналитикаУчетаПартий.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка)))
		|	ИНАЧЕ
		|		Партии.АналитикаУчетаНоменклатуры.Номенклатура.ГруппаФинансовогоУчета
		|	КОНЕЦ,
		|	ВЫБОР КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
		|	 И НЕ Партии.КорАналитикаУчетаНоменклатуры.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа) ТОГДА
		|		КорВидЗапасов.ГруппаФинансовогоУчета
		|	ИНАЧЕ
		|		Партии.КорАналитикаУчетаНоменклатуры.Номенклатура.ГруппаФинансовогоУчета
		|	КОНЕЦ,
		|	Партии.КорНаправлениеДеятельности,
		|	Партии.НаправлениеДеятельности,
		|	ЕСТЬNULL(Партии.АналитикаУчетаНоменклатуры.СкладскаяТерритория, ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)),
		|	ЕСТЬNULL(Партии.КорАналитикаУчетаНоменклатуры.СкладскаяТерритория, ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)),
		|	Партии.АналитикаУчетаНоменклатуры.СкладскаяТерритория.Подразделение,
		|	Партии.ДокументПоступления,
		|	Партии.АналитикаУчетаПартий.Контрагент,
		|	Партии.ГруппаПродукции,
		|	Партии.КорГруппаПродукции,
		|	Партии.НалоговоеНазначениеПартии,
		|	Партии.НалоговоеНазначение,
		|	Партии.ДокументРеализации,
		|	ВЫБОР 
		|		КОГДА Партии.СтатьяРасходов = НЕОПРЕДЕЛЕНО
		|			ТОГДА ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
		|		ИНАЧЕ Партии.СтатьяРасходов
		|	КОНЕЦ,
		|	Партии.АналитикаРасходов,
		|	Партии.АналитикаАктивовПассивов,
		|	Партии.ПодразделениеРасходов,
		|	Партии.КорПодразделение,
		|	Партии.ИдентификаторСтроки,
		|	ЕСТЬNULL(ВидыЗапасов.ТипЗапасов, ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка)),
		|
		|
		|	ВЫБОР 
		|		КОГДА Партии.НалоговоеНазначение <> ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка)  
		|				И ((Партии.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиНДС.Необлагаемая) И Партии.ВидДеятельностиНДСПартии = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиНДС.Облагаемая))
		|					ИЛИ (Партии.ВидДеятельностиНДСПартии = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиНДС.ПропорциональноОблагаемая) И Партии.НалоговоеНазначение = ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяНеХозДеятельность)))
		|				И Партии.СтатьяСписанияНДС = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)  
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ,
		|	ВЫБОР 
		|		КОГДА Партии.НалоговоеНазначение <> ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка)
		|               И (Партии.ВидДеятельностиНДСПартии = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиНДС.Необлагаемая) И Партии.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиНДС.Облагаемая))
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ,
		|	ЕСТЬNULL(ВидыЗапасов.Договор, ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)),
		|	
		|	ВЫБОР 
		|		КОГДА Партии.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиНДС.Необлагаемая) 
		|				И Партии.НалоговоеНазначениеПартии <> Партии.НалоговоеНазначение 
		|			ТОГДА Партии.НалоговоеНазначениеПартии
		|		КОГДА Партии.ВидДеятельностиНДСПартии = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиНДС.Необлагаемая) 
		|				И Партии.НалоговоеНазначениеПартии <> Партии.НалоговоеНазначение 
		|			ТОГДА Партии.НалоговоеНазначение
		|		ИНАЧЕ Партии.НалоговоеНазначениеПартии
		|	КОНЕЦ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка
		|;
		|
		|/////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ Партии_Предварительная
		|;
		|";
КонецФункции

Функция ТекстКурсыВалют()
	
	Возврат "
		|ВЫБРАТЬ
		|	РазрезыКОтражению.ДатаОтражения   КАК ДатаОтражения,
		|	КурсыВалют.Валюта                 КАК Валюта,
		|	МАКСИМУМ(КурсыВалют.Период)       КАК ПериодКурса
		|ПОМЕСТИТЬ ПериодыКурсовВалют
		|ИЗ
		|	РазрезыКОтражению КАК РазрезыКОтражению
		|	
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		РегистрСведений.КурсыВалют КАК КурсыВалют
		|	ПО
		|		РазрезыКОтражению.ДатаОтражения >= КурсыВалют.Период
		|
		|СГРУППИРОВАТЬ ПО
		|	РазрезыКОтражению.ДатаОтражения,
		|	КурсыВалют.Валюта
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Валюта,
		|	ДатаОтражения
		|;
		|
		|//////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПериодыКурсовВалют.ДатаОтражения КАК Дата,
		|	ПериодыКурсовВалют.Валюта КАК Валюта,
		|	ВЫБОР 
		|		КОГДА КурсыВалют.Валюта ЕСТЬ NULL
		|			ТОГДА 1
		|		КОГДА КурсыВалют.Кратность = 0
		|			ТОГДА КурсыВалют.Курс
		|		ИНАЧЕ КурсыВалют.Курс/КурсыВалют.Кратность
		|	КОНЕЦ КАК Курс
		|ПОМЕСТИТЬ КурсыВалют
		|ИЗ
		|	ПериодыКурсовВалют КАК ПериодыКурсовВалют
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		РегистрСведений.КурсыВалют КАК КурсыВалют
		|	ПО
		|		ПериодыКурсовВалют.Валюта = КурсыВалют.Валюта
		|		И ПериодыКурсовВалют.ПериодКурса = КурсыВалют.Период
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Валюта,
		|	Дата
		|;
		|
		|//////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ПериодыКурсовВалют
		|;
		|";
	
КонецФункции

Функция ТекстРасчетовПоНовойАрхитектуре()
	
	ТекстыЗапроса = Новый Массив;
	
	#Область Клиенты
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Расчеты.ДокументРегистратор КАК Ссылка,
	|	Расчеты.Период КАК Период,
	|	ОбъектыРасчетов.Организация КАК Организация,
	|	ОбъектыРасчетов.Контрагент КАК Контрагент,
	|	ОбъектыРасчетов.Договор КАК Договор,
	|	Расчеты.РасчетныйДокумент,
	|	
	|	Расчеты.ОбъектРасчетов КАК ОбъектРасчетов,
	|	ОбъектыРасчетов.Объект КАК ДокументОбъектаРасчетов,
	|	ОбъектыРасчетов.Подразделение КАК Подразделение,
	|	ОбъектыРасчетов.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	ОбъектыРасчетов.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	
	|	Расчеты.КорОбъектРасчетов КАК КорОбъектРасчетов,
	|	ЕСТЬNULL(КорОбъектыРасчетов.Объект, ОбъектыРасчетов.Объект) КАК КорДокументОбъектаРасчетов,
	|	ЕСТЬNULL(КорОбъектыРасчетов.Подразделение, ОбъектыРасчетов.Подразделение)  КАК КорПодразделение,
	|	ЕСТЬNULL(КорОбъектыРасчетов.ГруппаФинансовогоУчета, ОбъектыРасчетов.ГруппаФинансовогоУчета) КАК КорГруппаФинансовогоУчета,
	|	ЕСТЬNULL(КорОбъектыРасчетов.НаправлениеДеятельности, ОбъектыРасчетов.НаправлениеДеятельности) КАК КорНаправлениеДеятельности,
	|
	|	Расчеты.Валюта,
	|	Расчеты.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	Расчеты.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	Расчеты.ВидДвижения КАК ВидДвижения,
	|	ВЫБОР КОГДА Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА -1 ИНАЧЕ 1 КОНЕЦ * Расчеты.Предоплата КАК Предоплата,
	|	ВЫБОР КОГДА Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА -1 ИНАЧЕ 1 КОНЕЦ * Расчеты.ПредоплатаУпр КАК ПредоплатаУпр,
	|	ВЫБОР КОГДА Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА -1 ИНАЧЕ 1 КОНЕЦ * Расчеты.ПредоплатаРегл КАК ПредоплатаРегл,
	|	ВЫБОР КОГДА Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА -1 ИНАЧЕ 1 КОНЕЦ * Расчеты.Долг КАК Долг,
	|	ВЫБОР КОГДА Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА -1 ИНАЧЕ 1 КОНЕЦ * Расчеты.ДолгУпр КАК ДолгУпр,
	|	ВЫБОР КОГДА Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА -1 ИНАЧЕ 1 КОНЕЦ * Расчеты.ДолгРегл КАК ДолгРегл,
	|	0 КАК ЗалогЗаТару,
	|	0 КАК ЗалогЗаТаруРегл
	|
	|ПОМЕСТИТЬ РасчетыСКлиентамиНоваяАрхитектура
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.РасчетыСКлиентамиПоСрокам КАК Расчеты
	|	ПО
	|		ДокументыКОтражению.Ссылка = Расчеты.ДокументРегистратор
	|		И &НоваяАрхитектураВзаиморасчетов
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ОбъектыРасчетов КАК ОбъектыРасчетов
	|	ПО (Расчеты.ОбъектРасчетов = ОбъектыРасчетов.Ссылка)
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыРасчетов КАК КорОбъектыРасчетов
	|	ПО (Расчеты.КорОбъектРасчетов = ОбъектыРасчетов.Ссылка)
	|	
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка";
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область Поставщики
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Расчеты.ДокументРегистратор КАК Ссылка,
	|	Расчеты.Период КАК Период,
	|	ОбъектыРасчетов.Организация КАК Организация,
	|	ОбъектыРасчетов.Контрагент КАК Контрагент,
	|	ОбъектыРасчетов.Договор КАК Договор,
	|	Расчеты.РасчетныйДокумент,
	|	
	|	Расчеты.ОбъектРасчетов КАК ОбъектРасчетов,
	|	ОбъектыРасчетов.Объект КАК ДокументОбъектаРасчетов,
	|	ОбъектыРасчетов.Подразделение КАК Подразделение,
	|	ОбъектыРасчетов.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	ОбъектыРасчетов.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	
	|	Расчеты.КорОбъектРасчетов КАК КорОбъектРасчетов,
	|	ЕСТЬNULL(КорОбъектыРасчетов.Объект, ОбъектыРасчетов.Объект) КАК КорДокументОбъектаРасчетов,
	|	ЕСТЬNULL(КорОбъектыРасчетов.Подразделение, ОбъектыРасчетов.Подразделение) КАК КорПодразделение,
	|	ЕСТЬNULL(КорОбъектыРасчетов.ГруппаФинансовогоУчета, ОбъектыРасчетов.ГруппаФинансовогоУчета) КАК КорГруппаФинансовогоУчета,
	|	ЕСТЬNULL(КорОбъектыРасчетов.НаправлениеДеятельности, ОбъектыРасчетов.НаправлениеДеятельности) КАК КорНаправлениеДеятельности,
	|
	|	Расчеты.Валюта,
	|	Расчеты.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	Расчеты.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	Расчеты.ВидДвижения КАК ВидДвижения,
	|	ВЫБОР КОГДА Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА -1 ИНАЧЕ 1 КОНЕЦ * Расчеты.Предоплата КАК Предоплата,
	|	ВЫБОР КОГДА Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА -1 ИНАЧЕ 1 КОНЕЦ * Расчеты.ПредоплатаУпр КАК ПредоплатаУпр,
	|	ВЫБОР КОГДА Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА -1 ИНАЧЕ 1 КОНЕЦ * Расчеты.ПредоплатаРегл КАК ПредоплатаРегл,
	|	ВЫБОР КОГДА Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА -1 ИНАЧЕ 1 КОНЕЦ * Расчеты.Долг КАК Долг,
	|	ВЫБОР КОГДА Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА -1 ИНАЧЕ 1 КОНЕЦ * Расчеты.ДолгУпр КАК ДолгУпр,
	|	ВЫБОР КОГДА Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА -1 ИНАЧЕ 1 КОНЕЦ * Расчеты.ДолгРегл КАК ДолгРегл
	|
	|ПОМЕСТИТЬ РасчетыСПоставщикамиНоваяАрхитектура
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.РасчетыСПоставщикамиПоСрокам КАК Расчеты
	|	ПО
	|		ДокументыКОтражению.Ссылка = Расчеты.ДокументРегистратор
	|		И &НоваяАрхитектураВзаиморасчетов
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ОбъектыРасчетов КАК ОбъектыРасчетов
	|	ПО (Расчеты.ОбъектРасчетов = ОбъектыРасчетов.Ссылка)
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыРасчетов КАК КорОбъектыРасчетов
	|	ПО (Расчеты.КорОбъектРасчетов = ОбъектыРасчетов.Ссылка)
	|	
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка";
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	Возврат СтрСоединить(ТекстыЗапроса, ОбщегоНазначения.РазделительПакетаЗапросов()) + ОбщегоНазначения.РазделительПакетаЗапросов();
	
КонецФункции

Функция ТекстВТРасчетовПоДокументам(ДокументИмя)
	
	ТекстыЗапроса = Новый Массив;
	
	#Область Клиенты
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Расчеты.Регистратор КАК Ссылка,
	|	ОбъектыРасчетов.Контрагент КАК Контрагент,
	|	ОбъектыРасчетов.Договор КАК Договор,
	|	ОбъектыРасчетов.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ОбъектыРасчетов.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	ОбъектыРасчетов.Подразделение КАК Подразделение,
	|	Расчеты.Валюта,
	|	Расчеты.СтатьяДвиженияДенежныхСредств,
	|	ЕСТЬNULL(Операция.НаправлениеДеятельности, ОбъектыРасчетов.НаправлениеДеятельности) КАК КорНаправлениеДеятельности,
	|	ЕСТЬNULL(Операция.ГруппаФинансовогоУчета, ОбъектыРасчетов.ГруппаФинансовогоУчета) КАК КорГруппаФинансовогоУчета,
	|	ЕСТЬNULL(Операция.Подразделение, ОбъектыРасчетов.Подразделение) КАК КорПодразделение,
	|	СУММА(Расчеты.Предоплата) КАК Предоплата,
	|	СУММА(Расчеты.ПредоплатаУпр) КАК ПредоплатаУпр,
	|	СУММА(Расчеты.ПредоплатаРегл) КАК ПредоплатаРегл,
	|	СУММА(Расчеты.Долг) КАК Долг,
	|	СУММА(Расчеты.ДолгУпр) КАК ДолгУпр,
	|	СУММА(Расчеты.ДолгРегл) КАК ДолгРегл,
	|	СУММА(Расчеты.ЗалогЗаТару) КАК ЗалогЗаТару,
	|	СУММА(Расчеты.ЗалогЗаТаруРегл) КАК ЗалогЗаТаруРегл
	|ПОМЕСТИТЬ ВТРасчетыСКлиентамиПоДокументам
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.РасчетыСКлиентамиПоДокументам КАК Расчеты
	|	ПО
	|		ДокументыКОтражению.Ссылка = Расчеты.Регистратор
	|		И НЕ &НоваяАрхитектураВзаиморасчетов
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ОбъектыРасчетов КАК ОбъектыРасчетов
	|	ПО (Расчеты.ЗаказКлиента = ОбъектыРасчетов.Ссылка)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ДокументИмя КАК Операция
	|	ПО
	|		Расчеты.Регистратор = Операция.Ссылка
	|		И ОбъектыРасчетов.ТипОбъектаРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыОбъектовРасчетов.Накладная)
	|		И ОбъектыРасчетов.Объект <> Операция.Ссылка
	|	
	|СГРУППИРОВАТЬ ПО
	|	Расчеты.Регистратор,
	|	ОбъектыРасчетов.Контрагент,
	|	ОбъектыРасчетов.Договор,
	|	ОбъектыРасчетов.НаправлениеДеятельности,
	|	ОбъектыРасчетов.ГруппаФинансовогоУчета,
	|	ОбъектыРасчетов.Подразделение,
	|	Расчеты.Валюта,
	|	Расчеты.СтатьяДвиженияДенежныхСредств,
	|	ЕСТЬNULL(Операция.НаправлениеДеятельности, ОбъектыРасчетов.НаправлениеДеятельности),
	|	ЕСТЬNULL(Операция.ГруппаФинансовогоУчета, ОбъектыРасчетов.ГруппаФинансовогоУчета),
	|	ЕСТЬNULL(Операция.Подразделение, ОбъектыРасчетов.Подразделение)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Расчеты.Ссылка КАК Ссылка,
	|	Расчеты.Контрагент КАК Контрагент,
	|	Расчеты.Договор КАК Договор,
	|	Расчеты.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	Расчеты.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	Расчеты.Подразделение КАК Подразделение,
	|	Расчеты.Валюта КАК Валюта,
	|	Расчеты.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	Расчеты.КорНаправлениеДеятельности,
	|	Расчеты.КорГруппаФинансовогоУчета,
	|	Расчеты.КорПодразделение,
	|	СУММА(Расчеты.Предоплата) КАК Предоплата,
	|	СУММА(Расчеты.ПредоплатаУпр) КАК ПредоплатаУпр,
	|	СУММА(Расчеты.ПредоплатаРегл) КАК ПредоплатаРегл,
	|	СУММА(Расчеты.Долг) КАК Долг,
	|	СУММА(Расчеты.ДолгУпр) КАК ДолгУпр,
	|	СУММА(Расчеты.ДолгРегл) КАК ДолгРегл,
	|	СУММА(Расчеты.ЗалогЗаТару) КАК ЗалогЗаТару,
	|	СУММА(Расчеты.ЗалогЗаТаруРегл) КАК ЗалогЗаТаруРегл
	|ИЗ
	|	РасчетыСКлиентамиНоваяАрхитектура КАК Расчеты
	|
	|СГРУППИРОВАТЬ ПО
	|	Расчеты.Ссылка,
	|	Расчеты.Контрагент,
	|	Расчеты.Договор,
	|	Расчеты.НаправлениеДеятельности,
	|	Расчеты.ГруппаФинансовогоУчета,
	|	Расчеты.Подразделение,
	|	Расчеты.Валюта,
	|	Расчеты.СтатьяДвиженияДенежныхСредств,
	|	Расчеты.КорНаправлениеДеятельности,
	|	Расчеты.КорГруппаФинансовогоУчета,
	|	Расчеты.КорПодразделение
	|	
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	Контрагент,
	|	Договор,
	|	ГруппаФинансовогоУчета,
	|	Подразделение,
	|	НаправлениеДеятельности,
	|	Расчеты.СтатьяДвиженияДенежныхСредств,
	|	Расчеты.Валюта";
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область Поставщики
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Расчеты.Регистратор КАК Ссылка,
	|	ОбъектыРасчетов.Контрагент КАК Контрагент,
	|	ОбъектыРасчетов.Договор КАК Договор,
	|	ОбъектыРасчетов.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ОбъектыРасчетов.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	ОбъектыРасчетов.Подразделение КАК Подразделение,
	|	Расчеты.Валюта,
	|	Расчеты.СтатьяДвиженияДенежныхСредств,
	|	ЕСТЬNULL(Операция.НаправлениеДеятельности, ОбъектыРасчетов.НаправлениеДеятельности) КАК КорНаправлениеДеятельности,
	|	ЕСТЬNULL(Операция.ГруппаФинансовогоУчета, ОбъектыРасчетов.ГруппаФинансовогоУчета) КАК КорГруппаФинансовогоУчета,
	|	ЕСТЬNULL(Операция.Подразделение, ОбъектыРасчетов.Подразделение) КАК КорПодразделение,
	|	СУММА(Расчеты.Предоплата) КАК Предоплата,
	|	СУММА(Расчеты.ПредоплатаУпр) КАК ПредоплатаУпр,
	|	СУММА(Расчеты.ПредоплатаРегл) КАК ПредоплатаРегл,
	|	СУММА(Расчеты.Долг) КАК Долг,
	|	СУММА(Расчеты.ДолгУпр) КАК ДолгУпр,
	|	СУММА(Расчеты.ДолгРегл) КАК ДолгРегл
	|ПОМЕСТИТЬ ВТРасчетыСПоставщикамиПоДокументам
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.РасчетыСПоставщикамиПоДокументам КАК Расчеты
	|	ПО
	|		ДокументыКОтражению.Ссылка = Расчеты.Регистратор
	|		И НЕ &НоваяАрхитектураВзаиморасчетов
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ОбъектыРасчетов КАК ОбъектыРасчетов
	|	ПО (Расчеты.ЗаказПоставщику = ОбъектыРасчетов.Ссылка)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ДокументИмя КАК Операция
	|	ПО
	|		Расчеты.Регистратор = Операция.Ссылка
	|		И ОбъектыРасчетов.ТипОбъектаРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыОбъектовРасчетов.Накладная)
	|		И ОбъектыРасчетов.Объект <> Операция.Ссылка
	|	
	|СГРУППИРОВАТЬ ПО
	|	Расчеты.Регистратор,
	|	ОбъектыРасчетов.Контрагент,
	|	ОбъектыРасчетов.Договор,
	|	ОбъектыРасчетов.НаправлениеДеятельности,
	|	ОбъектыРасчетов.ГруппаФинансовогоУчета,
	|	ОбъектыРасчетов.Подразделение,
	|	Расчеты.Валюта,
	|	Расчеты.СтатьяДвиженияДенежныхСредств,
	|	ЕСТЬNULL(Операция.НаправлениеДеятельности, ОбъектыРасчетов.НаправлениеДеятельности),
	|	ЕСТЬNULL(Операция.ГруппаФинансовогоУчета, ОбъектыРасчетов.ГруппаФинансовогоУчета),
	|	ЕСТЬNULL(Операция.Подразделение, ОбъектыРасчетов.Подразделение)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Расчеты.Ссылка КАК Ссылка,
	|	Расчеты.Контрагент КАК Контрагент,
	|	Расчеты.Договор КАК Договор,
	|	Расчеты.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	Расчеты.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	Расчеты.Подразделение КАК Подразделение,
	|	Расчеты.Валюта КАК Валюта,
	|	Расчеты.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	Расчеты.КорНаправлениеДеятельности,
	|	Расчеты.КорГруппаФинансовогоУчета,
	|	Расчеты.КорПодразделение,
	|	СУММА(Расчеты.Предоплата) КАК Предоплата,
	|	СУММА(Расчеты.ПредоплатаУпр) КАК ПредоплатаУпр,
	|	СУММА(Расчеты.ПредоплатаРегл) КАК ПредоплатаРегл,
	|	СУММА(-Расчеты.Долг) КАК Долг,
	|	СУММА(-Расчеты.ДолгУпр) КАК ДолгУпр,
	|	СУММА(-Расчеты.ДолгРегл) КАК ДолгРегл
	|ИЗ
	|	РасчетыСПоставщикамиНоваяАрхитектура КАК Расчеты
	|
	|СГРУППИРОВАТЬ ПО
	|	Расчеты.Ссылка,
	|	Расчеты.Контрагент,
	|	Расчеты.Договор,
	|	Расчеты.НаправлениеДеятельности,
	|	Расчеты.Валюта,
	|	Расчеты.ГруппаФинансовогоУчета,
	|	Расчеты.Подразделение,
	|	Расчеты.СтатьяДвиженияДенежныхСредств,
	|	Расчеты.КорНаправлениеДеятельности,
	|	Расчеты.КорГруппаФинансовогоУчета,
	|	Расчеты.КорПодразделение
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	Контрагент,
	|	Договор,
	|	ГруппаФинансовогоУчета,
	|	Подразделение,
	|	НаправлениеДеятельности,
	|	Расчеты.СтатьяДвиженияДенежныхСредств,
	|	Расчеты.Валюта";
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	ТекстыЗапроса.Добавить("");
	
	ТекстЗапроса = СтрСоединить(ТекстыЗапроса, ОбщегоНазначения.РазделительПакетаЗапросов());
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ДокументИмя", ДокументИмя);
	Если ДокументИмя = "Документ.ОтчетПоКомиссииМеждуОрганизациями" ИЛИ ДокументИмя = "Документ.ПередачаТоваровМеждуОрганизациями" Тогда
		Отступ = Символы.ПС + Символы.Таб + Символы.Таб + Символы.Таб;
		ВыражениеДляИнтеркомпани = Отступ + "ВЫБОР КОГДА ОбъектыРасчетов.Организация = Операция.Организация"
			+ Отступ + "ТОГДА Операция.ГруппаФинансовогоУчета"
			+ Отступ + "ИНАЧЕ Операция.ГруппаФинансовогоУчетаПолучателя КОНЕЦ";
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Операция.ГруппаФинансовогоУчета", ВыражениеДляИнтеркомпани);
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстВТРасчетов()
	
	ТекстыЗапроса = Новый Массив;
	
	#Область Клиенты
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Расчеты.Регистратор КАК Ссылка,
	|	Расчеты.Валюта,
	|	Расчеты.СтатьяДвиженияДенежныхСредств,
	|	ОбъектыРасчетов.Организация КАК Организация,
	|	ОбъектыРасчетов.Контрагент КАК Контрагент,
	|	ОбъектыРасчетов.Договор КАК Договор,
	|	ОбъектыРасчетов.Подразделение КАК Подразделение,
	|	ОбъектыРасчетов.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	ОбъектыРасчетов.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	СУММА(Расчеты.Сумма) КАК Сумма,
	|	СУММА(Расчеты.СуммаУпр) КАК СуммаУпр,
	|	СУММА(Расчеты.СуммаРегл) КАК СуммаРегл
	|	
	|ПОМЕСТИТЬ ВТРасчетыСКлиентами
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыСКлиентами КАК Расчеты
	|		ПО ДокументыКОтражению.Ссылка = Расчеты.Регистратор
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ОбъектыРасчетов КАК ОбъектыРасчетов
	|	ПО (Расчеты.ОбъектРасчетов = ОбъектыРасчетов.Ссылка)
	|ГДЕ
	|	ОбъектыРасчетов.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И НЕ Расчеты.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПереносАванса),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РезервированиеАвансаКлиента),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВзаимозачетЗадолженности))
	|
	|СГРУППИРОВАТЬ ПО
	|	Расчеты.Регистратор,
	|	Расчеты.Валюта,
	|	Расчеты.СтатьяДвиженияДенежныхСредств,
	|	ОбъектыРасчетов.Организация,
	|	ОбъектыРасчетов.Контрагент,
	|	ОбъектыРасчетов.Договор,
	|	ОбъектыРасчетов.НаправлениеДеятельности,
	|	ОбъектыРасчетов.ГруппаФинансовогоУчета,
	|	ОбъектыРасчетов.Подразделение
	|	
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка";
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область Поставщики
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Расчеты.Регистратор КАК Ссылка,
	|	Расчеты.Валюта,
	|	Расчеты.СтатьяДвиженияДенежныхСредств,
	|	ОбъектыРасчетов.Организация,
	|	ОбъектыРасчетов.Контрагент КАК Контрагент,
	|	ОбъектыРасчетов.Договор КАК Договор,
	|	ОбъектыРасчетов.Подразделение КАК Подразделение,
	|	ОбъектыРасчетов.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	ОбъектыРасчетов.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	СУММА(Расчеты.Сумма) КАК Сумма,
	|	СУММА(Расчеты.СуммаУпр) КАК СуммаУпр,
	|	СУММА(Расчеты.СуммаРегл) КАК СуммаРегл
	|	
	|ПОМЕСТИТЬ ВТРасчетыСПоставщиками
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыСПоставщиками КАК Расчеты
	|		ПО ДокументыКОтражению.Ссылка = Расчеты.Регистратор
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ОбъектыРасчетов КАК ОбъектыРасчетов
	|	ПО (Расчеты.ОбъектРасчетов = ОбъектыРасчетов.Ссылка)
	|ГДЕ
	|	ОбъектыРасчетов.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И НЕ Расчеты.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПереносАванса),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВзаимозачетЗадолженности))
	|
	|СГРУППИРОВАТЬ ПО
	|	Расчеты.Регистратор,
	|	Расчеты.Валюта,
	|	Расчеты.СтатьяДвиженияДенежныхСредств,
	|	ОбъектыРасчетов.Организация,
	|	ОбъектыРасчетов.Контрагент,
	|	ОбъектыРасчетов.Договор,
	|	ОбъектыРасчетов.НаправлениеДеятельности,
	|	ОбъектыРасчетов.ГруппаФинансовогоУчета,
	|	ОбъектыРасчетов.Подразделение
	|	
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка";
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	Возврат СтрСоединить(ТекстыЗапроса, ОбщегоНазначения.РазделительПакетаЗапросов()) + ОбщегоНазначения.РазделительПакетаЗапросов();
	
КонецФункции

#КонецОбласти

#Область ОбщиеФрагментыЗапросовОтражения

Функция ТекстИнициализации() Экспорт
	
	Возврат
	"ВЫБРАТЬ //// Размещение итоговых данных во врем.таблицу Данные
	|	НЕОПРЕДЕЛЕНО КАК Ссылка,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК Период,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	0 КАК Сумма,
	|	0 КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПустаяСсылка) КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеДт,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПустаяСсылка) КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеКт,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	
	|	"""" КАК Содержание
	|
	|ПОМЕСТИТЬ Данные
	|ГДЕ ЛОЖЬ";
	
КонецФункции

Функция ТекстЗачетАвансов(ДокументИмя) Экспорт

	ЯзыкСодержания = МультиязычностьУкр.КодЯзыкаИнформационнойБазы();
	
	#Область АвансыКлиентов
	
	ТекстЗачетАвансовКлиентов =
	"ВЫБРАТЬ //// Зачет авансов клиентов
	|	Операция.Ссылка КАК Ссылка,
	|	ЕСТЬNULL(РеализацияБезПереходаПраваСобственности.ДатаПереходаПраваСобственности, Расчеты.Период) КАК Период,
	|	ОбъектыРасчетов.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	Расчеты.ПредоплатаРегл КАК Сумма,
	|	Расчеты.ПредоплатаУпр КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АвансыПолученные) КАК ВидСчетаДт,
	|	ОбъектыРасчетов.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	Расчеты.Валюта КАК ВалютаДт,
	|	ОбъектыРасчетов.Подразделение КАК ПодразделениеДт,
	|	ОбъектыРасчетов.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеДт,
	|	НЕОПРЕДЕЛЕНО КАК СчетДт,
	|
	|	ОбъектыРасчетов.Контрагент КАК СубконтоДт1,
	|	ОбъектыРасчетов.Договор КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	Расчеты.Предоплата КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКлиентами) КАК ВидСчетаКт,
	|	(ВЫБОР
	|		КОГДА ОбъектыРасчетов.ТипОбъектаРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыОбъектовРасчетов.Накладная)
	|		ТОГДА Операция.ГруппаФинансовогоУчета
	|		ИНАЧЕ ОбъектыРасчетов.ГруппаФинансовогоУчета КОНЕЦ) КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	Расчеты.Валюта КАК ВалютаКт,
	|	(ВЫБОР
	|		КОГДА ОбъектыРасчетов.ТипОбъектаРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыОбъектовРасчетов.Накладная)
	|		ТОГДА Операция.Подразделение
	|		ИНАЧЕ ОбъектыРасчетов.Подразделение КОНЕЦ) КАК ПодразделениеКт,
	|	(ВЫБОР
	|		КОГДА ОбъектыРасчетов.ТипОбъектаРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыОбъектовРасчетов.Накладная)
	|		ТОГДА Операция.НаправлениеДеятельности
	|		ИНАЧЕ ОбъектыРасчетов.НаправлениеДеятельности КОНЕЦ) КАК НаправлениеДеятельностиКт,
	|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеКт,
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|
	|	ОбъектыРасчетов.Контрагент КАК СубконтоКт1,
	|	ОбъектыРасчетов.Договор КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	Расчеты.Предоплата КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""%1"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ДокументИмя КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		РегистрНакопления.РасчетыСКлиентамиПоДокументам КАК Расчеты
	|	ПО 
	|		Операция.Ссылка = Расчеты.Регистратор
	|		И НЕ &НоваяАрхитектураВзаиморасчетов
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ОбъектыРасчетов КАК ОбъектыРасчетов
	|	ПО (Расчеты.ЗаказКлиента = ОбъектыРасчетов.Ссылка)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		Документ.РеализацияТоваровУслуг КАК РеализацияБезПереходаПраваСобственности
	|	ПО 
	|		РеализацияБезПереходаПраваСобственности.Ссылка = Операция.Ссылка
	|		И РеализацияБезПереходаПраваСобственности.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности)
	|ГДЕ
	|	Расчеты.ПредоплатаРегл > 0 И Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И Расчеты.Регистратор <> Расчеты.РасчетныйДокумент
	|	И НЕ Расчеты.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВзаимозачетЗадолженности))";

	ТекстЗачетАвансовКлиентов = СтрШаблон(ТекстЗачетАвансовКлиентов, 
		НСтр("ru='Зачет авансов клиентов';uk='Залік авансів клієнтів'",ЯзыкСодержания));
	
	#КонецОбласти
	
	#Область АвансыПоставщикам
	
	ТекстЗачетАвансовПоставщикам = 
	"ВЫБРАТЬ //// Зачет авансов поставщикам
	|	Операция.Ссылка КАК Ссылка,
	|	Расчеты.Период КАК Период,
	|	ОбъектыРасчетов.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	Расчеты.ПредоплатаРегл КАК Сумма,
	|	Расчеты.ПредоплатаУпр КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСПоставщиками) КАК ВидСчетаДт,
	|	(ВЫБОР
	|		КОГДА ОбъектыРасчетов.ТипОбъектаРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыОбъектовРасчетов.Накладная)
	|		ТОГДА Операция.ГруппаФинансовогоУчета
	|		ИНАЧЕ ОбъектыРасчетов.ГруппаФинансовогоУчета КОНЕЦ) КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	Расчеты.Валюта КАК ВалютаДт,
	|	(ВЫБОР
	|		КОГДА ОбъектыРасчетов.ТипОбъектаРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыОбъектовРасчетов.Накладная)
	|		ТОГДА Операция.Подразделение
	|		ИНАЧЕ ОбъектыРасчетов.Подразделение КОНЕЦ) КАК ПодразделениеДт,
	|	(ВЫБОР
	|		КОГДА ОбъектыРасчетов.ТипОбъектаРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыОбъектовРасчетов.Накладная)
	|		ТОГДА Операция.НаправлениеДеятельности
	|		ИНАЧЕ ОбъектыРасчетов.НаправлениеДеятельности КОНЕЦ) КАК НаправлениеДеятельностиДт,
	|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеДт,
	|	НЕОПРЕДЕЛЕНО КАК СчетДт,
	|
	|	ОбъектыРасчетов.Контрагент КАК СубконтоДт1,
	|	ОбъектыРасчетов.Договор КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	Расчеты.Предоплата КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АвансыВыданные) КАК ВидСчетаКт,
	|	ОбъектыРасчетов.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	Расчеты.Валюта КАК ВалютаКт,
	|	ОбъектыРасчетов.Подразделение КАК ПодразделениеКт,
	|	ОбъектыРасчетов.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеКт,
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|
	|	ОбъектыРасчетов.Контрагент КАК СубконтоКт1,
	|	ОбъектыРасчетов.Договор КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	Расчеты.Предоплата КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""%1"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ДокументИмя КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		РегистрНакопления.РасчетыСПоставщикамиПоДокументам КАК Расчеты
	|	ПО 
	|		Операция.Ссылка = Расчеты.Регистратор
	|		И НЕ &НоваяАрхитектураВзаиморасчетов
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ОбъектыРасчетов КАК ОбъектыРасчетов
	|	ПО (Расчеты.ЗаказПоставщику = ОбъектыРасчетов.Ссылка)
	|
	|ГДЕ
	|	Расчеты.ПредоплатаРегл > 0. 
	|	И Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И (Расчеты.Регистратор <> Расчеты.РасчетныйДокумент
	|		ИЛИ Расчеты.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомитенту))
	|	И НЕ Расчеты.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровПоставщику),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствОтПоставщика),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствОтДругойОрганизации),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхДокументовПоставщику),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВзаимозачетЗадолженности))";


	ТекстЗачетАвансовПоставщикам = СтрШаблон(ТекстЗачетАвансовПоставщикам, 
		НСтр("ru='Зачет авансов поставщикам';uk='Залік авансів постачальникам'",ЯзыкСодержания));
	
	#КонецОбласти
	
	#Область АвансыКлиентовНоваяАрхитектура
	
	ТекстЗачетАвансовКлиентовНоваяАрхитектура =
	"ВЫБРАТЬ //// Зачет авансов клиентов
	|	ДокументыКОтражению.Ссылка КАК Ссылка,
	|	Расчеты.Период КАК Период,
	|	Расчеты.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	-Расчеты.ПредоплатаРегл КАК Сумма,
	|	-Расчеты.ПредоплатаУпр  КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АвансыПолученные) КАК ВидСчетаДт,
	|	Расчеты.КорГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	Расчеты.Валюта КАК ВалютаДт,
	|	Расчеты.КорПодразделение КАК ПодразделениеДт,
	|	Расчеты.КорНаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеДт,
	|	НЕОПРЕДЕЛЕНО КАК СчетДт,
	|
	|	Расчеты.Контрагент КАК СубконтоДт1,
	|	Расчеты.Договор КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	-Расчеты.Предоплата КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКлиентами) КАК ВидСчетаКт,
	|	Расчеты.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	Расчеты.Валюта КАК ВалютаКт,
	|	Расчеты.Подразделение КАК ПодразделениеКт,
	|	Расчеты.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеКт,
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|
	|	Расчеты.Контрагент КАК СубконтоКт1,
	|	Расчеты.Договор КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	-Расчеты.Предоплата КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""%1"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		РасчетыСКлиентамиНоваяАрхитектура КАК Расчеты
	|	ПО 
	|		ДокументыКОтражению.Ссылка = Расчеты.Ссылка
	|
	|ГДЕ
	|	Расчеты.ПредоплатаРегл < 0
	|	И Расчеты.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗачетАвансаКлиента)
	|	И НЕ Расчеты.Ссылка ССЫЛКА Документ.СписаниеБезналичныхДенежныхСредств
	|	И НЕ Расчеты.Ссылка ССЫЛКА Документ.РасходныйКассовыйОрдер
	|	И НЕ Расчеты.Ссылка ССЫЛКА Документ.ОперацияПоПлатежнойКарте";

	ТекстЗачетАвансовКлиентовНоваяАрхитектура = СтрШаблон(ТекстЗачетАвансовКлиентовНоваяАрхитектура, 
		НСтр("ru='Зачет авансов клиентов';uk='Залік авансів клієнтів'",ЯзыкСодержания));
	
	#КонецОбласти
	
	#Область АвансыПоставщикамНоваяАрхитектура
	
	ТекстЗачетАвансовПоставщикамНоваяАрхитектура = 
	" 
	|ВЫБРАТЬ //// Зачет авансов поставщикам
	|	ДокументыКОтражению.Ссылка КАК Ссылка,
	|	Расчеты.Период КАК Период,
	|	Расчеты.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	-Расчеты.ПредоплатаРегл КАК Сумма,
	|	-Расчеты.ПредоплатаУпр  КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСПоставщиками) КАК ВидСчетаДт,
	|	Расчеты.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	Расчеты.Валюта КАК ВалютаДт,
	|	Расчеты.Подразделение КАК ПодразделениеДт,
	|	Расчеты.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеДт,
	|	НЕОПРЕДЕЛЕНО КАК СчетДт,
	|
	|	Расчеты.Контрагент КАК СубконтоДт1,
	|	Расчеты.Договор КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	-Расчеты.Предоплата КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АвансыВыданные) КАК ВидСчетаКт,
	|	Расчеты.КорГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	Расчеты.Валюта КАК ВалютаКт,
	|	Расчеты.КорПодразделение КАК ПодразделениеКт,
	|	Расчеты.КорНаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеКт,
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|
	|	Расчеты.Контрагент КАК СубконтоКт1,
	|	Расчеты.Договор КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	-Расчеты.Предоплата КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""%1"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		РасчетыСПоставщикамиНоваяАрхитектура КАК Расчеты
	|	ПО 
	|		ДокументыКОтражению.Ссылка = Расчеты.Ссылка
	|
	|ГДЕ
	|	Расчеты.ПредоплатаРегл < 0
	|	И Расчеты.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗачетАвансаПоставщику)
	|	И НЕ Расчеты.Ссылка ССЫЛКА Документ.ПоступлениеБезналичныхДенежныхСредств
	|	И НЕ Расчеты.Ссылка ССЫЛКА Документ.ПриходныйКассовыйОрдер
	|	И НЕ Расчеты.Ссылка ССЫЛКА Документ.ВозвратТоваровМеждуОрганизациями
	|	И НЕ Расчеты.Ссылка ССЫЛКА Документ.ВозвратТоваровПоставщику";

	ТекстЗачетАвансовПоставщикамНоваяАрхитектура = СтрШаблон(ТекстЗачетАвансовПоставщикамНоваяАрхитектура, 
		НСтр("ru='Зачет авансов поставщикам';uk='Залік авансів постачальникам'",ЯзыкСодержания));
	
	#КонецОбласти
	
	МассивТекстовЗапроса = Новый Массив;
	МассивТекстовЗапроса.Добавить(ТекстЗачетАвансовКлиентов);
	МассивТекстовЗапроса.Добавить(ТекстЗачетАвансовПоставщикам);
	МассивТекстовЗапроса.Добавить(ТекстЗачетАвансовКлиентовНоваяАрхитектура);
	МассивТекстовЗапроса.Добавить(ТекстЗачетАвансовПоставщикамНоваяАрхитектура);
	ТекстЗачетАвансов = СтрСоединить(МассивТекстовЗапроса, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
	Если ДокументИмя = "Документ.ОтчетПоКомиссииМеждуОрганизациями" ИЛИ ДокументИмя = "Документ.ПередачаТоваровМеждуОрганизациями" Тогда
		Отступ = Символы.ПС + Символы.Таб + Символы.Таб + Символы.Таб;
		ВыражениеДляИнтеркомпани = Отступ + "ВЫБОР КОГДА ОбъектыРасчетов.Организация = Операция.Организация"
			+ Отступ + "ТОГДА Операция.ГруппаФинансовогоУчета"
			+ Отступ + "ИНАЧЕ Операция.ГруппаФинансовогоУчетаПолучателя КОНЕЦ";
		ТекстЗачетАвансов = СтрЗаменить(ТекстЗачетАвансов, "Операция.ГруппаФинансовогоУчета", ВыражениеДляИнтеркомпани);
	КонецЕсли;
	
	ТекстЗачетАвансов = СтрЗаменить(ТекстЗачетАвансов, "ДокументИмя", ДокументИмя);
	
	Возврат ТекстЗачетАвансов;
	
КонецФункции

Функция ТекстРаспределениеРасходов(ДокументИмя) Экспорт

	ЯзыкСодержания = МультиязычностьУкр.КодЯзыкаИнформационнойБазы();
	
#Область Распределение	 // Отражение доп. расходов

	ТекстРаспределения =
	"ВЫБРАТЬ //// Отражение доп. расходов (Дт 20, 28 :: Кт 20ДР, 28ДР)
	|	Операция.Ссылка КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	(Строки.СтоимостьРегл + Строки.ДопРасходыРегл) КАК Сумма,
	|	Строки.ДопРасходыУпр КАК СуммаУУ,
	|
	|	ВЫБОР
	|		КОГДА Аналитика.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|				ИЛИ Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|				ИЛИ Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство)
	|		КОГДА Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.СобственныеТоварыВПути)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ЗатратыНаПриобретениеТМЦ)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НаСкладе)
	|	КОНЕЦ КАК ВидСчетаДт,
	|	
	|	ВЫБОР
	|		КОГДА Аналитика.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|				ИЛИ Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|				ИЛИ Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение)
	|			ТОГДА НЕОПРЕДЕЛЕНО 
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|			ТОГДА Строки.ВидЗапасов.ГруппаФинансовогоУчета
	|		ИНАЧЕ Аналитика.Номенклатура.ГруппаФинансовогоУчета
	|	КОНЕЦ КАК АналитикаУчетаДт,
	|	ВЫБОР
	|		КОГДА (Аналитика.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|			ИЛИ Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|			ИЛИ Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение))
	|			И Аналитика.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Склад)
	|			ТОГДА Аналитика.СкладскаяТерритория.Подразделение
	|		ИНАЧЕ Аналитика.МестоХранения
	|	КОНЕЦ КАК МестоУчетаДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВалютаДт,
	|	ВЫБОР 
	|		КОГДА Аналитика.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Склад)
	|			ТОГДА Аналитика.СкладскаяТерритория.Подразделение
	|		КОГДА Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.СобственныеТоварыВПути)
	|			ТОГДА ПриобретениеТоваровУслуг.Договор.Подразделение
	|		ИНАЧЕ Аналитика.Подразделение
	|	КОНЕЦ КАК ПодразделениеДт,
	|	ЕСТЬNULL(Назначения.НаправлениеДеятельности,
	|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельностиДт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеДт,
	|	НЕОПРЕДЕЛЕНО КАК СчетДт,
	|
	|	Аналитика.Номенклатура КАК СубконтоДт1,
	|	ВЫБОР
	|		КОГДА Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.СобственныеТоварыВПути)
	|			ТОГДА ПриобретениеТоваровУслуг.Контрагент
	|		ИНАЧЕ Аналитика.МестоХранения
	|	КОНЕЦ 				   КАК СубконтоДт2,
	|	ВЫБОР
	|		КОГДА НЕ Аналитика.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|			И (Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|			ИЛИ Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.МатериальныеЗатраты)
	|		КОГДА Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.СобственныеТоварыВПути)
	|			ТОГДА ПриобретениеТоваровУслуг.Договор
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Работы)
	|	КОНЕЦ 				   КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаКт,
	|	Строки.СтатьяРасходовСписания КАК АналитикаУчетаКт,
	|	Строки.Подразделение КАК МестоУчетаКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.КорНаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеКт,
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|
	|	Строки.КорАналитикаУчетаПартий.Контрагент КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	
	|	""%1"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ДокументИмя КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.СебестоимостьТоваров КАК Строки
	|	ПО
	|		Операция.Ссылка = Строки.Регистратор
	|		И Строки.Количество = 0
	|		И (Строки.СтоимостьРегл <> 0 ИЛИ Строки.ДопРасходыРегл <> 0 ИЛИ Строки.ДопРасходыУпр <> 0)
	|		И НЕ Строки.РасчетСебестоимости
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		И Строки.Активность
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		Строки.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Назначения КАК Назначения
	|		ПО Аналитика.Назначение = Назначения.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриобретениеТоваровУслуг КАК ПриобретениеТоваровУслуг
	|		ПО Строки.Партия = ПриобретениеТоваровУслуг.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|	ПО
	|		ДанныеПервичныхДокументов.Организация = Строки.Организация
	|		И ДанныеПервичныхДокументов.Документ = Строки.ДокументДвижения
	|	
	|ГДЕ
	|	Строки.СтатьяРасходовСписания <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|	И Строки.СтатьяРасходовСписания <> НЕОПРЕДЕЛЕНО
	|";

	ТекстРаспределения = СтрШаблон(ТекстРаспределения, 
		НСтр("ru='Отражение доп. расходов';uk='Відображення дод. витрат'",ЯзыкСодержания));
	
	ТекстРаспределения = СтрЗаменить(ТекстРаспределения, "ДокументИмя", ДокументИмя);
	
#КонецОбласти

#Область ОтклоненияРеализация // Отклонения в себестоимости реализации 
	
	ТекстОтклоненияСебестоимостьРеализованногоТовара =
	"ВЫБРАТЬ //// Отклонения В себестоимости реализации 
	|	ДокументыКОтражению.Ссылка 	КАК Ссылка,
	|	Строки.Период 				КАК Период,
	|	Строки.Организация 			КАК Организация,
	|	НЕОПРЕДЕЛЕНО 				КАК ИдентификаторСтроки,
	|
	|	Строки.ДопРасходыРегл 		КАК Сумма,
	|	Строки.ДопРасходыУпр 		КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СебестоимостьПродаж) КАК ВидСчетаДт,
	|	
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|			ТОГДА Строки.ВидЗапасов.ГруппаФинансовогоУчета
	|		ИНАЧЕ Аналитика.Номенклатура.ГруппаФинансовогоУчета
	|	КОНЕЦ КАК АналитикаУчетаДт,
	|	Аналитика.МестоХранения		 				КАК МестоУчетаДт,
	|
	|	НЕОПРЕДЕЛЕНО 								КАК ВалютаДт,
	|	Строки.Подразделение 						КАК ПодразделениеДт,
	|	АналитикаУчетаПоПартнерам.НаправлениеДеятельности 	КАК НаправлениеДеятельностиДт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеДт,
	|	НЕОПРЕДЕЛЕНО 								КАК СчетДт,
	|
	|	Аналитика.Номенклатура 						КАК СубконтоДт1,
	|	ВЫБОР КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|		ТОГДА Строки.ВидЗапасов.ГруппаФинансовогоУчета
	|		ИНАЧЕ Аналитика.Номенклатура.ГруппаФинансовогоУчета
	|	КОНЕЦ 										КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО 								КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	ВЫБОР
	|		КОГДА Аналитика.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|					ИЛИ Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НаСкладе)
	|	КОНЕЦ 								КАК ВидСчетаКт,
	|
	|	ВЫБОР
	|		КОГДА Аналитика.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|				ИЛИ Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|			ТОГДА НЕОПРЕДЕЛЕНО 
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|			ТОГДА Строки.ВидЗапасов.ГруппаФинансовогоУчета
	|		ИНАЧЕ Аналитика.Номенклатура.ГруппаФинансовогоУчета
	|	КОНЕЦ 								КАК АналитикаУчетаКт,
	|	ВЫБОР
	|		КОГДА (Аналитика.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|			ИЛИ Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты))
	|			И Аналитика.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Склад)
	|			ТОГДА Аналитика.СкладскаяТерритория.Подразделение
	|		ИНАЧЕ Аналитика.МестоХранения
	|	КОНЕЦ 								КАК МестоУчетаКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	ВЫБОР КОГДА Аналитика.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Склад)
	|		ТОГДА Аналитика.СкладскаяТерритория.Подразделение
	|		ИНАЧЕ Аналитика.Подразделение 
	|	КОНЕЦ 		 КАК ПодразделениеКт,
	|	ЕСТЬNULL(Аналитика.Назначение.НаправлениеДеятельности,
	|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельностиКт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеКт,

	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|
	|	Аналитика.Номенклатура 	КАК СубконтоКт1,
	|	Аналитика.МестоХранения КАК СубконтоКт2,
	|	ВЫБОР
	|		КОГДА НЕ Аналитика.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|			И Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.МатериальныеЗатраты)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Работы)
	|	КОНЕЦ 				   КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	
	|	""%1"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.СебестоимостьТоваров КАК Строки
	|	ПО
	|		ДокументыКОтражению.Ссылка = Строки.Регистратор
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		И Строки.Активность
	|		И НЕ Строки.РасчетСебестоимости
	|		И Строки.РасчетПартий
	|		И (Строки.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ОтклонениеВСтоимости) 
	|			ИЛИ Строки.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретенияПрошлогоПериода)
	|			ИЛИ Строки.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.РаспределениеПоВыбывшимТоварам))
	|		И Строки.Количество = 0
	|		И (Строки.ДопРасходыРегл <> 0 ИЛИ Строки.ДопРасходыУпр <> 0)
	// критерий того, что расходы относятся на себестоимость продаж
	|		И Строки.АналитикаУчетаПоПартнерам <> ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПоПартнерам.ПустаяСсылка)  
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		Строки.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|	
	|";

	ТекстОтклоненияСебестоимостьРеализованногоТовара = СтрШаблон(ТекстОтклоненияСебестоимостьРеализованногоТовара, 
		НСтр("ru='Отклонения в стоимости товара';uk='Відхилення у вартості товару'",ЯзыкСодержания));
	
#КонецОбласти

#Область ОтклоненияСклад // Отклонения в себестоимости товаров 

	ТекстОтклоненияСебестоимостьНаСкладе =
	"ВЫБРАТЬ //// Отклонения В себестоимости товаров 
	|	ДокументыКОтражению.Ссылка 	КАК Ссылка,
	|	Строки.Период 				КАК Период,
	|	Строки.Организация 			КАК Организация,
	|	НЕОПРЕДЕЛЕНО 				КАК ИдентификаторСтроки,
	|
	|	Строки.ДопРасходыРегл 		КАК Сумма,
	|	Строки.ДопРасходыУпр 		КАК СуммаУУ,
	|
	|	ВЫБОР
	|		КОГДА КорАналитика.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|				ИЛИ Строки.КорРазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НаСкладе)
	|	КОНЕЦ КАК ВидСчетаДт,
	|	
	|	ВЫБОР
	|		КОГДА КорАналитика.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|				ИЛИ Строки.КорРазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|			ТОГДА НЕОПРЕДЕЛЕНО 
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|			ТОГДА Строки.ВидЗапасов.ГруппаФинансовогоУчета
	|		ИНАЧЕ КорАналитика.Номенклатура.ГруппаФинансовогоУчета
	|	КОНЕЦ КАК АналитикаУчетаДт,
	|	ВЫБОР
	|		КОГДА (КорАналитика.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|			ИЛИ Строки.КорРазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты))
	|			И КорАналитика.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Склад)
	|			ТОГДА КорАналитика.СкладскаяТерритория.Подразделение
	|		ИНАЧЕ КорАналитика.МестоХранения
	|	КОНЕЦ КАК МестоУчетаДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВалютаДт,
	|	ВЫБОР
	|		КОГДА КорАналитика.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|			ТОГДА КорАналитика.МестоХранения
	|		ИНАЧЕ КорАналитика.СкладскаяТерритория.Подразделение 
	|	КОНЕЦ КАК ПодразделениеДт,
	|	ЕСТЬNULL(КорНазначения.НаправлениеДеятельности,
	|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельностиДт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеДт,
	|	НЕОПРЕДЕЛЕНО КАК СчетДт,
	|
	|	КорАналитика.Номенклатура КАК СубконтоДт1,
	|	КорАналитика.МестоХранения КАК СубконтоДт2,
	|	ВЫБОР
	|		КОГДА НЕ КорАналитика.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|			И Строки.КорРазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.МатериальныеЗатраты)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Работы)
	|	КОНЕЦ КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	ВЫБОР
	|		КОГДА Аналитика.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|					ИЛИ Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НаСкладе)
	|	КОНЕЦ 								КАК ВидСчетаКт,
	|
	|	ВЫБОР
	|		КОГДА Аналитика.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|				ИЛИ Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|			ТОГДА НЕОПРЕДЕЛЕНО 
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|			ТОГДА Строки.ВидЗапасов.ГруппаФинансовогоУчета
	|		ИНАЧЕ Аналитика.Номенклатура.ГруппаФинансовогоУчета
	|	КОНЕЦ 								КАК АналитикаУчетаКт,
	|	ВЫБОР
	|		КОГДА (Аналитика.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|			ИЛИ Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты))
	|			И Аналитика.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Склад)
	|			ТОГДА Аналитика.СкладскаяТерритория.Подразделение
	|		ИНАЧЕ Аналитика.МестоХранения
	|	КОНЕЦ 								КАК МестоУчетаКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	ВЫБОР КОГДА Аналитика.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Склад)
	|		ТОГДА Аналитика.СкладскаяТерритория.Подразделение
	|		ИНАЧЕ Аналитика.Подразделение 
	|	КОНЕЦ 		 КАК ПодразделениеКт,
	|	ЕСТЬNULL(Аналитика.Назначение.НаправлениеДеятельности,
	|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельностиКт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеКт,
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|
	|	Аналитика.Номенклатура 	КАК СубконтоКт1,
	|	Аналитика.МестоХранения КАК СубконтоКт2,
	|	ВЫБОР
	|		КОГДА НЕ Аналитика.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|			И Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.МатериальныеЗатраты)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Работы)
	|	КОНЕЦ 				   КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	
	|	""%1"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.СебестоимостьТоваров КАК Строки
	|	ПО
	|		ДокументыКОтражению.Ссылка = Строки.Регистратор
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		И Строки.Активность
	|		И НЕ Строки.РасчетСебестоимости
	|		И Строки.РасчетПартий
	|		И (Строки.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ОтклонениеВСтоимости) 
	|			ИЛИ Строки.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретенияПрошлогоПериода)
	|			ИЛИ Строки.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.РаспределениеПоВыбывшимТоварам))
	|		И Строки.Количество = 0
	|		И (Строки.ДопРасходыРегл <> 0 ИЛИ Строки.ДопРасходыУпр <> 0)
	// критерий того, что расходы относятся на себестоимость на складе/производство
	|		И Строки.АналитикаУчетаПоПартнерам = ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПоПартнерам.ПустаяСсылка)  
	|		И Строки.СтатьяДоходов 			= ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка)  
	|		И Строки.СтатьяРасходовСписания = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)  
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		Строки.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Назначения КАК Назначения
	|		ПО Аналитика.Назначение = Назначения.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Справочник.КлючиАналитикиУчетаНоменклатуры КАК КорАналитика
	|	ПО
	|		Строки.КорАналитикаУчетаНоменклатуры = КорАналитика.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Назначения КАК КорНазначения
	|		ПО КорАналитика.Назначение = КорНазначения.Ссылка
	|";

	ТекстОтклоненияСебестоимостьНаСкладе = СтрШаблон(ТекстОтклоненияСебестоимостьНаСкладе, 
		НСтр("ru='Отклонения в стоимости товара';uk='Відхилення у вартості товару'",ЯзыкСодержания));
	
#КонецОбласти
	
#Область ОтклоненияРасходы // Отклонения в расходы

	ТекстОтклоненияРасходы =
	"ВЫБРАТЬ //// Отклонения В расходы
	|	ДокументыКОтражению.Ссылка 		КАК Ссылка,
	|	Строки.Период 			КАК Период,
	|	Строки.Организация 		КАК Организация,
	|	НЕОПРЕДЕЛЕНО 			КАК ИдентификаторСтроки,
	|
	|	Строки.ДопРасходыРегл 	КАК Сумма,
	|	Строки.ДопРасходыУпр 	КАК СуммаУУ,
	|
	|	(ВЫБОР
	|		КОГДА Статья.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы) 
	|			  И Статья.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеОперации)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КОНЕЦ) КАК ВидСчетаДт,
	|	Строки.СтатьяРасходовСписания КАК АналитикаУчетаДт,
	|	Строки.Подразделение КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Назначение.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|
	|	Строки.СтатьяРасходовСписания КАК СубконтоДт1,
	|	Строки.АналитикаРасходов КАК СубконтоДт2,
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее) КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	ВЫБОР
	|		КОГДА Аналитика.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|					ИЛИ Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НаСкладе)
	|	КОНЕЦ 								КАК ВидСчетаКт,
	|
	|	ВЫБОР
	|		КОГДА Аналитика.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|				ИЛИ Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|			ТОГДА НЕОПРЕДЕЛЕНО 
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|			ТОГДА Строки.ВидЗапасов.ГруппаФинансовогоУчета
	|		ИНАЧЕ Аналитика.Номенклатура.ГруппаФинансовогоУчета
	|	КОНЕЦ 								КАК АналитикаУчетаКт,
	|	ВЫБОР
	|		КОГДА (Аналитика.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|			ИЛИ Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты))
	|			И Аналитика.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Склад)
	|			ТОГДА Аналитика.СкладскаяТерритория.Подразделение
	|		ИНАЧЕ Аналитика.МестоХранения
	|	КОНЕЦ 								КАК МестоУчетаКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	ВЫБОР КОГДА Аналитика.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Склад)
	|		ТОГДА Аналитика.СкладскаяТерритория.Подразделение
	|		ИНАЧЕ Аналитика.Подразделение 
	|	КОНЕЦ 		 КАК ПодразделениеКт,
	|	ЕСТЬNULL(Аналитика.Назначение.НаправлениеДеятельности,
	|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельностиКт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеКт,
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|
	|	Аналитика.Номенклатура 	КАК СубконтоКт1,
	|	Аналитика.МестоХранения КАК СубконтоКт2,
	|	ВЫБОР
	|		КОГДА НЕ Аналитика.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|			И Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.МатериальныеЗатраты)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Работы)
	|	КОНЕЦ 				   КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	
	|	""%1"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.СебестоимостьТоваров КАК Строки
	|	ПО
	|		ДокументыКОтражению.Ссылка = Строки.Регистратор
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		И Строки.Активность
	|		И НЕ Строки.РасчетСебестоимости
	|		И Строки.РасчетПартий
	|		И (Строки.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ОтклонениеВСтоимости) 
	|			ИЛИ Строки.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретенияПрошлогоПериода)
	|			ИЛИ Строки.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.РаспределениеПоВыбывшимТоварам))
	|		И Строки.Количество = 0
	|		И (Строки.ДопРасходыРегл <> 0 ИЛИ Строки.ДопРасходыУпр <> 0)
	// критерий того, что отклонения списываем на расходы
	|		И Строки.СтатьяРасходовСписания <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)  
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		ПланВидовХарактеристик.СтатьиРасходов КАК Статья
	|	ПО 
	|		Статья.Ссылка = Строки.СтатьяРасходовСписания
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		Строки.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		Справочник.ОбъектыСтроительства КАК ОбъектыСтроительства
	|	ПО 
	|		ОбъектыСтроительства.Ссылка = Строки.АналитикаРасходов
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Назначения КАК Назначения
	|		ПО Аналитика.Назначение = Назначения.Ссылка
	|";

	ТекстОтклоненияРасходы = СтрШаблон(ТекстОтклоненияРасходы, 
		НСтр("ru='Отклонения в стоимости товара';uk='Відхилення у вартості товару'",ЯзыкСодержания));
	
#КонецОбласти
	
#Область ОтклоненияДоходы // Отклонения в доходы

	ТекстОтклоненияДоходы =
	"ВЫБРАТЬ //// Отклонения В доходы 
	|	ДокументыКОтражению.Ссылка 		КАК Ссылка,
	|	Строки.Период 				КАК Период,
	|	Строки.Организация 			КАК Организация,
	|	НЕОПРЕДЕЛЕНО 				КАК ИдентификаторСтроки,
	|
	|	Строки.ДопРасходыРегл 		КАК Сумма,
	|	Строки.ДопРасходыУпр 		КАК СуммаУУ,
	|
	|	ВЫБОР
	|		КОГДА Аналитика.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|					ИЛИ Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НаСкладе)
	|	КОНЕЦ 								КАК ВидСчетаДт,
	|
	|	ВЫБОР
	|		КОГДА Аналитика.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|				ИЛИ Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|			ТОГДА НЕОПРЕДЕЛЕНО 
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|			ТОГДА Строки.ВидЗапасов.ГруппаФинансовогоУчета
	|		ИНАЧЕ Аналитика.Номенклатура.ГруппаФинансовогоУчета
	|	КОНЕЦ 								КАК АналитикаУчетаДт,
	|	ВЫБОР
	|		КОГДА (Аналитика.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|			ИЛИ Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты))
	|			И Аналитика.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Склад)
	|			ТОГДА Аналитика.СкладскаяТерритория.Подразделение
	|		ИНАЧЕ Аналитика.МестоХранения
	|	КОНЕЦ 								КАК МестоУчетаДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВалютаДт,
	|	ВЫБОР КОГДА Аналитика.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Склад)
	|		ТОГДА Аналитика.СкладскаяТерритория.Подразделение
	|		ИНАЧЕ Аналитика.Подразделение 
	|	КОНЕЦ 		 КАК ПодразделениеДт,
	|	ЕСТЬNULL(Аналитика.Назначение.НаправлениеДеятельности,
	|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельностиДт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеДт,
	|	НЕОПРЕДЕЛЕНО КАК СчетДт,
	|
	|	Аналитика.Номенклатура 	КАК СубконтоДт1,
	|	Аналитика.МестоХранения КАК СубконтоДт2,
	|	ВЫБОР
	|		КОГДА НЕ Аналитика.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|			И Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.МатериальныеЗатраты)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Работы)
	|	КОНЕЦ 				   КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Доходы) 	КАК ВидСчетаКт,
	|	Строки.СтатьяДоходов 							 	КАК АналитикаУчетаКт,
	|	Строки.Подразделение 								КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) 			КАК ВалютаКт,
	|	Строки.Подразделение 								КАК ПодразделениеКт,
	|	Назначение.НаправлениеДеятельности 					КАК НаправлениеДеятельностиКт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) 		КАК СчетКт,
	|
	|	Строки.АналитикаДоходов КАК СубконтоКт1,
	|	Строки.СтатьяДоходов 	КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО 			КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	
	|	""%1"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.СебестоимостьТоваров КАК Строки
	|	ПО
	|		ДокументыКОтражению.Ссылка = Строки.Регистратор
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		И Строки.Активность
	|		И НЕ Строки.РасчетСебестоимости
	|		И Строки.РасчетПартий
	|		И (Строки.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ОтклонениеВСтоимости) 
	|			ИЛИ Строки.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретенияПрошлогоПериода)
	|			ИЛИ Строки.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.РаспределениеПоВыбывшимТоварам))
	|		И Строки.Количество = 0
	|		И (Строки.ДопРасходыРегл <> 0 ИЛИ Строки.ДопРасходыУпр <> 0)
	// критерий того, что отклонения отражаем в доходах
	|		И Строки.СтатьяДоходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка)  
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		Строки.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Назначения КАК Назначения
	|		ПО Аналитика.Назначение = Назначения.Ссылка
	|";

	ТекстОтклоненияДоходы = СтрШаблон(ТекстОтклоненияДоходы, 
		НСтр("ru='Отклонения в стоимости товара';uk='Відхилення у вартості товару'",ЯзыкСодержания));
	
#КонецОбласти

	ТекстыОтражения = Новый Массив;
	
	ТекстыОтражения.Добавить(ТекстРаспределения);
	ТекстыОтражения.Добавить(ТекстОтклоненияСебестоимостьРеализованногоТовара);
	ТекстыОтражения.Добавить(ТекстОтклоненияСебестоимостьНаСкладе);
	ТекстыОтражения.Добавить(ТекстОтклоненияРасходы);
	ТекстыОтражения.Добавить(ТекстОтклоненияДоходы);

	Возврат СтрСоединить(ТекстыОтражения, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());

КонецФункции

Функция ТекстСписаниеРасходовУОрганизацииИсточника(ДокументИмя) Экспорт

	ЯзыкСодержания = МультиязычностьУкр.КодЯзыкаИнформационнойБазы();
	
	ТекстВозврата =
	"ВЫБРАТЬ //// Списание УУ расходов у организации - источника (Дт 91 :: Кт 20, 44)
	|	Операция.Ссылка КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	0 КАК Сумма,
	|	-Строки.СуммаУпр КАК СуммаУУ,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДругиеЗатратыОбычнойДеятельности) КАК СчетДт,
	|
	|	Строки.СтатьяРасходов КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаКт,
	|	Строки.СтатьяРасходов КАК АналитикаУчетаКт,
	|	Строки.Подразделение КАК МестоУчетаКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеКт,
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|
	|	Строки.СтатьяРасходов КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	
	|	""%1"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ДокументИмя КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.ПрочиеРасходы КАК Строки
	|	ПО
	|		Операция.Ссылка = Строки.Регистратор
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		И Строки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторнированиеРасходовУУ)
	|		И Строки.СуммаУпр <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ //// Списание УУ расходов у организации - источника (Дт 91 :: Кт 20, 44)
	|	Операция.Ссылка КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	0 КАК Сумма,
	|	-Строки.СтоимостьБезНДС КАК СуммаУУ,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДругиеЗатратыОбычнойДеятельности) КАК СчетДт,
	|
	|	Строки.СтатьяРасходов КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаКт,
	|	Строки.СтатьяРасходов КАК АналитикаУчетаКт,
	|	Строки.Подразделение КАК МестоУчетаКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеКт,
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|
	|	Строки.СтатьяРасходов КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	
	|	""%1"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ДокументИмя КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.ПартииПрочихРасходов КАК Строки
	|	ПО
	|		Операция.Ссылка = Строки.Регистратор
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		И Строки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторнированиеРасходовУУ)
	|		И Строки.СтоимостьБезНДС <> 0";
	
	ТекстВозврата = СтрЗаменить(ТекстВозврата, "ДокументИмя", ДокументИмя); 

	ТекстВозврата = СтрШаблон(ТекстВозврата, 
		НСтр("ru='Списание УУ расходов у организации - источника';uk='Списання УО видатків в організації - джерела'",ЯзыкСодержания));
	
	Возврат ТекстВозврата;
	
КонецФункции

Функция ТекстРегистрацияРасходовУОрганизацииПолучателя(ДокументИмя) Экспорт

	ЯзыкСодержания = МультиязычностьУкр.КодЯзыкаИнформационнойБазы();
	
	ТекстВозврата =
	"ВЫБРАТЬ //// Регистрация УУ расходов у организации - получателя (Дт 20, 44 :: Кт 91)
	|	Операция.Ссылка КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	0 КАК Сумма,
	|	Строки.СуммаУпр КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Строки.СтатьяРасходов КАК АналитикаУчетаДт,
	|	Строки.Подразделение КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетДт,
	|
	|	Строки.СтатьяРасходов КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеКт,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДругиеДоходыОтОбычнойДеятельности) КАК СчетКт,
	|
	|	Строки.СтатьяРасходов КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	
	|	""%1"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ДокументИмя КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.ПрочиеРасходы КАК Строки
	|	ПО
	|		Операция.Ссылка = Строки.Регистратор
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		И Строки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РегистрацияРасходовУУ)
	|		И Строки.СуммаУпр <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ //// Регистрация УУ расходов у организации - получателя (Дт 20, 44 :: Кт 91)
	|	Операция.Ссылка КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	0 КАК Сумма,
	|	Строки.СтоимостьБезНДС КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Строки.СтатьяРасходов КАК АналитикаУчетаДт,
	|	Строки.Подразделение КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетДт,
	|
	|	Строки.СтатьяРасходов КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеКт,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДругиеДоходыОтОбычнойДеятельности) КАК СчетКт,
	|
	|	Строки.СтатьяРасходов КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	
	|	""%1"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ДокументИмя КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.ПартииПрочихРасходов КАК Строки
	|	ПО
	|		Операция.Ссылка = Строки.Регистратор
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		И Строки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РегистрацияРасходовУУ)
	|		И Строки.СтоимостьБезНДС <> 0";
	
	ТекстВозврата = СтрЗаменить(ТекстВозврата, "ДокументИмя", ДокументИмя);

	ТекстВозврата = СтрШаблон(ТекстВозврата, 
		НСтр("ru='Регистрация УУ расходов у организации - получателя';uk='Реєстрація УО витрат у організації – одержувача'",ЯзыкСодержания));

	Возврат ТекстВозврата;
	
КонецФункции

Функция ТекстНДСПоДаннымФинпартий() Экспорт

	ЯзыкСодержания = МультиязычностьУкр.КодЯзыкаИнформационнойБазы();

	
    ВключениеИсключениеНДСВСтоимостьРасходов = "
    |ВЫБРАТЬ //// Включение/исключение НДС в стоимость распределяемых расходов (Дт 23, 9X, 20ДР, 28ДР :: Кт 6435)
	|	Партии.Ссылка КАК Ссылка,
	|	Партии.Период КАК Период,
	|	Партии.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
    |	ВЫБОР КОГДА (Партии.ВключениеНДСВСтоимость И НЕ Партии.Ссылка ССЫЛКА Документ.РаспределениеПрочихЗатрат) ИЛИ (Партии.ИсключениеНДСИзСтоимости И Партии.Ссылка ССЫЛКА Документ.РаспределениеПрочихЗатрат) ТОГДА
	|		Партии.НДСРегл
	|	ИНАЧЕ
	|		-Партии.НДСРегл
	|	КОНЕЦ КАК Сумма,
	|	
    |	ВЫБОР КОГДА (Партии.ВключениеНДСВСтоимость И НЕ Партии.Ссылка ССЫЛКА Документ.РаспределениеПрочихЗатрат) ИЛИ (Партии.ИсключениеНДСИзСтоимости И Партии.Ссылка ССЫЛКА Документ.РаспределениеПрочихЗатрат) ТОГДА
	|		Партии.НДСУпр
	|	ИНАЧЕ
	|		-Партии.НДСУпр
	|	КОНЕЦ КАК СуммаУпр,
	|
	|	ВЫБОР
	|		КОГДА Партии.Ссылка ССЫЛКА Документ.РаспределениеПрочихЗатрат
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы)
	|	КОНЕЦ КАК ВидСчетаДт,
	|	ВЫБОР
	|		КОГДА Партии.Ссылка ССЫЛКА Документ.РаспределениеПрочихЗатрат
	|		ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ Партии.СтатьяРасходов
	|	КОНЕЦ КАК АналитикаУчетаДт,
	|	ВЫБОР
	|		КОГДА Партии.Ссылка ССЫЛКА Документ.РаспределениеПрочихЗатрат
	|		ТОГДА Партии.КорПодразделение
	|		ИНАЧЕ Партии.ПодразделениеРасходов
	|	КОНЕЦ КАК МестоУчетаДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаДт,
	|	ВЫБОР
	|		КОГДА Партии.Ссылка ССЫЛКА Документ.РаспределениеПрочихЗатрат
	|		ТОГДА Партии.КорПодразделение
	|		ИНАЧЕ Партии.ПодразделениеРасходов
	|	КОНЕЦ КАК ПодразделениеДт,
	|	Партии.КорНаправлениеДеятельности КАК НаправлениеДеятельностиДт,
    |	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
    |	ВЫБОР
    |		КОГДА Партии.Ссылка ССЫЛКА Документ.РаспределениеПрочихЗатрат
    |		ТОГДА Партии.КорГруппаПродукции
    |		ИНАЧЕ Партии.АналитикаРасходов
    |	КОНЕЦ КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
    |	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
    |	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
    |	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
    |	Партии.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
    |	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеКт,
	|
    |	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.УсловнаяПродажа) КАК СчетКт,
	|	Партии.Контрагент КАК СубконтоКт1,
	|	Партии.ДокументПоступления КАК СубконтоКт2,
	|	Партии.ДокументРеализации КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
    |	ВЫБОР КОГДА (Партии.ВключениеНДСВСтоимость И НЕ Партии.Ссылка ССЫЛКА Документ.РаспределениеПрочихЗатрат) ИЛИ (Партии.ИсключениеНДСИзСтоимости И Партии.Ссылка ССЫЛКА Документ.РаспределениеПрочихЗатрат) ТОГДА
	|		""%1""
	|	ИНАЧЕ
	|		""%2""
	|	КОНЕЦ КАК Содержание
	|	
	|ИЗ
	|	Партии КАК Партии
	|ГДЕ
	|	Партии.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиРасходов
	|	И Партии.СтатьяРасходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|	И (НЕ Партии.ПодразделениеРасходов ЕСТЬ NULL ИЛИ Партии.СтатьяРасходов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ВыбытияТоваровВПрошлыхПериодах))
	|	И (Партии.ВключениеНДСВСтоимость ИЛИ Партии.ИсключениеНДСИзСтоимости)
	|	И НЕ Партии.Ссылка ССЫЛКА Документ.РаспределениеПроизводственныхЗатрат
	|";
	
 
	ВключениеИсключениеНДСВСтоимостьРасходов = СтрШаблон(ВключениеИсключениеНДСВСтоимостьРасходов, 
		НСтр("ru='Условная продажа';uk='Умовний продаж'",ЯзыкСодержания),
		НСтр("ru='Сторно условной продажи';uk='Сторно умовного продажу'",ЯзыкСодержания));

    Возврат ВключениеИсключениеНДСВСтоимостьРасходов;

КонецФункции


#КонецОбласти

#Область НастройкиОтражения

// Сопоставление порядка отражений и видов счетов учета
// ПрочиеОперации - реализован в ЗапросПрочихСчетов
// 
//
Функция ЗапросСчетов() Экспорт
	
	ТекстИнициализации = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Настройка.Организация КАК Организация,
	|	Настройка.АналитикаУчета КАК АналитикаУчета,
	|	Настройка.МестоУчета КАК МестоУчета,
	|	Настройка.ВидСчетаРеглУчета КАК ВидСчетаРеглУчета,
	|	Настройка.СчетУчета КАК СчетУчета,
	|	План.ВидСубконто1 КАК ВидСубконто1,
	|	План.ВидСубконто2 КАК ВидСубконто2,
	|	План.ВидСубконто3 КАК ВидСубконто3,
	|	(ВЫБОР КОГДА Настройка.ИспользоватьСубконто И Настройка.ВидСубконто В (План.ВидСубконто1, План.ВидСубконто2, План.ВидСубконто3)
	|		ТОГДА Настройка.ИспользоватьСубконто ИНАЧЕ ЛОЖЬ КОНЕЦ) КАК ИспользоватьСубконто,
	|	(ВЫБОР КОГДА Настройка.ИспользоватьСубконто И Настройка.ВидСубконто В (План.ВидСубконто1, План.ВидСубконто2, План.ВидСубконто3)
	|		ТОГДА Настройка.ВидСубконто ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ) КАК ВидСубконто,
	|	(ВЫБОР КОГДА Настройка.ИспользоватьСубконто И Настройка.ВидСубконто В (План.ВидСубконто1, План.ВидСубконто2, План.ВидСубконто3)
	|		ТОГДА Настройка.Субконто ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ) КАК Субконто
	|ПОМЕСТИТЬ Счета
	|ИЗ 
	|	НастройкаСчетов КАК Настройка
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланХозрасчетный КАК План
	|		ПО План.Ссылка = Настройка.СчетУчета
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ВидСчетаРеглУчета,
	|	АналитикаУчета,
	|	МестоУчета
	|";
	
	МассивПорядкаОтражения = Новый Массив;
	МассивПорядкаОтражения.Добавить(ТекстНастроекОтраженияСчетовУчета());
	ТекстНастройкаСчетов = "(" + СтрСоединить(МассивПорядкаОтражения, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении()) + ")";
	
	Возврат Новый Запрос(СтрЗаменить(ТекстИнициализации, "НастройкаСчетов", ТекстНастройкаСчетов));
	
КонецФункции

Функция ЗапросПрочихСчетов() Экспорт
	Возврат Новый Запрос("
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ПорядокУчета.Дата КАК Период,
		|	ПорядокУчета.Организация КАК Организация,
		|	ПорядокУчета.Документ КАК Документ,
		|	ПорядокУчета.ИдентификаторСтроки КАК ИдентификаторСтроки,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеОперации) КАК ВидСчетаРеглУчета,
		|	ПорядокУчета.СчетУчета КАК СчетУчета,
		|	ИСТИНА КАК ИспользоватьСубконто,
		|	ПорядокУчета.Субконто1 КАК Субконто1,
		|	ПорядокУчета.Субконто2 КАК Субконто2,
		|	ПорядокУчета.Субконто3 КАК Субконто3,
		|	План.ВидСубконто1 КАК ВидСубконто1,
		|	План.ВидСубконто2 КАК ВидСубконто2,
		|	План.ВидСубконто3 КАК ВидСубконто3
		|ПОМЕСТИТЬ
		|	ПрочиеСчета
		|ИЗ
		|	РегистрСведений.ПорядокОтраженияПрочихОпераций КАК ПорядокУчета
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		ДокументыКОтражению КАК ДокументыКОтражению
		|	ПО
		|		ПорядокУчета.Документ = ДокументыКОтражению.Ссылка
		|	ЛЕВОЕ СОЕДИНЕНИЕ 
		|		ПланХозрасчетный КАК План
		|	ПО 
		|		План.Ссылка = ПорядокУчета.СчетУчета
		|ИНДЕКСИРОВАТЬ ПО
		|	Документ,
		|	Организация,
		|	ВидСчетаРеглУчета,
		|	ИдентификаторСтроки
		|");
КонецФункции

Функция ЗапросПланаСчетов() Экспорт
	ЗапросПлана = Новый Запрос;
	ЗапросПланаТекст = "
	    |ВЫБРАТЬ
		|	План.Ссылка КАК Ссылка,
		|	План.Валютный КАК Валютный,
		|	План.УчетПоПодразделениям КАК УчетПоПодразделениям,
		|	План.УчетПоНаправлениямДеятельности КАК УчетПоНаправлениямДеятельности,
		|	План.Забалансовый КАК Забалансовый,
		|	План.Количественный КАК Количественный,
		|	План.ЗапретитьИспользоватьВПроводках КАК ЗапретитьИспользоватьВПроводках,
		|	План.НалоговыйУчет КАК НалоговыйУчет,
		|	План.УчетПоНалоговымНазначениямНДС КАК УчетПоНалоговымНазначениямНДС,
		|	ЕСТЬNULL(Виды1.ВидСубконто, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка)) КАК ВидСубконто1,
		|	ЕСТЬNULL(Виды2.ВидСубконто, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка)) КАК ВидСубконто2,
		|	ЕСТЬNULL(Виды3.ВидСубконто, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка)) КАК ВидСубконто3
		|ПОМЕСТИТЬ
		|	ПланХозрасчетный
		|ИЗ
		|	ПланСчетов.Хозрасчетный КАК План
		|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК Виды1
		|		ПО План.Ссылка = Виды1.Ссылка И Виды1.НомерСтроки = 1
		|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК Виды2
		|		ПО План.Ссылка = Виды2.Ссылка И Виды2.НомерСтроки = 2
		|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК Виды3
		|		ПО План.Ссылка = Виды3.Ссылка И Виды3.НомерСтроки = 3
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка) КАК Ссылка,
		|	ТИП(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные) КАК ТипЗначения
		|ПОМЕСТИТЬ ВидыСубконто
		|ГДЕ ЛОЖЬ
		|";
	
	ЗапросПВХ = Новый Запрос("
		|ВЫБРАТЬ
		|	ПВХ.Ссылка КАК Ссылка,
		|	ПВХ.ТипЗначения КАК ТипЗначения
		|ИЗ
		|	ПланВидовХарактеристик.ВидыСубконтоХозрасчетные КАК ПВХ
		|");
	ВидСубконто = ЗапросПВХ.Выполнить().Выбрать();
	
	ИндексСтроки = 0;
	Пока ВидСубконто.Следующий() Цикл
		Для Каждого Тип Из ВидСубконто.ТипЗначения.Типы() Цикл
			ИмяТипа = Метаданные.НайтиПоТипу(Тип).ПолноеИмя();
			
			ТекстТипа = "
				|ВЫБРАТЬ
				|	ПВХ.Ссылка, 
				|	ТИП(&ПодстановкаТипа)
				|ИЗ ПланВидовХарактеристик.ВидыСубконтоХозрасчетные КАК ПВХ
				|ГДЕ ПВХ.Ссылка = &ПодстановкаСсылки
				|";
			ТекстТипа = СтрЗаменить(ТекстТипа, "&ПодстановкаТипа", ИмяТипа);
			ИмяПараметра = "Ссылка" + Формат(ИндексСтроки, "ЧГ=0");
			ТекстТипа = СтрЗаменить(ТекстТипа, "ПодстановкаСсылки", ИмяПараметра);
			
			ЗапросПланаТекст = ЗапросПланаТекст + " ОБЪЕДИНИТЬ ВСЕ " + ТекстТипа;
			ЗапросПлана.УстановитьПараметр(ИмяПараметра, ВидСубконто.Ссылка);
			
			ИндексСтроки = ИндексСтроки + 1;
		КонецЦикла;
	КонецЦикла;
	
	ЗапросПланаТекст = ЗапросПланаТекст + "
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка";
	
	ЗапросПлана.Текст = ЗапросПланаТекст;
	Возврат ЗапросПлана;
КонецФункции

#Область ЗапросСчетов

Функция ТекстНастроекОтраженияСчетовУчета(МассивВидовСчетов = Неопределено)
	
	ТекстВозврата =
	"ВЫБРАТЬ
	|	ПорядокУчета.Организация КАК Организация,
	|	ПорядокУчета.АналитикаУчета КАК АналитикаУчета,
	|	ПорядокУчета.МестоУчета КАК МестоУчета,
	|	ПорядокУчета.ВидСчета КАК ВидСчетаРеглУчета,
	|	ПорядокУчета.СчетУчета КАК СчетУчета,
	|	(НЕ ВидыСубконто.Ссылка ЕСТЬ NULL) КАК ИспользоватьСубконто,
	|	ЕСТЬNULL(ВидыСубконто.ВидСубконто, НЕОПРЕДЕЛЕНО) КАК ВидСубконто,
	|	(ВЫБОР КОГДА ПорядокУчета.Субконто = НЕОПРЕДЕЛЕНО И НЕ ВидыСубконто.Ссылка ЕСТЬ NULL ТОГДА ПорядокУчета.АналитикаУчета
	|		ИНАЧЕ ПорядокУчета.Субконто КОНЕЦ) КАК Субконто
	|ИЗ РегистрСведений.ПорядокОтраженияНаСчетахУчета КАК ПорядокУчета
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидыСубконто
	|	ПО ПорядокУчета.СчетУчета = ВидыСубконто.Ссылка
	|		И ВидыСубконто.ВидСубконто В (
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиДоходов),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.БанковскиеСчета))
	|ГДЕ
	|	&УсловиеОтбораВидовСчетов
	|
	|	";
	
	УсловиеОтбораВидовСчетов = "ИСТИНА";
	Если МассивВидовСчетов <> Неопределено Тогда
		ШаблонСтрокиВидаСчета = "ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.%1)";
		МассивСтрокВидовСчетов = Новый Массив;
		Для каждого ВидСчетаРегл Из МассивВидовСчетов Цикл
			МассивСтрокВидовСчетов.Добавить(СтрШаблон(ШаблонСтрокиВидаСчета, XMLСтрока(ВидСчетаРегл)));
		КонецЦикла;
		Разделитель = Символы.ПС + Символы.Таб + Символы.Таб;
		УсловиеОтбораВидовСчетов = "ПорядокУчета.ВидСчета В (" + СтрСоединить(МассивСтрокВидовСчетов, Разделитель) + ")";
	КонецЕсли;
	
	ТекстВозврата = СтрЗаменить(ТекстВозврата, "&УсловиеОтбораВидовСчетов", УсловиеОтбораВидовСчетов);
	
	Возврат ТекстВозврата;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область ПрочиеПроцедурыИФункции

Функция ТипыОбъектовРасчетовСКлиентами() Экспорт
	Возврат Метаданные.РегистрыНакопления["РасчетыСКлиентамиПоДокументам"].Измерения.ЗаказКлиента.Тип;
КонецФункции

Функция ТипыОбъектовРасчетовСПоставщиками() Экспорт
	Возврат Метаданные.РегистрыНакопления["РасчетыСПоставщикамиПоДокументам"].Измерения.ЗаказПоставщику.Тип;
КонецФункции

Функция ТекстВТОтраженияДокумента(ДокументИмя)
	
	ТекстВТОтраженияДокумента = "";
	ТекстОшибки = "";
	
	ИмяОбщегоМодуляДляОтражения = ДокументыИОбщиеМодулиОписывающиеОтражениеВРеглУчете().Получить(ДокументИмя);
	Если ИмяОбщегоМодуляДляОтражения = Неопределено Тогда
		Попытка
			ТекстВТОтраженияДокумента = Документы[ДокументИмя].ТекстЗапросаВТОтраженияВРеглУчете();
		Исключение
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='В модуле менеджера документа %1 отсутствует функция ТекстЗапросаВТОтраженияВРеглУчете()';uk='У модулі менеджера документа %1 відсутня функція ТекстЗапросаВТОтраженияВРеглУчете()'"), ДокументИмя);
		КонецПопытки;
	ИначеЕсли ЗначениеЗаполнено(ИмяОбщегоМодуляДляОтражения) Тогда
		Попытка
			ТекстВТОтраженияДокумента = ОбщегоНазначения.ОбщийМодуль(ИмяОбщегоМодуляДляОтражения).ТекстЗапросаВТОтраженияВРеглУчете(ДокументИмя);
		Исключение
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='Для документа %1 в общем модуле %2 отсутствует функция ТекстЗапросаВТОтраженияВРеглУчете()';uk='Для документа %1 в загальному модулі %2 відсутня функція ТекстЗапросаВТОтраженияВРеглУчете()'"),
				ДокументИмя, ИмяОбщегоМодуляДляОтражения);
		КонецПопытки;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекстОшибки) Тогда
		ЗаписьЖурналаРегистрации(
			НСтр("ru='Отражение в регламентированном учете';uk='Відображення в регламентованому обліку'",ОбщегоНазначения.КодОсновногоЯзыка()), 
			УровеньЖурналаРегистрации.Ошибка, , , ТекстОшибки);
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;

	Возврат ТекстВТОтраженияДокумента;
	
КонецФункции

Функция ТекстОтраженияДокумента(ДокументИмя)
	
	ТекстОтраженияВРеглУчете = "";
	ТекстОшибки = "";
	
	ИмяОбщегоМодуляДляОтражения = ДокументыИОбщиеМодулиОписывающиеОтражениеВРеглУчете().Получить(ДокументИмя);
	Если ИмяОбщегоМодуляДляОтражения = Неопределено Тогда
		Попытка
			ТекстОтраженияВРеглУчете = Документы[ДокументИмя].ТекстОтраженияВРеглУчете();
		Исключение
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='В модуле менеджера документа %1 отсутствует функция ТекстОтраженияВРеглУчете()';uk='У модулі менеджера документа %1 відсутня функція ТекстОтраженияВРеглУчете()'"), ДокументИмя);
		КонецПопытки;
	ИначеЕсли ЗначениеЗаполнено(ИмяОбщегоМодуляДляОтражения) Тогда
		Попытка
			ТекстОтраженияВРеглУчете = ОбщегоНазначения.ОбщийМодуль(ИмяОбщегоМодуляДляОтражения).ТекстОтраженияВРеглУчете(ДокументИмя);
		Исключение
			ТекстОшибки = ОписаниеОшибки();
		КонецПопытки;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекстОшибки) Тогда
		ЗаписьЖурналаРегистрации(
			НСтр("ru='Отражение в регламентированном учете';uk='Відображення в регламентованому обліку'",ОбщегоНазначения.КодОсновногоЯзыка()), 
			УровеньЖурналаРегистрации.Ошибка, , , ТекстОшибки);
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
	Возврат СокрЛП(ТекстОтраженияВРеглУчете);
	
КонецФункции

Функция ВТЗапроса(ТекстЗапроса) Экспорт
	
	ВТЗапроса = Новый Массив;
	
	Если ТекстЗапроса = "" Тогда
		Возврат ВТЗапроса;
	КонецЕсли;
	
	СхемаЗапроса = Новый СхемаЗапроса;
	СхемаЗапроса.УстановитьТекстЗапроса(ТекстЗапроса);
	Для каждого Пакет Из СхемаЗапроса.ПакетЗапросов Цикл
		Если ЗначениеЗаполнено(Пакет.ТаблицаДляПомещения) Тогда
			ВТЗапроса.Добавить(Пакет.ТаблицаДляПомещения);
		КонецЕсли;
	КонецЦикла;
	
	Возврат ВТЗапроса;
	
КонецФункции

Функция ШаблонКомментарияОшибок(КодОшибки) Экспорт
	Если КодОшибки = "СЧЕТ_ЗАПРЕЩЕН" Тогда
		Возврат НСтр("ru='Для учета %ВидСчета% %Измерение%%МестоАналитика% указан запрещенный счет ""%Счет%"".';uk='Для обліку %ВидСчета% %Измерение%%МестоАналитика% вказано заборонений рахунок ""%Счет%"".'",ОбщегоНазначения.КодОсновногоЯзыка());
	ИначеЕсли КодОшибки = "СЧЕТ_ЗАБАЛАНСОВЫЙ" Тогда
		Возврат НСтр("ru='Для учета %ВидСчета% %Измерение%%МестоАналитика% указан забалансовый счет ""%Счет%"".';uk='Для обліку %ВидСчета% %Измерение%%МестоАналитика% вказано забалансовий рахунок ""%Счет%"".'",ОбщегоНазначения.КодОсновногоЯзыка());
	ИначеЕсли КодОшибки = "СЧЕТ_ПУСТОЙ" Тогда
		Возврат НСтр("ru='Для учета %ВидСчета% %Измерение%%МестоАналитика% не указан счет.';uk='Для обліку %ВидСчета% %Измерение%%МестоАналитика% не вказано рахунок.'",ОбщегоНазначения.КодОсновногоЯзыка());
	Иначе
		Возврат НСтр("ru='Неизвестная ошибка формирования проводок!';uk='Невідома помилка формування проводок!'",ОбщегоНазначения.КодОсновногоЯзыка());
	КонецЕсли
КонецФункции

Функция СтрокаМестоУчета(МестоУчета) Экспорт
	
	ПредставлениеМеста = "";
	Если ЗначениеЗаполнено(МестоУчета) Тогда
		СоответствиеТипаМестаПредставлению = Новый Соответствие;
		СоответствиеТипаМестаПредставлению.Вставить(Тип("СправочникСсылка.Склады"),
			НСтр("ru='на складе ""%МестоУчета%""';uk='на складі ""%МестоУчета%""'",ОбщегоНазначения.КодОсновногоЯзыка()));
		СоответствиеТипаМестаПредставлению.Вставить(Тип("СправочникСсылка.СтруктураПредприятия"),
			НСтр("ru='в подразделении ""%МестоУчета%""';uk='в підрозділі ""%МестоУчета%""'",ОбщегоНазначения.КодОсновногоЯзыка()));
		СоответствиеТипаМестаПредставлению.Вставить(Тип("СправочникСсылка.Партнеры"),
			НСтр("ru='по партнеру ""%МестоУчета%""';uk='по партнеру ""%МестоУчета%""'",ОбщегоНазначения.КодОсновногоЯзыка()));
		СоответствиеТипаМестаПредставлению.Вставить(Тип("ПеречислениеСсылка.ВидыЦенностей"),
			НСтр("ru='по виду ценности ""%МестоУчета%""';uk='по виду цінності ""%МестоУчета%""'",ОбщегоНазначения.КодОсновногоЯзыка()));
		
        ПредставлениеМеста = СоответствиеТипаМестаПредставлению.Получить(ТипЗнч(МестоУчета));
        Если ПредставлениеМеста = Неопределено Тогда
        	ПредставлениеМеста = НСтр("ru='по месту учета ""%МестоУчета%""';uk='по місцю обліку ""%МестоУчета%""'",ОбщегоНазначения.КодОсновногоЯзыка());
        КонецЕсли;
		
		ПредставлениеМеста = " " + СтрЗаменить(ПредставлениеМеста, "%МестоУчета%", Строка(МестоУчета));
		
	КонецЕсли;
	
	Возврат ПредставлениеМеста;
	
КонецФункции

Функция СтрокаАналитикаУчета(АналитикаУчета) Экспорт
	
	ПредставлениеАналитики = "";
	Если ЗначениеЗаполнено(АналитикаУчета) Тогда
		
		СоответствиеТипаАналитикиПредставлению = Новый Соответствие;
		СоответствиеТипаАналитикиПредставлению.Вставить(Тип("СправочникСсылка.ГруппыФинансовогоУчетаРасчетов"),
			НСтр("ru='по группе фин. учета ""%АналитикаУчета%""';uk='по групі фін. обліку ""%АналитикаУчета%""'",ОбщегоНазначения.КодОсновногоЯзыка()));
		СоответствиеТипаАналитикиПредставлению.Вставить(Тип("СправочникСсылка.ГруппыФинансовогоУчетаНоменклатуры"),
			НСтр("ru='по группе фин. учета ""%АналитикаУчета%""';uk='по групі фін. обліку ""%АналитикаУчета%""'",ОбщегоНазначения.КодОсновногоЯзыка()));
		СоответствиеТипаАналитикиПредставлению.Вставить(Тип("СправочникСсылка.ГруппыФинансовогоУчетаВнеоборотныхАктивов"),
			НСтр("ru='по группе фин. учета ""%АналитикаУчета%""';uk='по групі фін. обліку ""%АналитикаУчета%""'",ОбщегоНазначения.КодОсновногоЯзыка()));
		СоответствиеТипаАналитикиПредставлению.Вставить(Тип("ПланВидовХарактеристикСсылка.СтатьиДоходов"),
			НСтр("ru='по статье ""%АналитикаУчета%""';uk='за статтею ""%АналитикаУчета%""'",ОбщегоНазначения.КодОсновногоЯзыка()));
		СоответствиеТипаАналитикиПредставлению.Вставить(Тип("ПланВидовХарактеристикСсылка.СтатьиРасходов"),
			НСтр("ru='по статье ""%АналитикаУчета%""';uk='за статтею ""%АналитикаУчета%""'",ОбщегоНазначения.КодОсновногоЯзыка()));
		СоответствиеТипаАналитикиПредставлению.Вставить(Тип("СправочникСсылка.КатегорииЭксплуатации"),
			НСтр("ru='для категории эксплуатации ""%АналитикаУчета%""';uk='для категорії експлуатації ""%АналитикаУчета%""'",ОбщегоНазначения.КодОсновногоЯзыка()));
		СоответствиеТипаАналитикиПредставлению.Вставить(Тип("СправочникСсылка.ВидыПодарочныхСертификатов"),
			НСтр("ru='для вида подарочного сертификата ""%АналитикаУчета%""';uk='для виду подарункового сертифіката ""%АналитикаУчета%""'",ОбщегоНазначения.КодОсновногоЯзыка()));
		СоответствиеТипаАналитикиПредставлению.Вставить(Тип("СправочникСсылка.БанковскиеСчетаОрганизаций"),
			НСтр("ru='для банковского счета ""%АналитикаУчета%""';uk='для банківського рахунку ""%АналитикаУчета%""'",ОбщегоНазначения.КодОсновногоЯзыка()));
		СоответствиеТипаАналитикиПредставлению.Вставить(Тип("СправочникСсылка.Кассы"),
			НСтр("ru='для кассы ""%АналитикаУчета%""';uk='для каси ""%АналитикаУчета%""'",ОбщегоНазначения.КодОсновногоЯзыка()));
		СоответствиеТипаАналитикиПредставлению.Вставить(Тип("ПеречислениеСсылка.ТипыНалогообложенияНДС"),
			НСтр("ru='для налогообложения ""%АналитикаУчета%""';uk='для оподаткування ""%АналитикаУчета%""'",ОбщегоНазначения.КодОсновногоЯзыка()));
		
		ПредставлениеАналитики = СоответствиеТипаАналитикиПредставлению.Получить(ТипЗнч(АналитикаУчета));
		Если ПредставлениеАналитики = Неопределено Тогда
			ПредставлениеАналитики = НСтр("ru='для аналитики учета ""%АналитикаУчета%""';uk='для аналітики обліку ""%АналитикаУчета%""'",ОбщегоНазначения.КодОсновногоЯзыка());
		КонецЕсли;
		
		ПредставлениеАналитики = " " + СтрЗаменить(ПредставлениеАналитики, "%АналитикаУчета%", Строка(АналитикаУчета));
		
	КонецЕсли;
	
	Возврат ПредставлениеАналитики;
	
КонецФункции

Функция СтрокаИзмерениеНастройки(ВидСчета, ИдентификаторСтроки, Организация) Экспорт
	
	Результат = "";
	Если ВидСчета = Перечисления.ВидыСчетовРеглУчета.ПрочиеАктивыПассивы Тогда
		Если ЗначениеЗаполнено(ИдентификаторСтроки) Тогда
			Результат = НСтр("ru='в строке ""%ИдентификаторСтроки%"" документа';uk='в рядку ""%ИдентификаторСтроки%"" документа'",ОбщегоНазначения.КодОсновногоЯзыка());
			Результат = СтрЗаменить(Результат, "%ИдентификаторСтроки%", Строка(ИдентификаторСтроки));
		Иначе
			Результат = НСтр("ru='в документе';uk='в документі'",ОбщегоНазначения.КодОсновногоЯзыка());
		КонецЕсли;
	Иначе
		Результат = НСтр("ru='в организации ""%Организация%""';uk='в організації ""%Организация%""'",ОбщегоНазначения.КодОсновногоЯзыка());
		Результат = СтрЗаменить(Результат, "%Организация%", Строка(Организация));
	КонецЕсли;
	
	Возврат " " + Результат;
	
КонецФункции

Функция СтрокаВидСчета(ИмяВидаСчета, РазделУчета) Экспорт
	
	ПредставлениеВидаСчета = """" + Строка(Перечисления.ВидыСчетовРеглУчета[ИмяВидаСчета]) + """";
	Если РазделУчета = Неопределено Тогда
		Результат = ПредставлениеВидаСчета;
	ИначеЕсли РазделУчета = "РасчетыСКомиссионерами"
		И ИмяВидаСчета = "РасчетыСКлиентами" Тогда
		Результат = НСтр("ru='Расчеты с комиссионерами по товарам';uk='Розрахунки з комісіонерами по товарах'",ОбщегоНазначения.КодОсновногоЯзыка());
	ИначеЕсли РазделУчета = "РасчетыСКомиссионерами"
		И ИмяВидаСчета = "РасчетыСПоставщиками" Тогда
		Результат = НСтр("ru='Расчеты с комиссионерами по вознаграждению';uk='Розрахунки з комісіонерами з винагороди'",ОбщегоНазначения.КодОсновногоЯзыка());
	ИначеЕсли РазделУчета = "РасчетыСКомиссионерами"
		И ИмяВидаСчета = "АвансыПолученные" Тогда
		Результат = НСтр("ru='Авансы с комиссионерами по товарам';uk='Аванси з комісіонерами по товарах'",ОбщегоНазначения.КодОсновногоЯзыка());
	ИначеЕсли РазделУчета = "РасчетыСКомиссионерами"
		И ИмяВидаСчета = "АвансыВыданные" Тогда
		Результат = НСтр("ru='Авансы с комиссионерами по вознаграждению';uk='Аванси з комісіонерами з винагороди'",ОбщегоНазначения.КодОсновногоЯзыка());
	ИначеЕсли РазделУчета = "РасчетыСКомитентами"
		И ИмяВидаСчета = "РасчетыСПоставщиками" Тогда
		Результат = НСтр("ru='Расчеты с комитентами по товарам';uk='Розрахунки з комітентами по товарах'",ОбщегоНазначения.КодОсновногоЯзыка());
	ИначеЕсли РазделУчета = "РасчетыСКомитентами"
		И ИмяВидаСчета = "РасчетыСКлиентами" Тогда
		Результат = НСтр("ru='Расчеты с комитентами по вознаграждению';uk='Розрахунки з комітентами з винагороди'",ОбщегоНазначения.КодОсновногоЯзыка());
	ИначеЕсли РазделУчета = "РасчетыСКомитентами"
		И ИмяВидаСчета = "АвансыВыданные" Тогда
		Результат = НСтр("ru='Авансы с комитентами по товарам';uk='Аванси з комітентами по товарах'",ОбщегоНазначения.КодОсновногоЯзыка());
	ИначеЕсли РазделУчета = "РасчетыСКомитентами"
		И ИмяВидаСчета = "АвансыПолученные" Тогда
		Результат = НСтр("ru='Авансы с комитентами по вознаграждению';uk='Аванси з комітентами з винагороди'",ОбщегоНазначения.КодОсновногоЯзыка());
	ИначеЕсли РегистрыСведений.ПорядокОтраженияНаСчетахУчета.СписокСчетовУчетаПоРазделуУчета(РазделУчета) = 1 Тогда
		СписокРазделов = РегистрыСведений.ПорядокОтраженияНаСчетахУчета.СписокРазделовСчетовУчета();
		ПредставлениеРазделаУчета = СписокРазделов.НайтиПоЗначению(РазделУчета).Представление;
		Результат = ПредставлениеРазделаУчета;
	ИначеЕсли РазделУчета = ИмяВидаСчета Тогда
		СписокРазделов = РегистрыСведений.ПорядокОтраженияНаСчетахУчета.СписокРазделовСчетовУчета();
		ПредставлениеРазделаУчета = СписокРазделов.НайтиПоЗначению(РазделУчета).Представление;
		Результат = ПредставлениеРазделаУчета;
	ИначеЕсли СтрНачинаетсяС(ИмяВидаСчета, РазделУчета) Тогда
		Результат = ПредставлениеВидаСчета;
	Иначе
		СписокРазделов = РегистрыСведений.ПорядокОтраженияНаСчетахУчета.СписокРазделовСчетовУчета();
		ПредставлениеРазделаУчета = СписокРазделов.НайтиПоЗначению(РазделУчета).Представление;
		Результат = СтрШаблон(НСтр("ru='%1 для вида счета %2';uk='%1 для виду рахунку %2'",ОбщегоНазначения.КодОсновногоЯзыка()), ПредставлениеРазделаУчета, ПредставлениеВидаСчета);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция ПредставлениеРазделаУчетаПоВидуСчета(ВидСчета) Экспорт
	
	ИмяВидаСчета = XMLСтрока(ВидСчета);
	
	Для каждого РазделУчета Из РегистрыСведений.ПорядокОтраженияНаСчетахУчета.СписокРазделовСчетовУчета() Цикл
		Если РазделУчета.Пометка Тогда
			СписокСчетов = РегистрыСведений.ПорядокОтраженияНаСчетахУчета.СписокСчетовУчетаПоРазделуУчета(РазделУчета.Значение);
			Если СписокСчетов.НайтиПоЗначению(ИмяВидаСчета) <> Неопределено Тогда
				Если СписокСчетов.Количество() = 1 Или РазделУчета.Значение = ИмяВидаСчета Тогда
					Возврат РазделУчета.Представление;
				Иначе
					Если СтрНачинаетсяС(ИмяВидаСчета, РазделУчета.Значение) Тогда
						Возврат """" + Строка(ВидСчета) + """";
					Иначе
						Возврат СтрШаблон(НСтр("ru='%1 для вида счета ""%2""';uk='%1 для виду рахунку ""%2""'",ОбщегоНазначения.КодОсновногоЯзыка()), РазделУчета.Представление, Строка(ВидСчета))
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат """" + Строка(ВидСчета) + """";
	
КонецФункции

Функция РазделУчетаПоВидуСчета(ИмяВидаСчета) Экспорт
	
	Для каждого РазделУчета Из РегистрыСведений.ПорядокОтраженияНаСчетахУчета.СписокРазделовСчетовУчета() Цикл
		Если РазделУчета.Пометка Тогда
			СписокСчетов = РегистрыСведений.ПорядокОтраженияНаСчетахУчета.СписокСчетовУчетаПоРазделуУчета(РазделУчета.Значение);
			Если СписокСчетов.НайтиПоЗначению(ИмяВидаСчета) <> Неопределено Тогда
				Возврат РазделУчета.Значение;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции

Функция ЭтоОбъектРасчетов(ДокументИмя) Экспорт
	ТипыСКлиентами = Метаданные.ОпределяемыеТипы.ОбъектРасчетовСКлиентами.Тип;
	ТипыСПоставщиками = Метаданные.ОпределяемыеТипы.ОбъектРасчетовСПоставщиками.Тип;
	ДокументТип = Тип("ДокументСсылка." + ДокументИмя);
	Возврат ТипыСКлиентами.СодержитТип(ДокументТип) ИЛИ ТипыСПоставщиками.СодержитТип(ДокументТип);
КонецФункции

Функция ЭтоРасчетныйДокумент(ДокументИмя) Экспорт
	ТипыСКлиентами = Метаданные.ОпределяемыеТипы.РасчетныйДокументСКлиентом.Тип;
	ТипыСПоставщиками = Метаданные.ОпределяемыеТипы.РасчетныйДокументСПоставщиком.Тип;
	ДокументТип = Тип("ДокументСсылка." + ДокументИмя);
	Возврат ТипыСКлиентами.СодержитТип(ДокументТип) ИЛИ ТипыСПоставщиками.СодержитТип(ДокументТип);
КонецФункции

Функция ТипыДокументовКПоследовательномуОтражению() Экспорт
	
	Результат = Новый Массив;
	
	// Документы учета ОС
	Результат.Добавить(Тип("ДокументСсылка.ВводОстатковВнеоборотныхАктивов"));
	Результат.Добавить(Тип("ДокументСсылка.ПринятиеКУчетуОС"));
	Результат.Добавить(Тип("ДокументСсылка.МодернизацияОС"));
	Результат.Добавить(Тип("ДокументСсылка.ПеремещениеОС"));
	Результат.Добавить(Тип("ДокументСсылка.ПодготовкаКПередачеОС"));
	Результат.Добавить(Тип("ДокументСсылка.СписаниеОС"));
	Результат.Добавить(Тип("ДокументСсылка.АмортизацияОС"));
	Результат.Добавить(Тип("ДокументСсылка.ИзменениеПараметровОС"));
	Результат.Добавить(Тип("ДокументСсылка.ПередачаОСАрендатору"));
	Результат.Добавить(Тип("ДокументСсылка.ВозвратОСОтАрендатора"));
	Результат.Добавить(Тип("ДокументСсылка.ПоступлениеАрендованныхОС"));
	Результат.Добавить(Тип("ДокументСсылка.ВыбытиеАрендованныхОС"));
	Результат.Добавить(Тип("ДокументСсылка.ПереоценкаОС"));
	Результат.Добавить(Тип("ДокументСсылка.РемонтОС"));
	Результат.Добавить(Тип("ДокументСсылка.КорректировкаНалоговогоНазначенияОС"));
	
	// Документы учета НМА
	Результат.Добавить(Тип("ДокументСсылка.ПринятиеКУчетуНМА"));
	Результат.Добавить(Тип("ДокументСсылка.СписаниеНМА"));
	Результат.Добавить(Тип("ДокументСсылка.АмортизацияНМА"));
	Результат.Добавить(Тип("ДокументСсылка.ПодготовкаКПередачеНМА"));
	Результат.Добавить(Тип("ДокументСсылка.ПереоценкаНМА"));
	Результат.Добавить(Тип("ДокументСсылка.МодернизацияНМА"));
	Результат.Добавить(Тип("ДокументСсылка.ИзменениеПараметровНМА"));
	Результат.Добавить(Тип("ДокументСсылка.ПеремещениеНМА"));
	
	// Документы учета малоценки
	Результат.Добавить(Тип("ДокументСсылка.СписаниеИзЭксплуатации"));
	Результат.Добавить(Тип("ДокументСсылка.ПеремещениеВЭксплуатации"));

	// Регламентные документы не требуется отражать пакетно
	Результат.Добавить(Тип("ДокументСсылка.КорректировкаНалоговогоНазначенияКапитальныхИнвестиций"));
    Результат.Добавить(Тип("ДокументСсылка.ПерерасчетПропорциональногоНДСпоТоварамИОС"));
	Результат.Добавить(Тип("ДокументСсылка.РасчетСебестоимостиТоваров"));
	Результат.Добавить(Тип("ДокументСсылка.РаспределениеДоходовПоНаправлениямДеятельности"));
	Результат.Добавить(Тип("ДокументСсылка.РегламентнаяОперация"));
	
	Возврат Результат;
	
КонецФункции

Функция ИспользуемыеТаблицыДляОтраженияТипа(ИмяТипаДокумента) Экспорт

	ТаблицыТиповДокументов = Новый Соответствие;

	// ++РУЧНОЙ СБОР
	// АмортизацияНМА
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.СписаниеНМА");
	ТаблицыДокумента.Добавить("РегистрБухгалтерии.Хозрасчетный");
	ТаблицыДокумента.Добавить("РегистрСведений.ПорядокУчетаНМА");
	ТаблицыТиповДокументов.Вставить("АмортизацияНМА", ТаблицыДокумента);
	
	// АмортизацияОС
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.СписаниеОС");
	ТаблицыДокумента.Добавить("РегистрСведений.МестонахождениеОС");
	ТаблицыДокумента.Добавить("РегистрСведений.ПорядокУчетаОС");
	ТаблицыТиповДокументов.Вставить("АмортизацияОС", ТаблицыДокумента);
	
	// ПеремещениеОС
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ПеремещениеОС");
	ТаблицыДокумента.Добавить("Документ.СписаниеОС");
	ТаблицыДокумента.Добавить("РегистрСведений.МестонахождениеОС");
	ТаблицыДокумента.Добавить("РегистрСведений.ПорядокУчетаОС");
	ТаблицыТиповДокументов.Вставить("ПеремещениеОС", ТаблицыДокумента);
	
	// ПеремещениеОС2_4
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ПеремещениеОС2_4");
	ТаблицыДокумента.Добавить("РегистрНакопления.СтоимостьОС");
	ТаблицыДокумента.Добавить("РегистрНакопления.АмортизацияОС");
	ТаблицыТиповДокументов.Вставить("ПеремещениеОС2_4", ТаблицыДокумента);
	
	// ПеремещениеНМА2_4
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ПеремещениеНМА2_4");
	ТаблицыДокумента.Добавить("РегистрНакопления.СтоимостьНМА");
	ТаблицыДокумента.Добавить("РегистрНакопления.АмортизацияНМА");
	ТаблицыТиповДокументов.Вставить("ПеремещениеНМА2_4", ТаблицыДокумента);
	
	// ПереоценкаНМА
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ПереоценкаНМА");
	ТаблицыДокумента.Добавить("Документ.СписаниеНМА");
	ТаблицыДокумента.Добавить("РегистрБухгалтерии.Хозрасчетный");
	ТаблицыДокумента.Добавить("РегистрСведений.ПорядокУчетаНМА");
	ТаблицыТиповДокументов.Вставить("ПереоценкаНМА", ТаблицыДокумента);
	
	// ПереоценкаНМА2_4
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ПереоценкаНМА2_4");
	ТаблицыДокумента.Добавить("РегистрНакопления.СтоимостьНМА");
	ТаблицыДокумента.Добавить("РегистрНакопления.АмортизацияНМА");
	ТаблицыТиповДокументов.Вставить("ПереоценкаНМА2_4", ТаблицыДокумента);
	
	// ПереоценкаОС
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ПереоценкаОС");
	ТаблицыДокумента.Добавить("Документ.СписаниеОС");
	ТаблицыДокумента.Добавить("РегистрСведений.МестонахождениеОС");
	ТаблицыДокумента.Добавить("РегистрСведений.ПорядокУчетаОС");
	ТаблицыТиповДокументов.Вставить("ПереоценкаОС", ТаблицыДокумента);
	
	// ПереоценкаОС2_4
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ПереоценкаОС2_4");
	ТаблицыДокумента.Добавить("РегистрНакопления.СтоимостьОС");
	ТаблицыДокумента.Добавить("РегистрНакопления.АмортизацияОС");
	ТаблицыТиповДокументов.Вставить("ПереоценкаОС2_4", ТаблицыДокумента);
	
	// ПодготовкаКПередачеНМА
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ПодготовкаКПередачеНМА");
	ТаблицыДокумента.Добавить("Документ.СписаниеНМА");
	ТаблицыДокумента.Добавить("РегистрБухгалтерии.Хозрасчетный");
	ТаблицыДокумента.Добавить("РегистрСведений.ПорядокУчетаНМА");
	ТаблицыТиповДокументов.Вставить("ПодготовкаКПередачеНМА", ТаблицыДокумента);
	
	// ПодготовкаКПередачеНМА2_4
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ПодготовкаКПередачеНМА2_4");
	ТаблицыДокумента.Добавить("РегистрНакопления.СтоимостьНМА");
	ТаблицыДокумента.Добавить("РегистрНакопления.АмортизацияНМА");
	ТаблицыТиповДокументов.Вставить("ПодготовкаКПередачеНМА2_4", ТаблицыДокумента);
	
	// ПодготовкаКПередачеОС
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ПодготовкаКПередачеОС");
	ТаблицыДокумента.Добавить("Документ.СписаниеОС");
	ТаблицыДокумента.Добавить("РегистрБухгалтерии.Хозрасчетный");
	ТаблицыДокумента.Добавить("РегистрСведений.МестонахождениеОС");
	ТаблицыДокумента.Добавить("РегистрСведений.ПорядокУчетаОС");
	ТаблицыТиповДокументов.Вставить("ПодготовкаКПередачеОС", ТаблицыДокумента);
	
	// ПодготовкаКПередачеОС2_4
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ПодготовкаКПередачеОС2_4");
	ТаблицыДокумента.Добавить("РегистрНакопления.СтоимостьОС");
	ТаблицыДокумента.Добавить("РегистрНакопления.АмортизацияОС");
	ТаблицыТиповДокументов.Вставить("ПодготовкаКПередачеОС2_4", ТаблицыДокумента);
	
	// --РУЧНОЙ СБОР
	
	// АвансовыйОтчет
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.АвансовыйОтчет");
	ТаблицыДокумента.Добавить("РегистрНакопления.РасчетыСПоставщиками");
	ТаблицыДокумента.Добавить("РегистрСведений.СуммыДокументовВВалютахУчета");
	ТаблицыТиповДокументов.Вставить("АвансовыйОтчет", ТаблицыДокумента);
	
	// АктВыполненныхВнутреннихРабот
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.АктВыполненныхВнутреннихРабот");
	ТаблицыТиповДокументов.Вставить("АктВыполненныхВнутреннихРабот", ТаблицыДокумента);
	
	// АмортизацияНМА2_4
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.АмортизацияНМА2_4");
	ТаблицыДокумента.Добавить("РегистрНакопления.АмортизацияНМА");
	ТаблицыТиповДокументов.Вставить("АмортизацияНМА2_4", ТаблицыДокумента);
	
	// АмортизацияОС2_4
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.АмортизацияОС2_4");
	ТаблицыДокумента.Добавить("РегистрНакопления.АмортизацияОС");
	ТаблицыТиповДокументов.Вставить("АмортизацияОС2_4", ТаблицыДокумента);
	
	// АктВыполненныхРабот
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.АктВыполненныхРабот");
	ТаблицыДокумента.Добавить("РегистрНакопления.НДСЗаписиКнигиПродаж");
	ТаблицыДокумента.Добавить("РегистрНакопления.РасчетыСКлиентами");
	ТаблицыДокумента.Добавить("РегистрСведений.СуммыДокументовВВалютахУчета");
	ТаблицыТиповДокументов.Вставить("АктВыполненныхРабот", ТаблицыДокумента);

	// АннулированиеПодарочныхСертификатов
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.АннулированиеПодарочныхСертификатов");
	ТаблицыДокумента.Добавить("РегистрНакопления.ПодарочныеСертификаты");
	ТаблицыТиповДокументов.Вставить("АннулированиеПодарочныхСертификатов", ТаблицыДокумента);

	// ВводОстатков
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ВводОстатков");
	ТаблицыДокумента.Добавить("РегистрСведений.АналитикаУчетаНоменклатуры");
	ТаблицыТиповДокументов.Вставить("ВводОстатков", ТаблицыДокумента);

	// ВводОстатковВнеоборотныхАктивов
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ВводОстатковВнеоборотныхАктивов");
	ТаблицыТиповДокументов.Вставить("ВводОстатковВнеоборотныхАктивов", ТаблицыДокумента);

	// ВводОстатковВнеоборотныхАктивов2_4
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ВводОстатковВнеоборотныхАктивов2_4");
	ТаблицыДокумента.Добавить("РегистрНакопления.СтоимостьОС");
	ТаблицыДокумента.Добавить("РегистрНакопления.СтоимостьНМА");
	ТаблицыДокумента.Добавить("РегистрНакопления.АмортизацияОС");
	ТаблицыДокумента.Добавить("РегистрНакопления.АмортизацияНМА");
	ТаблицыТиповДокументов.Вставить("ВводОстатковВнеоборотныхАктивов2_4", ТаблицыДокумента);
	
	// ВзаимозачетЗадолженности
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ВзаимозачетЗадолженности");
	ТаблицыДокумента.Добавить("РегистрНакопления.ДвиженияКонтрагентКонтрагент");
	ТаблицыДокумента.Добавить("РегистрСведений.НастройкиСистемыНалогообложения");
	ТаблицыТиповДокументов.Вставить("ВзаимозачетЗадолженности", ТаблицыДокумента);

	// ВнутреннееПотреблениеТоваров
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ВнутреннееПотреблениеТоваров");
	ТаблицыДокумента.Добавить("РегистрСведений.АналитикаУчетаНоменклатуры");
	ТаблицыТиповДокументов.Вставить("ВнутреннееПотреблениеТоваров", ТаблицыДокумента);

	// ВозвратМатериаловИзПроизводства
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ВозвратМатериаловИзПроизводства");
	ТаблицыТиповДокументов.Вставить("ВозвратМатериаловИзПроизводства", ТаблицыДокумента);
	
	// ВозвратПодарочныхСертификатов
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ВозвратПодарочныхСертификатов");
	ТаблицыДокумента.Добавить("РегистрНакопления.ДвиженияДенежныеСредстваКонтрагент");
	ТаблицыТиповДокументов.Вставить("ВозвратПодарочныхСертификатов", ТаблицыДокумента);


	// ВозвратСырьяОтПереработчика
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ВозвратСырьяОтПереработчика");
	ТаблицыДокумента.Добавить("РегистрСведений.АналитикаУчетаНоменклатуры");
	ТаблицыДокумента.Добавить("РегистрСведений.СуммыДокументовВВалютахУчета");
	ТаблицыТиповДокументов.Вставить("ВозвратСырьяОтПереработчика", ТаблицыДокумента);

	// ВозвратТоваровМеждуОрганизациями
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ВозвратТоваровМеждуОрганизациями");
	ТаблицыДокумента.Добавить("РегистрСведений.АналитикаУчетаНоменклатуры");
	ТаблицыДокумента.Добавить("РегистрСведений.СуммыДокументовВВалютахУчета");
	ТаблицыТиповДокументов.Вставить("ВозвратТоваровМеждуОрганизациями", ТаблицыДокумента);

	// ВозвратТоваровОтКлиента
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ВозвратТоваровОтКлиента");
	ТаблицыДокумента.Добавить("РегистрСведений.АналитикаУчетаНоменклатуры");
	ТаблицыДокумента.Добавить("РегистрСведений.АналитикаУчетаПоПартнерам");
	ТаблицыДокумента.Добавить("РегистрСведений.СуммыДокументовВВалютахУчета");
	ТаблицыТиповДокументов.Вставить("ВозвратТоваровОтКлиента", ТаблицыДокумента);

	// ВозвратТоваровПоставщику
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ВозвратТоваровПоставщику");
	ТаблицыДокумента.Добавить("РегистрНакопления.РасчетыСПоставщиками");
	ТаблицыДокумента.Добавить("РегистрСведений.АналитикаУчетаНоменклатуры");
	ТаблицыДокумента.Добавить("РегистрСведений.СуммыДокументовВВалютахУчета");
	ТаблицыТиповДокументов.Вставить("ВозвратТоваровПоставщику", ТаблицыДокумента);

	// ВыбытиеДенежныхДокументов
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ВыбытиеДенежныхДокументов");
	ТаблицыДокумента.Добавить("РегистрНакопления.РасчетыСПоставщиками");
	ТаблицыДокумента.Добавить("РегистрСведений.СуммыДокументовВВалютахУчета");
	ТаблицыТиповДокументов.Вставить("ВыбытиеДенежныхДокументов", ТаблицыДокумента);

	// ВыкупВозвратнойТарыКлиентом
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ВыкупВозвратнойТарыКлиентом");
	ТаблицыДокумента.Добавить("РегистрСведений.СуммыДокументовВВалютахУчета");
	ТаблицыТиповДокументов.Вставить("ВыкупВозвратнойТарыКлиентом", ТаблицыДокумента);

	// ВыкупВозвратнойТарыУПоставщика
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ВыкупВозвратнойТарыУПоставщика");

	ТаблицыТиповДокументов.Вставить("ВыкупВозвратнойТарыУПоставщика", ТаблицыДокумента);

	// ВыпускПродукции
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ВыпускПродукции");
	ТаблицыТиповДокументов.Вставить("ВыпускПродукции", ТаблицыДокумента);

	// ДвижениеПродукцииИМатериалов
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ДвижениеПродукцииИМатериалов");
	ТаблицыДокумента.Добавить("РегистрСведений.АналитикаУчетаНоменклатуры");
	ТаблицыТиповДокументов.Вставить("ДвижениеПродукцииИМатериалов", ТаблицыДокумента);

	// ДепонированиеЗарплаты
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ДепонированиеЗарплаты");
	ТаблицыТиповДокументов.Вставить("ДепонированиеЗарплаты", ТаблицыДокумента);

	// ИзменениеПараметровОС
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ИзменениеПараметровОС");
	ТаблицыДокумента.Добавить("РегистрБухгалтерии.Хозрасчетный");  
	ТаблицыДокумента.Добавить("РегистрСведений.МестонахождениеОС");
	ТаблицыДокумента.Добавить("РегистрСведений.ПорядокУчетаОС");
	ТаблицыТиповДокументов.Вставить("ИзменениеПараметровОС", ТаблицыДокумента);

	// ИзменениеПараметровНМА2_4
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ИзменениеПараметровНМА2_4");
	ТаблицыДокумента.Добавить("РегистрНакопления.АмортизацияНМА");
	ТаблицыДокумента.Добавить("РегистрНакопления.СтоимостьНМА");
	ТаблицыТиповДокументов.Вставить("ИзменениеПараметровНМА2_4", ТаблицыДокумента);
	
	// ИзменениеПараметровОС2_4
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ИзменениеПараметровОС2_4");
	ТаблицыДокумента.Добавить("РегистрНакопления.АмортизацияОС");
	ТаблицыДокумента.Добавить("РегистрНакопления.СтоимостьОС");
	ТаблицыТиповДокументов.Вставить("ИзменениеПараметровОС2_4", ТаблицыДокумента);
	
	// ИнвентаризацияНаличныхДенежныхСредств
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ИнвентаризацияНаличныхДенежныхСредств");
	ТаблицыДокумента.Добавить("РегистрСведений.СуммыДокументовВВалютахУчета");
	ТаблицыТиповДокументов.Вставить("ИнвентаризацияНаличныхДенежныхСредств", ТаблицыДокумента);
	
	// ИсправлениеРазвернутогоСальдоТоваровОрганизаций
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ИсправлениеРазвернутогоСальдоТоваровОрганизаций");
	ТаблицыДокумента.Добавить("РегистрНакопления.СебестоимостьТоваров");
	ТаблицыТиповДокументов.Вставить("ИсправлениеРазвернутогоСальдоТоваровОрганизаций", ТаблицыДокумента);

	// МодернизацияОС
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.МодернизацияОС");
	ТаблицыДокумента.Добавить("РегистрСведений.УчетнаяПолитикаОрганизаций");
	ТаблицыДокумента.Добавить("РегистрБухгалтерии.Хозрасчетный");
	ТаблицыДокумента.Добавить("РегистрСведений.МестонахождениеОС");
	ТаблицыДокумента.Добавить("РегистрСведений.ПорядокУчетаОС");
	ТаблицыТиповДокументов.Вставить("МодернизацияОС", ТаблицыДокумента);

	// РемонтОС
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.РемонтОС");
	ТаблицыДокумента.Добавить("РегистрСведений.УчетнаяПолитикаОрганизаций");
	ТаблицыДокумента.Добавить("РегистрБухгалтерии.Хозрасчетный");
	ТаблицыДокумента.Добавить("РегистрСведений.МестонахождениеОС");
	ТаблицыДокумента.Добавить("РегистрСведений.ПорядокУчетаОС");
	ТаблицыТиповДокументов.Вставить("РемонтОС", ТаблицыДокумента);
	
	// МодернизацияОС2_4
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.МодернизацияОС2_4");
	ТаблицыДокумента.Добавить("РегистрНакопления.СтоимостьОС");
	ТаблицыТиповДокументов.Вставить("МодернизацияОС2_4", ТаблицыДокумента);

	
	// НачислениеДивидендов
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.НачислениеДивидендов");
	ТаблицыТиповДокументов.Вставить("НачислениеДивидендов", ТаблицыДокумента);

	// НачислениеОценочныхОбязательствПоОтпускам
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.НачислениеОценочныхОбязательствПоОтпускам");
	ТаблицыТиповДокументов.Вставить("НачислениеОценочныхОбязательствПоОтпускам", ТаблицыДокумента);

	// НачисленияКредитовИДепозитов
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.НачисленияКредитовИДепозитов");
	ТаблицыДокумента.Добавить("РегистрСведений.СуммыДокументовВВалютахУчета");
	ТаблицыТиповДокументов.Вставить("НачисленияКредитовИДепозитов", ТаблицыДокумента);

	// ОперацияПоПлатежнойКарте
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ОперацияПоПлатежнойКарте");
	ТаблицыДокумента.Добавить("РегистрНакопления.РасчетыСКлиентами");
	ТаблицыТиповДокументов.Вставить("ОперацияПоПлатежнойКарте", ТаблицыДокумента);

	// ОприходованиеИзлишковТоваров
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ОприходованиеИзлишковТоваров");
	ТаблицыДокумента.Добавить("РегистрСведений.СуммыДокументовВВалютахУчета");
	ТаблицыТиповДокументов.Вставить("ОприходованиеИзлишковТоваров", ТаблицыДокумента);

	// ОтражениеЗарплатыВФинансовомУчете
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ОтражениеЗарплатыВФинансовомУчете");
	ТаблицыДокумента.Добавить("РегистрНакопления.ОтражениеЗарплатыВФинансовомУчете");
	ТаблицыТиповДокументов.Вставить("ОтражениеЗарплатыВФинансовомУчете", ТаблицыДокумента);

	// ОтражениеРасхожденийПриИнкассацииДенежныхСредств
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ОтражениеРасхожденийПриИнкассацииДенежныхСредств");
	ТаблицыДокумента.Добавить("РегистрСведений.СуммыДокументовВВалютахУчета");
	ТаблицыТиповДокументов.Вставить("ОтражениеРасхожденийПриИнкассацииДенежныхСредств", ТаблицыДокумента);

	// ОтчетБанкаПоОперациямЭквайринга
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ОтчетБанкаПоОперациямЭквайринга");
	ТаблицыТиповДокументов.Вставить("ОтчетБанкаПоОперациямЭквайринга", ТаблицыДокумента);


	// ОтчетКомиссионера
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ОтчетКомиссионера");
	ТаблицыДокумента.Добавить("РегистрНакопления.РасчетыСКлиентами");
	ТаблицыДокумента.Добавить("РегистрСведений.АналитикаУчетаНоменклатуры");
	ТаблицыДокумента.Добавить("РегистрСведений.СуммыДокументовВВалютахУчета");
	ТаблицыДокумента.Добавить("РегистрСведений.УчетнаяПолитикаОрганизаций");
	ТаблицыТиповДокументов.Вставить("ОтчетКомиссионера", ТаблицыДокумента);

	// ОтчетКомиссионераОСписании
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ОтчетКомиссионераОСписании");
	ТаблицыДокумента.Добавить("РегистрСведений.АналитикаУчетаНоменклатуры");
	ТаблицыДокумента.Добавить("РегистрСведений.СуммыДокументовВВалютахУчета");
	ТаблицыТиповДокументов.Вставить("ОтчетКомиссионераОСписании", ТаблицыДокумента);

	// ОтчетКомитенту
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ОтчетКомитенту");
	ТаблицыДокумента.Добавить("РегистрНакопления.РасчетыСПоставщиками");
	ТаблицыДокумента.Добавить("РегистрСведений.АналитикаУчетаНоменклатуры");
	ТаблицыДокумента.Добавить("РегистрСведений.СуммыДокументовВВалютахУчета");
	ТаблицыТиповДокументов.Вставить("ОтчетКомитенту", ТаблицыДокумента);

	// ОтчетКомитентуОСписании
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ОтчетКомитентуОСписании");
	ТаблицыДокумента.Добавить("РегистрСведений.АналитикаУчетаНоменклатуры");
	ТаблицыДокумента.Добавить("РегистрСведений.СуммыДокументовВВалютахУчета");
	ТаблицыТиповДокументов.Вставить("ОтчетКомитентуОСписании", ТаблицыДокумента);

	// ОтчетОРозничныхПродажах
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ОтчетОРозничныхПродажах");
	ТаблицыДокумента.Добавить("РегистрСведений.АналитикаУчетаНоменклатуры");
	ТаблицыДокумента.Добавить("РегистрСведений.СуммыДокументовВВалютахУчета");
	ТаблицыТиповДокументов.Вставить("ОтчетОРозничныхПродажах", ТаблицыДокумента);

	// ОтчетПереработчика
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ОтчетПереработчика");
	ТаблицыДокумента.Добавить("РегистрНакопления.РасчетыСПоставщиками");
	ТаблицыДокумента.Добавить("РегистрСведений.АналитикаУчетаНоменклатуры");
	ТаблицыДокумента.Добавить("РегистрСведений.СуммыДокументовВВалютахУчета");
	ТаблицыТиповДокументов.Вставить("ОтчетПереработчика", ТаблицыДокумента);

	// ОтчетПоКомиссииМеждуОрганизациями
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ОтчетПоКомиссииМеждуОрганизациями");
	ТаблицыДокумента.Добавить("РегистрНакопления.РасчетыСКлиентами");
	ТаблицыДокумента.Добавить("РегистрНакопления.РасчетыСПоставщиками");
	ТаблицыДокумента.Добавить("РегистрСведений.АналитикаУчетаНоменклатуры");
	ТаблицыДокумента.Добавить("РегистрСведений.СуммыДокументовВВалютахУчета");
	ТаблицыДокумента.Добавить("РегистрСведений.УчетнаяПолитикаОрганизаций");
	ТаблицыТиповДокументов.Вставить("ОтчетПоКомиссииМеждуОрганизациями", ТаблицыДокумента);

	// ОтчетПоКомиссииМеждуОрганизациямиОСписании
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ОтчетПоКомиссииМеждуОрганизациямиОСписании");
	ТаблицыДокумента.Добавить("РегистрНакопления.РасчетыСКлиентами");
	ТаблицыДокумента.Добавить("РегистрНакопления.РасчетыСПоставщиками");
	ТаблицыДокумента.Добавить("РегистрСведений.АналитикаУчетаНоменклатуры");
	ТаблицыДокумента.Добавить("РегистрСведений.СуммыДокументовВВалютахУчета");
	ТаблицыТиповДокументов.Вставить("ОтчетПоКомиссииМеждуОрганизациямиОСписании", ТаблицыДокумента);


	// ПередачаМатериаловВПроизводство
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ПередачаМатериаловВПроизводство");
	ТаблицыДокумента.Добавить("РегистрСведений.АналитикаУчетаНоменклатуры");
	ТаблицыТиповДокументов.Вставить("ПередачаМатериаловВПроизводство", ТаблицыДокумента);

	// ПередачаСырьяПереработчику
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ПередачаСырьяПереработчику");
	ТаблицыДокумента.Добавить("РегистрСведений.АналитикаУчетаНоменклатуры");
	ТаблицыДокумента.Добавить("РегистрСведений.СтоимостьТоваров");
	ТаблицыДокумента.Добавить("РегистрСведений.СуммыДокументовВВалютахУчета");
	ТаблицыТиповДокументов.Вставить("ПередачаСырьяПереработчику", ТаблицыДокумента);

	// ПередачаТоваровМеждуОрганизациями
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ПередачаТоваровМеждуОрганизациями");
	ТаблицыДокумента.Добавить("РегистрСведений.АналитикаУчетаНоменклатуры");
	ТаблицыДокумента.Добавить("РегистрСведений.СуммыДокументовВВалютахУчета");
	ТаблицыТиповДокументов.Вставить("ПередачаТоваровМеждуОрганизациями", ТаблицыДокумента);

	// ПеремещениеМатериаловВПроизводстве
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ПеремещениеМатериаловВПроизводстве");
	ТаблицыТиповДокументов.Вставить("ПеремещениеМатериаловВПроизводстве", ТаблицыДокумента);

	// ПеремещениеТоваров
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ПеремещениеТоваров");
	ТаблицыДокумента.Добавить("РегистрСведений.АналитикаУчетаНоменклатуры");
	ТаблицыТиповДокументов.Вставить("ПеремещениеТоваров", ТаблицыДокумента);

	// РасчетКурсовыхРазниц
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.РасчетКурсовыхРазниц");
	ТаблицыДокумента.Добавить("РегистрНакопления.ДенежныеДокументы");
	ТаблицыДокумента.Добавить("РегистрНакопления.ДенежныеСредстваБезналичные");
	ТаблицыДокумента.Добавить("РегистрНакопления.ДенежныеСредстваВПути");
	ТаблицыДокумента.Добавить("РегистрНакопления.ДенежныеСредстваНаличные");
	ТаблицыДокумента.Добавить("РегистрНакопления.ДенежныеСредстваУПодотчетныхЛиц");
	ТаблицыДокумента.Добавить("РегистрНакопления.РасчетыПоФинансовымИнструментам");
	ТаблицыДокумента.Добавить("РегистрНакопления.РасчетыСКлиентамиПоДокументам");
	ТаблицыДокумента.Добавить("РегистрНакопления.РасчетыСПоставщикамиПоДокументам");
	ТаблицыТиповДокументов.Вставить("РасчетКурсовыхРазниц", ТаблицыДокумента);

	// ПересортицаТоваров
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ПересортицаТоваров");
	ТаблицыДокумента.Добавить("РегистрНакопления.СебестоимостьТоваров");
	ТаблицыДокумента.Добавить("РегистрСведений.АналитикаУчетаНоменклатуры");
	ТаблицыТиповДокументов.Вставить("ПересортицаТоваров", ТаблицыДокумента);

	// ПорчаТоваров
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ПорчаТоваров");
	ТаблицыДокумента.Добавить("РегистрНакопления.СебестоимостьТоваров");
	ТаблицыДокумента.Добавить("РегистрСведений.АналитикаУчетаНоменклатуры");
	ТаблицыТиповДокументов.Вставить("ПорчаТоваров", ТаблицыДокумента);

	// ПоступлениеБезналичныхДенежныхСредств
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ПоступлениеБезналичныхДенежныхСредств");
	ТаблицыДокумента.Добавить("РегистрНакопления.ПрочиеДоходы");
	ТаблицыДокумента.Добавить("РегистрНакопления.ПрочиеРасходы");
	ТаблицыДокумента.Добавить("РегистрНакопления.РасчетыСКлиентами");
	ТаблицыДокумента.Добавить("РегистрСведений.СуммыДокументовВВалютахУчета");
	ТаблицыТиповДокументов.Вставить("ПоступлениеБезналичныхДенежныхСредств", ТаблицыДокумента);

	// ПоступлениеДенежныхДокументов
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ПоступлениеДенежныхДокументов");
	ТаблицыДокумента.Добавить("РегистрНакопления.РасчетыСПоставщиками");
	ТаблицыДокумента.Добавить("РегистрСведений.СуммыДокументовВВалютахУчета");
	ТаблицыТиповДокументов.Вставить("ПоступлениеДенежныхДокументов", ТаблицыДокумента);

	// ПоступлениеОтПереработчика
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ПоступлениеОтПереработчика");
	ТаблицыТиповДокументов.Вставить("ПоступлениеОтПереработчика", ТаблицыДокумента);


	// ПоступлениеТоваровНаСклад
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ПоступлениеТоваровНаСклад");
	ТаблицыДокумента.Добавить("РегистрНакопления.СебестоимостьТоваров");
	ТаблицыТиповДокументов.Вставить("ПоступлениеТоваровНаСклад", ТаблицыДокумента);

	// ПриобретениеТоваровУслуг
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ПриобретениеТоваровУслуг");
	ТаблицыДокумента.Добавить("РегистрНакопления.РасчетыСПоставщиками");
	ТаблицыДокумента.Добавить("РегистрСведений.СуммыДокументовВВалютахУчета");
	ТаблицыТиповДокументов.Вставить("ПриобретениеТоваровУслуг", ТаблицыДокумента);

	// ПриобретениеУслугПрочихАктивов
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ПриобретениеУслугПрочихАктивов");
	ТаблицыДокумента.Добавить("РегистрНакопления.РасчетыСПоставщиками");
	ТаблицыДокумента.Добавить("РегистрСведений.СуммыДокументовВВалютахУчета");
	ТаблицыТиповДокументов.Вставить("ПриобретениеУслугПрочихАктивов", ТаблицыДокумента);

	// ПринятиеКУчетуНМА
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ПринятиеКУчетуНМА");
	ТаблицыДокумента.Добавить("РегистрСведений.НастройкиСистемыНалогообложения");
	ТаблицыДокумента.Добавить("РегистрБухгалтерии.Хозрасчетный");
	ТаблицыТиповДокументов.Вставить("ПринятиеКУчетуНМА", ТаблицыДокумента);

	// ПринятиеКУчетуНМА2_4
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ПринятиеКУчетуНМА2_4");
	ТаблицыДокумента.Добавить("РегистрНакопления.СтоимостьНМА");
	ТаблицыДокумента.Добавить("РегистрНакопления.АмортизацияНМА");
	ТаблицыТиповДокументов.Вставить("ПринятиеКУчетуНМА2_4", ТаблицыДокумента);

	// ПринятиеКУчетуОС
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ПринятиеКУчетуОС");
	ТаблицыДокумента.Добавить("РегистрСведений.НастройкиСистемыНалогообложения");
	ТаблицыДокумента.Добавить("РегистрБухгалтерии.Хозрасчетный");
	ТаблицыТиповДокументов.Вставить("ПринятиеКУчетуОС", ТаблицыДокумента);

	// ПринятиеКУчетуОС2_4
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ПринятиеКУчетуОС2_4");
	ТаблицыДокумента.Добавить("РегистрНакопления.СтоимостьОС");
	ТаблицыДокумента.Добавить("РегистрНакопления.АмортизацияОС");
	ТаблицыТиповДокументов.Вставить("ПринятиеКУчетуОС2_4", ТаблицыДокумента);

	// РазукомплектацияОС
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.РазукомплектацияОС");
	ТаблицыДокумента.Добавить("РегистрНакопления.СтоимостьОС");
	ТаблицыДокумента.Добавить("РегистрНакопления.АмортизацияОС");
	ТаблицыТиповДокументов.Вставить("РазукомплектацияОС", ТаблицыДокумента);

	// ОбъединениеОС
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ОбъединениеОС");
	ТаблицыДокумента.Добавить("РегистрНакопления.СтоимостьОС");
	ТаблицыДокумента.Добавить("РегистрНакопления.АмортизацияОС");
	ТаблицыТиповДокументов.Вставить("ОбъединениеОС", ТаблицыДокумента);

	// КорректировкаСтоимостиИАмортизацииОС
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.КорректировкаСтоимостиИАмортизацииОС");
	ТаблицыДокумента.Добавить("РегистрНакопления.СтоимостьОС");
	ТаблицыДокумента.Добавить("РегистрНакопления.АмортизацияОС");
	ТаблицыТиповДокументов.Вставить("КорректировкаСтоимостиИАмортизацииОС", ТаблицыДокумента);

	// КорректировкаСтоимостиИАмортизацииНМА
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.КорректировкаСтоимостиИАмортизацииНМА");
	ТаблицыДокумента.Добавить("РегистрНакопления.СтоимостьНМА");
	ТаблицыДокумента.Добавить("РегистрНакопления.АмортизацияНМА");
	ТаблицыТиповДокументов.Вставить("КорректировкаСтоимостиИАмортизацииНМА", ТаблицыДокумента);

	// ПриходныйКассовыйОрдер
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ПриходныйКассовыйОрдер");
	ТаблицыДокумента.Добавить("РегистрНакопления.ПрочиеДоходы");
	ТаблицыДокумента.Добавить("РегистрНакопления.ПрочиеРасходы");
	ТаблицыДокумента.Добавить("РегистрНакопления.РасчетыСКлиентами");
	ТаблицыДокумента.Добавить("РегистрСведений.СуммыДокументовВВалютахУчета");
	ТаблицыТиповДокументов.Вставить("ПриходныйКассовыйОрдер", ТаблицыДокумента);

	// ПрочееОприходованиеТоваров
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ПрочееОприходованиеТоваров");
	ТаблицыДокумента.Добавить("РегистрСведений.АналитикаУчетаНоменклатуры");
	ТаблицыДокумента.Добавить("РегистрСведений.СуммыДокументовВВалютахУчета");
	ТаблицыТиповДокументов.Вставить("ПрочееОприходованиеТоваров", ТаблицыДокумента);

	// ПрочиеДоходыРасходы
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ПрочиеДоходыРасходы");
	ТаблицыДокумента.Добавить("РегистрСведений.СуммыДокументовВВалютахУчета");
	ТаблицыТиповДокументов.Вставить("ПрочиеДоходыРасходы", ТаблицыДокумента);
	
	// РаспределениеДоходовПоНаправлениямДеятельности
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.РаспределениеДоходовПоНаправлениямДеятельности");
	ТаблицыДокумента.Добавить("РегистрНакопления.ПрочиеРасходы");
	ТаблицыДокумента.Добавить("РегистрСведений.ПорядокОтраженияНаСчетахУчета");
	ТаблицыТиповДокументов.Вставить("РаспределениеДоходовПоНаправлениямДеятельности", ТаблицыДокумента);

	// КорректировкаНалоговогоНазначенияКапитальныхИнвестиций
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ПринятиеКУчетуНМА");
	ТаблицыДокумента.Добавить("Документ.ПринятиеКУчетуОС");
	ТаблицыДокумента.Добавить("РегистрНакопления.КорректировкиНДСПартий");
	ТаблицыДокумента.Добавить("РегистрНакопления.ПартииПрочихРасходов");
	ТаблицыДокумента.Добавить("РегистрСведений.АналитикаУчетаНоменклатуры");
	ТаблицыДокумента.Добавить("РегистрСведений.АналитикаУчетаПартий");
	ТаблицыТиповДокументов.Вставить("КорректировкаНалоговогоНазначенияКапитальныхИнвестиций", ТаблицыДокумента);

	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("РегистрНакопления.КорректировкиНДСПартий");
	ТаблицыТиповДокументов.Вставить("КорректировкаНалоговогоНазначенияЗапасов", ТаблицыДокумента);
	
	// РаспределениеПроизводственныхЗатрат
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.РаспределениеПроизводственныхЗатрат");
	ТаблицыТиповДокументов.Вставить("РаспределениеПроизводственныхЗатрат", ТаблицыДокумента);

	// РаспределениеПрочихЗатрат
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.РаспределениеПрочихЗатрат");
	ТаблицыДокумента.Добавить("РегистрНакопления.ПрочиеРасходы");
	ТаблицыДокумента.Добавить("РегистрНакопления.ПрочиеРасходыНезавершенногоПроизводства");
	ТаблицыТиповДокументов.Вставить("РаспределениеПрочихЗатрат", ТаблицыДокумента);

	// РаспределениеРасходовБудущихПериодов
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.РаспределениеРасходовБудущихПериодов");
	ТаблицыТиповДокументов.Вставить("РаспределениеРасходовБудущихПериодов", ТаблицыДокумента);

	// РасходныйКассовыйОрдер
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.РасходныйКассовыйОрдер");
	ТаблицыДокумента.Добавить("РегистрНакопления.РасчетыСПоставщиками");
	ТаблицыДокумента.Добавить("РегистрСведений.ОплатаВедомостейНаВыплатуЗарплаты");
	ТаблицыДокумента.Добавить("РегистрСведений.СуммыДокументовВВалютахУчета");
	ТаблицыТиповДокументов.Вставить("РасходныйКассовыйОрдер", ТаблицыДокумента);

	// РасчетСебестоимостиТоваров
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.РасчетСебестоимостиТоваров");
	ТаблицыДокумента.Добавить("РегистрНакопления.ПрочиеРасходы");
	ТаблицыДокумента.Добавить("РегистрНакопления.СебестоимостьТоваров");
	ТаблицыДокумента.Добавить("РегистрСведений.АналитикаУчетаНоменклатуры");
	ТаблицыТиповДокументов.Вставить("РасчетСебестоимостиТоваров", ТаблицыДокумента);

	// РеализацияПодарочныхСертификатов
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.РеализацияПодарочныхСертификатов");
	ТаблицыДокумента.Добавить("РегистрНакопления.ДвиженияДенежныеСредстваКонтрагент");
	ТаблицыТиповДокументов.Вставить("РеализацияПодарочныхСертификатов", ТаблицыДокумента);

	// РеализацияТоваровУслуг
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.РеализацияТоваровУслуг");
	ТаблицыДокумента.Добавить("РегистрНакопления.РасчетыСКлиентами");
	ТаблицыДокумента.Добавить("РегистрСведений.АналитикаУчетаНоменклатуры");
	ТаблицыДокумента.Добавить("РегистрСведений.СуммыДокументовВВалютахУчета");
	ТаблицыТиповДокументов.Вставить("РеализацияТоваровУслуг", ТаблицыДокумента);

	// РеализацияУслугПрочихАктивов
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.РеализацияУслугПрочихАктивов");
	ТаблицыДокумента.Добавить("РегистрНакопления.РасчетыСКлиентами");
	ТаблицыДокумента.Добавить("РегистрСведений.СуммыДокументовВВалютахУчета");
	ТаблицыТиповДокументов.Вставить("РеализацияУслугПрочихАктивов", ТаблицыДокумента);

	// РегламентнаяОперация
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.РегламентнаяОперация");
	ТаблицыТиповДокументов.Вставить("РегламентнаяОперация", ТаблицыДокумента);

	// СборкаТоваров
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.СборкаТоваров");
	ТаблицыДокумента.Добавить("РегистрСведений.АналитикаУчетаНоменклатуры");
	ТаблицыТиповДокументов.Вставить("СборкаТоваров", ТаблицыДокумента);

	// СписаниеБезналичныхДенежныхСредств
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.СписаниеБезналичныхДенежныхСредств");
	ТаблицыДокумента.Добавить("РегистрНакопления.ДенежныеСредстваБезналичные");
	ТаблицыДокумента.Добавить("РегистрНакопления.РасчетыСПоставщиками");
	ТаблицыДокумента.Добавить("РегистрСведений.СуммыДокументовВВалютахУчета");
	ТаблицыТиповДокументов.Вставить("СписаниеБезналичныхДенежныхСредств", ТаблицыДокумента);

	// СписаниеЗадолженности
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.СписаниеЗадолженности");
	ТаблицыДокумента.Добавить("РегистрСведений.СуммыДокументовВВалютахУчета");
	ТаблицыТиповДокументов.Вставить("СписаниеЗадолженности", ТаблицыДокумента);

	// СписаниеНедостачТоваров
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.СписаниеНедостачТоваров");
	ТаблицыДокумента.Добавить("РегистрСведений.АналитикаУчетаНоменклатуры");
	ТаблицыТиповДокументов.Вставить("СписаниеНедостачТоваров", ТаблицыДокумента);

	// СписаниеНМА
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.СписаниеНМА");
	ТаблицыДокумента.Добавить("РегистрСведений.ПорядокУчетаНМА");
	ТаблицыТиповДокументов.Вставить("СписаниеНМА", ТаблицыДокумента);

	// СписаниеНМА2_4
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.СписаниеНМА2_4");
	ТаблицыДокумента.Добавить("РегистрНакопления.СтоимостьНМА");
	ТаблицыДокумента.Добавить("РегистрНакопления.АмортизацияНМА");
	ТаблицыТиповДокументов.Вставить("СписаниеНМА2_4", ТаблицыДокумента);

	// СписаниеОС
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.СписаниеОС");
	ТаблицыДокумента.Добавить("РегистрБухгалтерии.Хозрасчетный");
	ТаблицыДокумента.Добавить("РегистрСведений.МестонахождениеОС");
	ТаблицыДокумента.Добавить("РегистрСведений.ПорядокУчетаОС");
	ТаблицыТиповДокументов.Вставить("СписаниеОС", ТаблицыДокумента);

	// СписаниеОС2_4
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.СписаниеОС2_4");
	ТаблицыДокумента.Добавить("РегистрНакопления.СтоимостьОС");
	ТаблицыДокумента.Добавить("РегистрНакопления.АмортизацияОС");
	ТаблицыТиповДокументов.Вставить("СписаниеОС2_4", ТаблицыДокумента);

	// ТаможеннаяДекларацияИмпорт
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ТаможеннаяДекларацияИмпорт");
	ТаблицыДокумента.Добавить("РегистрНакопления.РасчетыСПоставщиками");
	ТаблицыДокумента.Добавить("РегистрСведений.АналитикаУчетаПоПартнерам");
	ТаблицыТиповДокументов.Вставить("ТаможеннаяДекларацияИмпорт", ТаблицыДокумента);
	
	// КорректировкаНалоговогоНазначенияЗапасов
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.КорректировкаНалоговогоНазначенияЗапасов");
	ТаблицыТиповДокументов.Вставить("КорректировкаНалоговогоНазначенияЗапасов", ТаблицыДокумента);
	
	// НалоговаяНакладная
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.НалоговаяНакладная");
	ТаблицыДокумента.Добавить("РегистрНакопления.НДСРеестрВыданныхНалоговыхДокументов");
	ТаблицыДокумента.Добавить("РегистрСведений.АналитикаУчетаПоПартнерам");
	ТаблицыТиповДокументов.Вставить("НалоговаяНакладная", ТаблицыДокумента);
	
	// ПеремещениеНМА
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ПеремещениеНМА");           
	ТаблицыДокумента.Добавить("РегистрСведений.ПорядокУчетаНМА");
	ТаблицыДокумента.Добавить("РегистрБухгалтерии.Хозрасчетный");
	ТаблицыТиповДокументов.Вставить("ПеремещениеНМА", ТаблицыДокумента);
	
	// Приложение2КНалоговойНакладной
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.Приложение2КНалоговойНакладной");
	ТаблицыДокумента.Добавить("РегистрНакопления.НДСРеестрВыданныхНалоговыхДокументов");
	ТаблицыДокумента.Добавить("РегистрСведений.АналитикаУчетаПоПартнерам");
	ТаблицыТиповДокументов.Вставить("Приложение2КНалоговойНакладной", ТаблицыДокумента);
	
	// РегистрацияВходящегоНалоговогоДокумента
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.РегистрацияВходящегоНалоговогоДокумента");
	ТаблицыТиповДокументов.Вставить("РегистрацияВходящегоНалоговогоДокумента", ТаблицыДокумента);
	
	// МодернизацияНМА
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.МодернизацияНМА");
	ТаблицыДокумента.Добавить("РегистрБухгалтерии.Хозрасчетный");       
	ТаблицыДокумента.Добавить("РегистрСведений.ПорядокУчетаНМА");
	ТаблицыТиповДокументов.Вставить("МодернизацияНМА", ТаблицыДокумента);
	
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ПерерасчетПропорциональногоНДСпоТоварамИОС");
	ТаблицыДокумента.Добавить("РегистрСведений.МестонахождениеОС");
	ТаблицыДокумента.Добавить("РегистрСведений.ПорядокУчетаОС");
    ТаблицыДокумента.Добавить("РегистрСведений.ПорядокУчетаОСБУ");
    ТаблицыДокумента.Добавить("РегистрСведений.ПорядокУчетаНМА");
    ТаблицыДокумента.Добавить("РегистрСведений.ПервоначальныеСведенияНМА");
    ТаблицыДокумента.Добавить("РегистрСведений.МестоУчетаНМА");	
	ТаблицыДокумента.Добавить("РегистрНакопления.СуммыКорректировокПропорциональногоНДС");	
	ТаблицыТиповДокументов.Вставить("ПерерасчетПропорциональногоНДСпоТоварамИОС", ТаблицыДокумента);


	// КорректировкаНазначенияТоваров
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.КорректировкаНазначенияТоваров");
	ТаблицыДокумента.Добавить("РегистрНакопления.СебестоимостьТоваров");
	ТаблицыТиповДокументов.Вставить("КорректировкаНазначенияТоваров", ТаблицыДокумента);	
	
	// КорректировкаНазначенияТоваров
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.КорректировкаНазначенияТоваров");
	ТаблицыТиповДокументов.Вставить("КорректировкаНазначенияТоваров", ТаблицыДокумента);
	
	
	// ПроизводствоБезЗаказа
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ПроизводствоБезЗаказа");
	ТаблицыТиповДокументов.Вставить("ПроизводствоБезЗаказа", ТаблицыДокумента);
	
	// ВнесениеДенежныхСредствВКассуККМ
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ВнесениеДенежныхСредствВКассуККМ");
	ТаблицыДокумента.Добавить("РегистрСведений.СуммыДокументовВВалютахУчета");
	ТаблицыТиповДокументов.Вставить("ВнесениеДенежныхСредствВКассуККМ", ТаблицыДокумента);
	
	// ВыемкаДенежныхСредствИзКассыККМ
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ВыемкаДенежныхСредствИзКассыККМ");
	ТаблицыДокумента.Добавить("РегистрСведений.СуммыДокументовВВалютахУчета");
	ТаблицыТиповДокументов.Вставить("ВыемкаДенежныхСредствИзКассыККМ", ТаблицыДокумента);
	
	// РегистраторРасчетов
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.РегистраторРасчетов");
	ТаблицыДокумента.Добавить("РегистрНакопления.РасчетыСКлиентамиПоСрокам");
	ТаблицыДокумента.Добавить("РегистрНакопления.РасчетыСПоставщикамиПоСрокам");
	ТаблицыТиповДокументов.Вставить("РегистраторРасчетов", ТаблицыДокумента);
	
	// ПриемкаТоваровНаХранение
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ПриемкаТоваровНаХранение");
	ТаблицыДокумента.Добавить("РегистрСведений.СуммыДокументовВВалютахУчета");
	ТаблицыТиповДокументов.Вставить("ПриемкаТоваровНаХранение", ТаблицыДокумента);
	
	// ВыкупПринятыхНаХранениеТоваров
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ВыкупПринятыхНаХранениеТоваров");
	ТаблицыДокумента.Добавить("РегистрНакопления.РасчетыСПоставщиками");
	ТаблицыДокумента.Добавить("РегистрСведений.СуммыДокументовВВалютахУчета");
	ТаблицыТиповДокументов.Вставить("ВыкупПринятыхНаХранениеТоваров", ТаблицыДокумента);

	// СписаниеПринятыхНаХранениеТоваров
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.СписаниеПринятыхНаХранениеТоваров");
	ТаблицыТиповДокументов.Вставить("СписаниеПринятыхНаХранениеТоваров", ТаблицыДокумента);
	
	// ОтгрузкаТоваровСХранения
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ОтгрузкаТоваровСХранения");
	ТаблицыДокумента.Добавить("РегистрНакопления.СебестоимостьТоваров");
	ТаблицыТиповДокументов.Вставить("ОтгрузкаТоваровСХранения", ТаблицыДокумента);
	
	//++ НЕ УТ
	// НачислениеСписаниеРезервовПредстоящихРасходов
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.НачислениеСписаниеРезервовПредстоящихРасходов");
	ТаблицыДокумента.Добавить("РегистрНакопления.РезервыПредстоящихРасходов");
	ТаблицыДокумента.Добавить("РегистрНакопления.ПрочиеРасходы");
	ТаблицыТиповДокументов.Вставить("НачислениеСписаниеРезервовПредстоящихРасходов", ТаблицыДокумента);

	//-- НЕ УТ
	
	// ПередачаТоваровХранителю
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ПередачаТоваровХранителю");
	ТаблицыДокумента.Добавить("РегистрНакопления.СебестоимостьТоваров");
	ТаблицыТиповДокументов.Вставить("ПередачаТоваровХранителю", ТаблицыДокумента);
	
	// ПоступлениеТоваровОтХранителя
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ПоступлениеТоваровОтХранителя");
	ТаблицыДокумента.Добавить("РегистрНакопления.СебестоимостьТоваров");
	ТаблицыТиповДокументов.Вставить("ПоступлениеТоваровОтХранителя", ТаблицыДокумента);
	
	// ВыкупТоваровХранителем
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ВыкупТоваровХранителем");
	ТаблицыДокумента.Добавить("РегистрНакопления.СебестоимостьТоваров");
	ТаблицыДокумента.Добавить("РегистрНакопления.РасчетыСКлиентами");
	ТаблицыДокумента.Добавить("РегистрСведений.СуммыДокументовВВалютахУчета");
	ТаблицыТиповДокументов.Вставить("ВыкупТоваровХранителем", ТаблицыДокумента);
	
	// СписаниеТоваровУХранителя
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.СписаниеТоваровУХранителя");
	ТаблицыДокумента.Добавить("РегистрСведений.АналитикаУчетаНоменклатуры");
	ТаблицыТиповДокументов.Вставить("СписаниеТоваровУХранителя", ТаблицыДокумента);
	
	//++ НЕ УТ	
	// РаспределениеВозвратныхОтходов
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.РаспределениеВозвратныхОтходов");
	ТаблицыДокумента.Добавить("РегистрНакопления.СебестоимостьТоваров");
	ТаблицыТиповДокументов.Вставить("РаспределениеВозвратныхОтходов", ТаблицыДокумента);
	//-- НЕ УТ
	
	// КорректировкаЗадолженностиПоФинансовымИнструментам
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.КорректировкаЗадолженностиПоФинансовымИнструментам");
	ТаблицыДокумента.Добавить("РегистрНакопления.РасчетыПоФинансовымИнструментам");
	ТаблицыДокумента.Добавить("РегистрСведений.АналитикаУчетаПоПартнерам");
	ТаблицыДокумента.Добавить("ПланВидовХарактеристик.СтатьиРасходов");
	ТаблицыДокумента.Добавить("Справочник.ОбъектыСтроительства");
	ТаблицыТиповДокументов.Вставить("КорректировкаЗадолженностиПоФинансовымИнструментам", ТаблицыДокумента);

	// ВводОстатковВзаиморасчетов
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ВводОстатковВзаиморасчетов");
	ТаблицыТиповДокументов.Вставить("ВводОстатковВзаиморасчетов", ТаблицыДокумента);
	
	// ВводОстатковДенежныхСредств
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ВводОстатковДенежныхСредств");
	ТаблицыТиповДокументов.Вставить("ВводОстатковДенежныхСредств", ТаблицыДокумента);

	// ВводОстатковОПродажахЗаПрошлыеПериоды
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ВводОстатковОПродажахЗаПрошлыеПериоды");
	ТаблицыДокумента.Добавить("РегистрСведений.АналитикаУчетаНоменклатуры");
	ТаблицыТиповДокументов.Вставить("ВводОстатковОПродажахЗаПрошлыеПериоды", ТаблицыДокумента);

	// ВводОстатковПоФинансовымИнструментам
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ВводОстатковПоФинансовымИнструментам");
	ТаблицыТиповДокументов.Вставить("ВводОстатковПоФинансовымИнструментам", ТаблицыДокумента);

	// ВводОстатковПрочиеРасходы
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ВводОстатковПрочиеРасходы");
	ТаблицыТиповДокументов.Вставить("ВводОстатковПрочиеРасходы", ТаблицыДокумента);

	// ВводОстатковПрочихАктивовПассивов
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ВводОстатковПрочихАктивовПассивов");
	ТаблицыДокумента.Добавить("РегистрСведений.АналитикаУчетаНоменклатуры");
	ТаблицыТиповДокументов.Вставить("ВводОстатковПрочихАктивовПассивов", ТаблицыДокумента);
	
	// ВводОстатковРасчетовПоЭквайрингу
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ВводОстатковРасчетовПоЭквайрингу");
	ТаблицыТиповДокументов.Вставить("ВводОстатковРасчетовПоЭквайрингу", ТаблицыДокумента);

	// ВводОстатковСПодотчетниками
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ВводОстатковСПодотчетниками");
	ТаблицыТиповДокументов.Вставить("ВводОстатковСПодотчетниками", ТаблицыДокумента);

	// ВводОстатковТМЦВЭксплуатации
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ВводОстатковТМЦВЭксплуатации");
	ТаблицыТиповДокументов.Вставить("ВводОстатковТМЦВЭксплуатации", ТаблицыДокумента);

	// ВводОстатковТоваров
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ВводОстатковТоваров");
	ТаблицыДокумента.Добавить("РегистрСведений.АналитикаУчетаНоменклатуры");
	ТаблицыТиповДокументов.Вставить("ВводОстатковТоваров", ТаблицыДокумента);
	
	// ОтчетКомитентуОЗакупках
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ОтчетКомитентуОЗакупках");
	ТаблицыДокумента.Добавить("РегистрСведений.СуммыДокументовВВалютахУчета");
	ТаблицыДокумента.Добавить("РегистрНакопления.РасчетыСКлиентами");
	ТаблицыДокумента.Добавить("Справочник.Назначения");
	ТаблицыТиповДокументов.Вставить("ОтчетКомитентуОЗакупках", ТаблицыДокумента);
	
	МассивТипов = ТаблицыТиповДокументов[ИмяТипаДокумента];
	
	Если РеглУчетВыборкиСерверПовтИсп.ЭтоРасчетныйДокумент(ИмяТипаДокумента) Тогда
		Если ПолучитьФункциональнуюОпцию("НоваяАрхитектураВзаиморасчетов") Тогда
			МассивТипов.Добавить("РегистрНакопления.РасчетыСКлиентамиПоСрокам");
			МассивТипов.Добавить("РегистрНакопления.РасчетыСПоставщикамиПоСрокам");
		Иначе
			МассивТипов.Добавить("РегистрНакопления.РасчетыСКлиентамиПоДокументам");
			МассивТипов.Добавить("РегистрНакопления.РасчетыСПоставщикамиПоДокументам");
		КонецЕсли;
	КонецЕсли;
	
	Возврат МассивТипов;

КонецФункции

// Возвращает параметры расчета в суммы валюте управленческой финансовой отчетности
//
// Параметры:
// 	Период - Дата - Период операции.
//
// Возвращаемое значение:
// 	Результат - Неопределено - Если учет в валюте фин. отчетности не ведется
// 	          - Структура - Параметры пересчета содержат
// 						* РесурсИсточник - Строка - Имя ресурса бухгалтерии, который является источником
// 						* Коэффициент - Число - Коэффициент пересчета.
//
Функция ПараметрыРасчетаСуммыФО(Период) Экспорт
	
	УчетВВалютеФО = ПолучитьФункциональнуюОпцию("ВестиУчетНаПланеСчетовХозрасчетныйВВалютеФинОтчетности");
	Если Не УчетВВалютеФО Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ИсточникСуммыДляПересчета = Константы.ИсточникСуммыДляПересчетаВВалютуФинОтчетности.Получить();
	Если Не ЗначениеЗаполнено(ИсточникСуммыДляПересчета) Тогда
		ИсточникСуммыДляПересчета = Перечисления.ИсточникиСуммыДляПересчетаВВалютуФинОтчетности.БУ;
	КонецЕсли;
	ВалютаФинОтчетности = Константы.ВалютаФинОтчетности.Получить();
	КурсВалютыФинОтчетности = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ВалютаФинОтчетности, Период);
	Если ИсточникСуммыДляПересчета = Перечисления.ИсточникиСуммыДляПересчетаВВалютуФинОтчетности.БУ Тогда
		ВалютаИсточника = Константы.ВалютаРегламентированногоУчета.Получить();
		РесурсИсточник = "Сумма";
	Иначе
		ВалютаИсточника = Константы.ВалютаУправленческогоУчета.Получить();
		РесурсИсточник = "СуммаУУ";
	КонецЕсли;
	
	КоэффициентПересчета = РаботаСКурсамиВалютУТ.ПолучитьКоэффициентПересчетаИзВалютыВВалюту(ВалютаИсточника, ВалютаФинОтчетности, Период);
	
	Результат = Новый Структура;
	Результат.Вставить("РесурсИсточник", РесурсИсточник);
	Результат.Вставить("Коэффициент",    КоэффициентПересчета);
	
	Возврат Результат;
	
КонецФункции

// Возвращает параметры расчета в суммы УУ
//
// Параметры:
// 	Период - Дата - Период операции.
//
// Возвращаемое значение:
// 	Результат - Неопределено - Если учет в валюте фин. отчетности не ведется
// 	          - Структура - Параметры пересчета содержат
// 						* РесурсИсточник - Строка - Имя ресурса бухгалтерии, который является источником
// 						* Коэффициент - Число - Коэффициент пересчета.
//
Функция ПараметрыРасчетаСуммыУУ(Период) Экспорт
	
	ВестиУУ = ПолучитьФункциональнуюОпцию("ВестиУУНаПланеСчетовХозрасчетный");
	Если Не ВестиУУ Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ВалютаУправленческогоУчета = Константы.ВалютаУправленческогоУчета.Получить();
	ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	КоэффициентПересчета = РаботаСКурсамиВалютУТ.ПолучитьКоэффициентПересчетаИзВалютыВВалюту(
		ВалютаРегламентированногоУчета, 
		ВалютаУправленческогоУчета, 
		Период);
	Результат = Новый Структура;
	Результат.Вставить("РесурсИсточник", "Сумма");
	Результат.Вставить("Коэффициент",   КоэффициентПересчета);
	
	Возврат Результат;
	
КонецФункции

// Возвращает параметры, используемые при выполнении запроса отражения документов в регл. учете,
//	как правило, это установка констант. Заполняются так же параметры, используемые в запросах
//	"ЗапросХозрасчетный" и "ЗапросСопоставлений" - для совместимости с внешними обработками.
//	
//	Возвращаемое значение:
//		Структура - содержит параметры, необходимые при выполнении запроса отражения документов в регл. учете.
//
Функция ПараметрыОтраженияРеглУчетаПоУмолчанию() Экспорт
	
	НастройкиУчетаНДС = УчетНДСУП.НастройкиУчета();
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ВалютаУпрУчета",          Константы.ВалютаУправленческогоУчета.Получить());
	СтруктураПараметров.Вставить("ВалютаФинОтчетности",     Константы.ВалютаФинОтчетности.Получить());
	СтруктураПараметров.Вставить("ВалютаРеглУчета",         Константы.ВалютаРегламентированногоУчета.Получить());
	СтруктураПараметров.Вставить("ДатаПереходаНаПартионныйУчетВерсии22", Константы.ДатаПереходаНаПартионныйУчетВерсии22.Получить());
	СтруктураПараметров.Вставить("ДатаНачалаУчетаВнеоборотныхАктивов2_4", Константы.ДатаНачалаУчетаВнеоборотныхАктивов2_4.Получить());
	СтруктураПараметров.Вставить("ИсточникСуммыДляПересчетаВВалютуФО", Константы.ИсточникСуммыДляПересчетаВВалютуФинОтчетности.Получить());
	СтруктураПараметров.Вставить("ВалютаФинОтчетности", Константы.ВалютаФинОтчетности.Получить());
	СтруктураПараметров.Вставить("ПустаяСсылка",        ПланыСчетов.Хозрасчетный.ПустаяСсылка());
	СтруктураПараметров.Вставить("ВестиУУ",             Константы.ВестиУУНаПланеСчетовХозрасчетный.Получить());
	СтруктураПараметров.Вставить("ДатаНачалаВеденияУУ", Константы.ДатаНачалаУУНаПланеСчетовХозрасчетный.Получить());
	
	СтруктураПараметров.Вставить("ПустойТипНалогообложения", Перечисления.ТипыНалогообложенияНДС.ПустаяСсылка());
	СтруктураПараметров.Вставить("НоваяАрхитектураВзаиморасчетов", Константы.НоваяАрхитектураВзаиморасчетов.Получить());
	
	Условия = УсловияЗаполненияНаправленийДеятельностиПоВидамСчетов();
	СтруктураПараметров.Вставить("УчетЗатрат",                Условия.УчетЗатрат);
	СтруктураПараметров.Вставить("УчетДоходов",               Условия.УчетДоходов);
	СтруктураПараметров.Вставить("УчетДенежныхСредств",       Условия.УчетДенежныхСредств);
	СтруктураПараметров.Вставить("УчетВнеоборотныхАктивов",   Условия.УчетВнеоборотныхАктивов);
	СтруктураПараметров.Вставить("УчетРасчетовСПоставщиками", Условия.УчетРасчетовСПоставщиками);
	СтруктураПараметров.Вставить("НикогдаНеЗаполнять",        Условия.НикогдаНеЗаполнять);
	СтруктураПараметров.Вставить("ЗаполнятьВсегда",           Условия.ЗаполнятьВсегда);
	
	Возврат СтруктураПараметров;
	
КонецФункции

// Возвращает массив типов документов, для которых не используется ручная корректировка проводок.
//	ВозвращаемоеЗначение:
//		Массив - массив типов документов.
//
Функция ИсключенияИзРучнойКорректировкиПроводок() Экспорт
	
	МассивВозврата = Новый Массив;
	
	МассивВозврата.Добавить(Тип("ДокументСсылка.АмортизацияОС"));
	МассивВозврата.Добавить(Тип("ДокументСсылка.АмортизацияНМА"));
	МассивВозврата.Добавить(Тип("ДокументСсылка.ВозвратОСОтАрендатора"));
	МассивВозврата.Добавить(Тип("ДокументСсылка.ВыбытиеАрендованныхОС"));
	МассивВозврата.Добавить(Тип("ДокументСсылка.ПоступлениеАрендованныхОС"));
	МассивВозврата.Добавить(Тип("ДокументСсылка.ИзменениеПараметровОС"));
	МассивВозврата.Добавить(Тип("ДокументСсылка.МодернизацияОС"));
	МассивВозврата.Добавить(Тип("ДокументСсылка.ПередачаОСАрендатору"));
	МассивВозврата.Добавить(Тип("ДокументСсылка.ПеремещениеОС"));
	МассивВозврата.Добавить(Тип("ДокументСсылка.ПереоценкаНМА"));
	МассивВозврата.Добавить(Тип("ДокументСсылка.ПереоценкаОС"));
	МассивВозврата.Добавить(Тип("ДокументСсылка.ПодготовкаКПередачеНМА"));
	МассивВозврата.Добавить(Тип("ДокументСсылка.ПодготовкаКПередачеОС"));
	МассивВозврата.Добавить(Тип("ДокументСсылка.ПринятиеКУчетуНМА"));
	МассивВозврата.Добавить(Тип("ДокументСсылка.ПринятиеКУчетуОС"));
	МассивВозврата.Добавить(Тип("ДокументСсылка.СписаниеНМА"));
	МассивВозврата.Добавить(Тип("ДокументСсылка.СписаниеОС"));
	
	Возврат МассивВозврата;
	
КонецФункции

// Функция задает правила исключений при отражении документа в регл. учете:
//	Типичное поведение: обращение к модулю менеджера документа для получения текста запроса временных таблиц и отражения;
//	Альтернатива: можно назначить для каких-либо документов обращение к какому-то общему модулю вместо типичного поведения;
//	Нет текстов отражения: если документ отражается оперативно (операцияБух или корректировка регистров) можно назначить для него пустую строку.
//
//	Возвращаемое значение:
//		Соответствие - ключом выступают имена документов, которые могут отражаться в регл. учете, значением - имя общего модуля, для вызова,
//			если значение не задано - для документа не будет назначаться никакого текста отражения.
//
Функция ДокументыИОбщиеМодулиОписывающиеОтражениеВРеглУчете()
	
	СоответствиеИменДокументовИменамОбщихМодулей = Новый Соответствие;
	СоответствиеИменДокументовИменамОбщихМодулей.Вставить("ОперацияБух", "");
	
	Возврат СоответствиеИменДокументовИменамОбщихМодулей;
	
КонецФункции

Функция УсловияЗаполненияНаправленийДеятельностиПоВидамСчетов()
	
	УсловияЗаполнения = Новый Структура;
	УсловияЗаполнения.Вставить("УчетЗатрат",                Новый Массив);
	УсловияЗаполнения.Вставить("УчетДоходов",               Новый Массив);
	УсловияЗаполнения.Вставить("УчетДенежныхСредств",       Новый Массив);
	УсловияЗаполнения.Вставить("УчетВнеоборотныхАктивов",   Новый Массив);
	УсловияЗаполнения.Вставить("УчетРасчетовСПоставщиками", Новый Массив);
	УсловияЗаполнения.Вставить("НикогдаНеЗаполнять",        Новый Массив);
	УсловияЗаполнения.Вставить("ЗаполнятьВсегда",           Новый Массив);
	
	ВидыСчетовРегл = Новый Массив;
	Для каждого ЗначениеПеречисления Из Метаданные.Перечисления.ВидыСчетовРеглУчета.ЗначенияПеречисления Цикл
		Если СтрНачинаетсяС(ЗначениеПеречисления.Имя, "Удалить") Тогда
			Продолжить;
		КонецЕсли;
		ВидыСчетовРегл.Добавить(Перечисления.ВидыСчетовРеглУчета[ЗначениеПеречисления.Имя]);
	КонецЦикла;
	
	Для каждого ВидСчетовРегл Из ВидыСчетовРегл Цикл
		
		Если ВидСчетовРегл = Перечисления.ВидыСчетовРеглУчета.Расходы  // УчетЗатрат
			Или ВидСчетовРегл = Перечисления.ВидыСчетовРеглУчета.ТМЦВЭксплуатацииАмортизация 
			Или ВидСчетовРегл = Перечисления.ВидыСчетовРеглУчета.СчетУчета8Класс 
			Или ВидСчетовРегл = Перечисления.ВидыСчетовРеглУчета.НаСкладе
			Или ВидСчетовРегл = Перечисления.ВидыСчетовРеглУчета.ТоварыПереданныеНаКомиссию
			Или ВидСчетовРегл = Перечисления.ВидыСчетовРеглУчета.ПередачаВПереработку
			Или ВидСчетовРегл = Перечисления.ВидыСчетовРеглУчета.ЗатратыНаПриобретениеТМЦ
			Или ВидСчетовРегл = Перечисления.ВидыСчетовРеглУчета.СебестоимостьПродаж
			Или ВидСчетовРегл = Перечисления.ВидыСчетовРеглУчета.ТМЦНаСкладах
			Или ВидСчетовРегл = Перечисления.ВидыСчетовРеглУчета.ТМЦВПроизводстве
			Или ВидСчетовРегл = Перечисления.ВидыСчетовРеглУчета.ТМЦУХранителей
			Или ВидСчетовРегл = Перечисления.ВидыСчетовРеглУчета.ТМЦКСписанию
			Или ВидСчетовРегл = Перечисления.ВидыСчетовРеглУчета.МатериалыПринятыеВПереработку
			Или ВидСчетовРегл = Перечисления.ВидыСчетовРеглУчета.МатериалыПринятыеВПереработкуВПроизводстве
			Или ВидСчетовРегл = Перечисления.ВидыСчетовРеглУчета.ТоварыНаСкладе
			Или ВидСчетовРегл = Перечисления.ВидыСчетовРеглУчета.Производство Тогда
			
			УсловияЗаполнения.УчетЗатрат.Добавить(ВидСчетовРегл);
			
		ИначеЕсли ВидСчетовРегл = Перечисления.ВидыСчетовРеглУчета.Доходы // УчетДоходов
			Или ВидСчетовРегл = Перечисления.ВидыСчетовРеглУчета.ВыручкаОтПродаж 
			Или ВидСчетовРегл = Перечисления.ВидыСчетовРеглУчета.ВычетыИзДоходов 
			Или ВидСчетовРегл = Перечисления.ВидыСчетовРеглУчета.РасчетыСКлиентами
			Или ВидСчетовРегл = Перечисления.ВидыСчетовРеглУчета.АвансыПолученные
			Или ВидСчетовРегл = Перечисления.ВидыСчетовРеглУчета.РасчетыСКлиентамиТара Тогда
			
			УсловияЗаполнения.УчетДоходов.Добавить(ВидСчетовРегл);
			
		ИначеЕсли ВидСчетовРегл = Перечисления.ВидыСчетовРеглУчета.ДенежныеСредства Тогда // УчетДенежныхСредств
			
			УсловияЗаполнения.УчетДенежныхСредств.Добавить(ВидСчетовРегл);
			
		ИначеЕсли ВидСчетовРегл = Перечисления.ВидыСчетовРеглУчета.СтоимостьВНА  // УчетВнеоборотныхАктивов
			Или ВидСчетовРегл = Перечисления.ВидыСчетовРеглУчета.СтоимостьВНА_ЦФ
			Или ВидСчетовРегл = Перечисления.ВидыСчетовРеглУчета.АмортизацияВНА
			Или ВидСчетовРегл = Перечисления.ВидыСчетовРеглУчета.АмортизацияВНА_ЦФ
			Или ВидСчетовРегл = Перечисления.ВидыСчетовРеглУчета.ВыбытиеВНА
			Или ВидСчетовРегл = Перечисления.ВидыСчетовРеглУчета.ДооценкаВНА
			Или ВидСчетовРегл = Перечисления.ВидыСчетовРеглУчета.РезервДоОценкиВНА
			Или ВидСчетовРегл = Перечисления.ВидыСчетовРеглУчета.ЗабалансовыйУчетВНА Тогда
			
			УсловияЗаполнения.УчетВнеоборотныхАктивов.Добавить(ВидСчетовРегл);
			
		ИначеЕсли ВидСчетовРегл = Перечисления.ВидыСчетовРеглУчета.РасчетыСПоставщиками // УчетРасчетовСПоставщиками
			Или ВидСчетовРегл = Перечисления.ВидыСчетовРеглУчета.АвансыВыданные 
			Или ВидСчетовРегл = Перечисления.ВидыСчетовРеглУчета.РасчетыСПоставщикамиТара 
			Или ВидСчетовРегл = Перечисления.ВидыСчетовРеглУчета.НеотфактурованныеПоставки 
			Или ВидСчетовРегл = Перечисления.ВидыСчетовРеглУчета.ТоварыКомитентовКОформлениюПоПродаже Тогда
			
			УсловияЗаполнения.УчетРасчетовСПоставщиками.Добавить(ВидСчетовРегл);
			
		ИначеЕсли ВидСчетовРегл = Перечисления.ВидыСчетовРеглУчета.Резервы // ЗаполнятьВсегда
			Или ВидСчетовРегл = Перечисления.ВидыСчетовРеглУчета.РасчетыСДебиторамиОсновнойДолг 
			Или ВидСчетовРегл = Перечисления.ВидыСчетовРеглУчета.РасчетыСДебиторамиПроценты
			Или ВидСчетовРегл = Перечисления.ВидыСчетовРеглУчета.РасчетыСДебиторамиКомиссия
			Или ВидСчетовРегл = Перечисления.ВидыСчетовРеглУчета.РасчетыСКредиторамиОсновнойДолг
			Или ВидСчетовРегл = Перечисления.ВидыСчетовРеглУчета.РасчетыСКредиторамиПроценты
			Или ВидСчетовРегл = Перечисления.ВидыСчетовРеглУчета.РасчетыСКредиторамиКомиссия
			Или ВидСчетовРегл = Перечисления.ВидыСчетовРеглУчета.ЛизинговыеУслуги
			Или ВидСчетовРегл = Перечисления.ВидыСчетовРеглУчета.ОбеспечительныйПлатежПоЛизингу
			Или ВидСчетовРегл = Перечисления.ВидыСчетовРеглУчета.ВыкупПредметаЛизинга
			Или ВидСчетовРегл = Перечисления.ВидыСчетовРеглУчета.АрендныеОбязательстваПоЛизингу
			Или ВидСчетовРегл = Перечисления.ВидыСчетовРеглУчета.ТМЦВЭксплуатации
			Или ВидСчетовРегл = Перечисления.ВидыСчетовРеглУчета.РасчетыПоПодарочнымСертификатам
			Или ВидСчетовРегл = Перечисления.ВидыСчетовРеглУчета.ПрочиеОперации
			Или ВидСчетовРегл = Перечисления.ВидыСчетовРеглУчета.ПрочиеАктивыПассивы 
			Или ВидСчетовРегл = Перечисления.ВидыСчетовРеглУчета.ТоварыКомитентовКОформлениюПоЗакупке Тогда
			
			УсловияЗаполнения.ЗаполнятьВсегда.Добавить(ВидСчетовРегл);
			
		ИначеЕсли ВидСчетовРегл = Перечисления.ВидыСчетовРеглУчета.НоменклатураПереданная Тогда // НикогдаНеЗаполнять
		
			УсловияЗаполнения.НикогдаНеЗаполнять.Добавить(ВидСчетовРегл);
			
		ИначеЕсли Лев(ОбщегоНазначения.ИмяЗначенияПеречисления(ВидСчетовРегл),5) = "НЕУКР" Тогда
			
			УсловияЗаполнения.НикогдаНеЗаполнять.Добавить(ВидСчетовРегл);
			
		Иначе
			
			ШаблонСообщения = НСтр("ru='Для вида счетов %1 не задано условие заполнения направления деятельности.';uk='Для виду рахунків %1 не задана умова заповнення напрямка діяльності.'",ОбщегоНазначения.КодОсновногоЯзыка());
			СообщениеОбОшибке = СтрШаблон(ШаблонСообщения, ОбщегоНазначения.ИмяЗначенияПеречисления(ВидСчетовРегл));
			
			ВызватьИсключение СообщениеОбОшибке;
		
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат УсловияЗаполнения;
	
КонецФункции

#КонецОбласти

#КонецОбласти
