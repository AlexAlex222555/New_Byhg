////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ЗАКРЫТИЯ МЕСЯЦА

#Область СлужебныеПроцедурыИФункции

Функция ПодготовитьПараметрыТаблицаРеквизиты(ТаблицаРеквизиты)
	
	Параметры = Новый Структура;
	
	// Подготовка таблицы Параметры.Реквизиты
	
	СписокОбязательныхКолонок = ""
	+ "Период,"       // <Дата>
	+ "Организация"  // <СправочникСсылка.Организации>
	;
	
	ТаблицаПараметров = УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(
		ТаблицаРеквизиты,
		СписокОбязательныхКолонок);
	Параметры.Вставить("Реквизиты", ТаблицаПараметров);
	
	Возврат Параметры;
	
КонецФункции

// Выполняет запись в регистры информации параметров расчетов по рег.операциям
// по данным которых будут построены справки - расчеты.
//
Процедура ЗаписьВоВспомогательныеРегистрыСведений(Движения, ДанныеДляЗаписи, ТаблицаРеквизиты,
										ИмяРегистра, Группировать = Ложь, Знач СтрокаГруппировки = Неопределено, Знач СтрокаСуммирования = Неопределено) Экспорт
	
	Если Не ЗначениеЗаполнено(ДанныеДляЗаписи)
	 Или Не ЗначениеЗаполнено(ТаблицаРеквизиты) Тогда
		Возврат;
	КонецЕсли;
	
	ВспомогательныйРасчет = Движения[ИмяРегистра];
	Параметры = ПодготовитьПараметрыТаблицаРеквизиты(ТаблицаРеквизиты);
	
	Реквизиты = Параметры.Реквизиты[0];
	
	Если ДанныеДляЗаписи.Колонки.Найти("Организация") = Неопределено Тогда
		ДанныеДляЗаписи.Колонки.Добавить("Организация",
			Новый ОписаниеТипов("СправочникСсылка.Организации"));
	КонецЕсли;
	
	ДанныеДляЗаписи.ЗаполнитьЗначения(Реквизиты.Организация, "Организация");
	Если Группировать Тогда
		Если СтрокаГруппировки = Неопределено Или СтрокаСуммирования = Неопределено Тогда
			// Группируем все ресурсы по всем измерениям
			МетаданныеРегистра = Метаданные.РегистрыСведений[ИмяРегистра];
			СтрокаГруппировки  = ИменаРеквизитовСтрокой(МетаданныеРегистра, "Измерения", ДанныеДляЗаписи.Колонки);
			СтрокаСуммирования = ИменаРеквизитовСтрокой(МетаданныеРегистра, "Ресурсы",   ДанныеДляЗаписи.Колонки);
		КонецЕсли;
		ДанныеДляЗаписи.Свернуть(СтрокаГруппировки, СтрокаСуммирования);
	КонецЕсли;
	
	КолонкиПериода = Новый Структура;
	КолонкиПериода.Вставить("ПериодРасчета", Реквизиты.Период);
	КолонкиПериода.Вставить("Период",        Реквизиты.Период);
	
	Для Каждого СтрокаТаблицы Из ДанныеДляЗаписи Цикл
		ВспомогательныйРасчетЗапись = ВспомогательныйРасчет.Добавить();
		ЗаполнитьЗначенияСвойств(ВспомогательныйРасчетЗапись, КолонкиПериода);
		ЗаполнитьЗначенияСвойств(ВспомогательныйРасчетЗапись, СтрокаТаблицы);
	КонецЦикла;
	
	ВспомогательныйРасчет.Записывать = Истина;
	
КонецПроцедуры

Функция ИменаРеквизитовСтрокой(МетаданныеРегистра, ВидРеквизита, Колонки)
	
	ИменаРеквизитов = Новый Массив;
	
	Для Каждого ОписаниеРеквизита Из МетаданныеРегистра[ВидРеквизита] Цикл
		
		Если Колонки.Найти(ОписаниеРеквизита.Имя) = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ИменаРеквизитов.Добавить(ОписаниеРеквизита.Имя);
		
	КонецЦикла;
	
	Возврат СтрСоединить(ИменаРеквизитов, ",");
	
КонецФункции

Функция НовыйЗаписиВспомогательногоРегистраСведений(МетаданныеРегистраСведений) Экспорт
	
	Записи = Новый ТаблицаЗначений;
	
	Для Каждого Измерение Из МетаданныеРегистраСведений.Измерения Цикл
		
		Если Измерение.Имя = "ПериодРасчета" Или Измерение.Имя = "Организация" Тогда
			Продолжить;
		КонецЕсли;
		
		Записи.Колонки.Добавить(Измерение.Имя, Измерение.Тип);
		
	КонецЦикла;
	
	Для Каждого Ресурс Из МетаданныеРегистраСведений.Ресурсы Цикл
		Записи.Колонки.Добавить(Ресурс.Имя, Ресурс.Тип);
	КонецЦикла;
	
	Для Каждого Реквизит Из МетаданныеРегистраСведений.Реквизиты Цикл
		Записи.Колонки.Добавить(Реквизит.Имя, Реквизит.Тип);
	КонецЦикла;
	
	Возврат Записи;

КонецФункции

Функция РеквизитыЗаписиВоВспомогательныеРегистрыСведений(Период, Организация) Экспорт
	
	РеквизитыДляЗаписиВоВспомогательныеРегистрыСведений = Новый ТаблицаЗначений;
	РеквизитыДляЗаписиВоВспомогательныеРегистрыСведений.Колонки.Добавить("Период",      Новый ОписаниеТипов("Дата"));
	РеквизитыДляЗаписиВоВспомогательныеРегистрыСведений.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	
	Запись = РеквизитыДляЗаписиВоВспомогательныеРегистрыСведений.Добавить();
		
	Запись.Период      = Период;
	Запись.Организация = Организация;
	
	Возврат РеквизитыДляЗаписиВоВспомогательныеРегистрыСведений;
	
КонецФункции

#КонецОбласти
