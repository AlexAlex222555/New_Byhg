////////////////////////////////////////////////////////////////////////////////
// Модуль работы с объектами основных средств
// 
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

#Область РасчетАмортизации

// Возвращает пустую таблицу значений начисленной амортизации
//
// Возвращаемое значение:
// 		ТаблицаЗначений - Пустая таблица начисленной амортизации.
//
Функция ПустаяТаблицаЗначенийНачисленнойАмортизации() Экспорт
	
	ТаблицаАмортизации = Новый ТаблицаЗначений;
	
	МассивТиповОбъектовУчета = Новый Массив;
	МассивТиповОбъектовУчета.Добавить(Тип("СправочникСсылка.ОбъектыЭксплуатации"));
	МассивТиповОбъектовУчета.Добавить(Тип("СправочникСсылка.НематериальныеАктивы"));
	ТаблицаАмортизации.Колонки.Добавить("ОбъектУчета", Новый ОписаниеТипов(МассивТиповОбъектовУчета));
	
	ТаблицаАмортизации.Колонки.Добавить("СчетНачисленияАмортизации", Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	
	ТаблицаАмортизации.Колонки.Добавить("Подразделение", БухгалтерскийУчетКлиентСерверПереопределяемый.ОписаниеТиповПодразделения());
	ТаблицаАмортизации.Колонки.Добавить("ПодразделениеЗатрат", БухгалтерскийУчетКлиентСерверПереопределяемый.ОписаниеТиповПодразделения());
	ТаблицаАмортизации.Колонки.Добавить("НаправлениеДеятельности", Новый ОписаниеТипов("СправочникСсылка.НаправленияДеятельности"));
	ТаблицаАмортизации.Колонки.Добавить("НаправлениеДеятельностиЗатрат", Новый ОписаниеТипов("СправочникСсылка.НаправленияДеятельности"));
	
	ТаблицаАмортизации.Колонки.Добавить("СпособОтраженияРасходов", Новый ОписаниеТипов("ДокументСсылка.ИзменениеПараметровОС"));
	ТаблицаАмортизации.Колонки.Добавить("СпособОтраженияРасходовЗаданДокументом", Новый ОписаниеТипов("Булево"));
	
	ТаблицаАмортизации.Колонки.Добавить("СуммаБУ", ОбщегоНазначения.ОписаниеТипаЧисло(15,2));
	ТаблицаАмортизации.Колонки.Добавить("СуммаНУ", ОбщегоНазначения.ОписаниеТипаЧисло(15,2));
	ТаблицаАмортизации.Колонки.Добавить("СуммаПР", ОбщегоНазначения.ОписаниеТипаЧисло(15,2));
	ТаблицаАмортизации.Колонки.Добавить("СуммаВР", ОбщегоНазначения.ОписаниеТипаЧисло(15,2));
	ТаблицаАмортизации.Колонки.Добавить("СуммаУменьшенияДооценки", ОбщегоНазначения.ОписаниеТипаЧисло(15,2));

	ТаблицаАмортизации.Колонки.Добавить("СтатьяРасходов", Новый ОписаниеТипов("ПланВидовХарактеристикСсылка.СтатьиРасходов"));
	ТаблицаАмортизации.Колонки.Добавить("АналитикаРасходов", Метаданные.ПланыВидовХарактеристик.СтатьиРасходов.Тип);
	
	ТаблицаАмортизации.Колонки.Добавить("НалоговоеНазначение",     Новый ОписаниеТипов("СправочникСсылка.НалоговыеНазначенияАктивовИЗатрат"));
	
	
	ТаблицаАмортизации.Колонки.Добавить("СуммаКапитальныхВложенийВключаемыхВРасходы", ОбщегоНазначения.ОписаниеТипаЧисло(15,2));
	ТаблицаАмортизации.Колонки.Добавить("Коэффициент", Новый ОписаниеТипов("Число"));
	
	Возврат ТаблицаАмортизации;
	
КонецФункции

Функция ПустаяТаблицаПараметровРасчетаАмортизации() Экспорт

	ПараметрыАмортизации = Новый ТаблицаЗначений;
	
	МассивТиповОбъектовУчета = Новый Массив;
	МассивТиповОбъектовУчета.Добавить(Тип("СправочникСсылка.ОбъектыЭксплуатации"));
	МассивТиповОбъектовУчета.Добавить(Тип("СправочникСсылка.НематериальныеАктивы"));
	ПараметрыАмортизации.Колонки.Добавить("ОбъектУчета", Новый ОписаниеТипов(МассивТиповОбъектовУчета));
	
	// БУ
	ПараметрыАмортизации.Колонки.Добавить("МетодНачисленияБУ", Новый ОписаниеТипов("ПеречислениеСсылка.СпособыНачисленияАмортизацииОС,ПеречислениеСсылка.СпособыНачисленияАмортизацииНМА"));
	ПараметрыАмортизации.Колонки.Добавить("СрокИспользованияБУ", ОбщегоНазначения.ОписаниеТипаЧисло(4,0));
	ПараметрыАмортизации.Колонки.Добавить("СтоимостьБУ", ОбщегоНазначения.ОписаниеТипаЧисло(15,2));
	ПараметрыАмортизации.Колонки.Добавить("СтоимостьНаНачалоГодаБУ", ОбщегоНазначения.ОписаниеТипаЧисло(15,2));
	ПараметрыАмортизации.Колонки.Добавить("ОбъемПродукцииБУ", ОбщегоНазначения.ОписаниеТипаЧисло(10,0));
	ПараметрыАмортизации.Колонки.Добавить("ВыработкаЗаМесяцБУ", ОбщегоНазначения.ОписаниеТипаЧисло(10,0));
	//ПараметрыАмортизации.Колонки.Добавить("КоэффициентАмортизацииБУ", ОбщегоНазначения.ОписаниеТипаЧисло(4,2));
	//ПараметрыАмортизации.Колонки.Добавить("КоэффициентУскоренияБУ", ОбщегоНазначения.ОписаниеТипаЧисло(5,2));
	ПараметрыАмортизации.Колонки.Добавить("КоэффициентПериода", ОбщегоНазначения.ОписаниеТипаЧисло(15,6));
	ПараметрыАмортизации.Колонки.Добавить("ФактическийСрокИспользования", ОбщегоНазначения.ОписаниеТипаЧисло(4));
	ПараметрыАмортизации.Колонки.Добавить("ОставшийсяСрокИспользования", ОбщегоНазначения.ОписаниеТипаЧисло(4));
	
	// НУ
	ПараметрыАмортизации.Колонки.Добавить("МетодНачисленияНУ",   Новый ОписаниеТипов("ПеречислениеСсылка.СпособыНачисленияАмортизацииОС,ПеречислениеСсылка.СпособыНачисленияАмортизацииНМА"));
	ПараметрыАмортизации.Колонки.Добавить("НалоговоеНазначение", Новый ОписаниеТипов("СправочникСсылка.НалоговыеНазначенияАктивовИЗатрат"));
	ПараметрыАмортизации.Колонки.Добавить("СрокИспользованияНУ", ОбщегоНазначения.ОписаниеТипаЧисло(4,0));
	ПараметрыАмортизации.Колонки.Добавить("СтоимостьНУ", ОбщегоНазначения.ОписаниеТипаЧисло(15,2));
	
		
	Возврат ПараметрыАмортизации;

КонецФункции
 
// Возвращает таблицу начисленной амортизации
//
// Параметры:
//  ТаблицаОбъектовУчета	 - ТаблицаЗначений	 - Таблица объектов для начисления амортизации
//  ТаблицаРеквизитов		 - ТаблицаЗначений	 - Таблица реквизитов документа
//  ДобавитьПараметрыРасчета - Булево			 - Истина, если требуется добавить параметры расчета в таблицу начисленной амортизации
//  Отказ					 - Булево			 - Признак удачного завершения функции начисления амортизации.
// 
// Возвращаемое значение:
//  ТаблицаЗначений - Таблица начисленных расходов по амортизации (формат представлен в функции ПустаяТаблицаЗначенийНачисленнойАмортизации).
//
Функция НачисленнаяАмортизация(ТаблицаОбъектовУчета, ТаблицаРеквизитов, ТаблицаПараметровРасчетаАмортизации, Отказ) Экспорт
	
	Возврат ПодготовитьТаблицуАмортизацияОС(ТаблицаОбъектовУчета, ТаблицаРеквизитов, ТаблицаПараметровРасчетаАмортизации, , Отказ);
	
КонецФункции

#КонецОбласти

#Область ОтражениеАмортизацииВРеглУчете

// Возвращает текст запроса временных таблиц для отражения амортизации в регламентированном учете.
//
// Параметры:
// 		ИмяДокумента - Строка - Строка имени метаданных.
//
// Возвращаемое значение:
// 		Строка - Текст запроса
//
Функция ТекстЗапросаВТОтраженияВРеглУчетеНачисленнойАмортизации(ИмяДокумента) Экспорт
	
	Возврат   ТекстЗапросаВТОтраженияВРеглУчетеНачисленнойАмортизацииУКР(ИмяДокумента);
	
	
КонецФункции

Функция ТекстЗапросаВТОтраженияВРеглУчетеНачисленнойАмортизацииУКР(ИмяДокумента) Экспорт
	
	ТекстыОтражения = Новый Массив;
	
	ТекстыОтражения.Добавить(ТекстЗапросаВТНачисленнаяАмортизация(ИмяДокумента));
	ТекстыОтражения.Добавить(ТекстЗапросаВТОбъектыДокумента(ИмяДокумента));
	ТекстыОтражения.Добавить(ТекстЗапросаВТСчетаОтражения(ИмяДокумента));
	ТекстыОтражения.Добавить(ТекстЗапросаВТПервоначальныеСведения(ИмяДокумента));
	ТекстыОтражения.Добавить(ТекстЗапросаВТМестонахожденияОС(ИмяДокумента));
		
	Возврат СтрСоединить(ТекстыОтражения, ОбщегоНазначенияУТ.РазделительЗапросовВПакете());
	
КонецФункции

// Возвращает текст запроса временной таблицы остатков по счетам учета
//
// Возвращаемое значение:
// 		Строка - Текст запроса
//
Функция ТекстЗапросаВТОтраженияВРеглУчетеОстаткиПоСчетам() Экспорт
	
	Возврат
	"ВЫБРАТЬ
	|	втНачисленнаяАмортизация.ОбъектУчета КАК ОбъектУчета,
	|	СУММА(ЕСТЬNULL(втНачисленнаяАмортизация.СуммаБУ, 0)) КАК СуммаБУ,
	|	СУММА(ЕСТЬNULL(втНачисленнаяАмортизация.СуммаНУ, 0)) КАК СуммаНУ
	|ПОМЕСТИТЬ втАмортизацияСгруппированная
	|ИЗ
	|	втНачисленнаяАмортизация КАК втНачисленнаяАмортизация
	|
	|СГРУППИРОВАТЬ ПО
	|	втНачисленнаяАмортизация.ОбъектУчета
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектУчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	втСчетаОтражения.СчетУчета КАК Счет
	|ПОМЕСТИТЬ втВсеСчета
	|ИЗ
	|	втСчетаОтражения КАК втСчетаОтражения
	|
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втСчетаОтражения.СчетНачисленияАмортизации
	|ИЗ
	|	втСчетаОтражения КАК втСчетаОтражения
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	втОбъектыДокумента.Организация КАК Организация,
	|	Местонахождение.Подразделение КАК Подразделение,
	|	ВЫБОР КОГДА &ИспользоватьУчетВнеоборотныхАктивовПоНаправлениямДеятельности
	|		ТОГДА втПервоначальныеСведения.НаправлениеДеятельности
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|	КОНЕЦ КАК НаправлениеДеятельности,
	|	втОбъектыДокумента.ОбъектУчета КАК ОбъектУчета
	|ПОМЕСТИТЬ втОбъектыСгруппированные
	|ИЗ
	|	втОбъектыДокумента КАК втОбъектыДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ втМестонахожденияОС КАК Местонахождение
	|		ПО втОбъектыДокумента.ОбъектУчета = Местонахождение.ОбъектУчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПервоначальныеСведения КАК втПервоначальныеСведения
	|		ПО втОбъектыДокумента.ОбъектУчета = втПервоначальныеСведения.ОбъектУчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыЭксплуатации КАК ОбъектыУчета
	|		ПО втОбъектыДокумента.ОбъектУчета = ОбъектыУчета.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Субконто1 КАК ОбъектУчета,
	|	ХозрасчетныйОстатки.Счет КАК Счет,
	|	ХозрасчетныйОстатки.СуммаОстаток КАК СуммаБУ,
	|	ХозрасчетныйОстатки.СуммаНУОстаток КАК СуммаНУ
	|ПОМЕСТИТЬ втОстаткиИДвиженияДокумента
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&ГраницаМесяцОкончание,
	|			Счет В
	|				(ВЫБРАТЬ
	|					Т.Счет
	|				ИЗ
	|					втВсеСчета КАК Т),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
	|			(Организация, Подразделение, НаправлениеДеятельности, Субконто1) В
	|				(ВЫБРАТЬ
	|					Т.Организация,
	|					Т.Подразделение,
	|					Т.НаправлениеДеятельности,
	|					Т.ОбъектУчета
	|				ИЗ
	|					втОбъектыСгруппированные КАК Т)) КАК ХозрасчетныйОстатки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйСубконто.Значение,
	|	Хозрасчетный.СчетДт,
	|	-Хозрасчетный.Сумма,
	|	-Хозрасчетный.СуммаНУДт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный КАК Хозрасчетный
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втВсеСчета КАК втВсеСчета
	|		ПО Хозрасчетный.СчетДт = втВсеСчета.Счет
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втОбъектыСгруппированные КАК втОбъектыСгруппированные
	|		ПО Хозрасчетный.Организация = втОбъектыСгруппированные.Организация
	|			И Хозрасчетный.ПодразделениеДт = втОбъектыСгруппированные.Подразделение
	|			И Хозрасчетный.НаправлениеДеятельностиДт = втОбъектыСгруппированные.НаправлениеДеятельности
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Субконто КАК ХозрасчетныйСубконто
	|		ПО Хозрасчетный.Регистратор = ХозрасчетныйСубконто.Регистратор
	|			И Хозрасчетный.НомерСтроки = ХозрасчетныйСубконто.НомерСтроки
	|			И (втОбъектыСгруппированные.ОбъектУчета = ХозрасчетныйСубконто.Значение)
	|			И (ХозрасчетныйСубконто.Вид = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства))
	|			И (ХозрасчетныйСубконто.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияБухгалтерии.Дебет))
	|ГДЕ
	|	Хозрасчетный.Регистратор = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйСубконто.Значение,
	|	Хозрасчетный.СчетКт,
	|	Хозрасчетный.Сумма,
	|	Хозрасчетный.СуммаНУКт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный КАК Хозрасчетный
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втВсеСчета КАК втВсеСчета
	|		ПО Хозрасчетный.СчетКт = втВсеСчета.Счет
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втОбъектыСгруппированные КАК втОбъектыСгруппированные
	|		ПО Хозрасчетный.Организация = втОбъектыСгруппированные.Организация
	|			И Хозрасчетный.ПодразделениеКт = втОбъектыСгруппированные.Подразделение
	|			И Хозрасчетный.НаправлениеДеятельностиКт = втОбъектыСгруппированные.НаправлениеДеятельности
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Субконто КАК ХозрасчетныйСубконто
	|		ПО Хозрасчетный.Регистратор = ХозрасчетныйСубконто.Регистратор
	|			И Хозрасчетный.НомерСтроки = ХозрасчетныйСубконто.НомерСтроки
	|			И (втОбъектыСгруппированные.ОбъектУчета = ХозрасчетныйСубконто.Значение)
	|			И (ХозрасчетныйСубконто.Вид = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства))
	|			И (ХозрасчетныйСубконто.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияБухгалтерии.Кредит))
	|ГДЕ
	|	Хозрасчетный.Регистратор = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втОстаткиИДвиженияДокумента.ОбъектУчета КАК ОбъектУчета,
	|	втОстаткиИДвиженияДокумента.Счет КАК Счет,
	|	СУММА(втОстаткиИДвиженияДокумента.СуммаБУ) КАК СуммаБУ,
	|	СУММА(втОстаткиИДвиженияДокумента.СуммаНУ) КАК СуммаНУ
	|ПОМЕСТИТЬ втХозрасчетныйОстатки
	|ИЗ
	|	втОстаткиИДвиженияДокумента КАК втОстаткиИДвиженияДокумента
	|
	|СГРУППИРОВАТЬ ПО
	|	втОстаткиИДвиженияДокумента.ОбъектУчета,
	|	втОстаткиИДвиженияДокумента.Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втОбъектыСгруппированные.ОбъектУчета КАК ОбъектУчета,
	|	ЕСТЬNULL(втОстаткиСчетУчета.СуммаБУ, 0) КАК ВосстановительнаяСтоимостьБУ,
	|	ЕСТЬNULL(втОстаткиСчетУчета.СуммаНУ, 0) КАК ВосстановительнаяСтоимостьНУ,
	|	ЕСТЬNULL(-втОстаткиСчетАмортизации.СуммаБУ, 0) + ЕСТЬNULL(втАмортизация.СуммаБУ, 0) КАК НакопленнаяАмортизацияБУ,
	|	ЕСТЬNULL(-втОстаткиСчетАмортизации.СуммаНУ, 0) + ЕСТЬNULL(втАмортизация.СуммаНУ, 0) КАК НакопленнаяАмортизацияНУ,
	|	ЕСТЬNULL(втОстаткиСчетУчета.СуммаБУ, 0) - (-ЕСТЬNULL(втОстаткиСчетАмортизации.СуммаБУ, 0) + ЕСТЬNULL(втАмортизация.СуммаБУ, 0)) КАК ОстаточнаяСтоимостьБУ,
	|	ЕСТЬNULL(втОстаткиСчетУчета.СуммаНУ, 0) - (-ЕСТЬNULL(втОстаткиСчетАмортизации.СуммаНУ, 0) + ЕСТЬNULL(втАмортизация.СуммаНУ, 0)) КАК ОстаточнаяСтоимостьНУ
	|ПОМЕСТИТЬ втОстаткиПоСчетам
	|ИЗ
	|	втОбъектыСгруппированные КАК втОбъектыСгруппированные
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПервоначальныеСведения КАК втПервоначальныеСведения
	|		ПО втОбъектыСгруппированные.ОбъектУчета = втПервоначальныеСведения.ОбъектУчета
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСчетаОтражения КАК втСчетаОтражения
	|		ПО втОбъектыСгруппированные.ОбъектУчета = втСчетаОтражения.ОбъектУчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ втАмортизацияСгруппированная КАК втАмортизация
	|		ПО втОбъектыСгруппированные.ОбъектУчета = втАмортизация.ОбъектУчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ втХозрасчетныйОстатки КАК втОстаткиСчетУчета
	|		ПО втОбъектыСгруппированные.ОбъектУчета = втОстаткиСчетУчета.ОбъектУчета
	|			И (втСчетаОтражения.СчетУчета = втОстаткиСчетУчета.Счет)
	|		ЛЕВОЕ СОЕДИНЕНИЕ втХозрасчетныйОстатки КАК втОстаткиСчетАмортизации
	|		ПО втОбъектыСгруппированные.ОбъектУчета = втОстаткиСчетАмортизации.ОбъектУчета
	|			И (втСчетаОтражения.СчетНачисленияАмортизации = втОстаткиСчетАмортизации.Счет)
	|ГДЕ
	|	НЕ (
	|		втОстаткиСчетУчета.ОбъектУчета ЕСТЬ NULL
	|		И втОстаткиСчетАмортизации.ОбъектУчета ЕСТЬ NULL
	|	)";
	
КонецФункции

// Возвращает текст запроса временной таблицы остатков резерва переоценки
//
// Возвращаемое значение:
// 		Строка - Текст запроса
//
Функция ТекстЗапросаВТОтраженияВРеглУчетеОстаткиРезерваПереоценки() Экспорт
	
	Возврат
	"ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ПОМЕСТИТЬ втСчетаДооценки
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ(ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДооценкаОсновныхСредств))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Субконто1 КАК ОбъектУчета,
	|	ХозрасчетныйОстатки.Счет КАК Счет,
	|	ХозрасчетныйОстатки.СуммаОстатокКт КАК СуммаБУ,
	|	ХозрасчетныйОстатки.СуммаНУОстатокКт КАК СуммаНУ
	|ПОМЕСТИТЬ втОстаткиДооценкиИДвиженияДокумента
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&ГраницаМесяцОкончание,
	|			Счет В
	|				(ВЫБРАТЬ
	|					Т.Счет
	|				ИЗ
	|					втСчетаДооценки КАК Т),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
	|			(Организация, Субконто1) В
	|				(ВЫБРАТЬ
	|					Т.Организация,
	|					Т.ОбъектУчета
	|				ИЗ
	|					втОбъектыСгруппированные КАК Т)) КАК ХозрасчетныйОстатки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйСубконто.Значение,
	|	Хозрасчетный.СчетДт,
	|	Хозрасчетный.Сумма,
	|	Хозрасчетный.СуммаНУДт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный КАК Хозрасчетный
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСчетаДооценки КАК втВсеСчета
	|		ПО Хозрасчетный.СчетДт = втВсеСчета.Счет
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втОбъектыСгруппированные КАК втОбъектыСгруппированные
	|		ПО Хозрасчетный.Организация = втОбъектыСгруппированные.Организация
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Субконто КАК ХозрасчетныйСубконто
	|		ПО Хозрасчетный.Регистратор = ХозрасчетныйСубконто.Регистратор
	|			И Хозрасчетный.НомерСтроки = ХозрасчетныйСубконто.НомерСтроки
	|			И (втОбъектыСгруппированные.ОбъектУчета = ХозрасчетныйСубконто.Значение)
	|			И (ХозрасчетныйСубконто.Вид = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства))
	|			И (ХозрасчетныйСубконто.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияБухгалтерии.Дебет))
	|ГДЕ
	|	Хозрасчетный.Регистратор = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйСубконто.Значение,
	|	Хозрасчетный.СчетКт,
	|	-Хозрасчетный.Сумма,
	|	-Хозрасчетный.СуммаНУКт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный КАК Хозрасчетный
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСчетаДооценки КАК втВсеСчета
	|		ПО Хозрасчетный.СчетКт = втВсеСчета.Счет
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втОбъектыСгруппированные КАК втОбъектыСгруппированные
	|		ПО Хозрасчетный.Организация = втОбъектыСгруппированные.Организация
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Субконто КАК ХозрасчетныйСубконто
	|		ПО Хозрасчетный.Регистратор = ХозрасчетныйСубконто.Регистратор
	|			И Хозрасчетный.НомерСтроки = ХозрасчетныйСубконто.НомерСтроки
	|			И (втОбъектыСгруппированные.ОбъектУчета = ХозрасчетныйСубконто.Значение)
	|			И (ХозрасчетныйСубконто.Вид = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства))
	|			И (ХозрасчетныйСубконто.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияБухгалтерии.Кредит))
	|ГДЕ
	|	Хозрасчетный.Регистратор = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втОстаткиДооценкиИДвиженияДокумента.ОбъектУчета КАК ОбъектУчета,
	|	втОстаткиДооценкиИДвиженияДокумента.Счет КАК Счет,
	|	СУММА(втОстаткиДооценкиИДвиженияДокумента.СуммаБУ) КАК СуммаБУ,
	|	СУММА(втОстаткиДооценкиИДвиженияДокумента.СуммаНУ) КАК СуммаНУ
	|ПОМЕСТИТЬ втОстаткиРезерваДооценки
	|ИЗ
	|	втОстаткиДооценкиИДвиженияДокумента КАК втОстаткиДооценкиИДвиженияДокумента
	|
	|СГРУППИРОВАТЬ ПО
	|	втОстаткиДооценкиИДвиженияДокумента.ОбъектУчета,
	|	втОстаткиДооценкиИДвиженияДокумента.Счет";
	
КонецФункции

// Возвращает текст запроса для отражения амортизации по документу в регламентированном учете.
//
// Возвращаемое значение:
// 		Строка - Текст запроса
//
Функция ТекстОтраженияВРеглУчетеНачисленнойАмортизации() Экспорт
	
	Возврат ТекстОтраженияВРеглУчетеНачисленнойАмортизацииУКР();
	
КонецФункции

// Возвращает текст запроса для отражения амортизации по документу в регламентированном учете.
//
// Возвращаемое значение:
// 		Строка - Текст запроса
//
Функция ТекстОтраженияВРеглУчетеНачисленнойАмортизацииУКР() Экспорт
	
	ТекстыОтражения = Новый Массив;
	ТекстыОтражения.Добавить(ТекстОтраженияАмортизация());
	ТекстыОтражения.Добавить(ТекстОтраженияПропорциональногоУменьшенияДопКапитала());
	ТекстыОтражения.Добавить(ТекстОтраженияАмортизацияНаПрочиеОперации());
	 
	Возврат СтрСоединить(ТекстыОтражения, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
КонецФункции


#КонецОбласти

#Область ОтражениеАмортизацииВОперативномУчете

// Выполняет проверку ошибок в заполнении способов отражения расходов по амортизации.
//
// Параметры:
// 		ЭтотОбъект - ДокументОбъект.АмортизацияОС - Объект документа амортизации
// 		Отказ - Булево - Возврат, признак ошибки при выполнения проверки.
//
Процедура ПроверитьСпособыОтраженияРасходовНаПрочиеАктивы(ЭтотОбъект, Отказ) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПорядокУчетаОСБУ.Организация КАК Организация,
	|	ПорядокУчетаОСБУ.ОсновноеСредство КАК ОбъектУчета
	|ПОМЕСТИТЬ втАктуальныеОбъекты
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(&Дата, Организация В (&Организация)) КАК ПорядокУчетаОСБУ
	|ГДЕ
	|	ПорядокУчетаОСБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПорядокУчетаОСБУ.Организация КАК Организация,
	|	ПорядокУчетаОСБУ.ОсновноеСредство КАК ОбъектУчета
	|ПОМЕСТИТЬ втОбъектыКНачислению
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(
	|			&Дата,
	|			(Организация, ОсновноеСредство) В
	|				(ВЫБРАТЬ
	|					Т.Организация,
	|					Т.ОбъектУчета
	|				ИЗ
	|					втАктуальныеОбъекты КАК Т)) КАК ПорядокУчетаОСБУ
	|ГДЕ
	|	(ПорядокУчетаОСБУ.НачислятьАмортизациюБУ
	|		ИЛИ ПорядокУчетаОСБУ.НачислятьАмортизациюНУ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПорядокУчетаОСБУ.ОсновноеСредство КАК ОбъектУчета,
	|	ЕСТЬNULL(ИзменениеПараметровОСОтражениеАмортизационныхРасходов.СтатьяРасходов, ПорядокУчетаОСБУ.СтатьяРасходовБУ) КАК СтатьяРасходов
	|ПОМЕСТИТЬ втСтатьиАмортизации
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(
	|			&Дата,
	|			(Организация, ОсновноеСредство) В
	|				(ВЫБРАТЬ
	|					Т.Организация,
	|					Т.ОбъектУчета
	|				ИЗ
	|					втОбъектыКНачислению КАК Т)) КАК ПорядокУчетаОСБУ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИзменениеПараметровОС.ОтражениеАмортизационныхРасходов КАК ИзменениеПараметровОСОтражениеАмортизационныхРасходов
	|		ПО ПорядокУчетаОСБУ.СпособОтраженияРасходовБУ = ИзменениеПараметровОСОтражениеАмортизационныхРасходов.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтатьиРасходов.Ссылка КАК СтатьяРасходов,
	|	втСтатьиАмортизации.ОбъектУчета КАК ОбъектУчета
	|ИЗ
	|	ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСтатьиАмортизации КАК втСтатьиАмортизации
	|		ПО (втСтатьиАмортизации.СтатьяРасходов = СтатьиРасходов.Ссылка)
	|ГДЕ
	|	СтатьиРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Дата", КонецМесяца(ЭтотОбъект.Дата));
	Запрос.УстановитьПараметр("Организация", ЭтотОбъект.Организация);
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		СообщениеОбОшибке =
		НСтр("ru='В способе отражения расходов по амортизации для ""%1"" использована статья ""%2"" с не поддерживаемым вариантом распределения расходов ""На прочие активы""
|Измените способ отражения расходов для данного актива с помощью документа ""Изменение параметров ОС""'
|;uk='У способі відображення витрат по амортизації для ""%1"" використана стаття ""%2"" з варіантом розподілу витрат ""На інші активи"", що не підтримується.
|Змінить спосіб відображення витрат для даного активу за допомогою документа ""Зміна параметрів ОС""
|'");
		
		СообщениеОбОшибке = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			СообщениеОбОшибке,
			Выборка.ОбъектУчета,
			Выборка.СтатьяРасходов);
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СообщениеОбОшибке,,,,
			Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

// Инициализирует параметры запроса данных проведения при отражении начисленной амортизации.
//
// Параметры:
//	Запрос			- Запрос 	- объект запроса к данным.
//	ДопПараметры	- Структура	- параметры, используемые для инициализации и получения данных документа.
//									см. описание ПроведениеДокументов.ДопПараметрыИнициализироватьДанныеДокументаДляПроведения().
//
Процедура ИнициализироватьПараметрыЗапросаПриОтраженииАмортизации(Запрос, ДопПараметры) Экспорт
	
	ДополнительныеСвойства = Неопределено;
	
	Если ДопПараметры = Неопределено
		Или Не ДопПараметры.Свойство("ДополнительныеСвойства", ДополнительныеСвойства)
		Или ДополнительныеСвойства = Неопределено
		Или Не ДополнительныеСвойства.Свойство("НачисленнаяАмортизация") Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ТаблицаАмортизации", ДополнительныеСвойства.НачисленнаяАмортизация);
	Запрос.УстановитьПараметр("Граница", Дата(1, 1, 1, 0, 0, 0));
	Запрос.УстановитьПараметр("КонецМесяца", Дата(1, 1, 1, 0, 0, 0));
	
	Запрос.УстановитьПараметр("СписаниеОстаточнойСтоимости", Ложь);
	Запрос.УстановитьПараметр("ЧастичнаяЛиквидация", Ложь);
	Запрос.УстановитьПараметр("ТекущееСостояниеОбъектов", Ложь);
	Запрос.УстановитьПараметр("ДатаСписанияОстаточнойСтоимости", Дата(1, 1, 1, 0, 0, 0));
	Запрос.УстановитьПараметр("Организация", Справочники.Организации.ПустаяСсылка());
	Запрос.УстановитьПараметр("Подразделение", Справочники.СтруктураПредприятия.ПустаяСсылка());
	Запрос.УстановитьПараметр("СтатьяРасходов", ПланыВидовХарактеристик.СтатьиРасходов.ПустаяСсылка());
	Запрос.УстановитьПараметр("АналитикаРасходов", Неопределено);
	
	Запрос.УстановитьПараметр(
		"ИспользоватьУчетПрочихДоходовРасходов",
		ПолучитьФункциональнуюОпцию("ИспользоватьУчетПрочихДоходовРасходов"));
	Запрос.УстановитьПараметр(
		"ИспользоватьУчетПрочихАктивовПассивов",
		ПолучитьФункциональнуюОпцию("ИспользоватьУчетПрочихАктивовПассивов"));
	Запрос.УстановитьПараметр(
		"ПогашениеУпрЗатрат",
		ПолучитьФункциональнуюОпцию("ИспользоватьАмортизациюБухгалтерскогоУчетаВУправленческомУчете"));
		
	Запрос.УстановитьПараметр("НачалоУчета2_4", ВнеоборотныеАктивыЛокализация.ДатаНачалаУчетаВнеоборотныхАктивов2_4());
	Запрос.УстановитьПараметр("ИспользоватьВнеоборотныеАктивы2_4", Константы.ИспользоватьВнеоборотныеАктивы2_4.Получить());
		
КонецПроцедуры

// Помещает в тексты запроса временную таблицу
//
// Параметры:
// 		ТекстыЗапроса - СписокЗначений - Список текстов запроса в который должны быть помещены временные таблицы
// 		ИменаТаблиц - Строка - Строка перечисленных через запятую временных таблиц, которые требуется поместить в ТекстыЗапроса.
//
Процедура ДобавитьВременныеТаблицы(ТекстыЗапроса, ИменаТаблиц) Экспорт
	
	СтруктураИменаТаблиц = Новый Структура(ИменаТаблиц);
	
	Если СтруктураИменаТаблиц.Свойство("НачисленнаяАмортизация") Тогда
		
		ВременнаяТаблицаНачисленнаяАмортизация(ТекстыЗапроса);
		
	ИначеЕсли СтруктураИменаТаблиц.Свойство("ТекущееСостояниеОбъектов") Тогда
		
		ВременнаяТаблицаТекущееСостояниеОбъектов(ТекстыЗапроса);
		
	ИначеЕсли СтруктураИменаТаблиц.Свойство("ПараметрыОбъектовУчета") Тогда
		
		ВременнаяТаблицаПараметрыОбъектовУчета(ТекстыЗапроса);
			
	КонецЕсли;
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаВтИсходныеПрочиеРасходы(ТекстыЗапроса, ДополнительныйТекстЗапроса)
	
	ИмяРегистра = "ВтИсходныеПрочиеРасходы";
	
	ВременнаяТаблицаОбъектыДокумента(ТекстыЗапроса);
	ВременнаяТаблицаНачисленнаяАмортизация(ТекстыЗапроса);
	ВременнаяТаблицаПараметрыОбъектовУчета(ТекстыЗапроса);
	ВременнаяТаблицаСтоимостиУпрПрочиеАктивы(ТекстыЗапроса);
	ВременнаяТаблицаСтоимостиУпрПрочиеРасходы(ТекстыЗапроса);
	ВременнаяТаблицаАмортизацияУпрПрочиеАктивы(ТекстыЗапроса);
	ВременнаяТаблицаАмортизацияУпрПрочиеРасходы(ТекстыЗапроса);
	ВременнаяТаблицаТекущееСостояниеОбъектов(ТекстыЗапроса);
	
	Разделитель = ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении();
	
	Текст = РегистрыНакопления.ПрочиеРасходы.ТекстОписаниеВтИсходныеПрочиеРасходы()
	+ Разделитель + ПрочиеРасходы_АмортизацияРеглСтоимости()
	+ Разделитель + ПрочиеРасходы_АмортизацияУпрСтоимостиИзПрочихАктивов()
	+ Разделитель + ПрочиеРасходы_АмортизацияУпрСтоимостиИзПрочихРасходов()
	+ Разделитель + ПрочиеРасходы_СписаниеОстаточнойУпрСтоимостиИзПрочихАктивов()
	+ Разделитель + ПрочиеРасходы_СписаниеОстаточнойУпрСтоимостиИзПрочихРасходов()
	+ ?(ЗначениеЗаполнено(ДополнительныйТекстЗапроса), Разделитель + ДополнительныйТекстЗапроса, "");
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаВтПрочиеРасходы(ТекстыЗапроса, ДополнительныйТекстЗапроса)
	
	ИмяРегистра = "ВтПрочиеРасходы";
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтИсходныеПрочиеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтИсходныеПрочиеРасходы(ТекстыЗапроса, ДополнительныйТекстЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПрочиеРасходы.ТекстЗапросаТаблицаВтПрочиеРасходы();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

// Текст запроса таблицы движений амортизации в прочих расходах при проведении документа начисления амортизации.
//
// Параметры:
// 		ТекстыЗапроса - СписокЗначений - Список текстов запроса
// 		Регистры - Строка, Структура, Неопределено - список регистров, разделенных запятой, или структура, в ключах которой - имена регистров требующих заполнения
// 		ДополнительныйТекстЗапроса - Строка - Строка дополнительного текста запроса объединения.
//
Процедура ПрочиеРасходы(ТекстыЗапроса, Регистры, ДополнительныйТекстЗапроса = Неопределено) Экспорт
	
	ИмяРегистра = "ПрочиеРасходы";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтПрочиеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтПрочиеРасходы(ТекстыЗапроса, ДополнительныйТекстЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПрочиеРасходы.ТекстЗапросаТаблицаПрочиеРасходы();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра, Истина);
		
КонецПроцедуры

Процедура ТекстЗапросаТаблицаВтИсходныеПартииПрочихРасходов(ТекстыЗапроса, ДополнительныйТекстЗапроса)
	
	ИмяРегистра = "ВтИсходныеПартииПрочихРасходов";
	
	ВременнаяТаблицаОбъектыДокумента(ТекстыЗапроса);
	ВременнаяТаблицаНачисленнаяАмортизация(ТекстыЗапроса);
	ВременнаяТаблицаПараметрыОбъектовУчета(ТекстыЗапроса);
	ВременнаяТаблицаСтоимостиУпрПрочиеАктивы(ТекстыЗапроса);
	ВременнаяТаблицаСтоимостиУпрПрочиеРасходы(ТекстыЗапроса);
	ВременнаяТаблицаАмортизацияУпрПрочиеАктивы(ТекстыЗапроса);
	ВременнаяТаблицаАмортизацияУпрПрочиеРасходы(ТекстыЗапроса);
	ВременнаяТаблицаТекущееСостояниеОбъектов(ТекстыЗапроса);
	
	Разделитель = ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении();
	
	ТекстЗапроса = РегистрыНакопления.ПартииПрочихРасходов.ТекстОписаниеВтИсходныеПартииПрочихРасходов()
	+ Разделитель + ПартииПрочихРасходов_АмортизацияРеглСтоимости()
	+ Разделитель + ПартииПрочихРасходов_АмортизацияУпрСтоимостиИзПрочихАктивов()
	+ Разделитель + ПартииПрочихРасходов_АмортизацияУпрСтоимостиИзПрочихРасходов()
	+ Разделитель + ПартииПрочихРасходов_СписаниеОстаточнойУпрСтоимостиИзПрочихАктивов()
	+ Разделитель + ПартииПрочихРасходов_СписаниеОстаточнойУпрСтоимостиИзПрочихРасходов()
	+ ?(ЗначениеЗаполнено(ДополнительныйТекстЗапроса), Разделитель + ДополнительныйТекстЗапроса, "");
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаВтПартииПрочихРасходов(ТекстыЗапроса, ДополнительныйТекстЗапроса)
	
	ИмяРегистра = "ВтПартииПрочихРасходов";
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтИсходныеПартииПрочихРасходов", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтИсходныеПартииПрочихРасходов(ТекстыЗапроса, ДополнительныйТекстЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПартииПрочихРасходов.ТекстЗапросаТаблицаВтПартииПрочихРасходов();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

// Текст запроса таблицы движений амортизации в партиях прочих расходов при проведении документа начисления амортизации.
//
// Параметры:
// 		ТекстыЗапроса - СписокЗначений - Список текстов запроса
// 		Регистры - Строка, Структура, Неопределено - список регистров, разделенных запятой, или структура, в ключах которой - имена регистров требующих заполнения.
// 		ДополнительныйТекстЗапроса - Строка - Строка дополнительного текста запроса объединения.
//
Процедура ПартииПрочихРасходов(ТекстыЗапроса, Регистры, ДополнительныйТекстЗапроса = Неопределено) Экспорт
	
	ИмяРегистра = "ПартииПрочихРасходов";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтПартииПрочихРасходов", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтПартииПрочихРасходов(ТекстыЗапроса, ДополнительныйТекстЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПартииПрочихРасходов.ТекстЗапросаТаблицаПартииПрочихРасходов();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра, Истина);
	
КонецПроцедуры

Процедура ПереоценкаОСБухгалтерскийУчет(ТекстыЗапроса, Регистры, ДополнительныйТекстЗапроса = Неопределено) Экспорт

	
	ИмяРегистра = "ПереоценкаОСБухгалтерскийУчет";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаНачисленнаяАмортизация(ТекстыЗапроса);

	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица УменьшенияСтоимостиДопКапитала
	|"+ ?(ЗначениеЗаполнено(ДополнительныйТекстЗапроса), ДополнительныйТекстЗапроса + Символы.ПС + "ОБЪЕДИНИТЬ ВСЕ" + Символы.ПС, "") +
	"ВЫБРАТЬ // Уценка восстановительной стоимости
	|	&Ссылка КАК Регистратор,
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	
	|	НачисленнаяАмортизация.Организация КАК Организация,
	|	НачисленнаяАмортизация.ОбъектУчета КАК ОсновноеСредство,
	|	
	|	НачисленнаяАмортизация.СуммаУменьшенияДооценки КАК СуммаПереоценки
	|ИЗ
	|	втНачисленнаяАмортизация КАК НачисленнаяАмортизация
	|		
	|ГДЕ
	|	НачисленнаяАмортизация.СуммаУменьшенияДооценки > 0
	|
	|";
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);

КонецПроцедуры


// Текст запроса таблицы движений прочих активов/пассивов при проведении документа начисления амортизации.
//
// Параметры:
// 		ТекстыЗапроса - СписокЗначений - Список текстов запроса
// 		Регистры - Строка, Структура, Неопределено - список регистров, разделенных запятой, или структура, в ключах которой - имена регистров требующих заполнения
// 		ДополнительныйТекстЗапроса - Строка - Строка дополнительного текста запроса объединения.
//
Процедура ПрочиеАктивыПассивы(ТекстыЗапроса, Регистры, ДополнительныйТекстЗапроса=Неопределено) Экспорт
	
	ИмяРегистра = "ПрочиеАктивыПассивы";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаОбъектыДокумента(ТекстыЗапроса);
	ВременнаяТаблицаСтоимостиУпрПрочиеАктивы(ТекстыЗапроса);
	ВременнаяТаблицаАмортизацияУпрПрочиеАктивы(ТекстыЗапроса);
	ВременнаяТаблицаТекущееСостояниеОбъектов(ТекстыЗапроса);
	
	Разделитель = ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении();
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица ПрочиеАктивыПассивы
	|" + ПрочиеАктивыПассивы_ПустаяТаблица()
	+ Разделитель + ПрочиеАктивыПассивы_АмортизацияУпрСтоимостиИзПрочихАктивов()
	+ Разделитель + ПрочиеАктивыПассивы_СписаниеОстаточнойУпрСтоимостиИзПрочихАктивов()
	+ ?(ЗначениеЗаполнено(ДополнительныйТекстЗапроса), Разделитель + ДополнительныйТекстЗапроса, "")
	+ Разделитель + РегистрыНакопления.ПрочиеАктивыПассивы.ТекстЗапросаТаблицаПрочиеАктивыПассивы();
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);
	
КонецПроцедуры

// Текст запроса таблицы порядка отражения прочих операций по начисленной амортизации.
//
// Параметры:
// 		ТекстыЗапроса - СписокЗначений - Список текстов запроса
// 		Регистры - Строка, Структура, Неопределено - список регистров, разделенных запятой, или структура, в ключах которой - имена регистров требующих заполнения.
//
Процедура ПорядокОтраженияПрочихОпераций(ТекстыЗапроса, Регистры) Экспорт
	
	ИмяРегистра = "ПорядокОтраженияПрочихОпераций";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаНачисленнаяАмортизация(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица ПорядокОтраженияПрочихОпераций
	|" +
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	&Период КАК Дата,
	|	&Организация КАК Организация,
	|	&Ссылка КАК Документ,
	|	"""" КАК ИдентификаторСтроки
	|ИЗ
	|	ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиПрочихОпераций
	|	
	|ГДЕ
	|	СтатьиПрочихОпераций.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|	И(
	|		СтатьиПрочихОпераций.Ссылка = &СтатьяРасходов
	|		ИЛИ СтатьиПрочихОпераций.Ссылка В (ВЫБРАТЬ Т.СтатьяРасходов ИЗ втНачисленнаяАмортизация КАК Т)
	|	)
	|";
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);
	
КонецПроцедуры

// Текст запроса таблицы отражения документа в регл. учете
//
// Параметры:
// 		ТекстыЗапроса - СписокЗначений - Список текстов запроса
// 		Регистры - Строка, Структура, Неопределено - список регистров, разделенных запятой, или структура, в ключах которой - имена регистров требующих заполнения.
// 		ДополнительныйТекстЗапроса - Строка - Строка дополнительного текста запроса объединения.
//
Процедура ОтражениеДокументовВРеглУчете(ТекстыЗапроса, Регистры, ДополнительныйТекстЗапроса=Неопределено) Экспорт
	
	ИмяРегистра = "ОтражениеДокументовВРеглУчете";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаНачисленнаяАмортизация(ТекстыЗапроса);
	
	Разделитель = ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении();
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица ОтражениеДокументовВРеглУчете
	|" + ?(ЗначениеЗаполнено(ДополнительныйТекстЗапроса), ДополнительныйТекстЗапроса + Символы.ПС + "ОБЪЕДИНИТЬ ВСЕ" + Символы.ПС, "") +
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	
	|	&Организация КАК Организация,
	|	НАЧАЛОПЕРИОДА(&Период, ДЕНЬ) КАК ДатаОтражения
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&Период КАК Период,
	|	
	|	НачисленнаяАмортизация.Организация,
	|	НАЧАЛОПЕРИОДА(&Период, ДЕНЬ) КАК ДатаОтражения
	|ИЗ
	|	втНачисленнаяАмортизация КАК НачисленнаяАмортизация
	|ГДЕ
	|	НачисленнаяАмортизация.Организация <> &Организация
	|"
	;
		
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область БлокировкаПриОбновленииИБ

// Заполняет входящие данные расчета и отражения амортизации, необходимые для проверки выполненных обновлений ИБ.
//
// Параметры:
// 		ВходящиеДанные - Соответствие - Данные расчета и отражения амортизации
// 			* Ключ - Строка, ОбъектМетаданныхКонфигурации - входящие данные, используемые  операцией
// 			* Значение - см. ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки, параметр Отбор.
//
Процедура ЗаполнитьВходящиеДанныеАмортизации(ВходящиеДанные) Экспорт
	
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ПрочиеРасходы);
	
	ВходящиеДанные.Вставить(Метаданные.РегистрыБухгалтерии.Хозрасчетный);
	
	ВходящиеДанные.Вставить(Метаданные.РегистрыСведений.МестонахождениеОС);
	ВходящиеДанные.Вставить(Метаданные.РегистрыСведений.ПорядокУчетаОС);
	ВходящиеДанные.Вставить(Метаданные.РегистрыСведений.ПорядокУчетаОСБУ);
	ВходящиеДанные.Вставить(Метаданные.РегистрыСведений.ПараметрыАмортизацииОСБУ);
	ВходящиеДанные.Вставить(Метаданные.РегистрыСведений.ПервоначальныеСведенияОС);
	ВходящиеДанные.Вставить(Метаданные.РегистрыСведений.НаработкиОбъектовЭксплуатации);
	
	ВходящиеДанные.Вставить(Метаданные.Справочники.ГодовыеГрафикиАмортизацииОС);
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

// Создает временную таблицу накопленных стоимостей для указанного менеджера в разрезе основных средств и документов
// 		Переданный менеджер временных таблиц должен содержать таблицу "втОбъектыДокументов",
// 		содержащую поля "Ссылка", "ОсновноеСредство", "Дата", "Организация".
//
// Параметры:
// 		МенеджерВТ - МенеджерВременныхТаблиц - Менеджер временных таблиц исходного запроса.
//
Процедура СоздатьВременнуюТаблицуСостоянияОС(МенеджерВТ) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	втОбъектыДокументов.Организация,
	|	втОбъектыДокументов.ОсновноеСредство,
	|	МАКСИМУМ(ПорядокУчетаОС.Период) КАК Период,
	|	МАКСИМУМ(СчетаУчетаЦФ.Период) КАК ПериодЦФ,
	|	втОбъектыДокументов.Ссылка
	|ПОМЕСТИТЬ втПорядокУчетаОСПериод
	|ИЗ
	|	втОбъектыДокументов КАК втОбъектыДокументов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОС КАК ПорядокУчетаОС
	|		ПО втОбъектыДокументов.ОсновноеСредство = ПорядокУчетаОС.ОсновноеСредство
	|			И втОбъектыДокументов.Организация = ПорядокУчетаОС.Организация
	|			И втОбъектыДокументов.Ссылка <> ПорядокУчетаОС.Регистратор
	|			И втОбъектыДокументов.Дата > ПорядокУчетаОС.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыЦелевогоФинансированияОС КАК СчетаУчетаЦФ
	|		ПО втОбъектыДокументов.ОсновноеСредство = СчетаУчетаЦФ.ОсновноеСредство
	|			И втОбъектыДокументов.Ссылка <> СчетаУчетаЦФ.Регистратор
	|			И втОбъектыДокументов.Дата > СчетаУчетаЦФ.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	втОбъектыДокументов.ОсновноеСредство,
	|	втОбъектыДокументов.Организация,
	|	втОбъектыДокументов.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втПорядокУчетаОСПериод.Ссылка,
	|	втПорядокУчетаОСПериод.ОсновноеСредство,
	|	ПорядокУчетаОС.НаправлениеДеятельности,
	|	ЕСТЬNULL(СчетУчетаСтоимости.СчетУчета, ЕСТЬNULL(ПорядокУчетаОС.СчетУчета, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))) КАК СчетУчета,
	|	ЕСТЬNULL(СчетУчетаАмортизации.СчетУчета, ЕСТЬNULL(ПорядокУчетаОС.СчетНачисленияАмортизации, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))) КАК СчетАмортизации,
	|	ЕСТЬNULL(СчетУчетаСтоимостиЦФ.СчетУчета, ЕСТЬNULL(СчетаУчетаЦФ.СчетУчета, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))) КАК СчетУчетаЦФ,
	|	ЕСТЬNULL(СчетУчетаАмортизацииЦФ.СчетУчета, ЕСТЬNULL(СчетаУчетаЦФ.СчетАмортизации, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))) КАК СчетАмортизацииЦФ
	|ПОМЕСТИТЬ втПорядокУчетаОС
	|ИЗ
	|	втПорядокУчетаОСПериод КАК втПорядокУчетаОСПериод
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОС КАК ПорядокУчетаОС
	|		ПО втПорядокУчетаОСПериод.ОсновноеСредство = ПорядокУчетаОС.ОсновноеСредство
	|			И втПорядокУчетаОСПериод.Организация = ПорядокУчетаОС.Организация
	|			И втПорядокУчетаОСПериод.Период = ПорядокУчетаОС.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыЦелевогоФинансированияОС КАК СчетаУчетаЦФ
	|		ПО втПорядокУчетаОСПериод.ОсновноеСредство = СчетаУчетаЦФ.ОсновноеСредство
	|			И втПорядокУчетаОСПериод.Период = СчетаУчетаЦФ.Период
	|			И (СчетаУчетаЦФ.ПрименениеЦелевогоФинансирования)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОтраженияНаСчетахУчета КАК СчетУчетаСтоимости
	|		ПО СчетУчетаСтоимости.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА)
	|			И СчетУчетаСтоимости.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			И СчетУчетаСтоимости.АналитикаУчета = ПорядокУчетаОС.ГруппаФинансовогоУчета
	|			И СчетУчетаСтоимости.МестоУчета = НЕОПРЕДЕЛЕНО
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОтраженияНаСчетахУчета КАК СчетУчетаСтоимостиЦФ
	|		ПО СчетУчетаСтоимостиЦФ.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА_ЦФ)
	|			И СчетУчетаСтоимостиЦФ.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			И СчетУчетаСтоимостиЦФ.АналитикаУчета = ПорядокУчетаОС.ГруппаФинансовогоУчета
	|			И СчетУчетаСтоимостиЦФ.МестоУчета = НЕОПРЕДЕЛЕНО
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОтраженияНаСчетахУчета КАК СчетУчетаАмортизации
	|		ПО СчетУчетаАмортизации.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА)
	|			И СчетУчетаАмортизации.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			И СчетУчетаАмортизации.АналитикаУчета = ПорядокУчетаОС.ГруппаФинансовогоУчета
	|			И СчетУчетаАмортизации.МестоУчета = НЕОПРЕДЕЛЕНО
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОтраженияНаСчетахУчета КАК СчетУчетаАмортизацииЦФ
	|		ПО СчетУчетаАмортизацииЦФ.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА_ЦФ)
	|			И СчетУчетаАмортизацииЦФ.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			И СчетУчетаАмортизацииЦФ.АналитикаУчета = ПорядокУчетаОС.ГруппаФинансовогоУчета
	|			И СчетУчетаАмортизацииЦФ.МестоУчета = НЕОПРЕДЕЛЕНО
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиОборотыСчетУчета.Период КАК Период,
	|	ОстаткиОборотыСчетУчета.Регистратор КАК Регистратор,
	|	ОстаткиОборотыСчетУчета.Организация КАК Организация,
	|	ОстаткиОборотыСчетУчета.Субконто1 КАК ОсновноеСредство,
	|	ОстаткиОборотыСчетУчета.Счет КАК Счет,
	|	ОстаткиОборотыСчетУчета.СуммаНачальныйОстатокДт КАК СуммаНачальныйОстатокДт,
	|	ОстаткиОборотыСчетУчета.СуммаНачальныйОстатокКт КАК СуммаНачальныйОстатокКт,
	|	ОстаткиОборотыСчетУчета.СуммаКонечныйОстатокДт КАК СуммаКонечныйОстатокДт,
	|	ОстаткиОборотыСчетУчета.СуммаКонечныйОстатокКт КАК СуммаКонечныйОстатокКт
	|ПОМЕСТИТЬ втСтоимостиЗаписи
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(
	|			,
	|			,
	|			Регистратор,
	|			Движения,
	|			Счет В
	|				(ВЫБРАТЬ
	|					Т.СчетУчета
	|				ИЗ
	|					втПорядокУчетаОС КАК Т
	|			
	|				ОБЪЕДИНИТЬ ВСЕ
	|			
	|				ВЫБРАТЬ
	|					Т.СчетАмортизации
	|				ИЗ
	|					втПорядокУчетаОС КАК Т
	|			
	|				ОБЪЕДИНИТЬ ВСЕ
	|			
	|				ВЫБРАТЬ
	|					Т.СчетУчетаЦФ
	|				ИЗ
	|					втПорядокУчетаОС КАК Т
	|			
	|				ОБЪЕДИНИТЬ ВСЕ
	|			
	|				ВЫБРАТЬ
	|					Т.СчетАмортизацииЦФ
	|				ИЗ
	|					втПорядокУчетаОС КАК Т),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
	|			(Организация, Субконто1) В
	|				(ВЫБРАТЬ
	|					Т.Организация,
	|					Т.ОсновноеСредство
	|				ИЗ
	|					втОбъектыДокументов КАК Т)) КАК ОстаткиОборотыСчетУчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втОбъектыДокументов.Организация КАК Организация,
	|	втОбъектыДокументов.ОсновноеСредство КАК ОсновноеСредство,
	|	втСтоимостиЗаписи.Счет КАК Счет,
	|	МАКСИМУМ(втСтоимостиЗаписи.Период) КАК Период,
	|	втОбъектыДокументов.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ втСтоимостиПериод
	|ИЗ
	|	втОбъектыДокументов КАК втОбъектыДокументов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСтоимостиЗаписи КАК втСтоимостиЗаписи
	|		ПО втОбъектыДокументов.ОсновноеСредство = втСтоимостиЗаписи.ОсновноеСредство
	|			И втОбъектыДокументов.Организация = втСтоимостиЗаписи.Организация
	|			И втОбъектыДокументов.Дата >= втСтоимостиЗаписи.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	втОбъектыДокументов.ОсновноеСредство,
	|	втОбъектыДокументов.Организация,
	|	втСтоимостиЗаписи.Счет,
	|	втОбъектыДокументов.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втСтоимостиПериод.Ссылка,
	|	втСтоимостиЗаписи.ОсновноеСредство,
	|	втСтоимостиЗаписи.Счет КАК Счет,
	|	ВЫБОР
	|		КОГДА втСтоимостиПериод.Ссылка = втСтоимостиЗаписи.Регистратор
	|			ТОГДА втСтоимостиЗаписи.СуммаНачальныйОстатокДт
	|		ИНАЧЕ втСтоимостиЗаписи.СуммаКонечныйОстатокДт
	|	КОНЕЦ КАК СуммаОстатокДт,
	|	ВЫБОР
	|		КОГДА втСтоимостиПериод.Ссылка = втСтоимостиЗаписи.Регистратор
	|			ТОГДА втСтоимостиЗаписи.СуммаНачальныйОстатокКт
	|		ИНАЧЕ втСтоимостиЗаписи.СуммаКонечныйОстатокКт
	|	КОНЕЦ КАК СуммаОстатокКт
	|ПОМЕСТИТЬ втСтоимости
	|ИЗ
	|	втСтоимостиПериод КАК втСтоимостиПериод
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСтоимостиЗаписи КАК втСтоимостиЗаписи
	|		ПО втСтоимостиПериод.ОсновноеСредство = втСтоимостиЗаписи.ОсновноеСредство
	|			И втСтоимостиПериод.Организация = втСтоимостиЗаписи.Организация
	|			И втСтоимостиПериод.Счет = втСтоимостиЗаписи.Счет
	|			И втСтоимостиПериод.Период = втСтоимостиЗаписи.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втОбъектыДокументов.Организация,
	|	втОбъектыДокументов.ОсновноеСредство,
	|	МАКСИМУМ(ПервоначальныеСведения.Период) КАК Период,
	|	втОбъектыДокументов.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ втПервоначальныеСведенияПериод
	|ИЗ
	|	втОбъектыДокументов КАК втОбъектыДокументов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОС КАК ПервоначальныеСведения
	|		ПО втОбъектыДокументов.ОсновноеСредство = ПервоначальныеСведения.ОсновноеСредство
	|			И втОбъектыДокументов.Организация = ПервоначальныеСведения.Организация
	|			И втОбъектыДокументов.Ссылка <> ПервоначальныеСведения.Регистратор
	|			И втОбъектыДокументов.Дата > ПервоначальныеСведения.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	втОбъектыДокументов.ОсновноеСредство,
	|	втОбъектыДокументов.Организация,
	|	втОбъектыДокументов.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втПервоначальныеСведенияПериод.Ссылка КАК Ссылка,
	|	ПервоначальныеСведения.ОсновноеСредство КАК ОсновноеСредство,
	|	ПервоначальныеСведения.МетодНачисленияАмортизацииБУ КАК СпособНачисленияАмортизации,
	|	ПервоначальныеСведения.МетодНачисленияАмортизацииНУ КАК СпособНачисленияАмортизацииНУ,
	|	ПервоначальныеСведения.ДатаВводаВЭксплуатациюБУ КАК ДатаПринятияКУчету
	|ПОМЕСТИТЬ втПервоначальныеСведения
	|ИЗ
	|	втПервоначальныеСведенияПериод КАК втПервоначальныеСведенияПериод
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОС КАК ПервоначальныеСведения
	|		ПО втПервоначальныеСведенияПериод.ОсновноеСредство = ПервоначальныеСведения.ОсновноеСредство
	|			И втПервоначальныеСведенияПериод.Организация = ПервоначальныеСведения.Организация
	|			И втПервоначальныеСведенияПериод.Период = ПервоначальныеСведения.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втОбъектыДокументов.Организация,
	|	втОбъектыДокументов.ОсновноеСредство,
	|	МАКСИМУМ(МестонахождениеОС.Период) КАК Период,
	|	втОбъектыДокументов.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ втМестонахождениеОСПериод
	|ИЗ
	|	втОбъектыДокументов КАК втОбъектыДокументов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОС КАК МестонахождениеОС
	|		ПО втОбъектыДокументов.ОсновноеСредство = МестонахождениеОС.ОсновноеСредство
	|			И втОбъектыДокументов.Организация = МестонахождениеОС.Организация
	|			И втОбъектыДокументов.Ссылка <> МестонахождениеОС.Регистратор
	|			И втОбъектыДокументов.Дата > МестонахождениеОС.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	втОбъектыДокументов.ОсновноеСредство,
	|	втОбъектыДокументов.Организация,
	|	втОбъектыДокументов.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втМестонахождениеОСПериод.Ссылка КАК Ссылка,
	|	МестонахождениеОС.ОсновноеСредство КАК ОсновноеСредство,
	|	МестонахождениеОС.МОЛ КАК МОЛ,
	|	МестонахождениеОС.Местонахождение КАК Местонахождение
	|ПОМЕСТИТЬ втМестонахождениеОС
	|ИЗ
	|	втМестонахождениеОСПериод КАК втМестонахождениеОСПериод
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОС КАК МестонахождениеОС
	|		ПО втМестонахождениеОСПериод.ОсновноеСредство = МестонахождениеОС.ОсновноеСредство
	|			И втМестонахождениеОСПериод.Организация = МестонахождениеОС.Организация
	|			И втМестонахождениеОСПериод.Период = МестонахождениеОС.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втОбъектыДокументов.Организация,
	|	втОбъектыДокументов.ОсновноеСредство,
	|	МАКСИМУМ(ПорядокУчетаОСБУ.Период) КАК Период,
	|	втОбъектыДокументов.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ втПорядокУчетаОСБУПериод
	|ИЗ
	|	втОбъектыДокументов КАК втОбъектыДокументов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
	|		ПО втОбъектыДокументов.ОсновноеСредство = ПорядокУчетаОСБУ.ОсновноеСредство
	|			И втОбъектыДокументов.Организация = ПорядокУчетаОСБУ.Организация
	|			И втОбъектыДокументов.Ссылка <> ПорядокУчетаОСБУ.Регистратор
	|			И втОбъектыДокументов.Дата > ПорядокУчетаОСБУ.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	втОбъектыДокументов.ОсновноеСредство,
	|	втОбъектыДокументов.Организация,
	|	втОбъектыДокументов.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втПорядокУчетаОСБУПериод.Ссылка КАК Ссылка,
	|	ПорядокУчетаОСБУ.ОсновноеСредство КАК ОсновноеСредство
	
	|ПОМЕСТИТЬ втПорядокУчетаОСБУ
	|ИЗ
	|	втПорядокУчетаОСБУПериод КАК втПорядокУчетаОСБУПериод
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
	|		ПО втПорядокУчетаОСБУПериод.ОсновноеСредство = ПорядокУчетаОСБУ.ОсновноеСредство
	|			И втПорядокУчетаОСБУПериод.Организация = ПорядокУчетаОСБУ.Организация
	|			И втПорядокУчетаОСБУПериод.Период = ПорядокУчетаОСБУ.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втОбъектыДокументов.Организация,
	|	втОбъектыДокументов.ОсновноеСредство,
	|	МАКСИМУМ(ПараметрыАмортизации.Период) КАК Период,
	|	втОбъектыДокументов.Ссылка
	|ПОМЕСТИТЬ втПараметрыАмортизацииПериод
	|ИЗ
	|	втОбъектыДокументов КАК втОбъектыДокументов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыАмортизацииОСБУ КАК ПараметрыАмортизации
	|		ПО втОбъектыДокументов.ОсновноеСредство = ПараметрыАмортизации.ОсновноеСредство
	|			И втОбъектыДокументов.Организация = ПараметрыАмортизации.Организация
	|			И втОбъектыДокументов.Ссылка <> ПараметрыАмортизации.Регистратор
	|			И втОбъектыДокументов.Дата > ПараметрыАмортизации.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	втОбъектыДокументов.ОсновноеСредство,
	|	втОбъектыДокументов.Организация,
	|	втОбъектыДокументов.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втПараметрыАмортизацииПериод.Ссылка КАК Ссылка,
	|	ПараметрыАмортизации.ОсновноеСредство КАК ОсновноеСредство,
	|	ПараметрыАмортизации.СрокПолезногоИспользованияБУ КАК СрокПолезногоИспользования
	|ПОМЕСТИТЬ втПараметрыАмортизации
	|ИЗ
	|	втПараметрыАмортизацииПериод КАК втПараметрыАмортизацииПериод
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыАмортизацииОСБУ КАК ПараметрыАмортизации
	|		ПО втПараметрыАмортизацииПериод.ОсновноеСредство = ПараметрыАмортизации.ОсновноеСредство
	|			И втПараметрыАмортизацииПериод.Организация = ПараметрыАмортизации.Организация
	|			И втПараметрыАмортизацииПериод.Период = ПараметрыАмортизации.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втОбъектыДокументов.Ссылка КАК Ссылка,
	|
	|	втОбъектыДокументов.ОсновноеСредство КАК ОсновноеСредство,
	|	втОбъектыДокументов.ОсновноеСредство.ИнвентарныйНомер КАК ИнвентарныйНомер,
	|
	|	ЕСТЬNULL(втПервоначальныеСведения.СпособНачисленияАмортизации, """") КАК СпособНачисленияАмортизации,
	|	ЕСТЬNULL(втПервоначальныеСведения.СпособНачисленияАмортизацииНУ, """") КАК СпособНачисленияАмортизацииНУ,
	|	ЕСТЬNULL(втПервоначальныеСведения.ДатаПринятияКУчету, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) КАК ДатаПринятияКУчету,
	|
	|	ЕСТЬNULL(втМестонахождениеОС.МОЛ, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)) КАК МОЛ,
	|	ЕСТЬNULL(втМестонахождениеОС.Местонахождение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)) КАК Местонахождение,
	|
	|	ЕСТЬNULL(втПорядокУчетаОС.СчетУчета, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)) КАК СчетУчета,
	|	ЕСТЬNULL(втПорядокУчетаОС.СчетАмортизации, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)) КАК СчетАмортизации,
	|
	|	ЕСТЬNULL(втПараметрыАмортизации.СрокПолезногоИспользования, 0) КАК СрокПолезногоИспользования,
	|
	|	ЕСТЬNULL(втНакопленнаяСтоимость.СуммаОстатокДт, 0) + ЕСТЬNULL(втНакопленнаяСтоимостьЦФ.СуммаОстатокДт, 0) КАК НакопленнаяСтоимость,
	|	ЕСТЬNULL(втНакопленнаяАмортизация.СуммаОстатокКт, 0) + ЕСТЬNULL(втНакопленнаяАмортизацияЦФ.СуммаОстатокКт, 0) КАК НакопленнаяАмортизация,
	|	ЕСТЬNULL(втНакопленнаяСтоимость.СуммаОстатокДт, 0) + ЕСТЬNULL(втНакопленнаяСтоимостьЦФ.СуммаОстатокДт, 0) - ЕСТЬNULL(втНакопленнаяАмортизация.СуммаОстатокКт, 0) - ЕСТЬNULL(втНакопленнаяАмортизацияЦФ.СуммаОстатокКт, 0) КАК ОстаточнаяСтоимость
	|ПОМЕСТИТЬ втСведенияОбъектовДокументов
	|ИЗ
	|	втОбъектыДокументов КАК втОбъектыДокументов
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПервоначальныеСведения КАК втПервоначальныеСведения
	|		ПО втОбъектыДокументов.Ссылка = втПервоначальныеСведения.Ссылка
	|			И втОбъектыДокументов.ОсновноеСредство = втПервоначальныеСведения.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ втМестонахождениеОС КАК втМестонахождениеОС
	|		ПО втОбъектыДокументов.Ссылка = втМестонахождениеОС.Ссылка
	|			И втОбъектыДокументов.ОсновноеСредство = втМестонахождениеОС.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПараметрыАмортизации КАК втПараметрыАмортизации
	|		ПО втОбъектыДокументов.Ссылка = втПараметрыАмортизации.Ссылка
	|			И втОбъектыДокументов.ОсновноеСредство = втПараметрыАмортизации.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПорядокУчетаОС КАК втПорядокУчетаОС
	|		ПО втОбъектыДокументов.Ссылка = втПорядокУчетаОС.Ссылка
	|			И втОбъектыДокументов.ОсновноеСредство = втПорядокУчетаОС.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПорядокУчетаОСБУ КАК втПорядокУчетаОСБУ
	|		ПО втОбъектыДокументов.Ссылка = втПорядокУчетаОСБУ.Ссылка
	|			И втОбъектыДокументов.ОсновноеСредство = втПорядокУчетаОСБУ.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ втСтоимости КАК втНакопленнаяСтоимость
	|		ПО (втПорядокУчетаОС.Ссылка = втНакопленнаяСтоимость.Ссылка)
	|			И (втПорядокУчетаОС.ОсновноеСредство = втНакопленнаяСтоимость.ОсновноеСредство)
	|			И (втПорядокУчетаОС.СчетУчета = втНакопленнаяСтоимость.Счет)
	|		ЛЕВОЕ СОЕДИНЕНИЕ втСтоимости КАК втНакопленнаяСтоимостьЦФ
	|		ПО (втПорядокУчетаОС.Ссылка = втНакопленнаяСтоимостьЦФ.Ссылка)
	|			И (втПорядокУчетаОС.ОсновноеСредство = втНакопленнаяСтоимостьЦФ.ОсновноеСредство)
	|			И (втПорядокУчетаОС.СчетУчетаЦФ = втНакопленнаяСтоимостьЦФ.Счет)
	|		ЛЕВОЕ СОЕДИНЕНИЕ втСтоимости КАК втНакопленнаяАмортизация
	|		ПО (втПорядокУчетаОС.Ссылка = втНакопленнаяАмортизация.Ссылка)
	|			И (втПорядокУчетаОС.ОсновноеСредство = втНакопленнаяАмортизация.ОсновноеСредство)
	|			И (втПорядокУчетаОС.СчетАмортизации = втНакопленнаяАмортизация.Счет)
	|		ЛЕВОЕ СОЕДИНЕНИЕ втСтоимости КАК втНакопленнаяАмортизацияЦФ
	|		ПО (втПорядокУчетаОС.Ссылка = втНакопленнаяАмортизацияЦФ.Ссылка)
	|			И (втПорядокУчетаОС.ОсновноеСредство = втНакопленнаяАмортизацияЦФ.ОсновноеСредство)
	|			И (втПорядокУчетаОС.СчетАмортизацииЦФ = втНакопленнаяАмортизацияЦФ.Счет)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втСведенияОбъектовДокументов.Ссылка,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втСведенияОбъектовДокументов.СпособНачисленияАмортизации) КАК КоличествоРазличныхСпособНачисленияАмортизации,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втСведенияОбъектовДокументов.СпособНачисленияАмортизацииНУ) КАК КоличествоРазличныхСпособНачисленияАмортизацииНУ,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втСведенияОбъектовДокументов.МОЛ) КАК КоличествоРазличныхМОЛ,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втСведенияОбъектовДокументов.Местонахождение) КАК КоличествоРазличныхМестонахождение,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втСведенияОбъектовДокументов.СчетУчета) КАК КоличествоРазличныхСчетУчета,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втСведенияОбъектовДокументов.СчетАмортизации) КАК КоличествоРазличныхСчетАмортизации,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втСведенияОбъектовДокументов.СрокПолезногоИспользования) КАК КоличествоРазличныхСрокПолезногоИспользования,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втСведенияОбъектовДокументов.НакопленнаяСтоимость) КАК КоличествоРазличныхНакопленнаяСтоимость,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втСведенияОбъектовДокументов.НакопленнаяАмортизация) КАК КоличествоРазличныхНакопленнаяАмортизация,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втСведенияОбъектовДокументов.ОстаточнаяСтоимость) КАК КоличествоРазличныхОстаточнаяСтоимость,
	|	МАКСИМУМ(втСведенияОбъектовДокументов.СпособНачисленияАмортизации) КАК СпособНачисленияАмортизации,
	|	МАКСИМУМ(втСведенияОбъектовДокументов.СпособНачисленияАмортизацииНУ) КАК СпособНачисленияАмортизацииНУ,
	|	МАКСИМУМ(втСведенияОбъектовДокументов.МОЛ) КАК МОЛ,
	|	МАКСИМУМ(втСведенияОбъектовДокументов.Местонахождение) КАК Местонахождение,
	|	МАКСИМУМ(втСведенияОбъектовДокументов.СчетУчета) КАК СчетУчета,
	|	МАКСИМУМ(втСведенияОбъектовДокументов.СчетАмортизации) КАК СчетАмортизации,
	|	МАКСИМУМ(втСведенияОбъектовДокументов.СрокПолезногоИспользования) КАК СрокПолезногоИспользования,
	|	МАКСИМУМ(втСведенияОбъектовДокументов.НакопленнаяСтоимость) КАК НакопленнаяСтоимость,
	|	МАКСИМУМ(втСведенияОбъектовДокументов.НакопленнаяАмортизация) КАК НакопленнаяАмортизация,
	|	МАКСИМУМ(втСведенияОбъектовДокументов.ОстаточнаяСтоимость) КАК ОстаточнаяСтоимость
	|ПОМЕСТИТЬ втОбщиеСведенияОбъектовДокументов
	|ИЗ
	|	втСведенияОбъектовДокументов КАК втСведенияОбъектовДокументов
	|
	|СГРУППИРОВАТЬ ПО
	|	втСведенияОбъектовДокументов.Ссылка";
	
	ИспользуемыеТаблицы = ОбщегоНазначенияУТ.СписокВременныхТаблиц(МенеджерВТ);
	ИспользуемыеТаблицы.Добавить("втСведенияОбъектовДокументов");
	ИспользуемыеТаблицы.Добавить("втОбщиеСведенияОбъектовДокументов");
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.Выполнить();
	
	ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(МенеджерВТ,, ИспользуемыеТаблицы);
	
КонецПроцедуры

// Определяет в какой организации ОС принято к учету.
//
// Параметры:
//  ОсновноеСредство - СправочникСсылка.ОбъектыЭксплуатации - ОС, для которого нужно проверить принятие к учету.
// 
// Возвращаемое значение:
//  СправочникСсылка.Организации - организация, в которой данное ОС принято к учету.
//
Функция ОрганизацияВКоторойОСПринятоКУчету(ОсновноеСредство) Экспорт

	Если НЕ ПравоДоступа("Чтение", Метаданные.РегистрыСведений.ПорядокУчетаОСБУ) Тогда
		Возврат Справочники.Организации.ПустаяСсылка();
	КонецЕсли; 
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	СостоянияОС.Организация
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(, ОсновноеСредство = &ОсновноеСредство) КАК СостоянияОС
	|ГДЕ
	|	СостоянияОС.Состояние В (ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету),
	|							ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКЗабалансовомуУчету))";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ОсновноеСредство", ОсновноеСредство);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Справочники.Организации.ПустаяСсылка();
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	
	Возврат Выборка.Организация;

КонецФункции
 
#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОтражениеАмортизацииВРеглУчете_ВременныеТаблицы

Функция ТекстЗапросаВТНачисленнаяАмортизация(ИмяДокумента) Экспорт
	
	Если ИмяДокумента = "АмортизацияОС" Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ТаблицаАмортизации.Организация КАК Организация,
		|	ТаблицаАмортизации.ОбъектУчета КАК ОбъектУчета,
		|	ТаблицаАмортизации.НаправлениеДеятельности КАК НаправлениеДеятельностиАмортизации,
		|	ТаблицаАмортизации.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	ТаблицаАмортизации.Подразделение КАК Подразделение,
		|	ТаблицаАмортизации.СуммаБУ КАК СуммаБУ,
		|	ТаблицаАмортизации.СуммаНУ КАК СуммаНУ,
		|	ТаблицаАмортизации.СуммаУменьшенияДооценки КАК СуммаУменьшенияДооценки,
		|	ТаблицаАмортизации.СтатьяРасходов КАК СтатьяРасходов,
		|	ТаблицаАмортизации.АналитикаРасходов КАК АналитикаРасходов,
		|	ТаблицаАмортизации.НалоговоеНазначение КАК НалоговоеНазначение
		|ПОМЕСТИТЬ втНачисленнаяАмортизация
		|ИЗ
		|	втТаблицаАмортизации КАК ТаблицаАмортизации
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыЭксплуатации КАК СправочникОбъектыУчета
		|		ПО ТаблицаАмортизации.ОбъектУчета = СправочникОбъектыУчета.Ссылка";
		
	ИначеЕсли ИмяДокумента = "ПринятиеКУчетуОС" Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ТаблицаАмортизации.Организация                         КАК Организация,
		|	ТаблицаАмортизации.ОбъектУчета                         КАК ОбъектУчета,
		|	ТаблицаАмортизации.Подразделение                       КАК Подразделение,
		|	ТаблицаАмортизации.НаправлениеДеятельности             КАК НаправлениеДеятельности,
		|	ТаблицаАмортизации.НаправлениеДеятельности             КАК НаправлениеДеятельностиАмортизации,
		|	ТаблицаАмортизации.СтатьяРасходов                      КАК СтатьяРасходов,
		|	ТаблицаАмортизации.АналитикаРасходов                   КАК АналитикаРасходов,
		|
		|	ТаблицаАмортизации.СуммаБУ                             КАК СуммаБУ,
		|	ТаблицаАмортизации.СуммаНУ                             КАК СуммаНУ,
		|	ТаблицаАмортизации.НалоговоеНазначение КАК НалоговоеНазначение
		|ПОМЕСТИТЬ втНачисленнаяАмортизация
		|ИЗ
		|	втНачисленнаяАмортизацияДокумента КАК ТаблицаАмортизации";
		
	Иначе	
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ТаблицаАмортизации.Ссылка.Организация КАК Организация,
		|	ТаблицаАмортизации.ОбъектУчета КАК ОбъектУчета,
		|	ТаблицаАмортизации.НаправлениеДеятельности КАК НаправлениеДеятельностиАмортизации,
		|	ТаблицаАмортизации.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	ТаблицаАмортизации.Подразделение КАК Подразделение,
		|	ТаблицаАмортизации.СуммаБУ КАК СуммаБУ,
		|	ТаблицаАмортизации.СуммаНУ КАК СуммаНУ,
		|	ТаблицаАмортизации.СуммаУменьшенияДооценки КАК СуммаУменьшенияДооценки,
		|	ТаблицаАмортизации.СтатьяРасходов КАК СтатьяРасходов,
		|	ТаблицаАмортизации.АналитикаРасходов КАК АналитикаРасходов,
		|	ТаблицаАмортизации.НалоговоеНазначение КАК НалоговоеНазначение
		|ПОМЕСТИТЬ втНачисленнаяАмортизация
		|ИЗ
		|	Документ.СписаниеОС.НачисленнаяАмортизация КАК ТаблицаАмортизации
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыЭксплуатации КАК СправочникОбъектыУчета
		|		ПО ТаблицаАмортизации.ОбъектУчета = СправочникОбъектыУчета.Ссылка
		|ГДЕ
		|	ТаблицаАмортизации.Ссылка = &Ссылка";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Документ.СписаниеОС", "Документ." + ИмяДокумента);
		
	КонецЕсли;
	
	ПрефиксЗапроса = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втНачисленнаяАмортизация
	|";
	
	Возврат ПрефиксЗапроса + ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВТОбъектыДокумента(ИмяДокумента)
	
	ТекстыЗапроса = Новый Массив;
	
	ТекстЗапроса = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втВсеОбъектыДокумента
	|"+
	"ВЫБРАТЬ
	|	ТаблицаАмортизации.Организация КАК Организация,
	|	ТаблицаАмортизации.ОбъектУчета КАК ОбъектУчета
	|ПОМЕСТИТЬ втВсеОбъектыДокумента
	|ИЗ
	|	втНачисленнаяАмортизация КАК ТаблицаАмортизации";
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
	Если ИмяДокумента <> "АмортизацияОС" Тогда
		
		ТекстВыборкиТаблицыПараметра = 
		"ВЫБРАТЬ
		|	ТаблицаДокумента.Ссылка.Организация КАК Организация,
		|	ТаблицаДокумента.ОсновноеСредство КАК ОбъектУчета
		|ИЗ
		|	Документ.СписаниеОС.ОС КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &Ссылка";
		
		ТекстыЗапроса.Добавить(ТекстВыборкиТаблицыПараметра);
		
	КонецЕсли;
	
	ТекстЗапроса = СтрСоединить(ТекстыЗапроса, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Документ.СписаниеОС", "Документ."+ИмяДокумента);
	ТекстыЗапроса = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ТекстЗапроса);
	
	ТекстЗапроса = 
	"// Временная таблица втОбъектыДокумента
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	втВсеОбъектыДокумента.Организация КАК Организация,
	|	втВсеОбъектыДокумента.ОбъектУчета КАК ОбъектУчета
	|ПОМЕСТИТЬ втОбъектыДокумента
	|ИЗ
	|	втВсеОбъектыДокумента КАК втВсеОбъектыДокумента";
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
	Возврат СтрСоединить(ТекстыЗапроса, ОбщегоНазначенияУТ.РазделительЗапросовВПакете());
	
КонецФункции

Функция ТекстЗапросаВТСчетаОтражения(ИмяДокумента)
	
	Если ИмяДокумента = "ПринятиеКУчетуОС" Тогда
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	втДанныеДокумента.ОсновноеСредство КАК ОбъектУчета,
		|	втДанныеДокумента.СчетУчета КАК СчетУчета,
		|	втДанныеДокумента.СчетАмортизации КАК СчетНачисленияАмортизации,
		|	втДанныеДокумента.СчетУчетаДооценокОС КАК СчетДооценки
		|ПОМЕСТИТЬ втСчетаОтражения
		|ИЗ
		|	втДанныеДокумента КАК втДанныеДокумента";
		
	Иначе	
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	втОбъектыДокумента.ОбъектУчета КАК ОбъектУчета,
		|	ЕСТЬNULL(СчетУчетаСтоимости.СчетУчета, ЕСТЬNULL(СчетаОтражения.СчетУчета, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))) КАК СчетУчета,
		|	ЕСТЬNULL(СчетУчетаАмортизации.СчетУчета, ЕСТЬNULL(СчетаОтражения.СчетНачисленияАмортизации, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))) КАК СчетНачисленияАмортизации,
		|	ЕСТЬNULL(СчетУчетаДооценки.СчетУчета, ЕСТЬNULL(СчетаОтражения.СчетДооценки, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))) КАК СчетДооценки
		|ПОМЕСТИТЬ втСчетаОтражения
		|ИЗ
		|	втОбъектыДокумента КАК втОбъектыДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОС.СрезПоследних(
		|				&Дата,
		|				Регистратор <> &Ссылка
		|					И НЕ Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4
		|					И ОсновноеСредство В
		|						(ВЫБРАТЬ
		|							Т.ОбъектУчета
		|						ИЗ
		|							втОбъектыДокумента КАК Т)) КАК СчетаОтражения
		|		ПО втОбъектыДокумента.ОбъектУчета = СчетаОтражения.ОсновноеСредство
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОтраженияНаСчетахУчета КАК СчетУчетаСтоимости
		|		ПО СчетУчетаСтоимости.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА)
		|			И СчетУчетаСтоимости.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|			И СчетУчетаСтоимости.АналитикаУчета = СчетаОтражения.ГруппаФинансовогоУчета
		|			И СчетУчетаСтоимости.МестоУчета = НЕОПРЕДЕЛЕНО
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОтраженияНаСчетахУчета КАК СчетУчетаАмортизации
		|		ПО СчетУчетаАмортизации.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА)
		|			И СчетУчетаАмортизации.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|			И СчетУчетаАмортизации.АналитикаУчета = СчетаОтражения.ГруппаФинансовогоУчета
		|			И СчетУчетаАмортизации.МестоУчета = НЕОПРЕДЕЛЕНО
		//  |";
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОтраженияНаСчетахУчета КАК СчетУчетаДооценки
		|		ПО СчетУчетаДооценки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ДооценкаВНА)
		|			И СчетУчетаДооценки.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|			И СчетУчетаДооценки.АналитикаУчета = СчетаОтражения.ГруппаФинансовогоУчета
		|			И СчетУчетаДооценки.МестоУчета = НЕОПРЕДЕЛЕНО";
				
	КонецЕсли; 
	
	ТекстЗапроса = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица ВТСчетаОтражения
	|"+ ТекстЗапроса;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВТПервоначальныеСведения(ИмяДокумента)
	
	Если ИмяДокумента = "ПринятиеКУчетуОС" Тогда
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	втДанныеДокумента.ОсновноеСредство КАК ОбъектУчета,
		|	втДанныеДокумента.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	втДанныеДокумента.НалоговоеНазначение КАК НалоговоеНазначение,
		|	втДанныеДокумента.НачислятьАмортизациюБУ КАК ЕстьСчетАмортизации
		|ПОМЕСТИТЬ втПервоначальныеСведения
		|ИЗ
		|	втДанныеДокумента КАК втДанныеДокумента";
		
	Иначе	
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	втОбъектыДокумента.ОбъектУчета КАК ОбъектУчета,
		|	ПорядокУчетаОС.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	ЕСТЬNULL(ПорядокУчетаОСБУ.НалоговоеНазначение, ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка)) КАК НалоговоеНазначение,
		|	ЕСТЬNULL(ПорядокУчетаОСБУ.НачислятьАмортизациюБУ, ЛОЖЬ) КАК ЕстьСчетАмортизации
		|ПОМЕСТИТЬ втПервоначальныеСведения
		|ИЗ
		|	втОбъектыДокумента КАК втОбъектыДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОС.СрезПоследних(
		|				&Дата,
		|				Регистратор <> &Ссылка
		|					И (Организация, ОсновноеСредство) В
		|						(ВЫБРАТЬ
		|							Т.Организация,
		|							Т.ОбъектУчета
		|						ИЗ
		|							втОбъектыДокумента КАК Т)) КАК ПервоначальныеСведенияОС
		|		ПО втОбъектыДокумента.ОбъектУчета = ПервоначальныеСведенияОС.ОсновноеСредство
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(
		|				&Дата,
		|				Регистратор <> &Ссылка
		|					И ОсновноеСредство В
		|						(ВЫБРАТЬ
		|							Т.ОбъектУчета
		|						ИЗ
		|							втОбъектыДокумента КАК Т)) КАК ПорядокУчетаОСБУ
		|		ПО втОбъектыДокумента.ОбъектУчета = ПорядокУчетаОСБУ.ОсновноеСредство
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОС.СрезПоследних(
		|				&Дата,
		|				Регистратор <> &Ссылка
		|					И ОсновноеСредство В
		|						(ВЫБРАТЬ
		|							Т.ОбъектУчета
		|						ИЗ
		|							втОбъектыДокумента КАК Т)) КАК ПорядокУчетаОС
		|		ПО втОбъектыДокумента.ОбъектУчета = ПорядокУчетаОС.ОсновноеСредство";
	КонецЕсли; 
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВТМестонахожденияОС(ИмяДокумента)
	
	Если ИмяДокумента = "ПринятиеКУчетуОС" Тогда
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	втДанныеДокумента.ОсновноеСредство КАК ОбъектУчета,
		|	втДанныеДокумента.Местонахождение КАК Подразделение
		|ПОМЕСТИТЬ втМестонахожденияОС
		|ИЗ
		|	втДанныеДокумента КАК втДанныеДокумента";
		
	Иначе
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	втОбъектыДокумента.ОбъектУчета КАК ОбъектУчета,
		|	ЕСТЬNULL(Местонахождения.Местонахождение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)) КАК Подразделение
		|ПОМЕСТИТЬ втМестонахожденияОС
		|ИЗ
		|	втОбъектыДокумента КАК втОбъектыДокумента
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОС.СрезПоследних(
		|			&Дата,
		|			Регистратор <> &Ссылка
		|			И (Организация, ОсновноеСредство) В
		|				(ВЫБРАТЬ
		|					Т.Организация, Т.ОбъектУчета
		|				ИЗ
		|					втОбъектыДокумента КАК Т)) КАК Местонахождения
		|	ПО втОбъектыДокумента.ОбъектУчета = Местонахождения.ОсновноеСредство";
	КонецЕсли; 
	
	ТекстЗапроса = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица ВТМестонахожденияОС
	|"+ ТекстЗапроса;
	
	Возврат ТекстЗапроса;
	
КонецФункции


#КонецОбласти

#Область ОтражениеАмортизацииВРеглУчете_Движения


Функция ТекстОтраженияАмортизация()

	ЯзыкСодержания = МультиязычностьУкр.КодЯзыкаИнформационнойБазы();
	
	ТекстЗапроса = "
	|////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Амортизация (Дт СчетУчетаЗатрат :: Кт СчетНакопленияАмортизации)
	|ВЫБРАТЬ
	|	
	|	&Ссылка КАК Ссылка,
	|	&Дата КАК Период,
	|	Строки.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	Строки.СуммаБУ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Строки.СтатьяРасходов КАК АналитикаУчетаДт,
	|	Строки.Подразделение КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельностиАмортизации КАК НаправлениеДеятельностиДт,
	|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|   ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее) КАК СубконтоДт1,
	|	Строки.СтатьяРасходов КАК СубконтоДт2,
	|	Строки.АналитикаРасходов КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СуммаНУ КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	МестонахождениеОС.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|   Строки.НалоговоеНазначение КАК НалоговоеНазначениеКт,
	|	
	|	СчетаОтражения.СчетНачисленияАмортизации КАК СчетКт,
	|	Строки.ОбъектУчета КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СуммаНУ КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	""%1"" КАК Содержание
	|ИЗ
	|	втНачисленнаяАмортизация КАК Строки
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиСтроительства
	|	ПО Строки.СтатьяРасходов = СтатьиСтроительства.Ссылка
	|		И СтатьиСтроительства.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиНаПрочиеАктивы
	|	ПО Строки.СтатьяРасходов = СтатьиНаПрочиеАктивы.Ссылка
	|		И СтатьиНаПрочиеАктивы.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втМестонахожденияОС КАК МестонахождениеОС
	|	ПО Строки.ОбъектУчета = МестонахождениеОС.ОбъектУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втСчетаОтражения КАК СчетаОтражения
	|	ПО Строки.ОбъектУчета = СчетаОтражения.ОбъектУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втПервоначальныеСведения КАК втПервоначальныеСведения
	|	ПО Строки.ОбъектУчета = втПервоначальныеСведения.ОбъектУчета
	|	
	|ГДЕ
	|	Строки.СуммаБУ > 0
	|	ИЛИ Строки.СуммаНУ > 0
	|";

	ТекстЗапроса = СтрШаблон(ТекстЗапроса, 
		НСтр("ru='Начисление амортизации';uk='Нарахування амортизації'",ЯзыкСодержания));
		
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстОтраженияПропорциональногоУменьшенияДопКапитала()

	ЯзыкСодержания = МультиязычностьУкр.КодЯзыкаИнформационнойБазы();
	
	ТекстЗапроса = "
	|////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Уменьшение дополнительного капитала (Дт СчетДооценки :: Кт СчетНераспределеннойПрибыли)
	|ВЫБРАТЬ
	|	
	|	&Ссылка КАК Ссылка,
	|	&Дата КАК Период,
	|	Строки.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	Строки.СуммаУменьшенияДооценки КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельностиАмортизации КАК НаправлениеДеятельностиДт,
	|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеДт,
	|	
	|	СчетаОтражения.СчетДооценки КАК СчетДт,
	|	СчетаОтражения.ОбъектУчета КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|   НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	МестонахождениеОС.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|   ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НераспределеннаяПрибыль) КАК СчетКт,
	|	Строки.ОбъектУчета КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	""%1"" КАК Содержание
	|ИЗ
	|	втНачисленнаяАмортизация КАК Строки
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втМестонахожденияОС КАК МестонахождениеОС
	|	ПО Строки.ОбъектУчета = МестонахождениеОС.ОбъектУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втСчетаОтражения КАК СчетаОтражения
	|	ПО Строки.ОбъектУчета = СчетаОтражения.ОбъектУчета
	|	
	|ГДЕ
	|	Строки.СуммаУменьшенияДооценки > 0
	|";

	ТекстЗапроса = СтрШаблон(ТекстЗапроса, 
		НСтр("ru='Уменьшение дополнительного капитала';uk='Зменшення додаткового капіталу'",ЯзыкСодержания));   
		
	Возврат ТекстЗапроса;
	
КонецФункции




Функция ТекстОтраженияАмортизацияНаПрочиеОперации()

	ЯзыкСодержания = МультиязычностьУкр.КодЯзыкаИнформационнойБазы();
	
	ТекстЗапроса = "

	|////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Амортизация (Дт СчетУчетаЗатрат :: Кт СчетНакопленияАмортизации)
	|ВЫБРАТЬ
	|	
	|	&Ссылка КАК Ссылка,
	|	&Дата КАК Период,
	|	Строки.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	Строки.СуммаБУ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеОперации) КАК ВидСчетаДт,
	|	Строки.СтатьяРасходов КАК АналитикаУчетаДт,
	|	Строки.Подразделение КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СуммаНУ КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	МестонахождениеОС.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|   Строки.НалоговоеНазначение КАК НалоговоеНазначениеКт,
	|
	|	СчетаОтражения.СчетНачисленияАмортизации КАК СчетКт,
	|	Строки.ОбъектУчета КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СуммаНУ КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
 	|	""%1"" КАК Содержание
	|ИЗ
	|	втНачисленнаяАмортизация КАК Строки
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиНаПрочиеАктивы
	|	ПО Строки.СтатьяРасходов = СтатьиНаПрочиеАктивы.Ссылка
	|		И СтатьиНаПрочиеАктивы.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втМестонахожденияОС КАК МестонахождениеОС
	|	ПО Строки.ОбъектУчета = МестонахождениеОС.ОбъектУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втСчетаОтражения КАК СчетаОтражения
	|	ПО Строки.ОбъектУчета = СчетаОтражения.ОбъектУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втПервоначальныеСведения КАК втПервоначальныеСведения
	|	ПО Строки.ОбъектУчета = втПервоначальныеСведения.ОбъектУчета
	|	
	|ГДЕ
	|	Строки.СуммаБУ > 0
	|	ИЛИ Строки.СуммаНУ > 0
	|";

	ТекстЗапроса = СтрШаблон(ТекстЗапроса, 
		НСтр("ru='Начисление амортизации';uk='Нарахування амортизації'",ЯзыкСодержания));  
		
	Возврат ТекстЗапроса;
	
КонецФункции
#КонецОбласти

#Область ОтражениеАмортизацииВОперативномУчете_ВременныеТаблицы

Процедура ВременнаяТаблицаНачисленнаяАмортизацияДокумента(ТекстыЗапроса)
	
	ИмяТаблицы = "втНачисленнаяАмортизацияДокумента";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втНачисленнаяАмортизацияДокумента
	|"+
	"ВЫБРАТЬ
	|	ТаблицаАмортизации.ОбъектУчета КАК ОбъектУчета,
	|	ВЫРАЗИТЬ(&Организация КАК Справочник.Организации) КАК Организация,
	|	ВЫРАЗИТЬ(ТаблицаАмортизации.Подразделение КАК Справочник.СтруктураПредприятия) КАК Подразделение,
	|	ВЫРАЗИТЬ(ТаблицаАмортизации.НаправлениеДеятельности КАК Справочник.НаправленияДеятельности) КАК НаправлениеДеятельности,
	|	ВЫРАЗИТЬ(ТаблицаАмортизации.СуммаБУ КАК ЧИСЛО) КАК СуммаБУ,
	|	ВЫРАЗИТЬ(ТаблицаАмортизации.СуммаНУ КАК ЧИСЛО) КАК СуммаНУ,
	|	ВЫРАЗИТЬ(ТаблицаАмортизации.СуммаУменьшенияДооценки КАК ЧИСЛО) КАК СуммаУменьшенияДооценки,
	|	ВЫРАЗИТЬ(ТаблицаАмортизации.Коэффициент КАК ЧИСЛО) КАК Коэффициент,
	|	ВЫРАЗИТЬ(ТаблицаАмортизации.СтатьяРасходов КАК ПланВидовХарактеристик.СтатьиРасходов) КАК СтатьяРасходов,
	|	ТаблицаАмортизации.АналитикаРасходов КАК АналитикаРасходов
	|ПОМЕСТИТЬ втНачисленнаяАмортизацияДокумента
	|ИЗ
	|	&ТаблицаАмортизации КАК ТаблицаАмортизации
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектУчета";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаНачисленнаяАмортизация(ТекстыЗапроса) Экспорт
	
	ИмяТаблицы = "втНачисленнаяАмортизация";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаНачисленнаяАмортизацияДокумента(ТекстыЗапроса);
	ВременнаяТаблицаСтоимостиРегл(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втНачисленнаяАмортизация
	|"+
	"ВЫБРАТЬ
	|	втНачисленнаяАмортизацияДокумента.ОбъектУчета КАК ОбъектУчета,
	|	втНачисленнаяАмортизацияДокумента.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	втНачисленнаяАмортизацияДокумента.Организация КАК Организация,
	|	втНачисленнаяАмортизацияДокумента.Подразделение КАК Подразделение,
	|	втНачисленнаяАмортизацияДокумента.СуммаБУ КАК СуммаБУ,
	|	втНачисленнаяАмортизацияДокумента.СуммаНУ КАК СуммаНУ,
	|	втНачисленнаяАмортизацияДокумента.СуммаУменьшенияДооценки КАК СуммаУменьшенияДооценки,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(втСтоимостиРегл.Сумма, 0) = 0
	|			ТОГДА 0
	|		ИНАЧЕ втНачисленнаяАмортизацияДокумента.СуммаБУ / втСтоимостиРегл.Сумма
	|	КОНЕЦ КАК Коэффициент,
	|	втНачисленнаяАмортизацияДокумента.СтатьяРасходов КАК СтатьяРасходов,
	|	втНачисленнаяАмортизацияДокумента.АналитикаРасходов КАК АналитикаРасходов
	|ПОМЕСТИТЬ втНачисленнаяАмортизация
	|ИЗ
	|	втНачисленнаяАмортизацияДокумента КАК втНачисленнаяАмортизацияДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ втСтоимостиРегл КАК втСтоимостиРегл
	|		ПО втНачисленнаяАмортизацияДокумента.ОбъектУчета = втСтоимостиРегл.ОбъектУчета
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектУчета";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаОбъектыДокумента(ТекстыЗапроса)
	
	ИмяТаблицы = "втОбъектыДокумента";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втОбъектыДокумента
	|"+
	"ВЫБРАТЬ
	|	ТабличнаяЧасть.ОсновноеСредство КАК ОбъектУчета
	|ПОМЕСТИТЬ втОбъектыДокумента
	|ИЗ
	|	Документ.СписаниеОС.ОС КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ                  
	|	Операция.НематериальныйАктив
	|ИЗ
	|	Документ.СписаниеНМА КАК Операция
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ                       
	|	ТабличнаяЧасть.ОсновноеСредство
	|ИЗ
	|	Документ.ПодготовкаКПередачеОС.ОС КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ                        
	|	Операция.НематериальныйАктив
	|ИЗ
	|	Документ.ПодготовкаКПередачеНМА КАК Операция
	|ГДЕ
	|	Операция.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаОбъектыУчета(ТекстыЗапроса)
	
	ИмяТаблицы = "втОбъектыУчета";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаОбъектыДокумента(ТекстыЗапроса);
	ВременнаяТаблицаНачисленнаяАмортизацияДокумента(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втОбъектыУчета
	|"+
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	втНачисленнаяАмортизацияДокумента.ОбъектУчета КАК ОбъектУчета
	|ПОМЕСТИТЬ втОбъектыУчета
	|ИЗ
	|	втНачисленнаяАмортизацияДокумента КАК втНачисленнаяАмортизацияДокумента
	|ГДЕ
	|	НЕ втНачисленнаяАмортизацияДокумента.ОбъектУчета В
	|				(ВЫБРАТЬ
	|					Т.ОбъектУчета
	|				ИЗ
	|					втОбъектыДокумента КАК Т)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	втОбъектыДокумента.ОбъектУчета
	|ИЗ
	|	втОбъектыДокумента КАК втОбъектыДокумента
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектУчета";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаПараметрыОбъектовУчета(ТекстыЗапроса)
	
	ИмяТаблицы = "втПараметрыОбъектовУчета";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаОбъектыУчета(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втПараметрыОбъектовУчета
	|"+
	"ВЫБРАТЬ
	|	втОбъектыУчета.ОбъектУчета КАК ОбъектУчета,
	|	ЕСТЬNULL(ПорядокУчетаОС.НаправлениеДеятельности, ЕСТЬNULL(ПорядокУчетаНМА.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка))) КАК НаправлениеДеятельности,
	|	ЕСТЬNULL(ПорядокУчетаОС.СчетУчета, ЕСТЬNULL(ПорядокУчетаНМА.СчетУчета, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))) КАК СчетУчета,
	|	ЕСТЬNULL(ПорядокУчетаОС.СчетНачисленияАмортизации, ЕСТЬNULL(ПорядокУчетаНМА.СчетНачисленияАмортизации, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))) КАК СчетАмортизации
	|ПОМЕСТИТЬ втПараметрыОбъектовУчета
	|ИЗ
	|	втОбъектыУчета КАК втОбъектыУчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыЭксплуатации КАК ОбъектыЭксплуатации
	|		ПО втОбъектыУчета.ОбъектУчета = ОбъектыЭксплуатации.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НематериальныеАктивы КАК НематериальныеАктивы
	|		ПО втОбъектыУчета.ОбъектУчета = НематериальныеАктивы.Ссылка
	|
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОС.СрезПоследних(
	|				&Граница,
	|				Регистратор <> &Ссылка
	|					И ОсновноеСредство В
	|						(ВЫБРАТЬ
	|							Т.ОбъектУчета
	|						ИЗ
	|							втОбъектыУчета КАК Т)) КАК ПорядокУчетаОС
	|		ПО втОбъектыУчета.ОбъектУчета = ПорядокУчетаОС.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаНМА.СрезПоследних(
	|				&Граница,
	|				Регистратор <> &Ссылка
	|					И Организация = &Организация
	|					И НематериальныйАктив В
	|						(ВЫБРАТЬ
	|							Т.ОбъектУчета
	|						ИЗ
	|							втОбъектыУчета КАК Т)) КАК ПорядокУчетаНМА
	|		ПО втОбъектыУчета.ОбъектУчета = ПорядокУчетаНМА.НематериальныйАктив
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектУчета";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаМестонахожденияОбъектовУчета(ТекстыЗапроса)
	
	ИмяТаблицы = "втМестонахожденияОбъектовУчета";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаПараметрыОбъектовУчета(ТекстыЗапроса);
	ВременнаяТаблицаСчетаРеглУчета(ТекстыЗапроса);
	
	Текст =
	"ВЫБРАТЬ
	|	втПараметрыОбъектовУчета.ОбъектУчета КАК ОбъектУчета,
	|	ЕСТЬNULL(МестонахождениеОС.Местонахождение, ЕСТЬNULL(МестоУчетаНМА.Подразделение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка))) КАК Подразделение
	|ПОМЕСТИТЬ втМестонахожденияОбъектовУчета
	|ИЗ
	|	втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОС.СрезПоследних(
	|				&Граница,
	|				Регистратор <> &Ссылка
	|					И ОсновноеСредство В
	|						(ВЫБРАТЬ
	|							Т.ОбъектУчета
	|						ИЗ
	|							втОбъектыУчета КАК Т)) КАК МестонахождениеОС
	|		ПО втПараметрыОбъектовУчета.ОбъектУчета = МестонахождениеОС.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестоУчетаНМА.СрезПоследних(
	|				&Граница,
	|				Регистратор <> &Ссылка
	|						И НематериальныйАктив В
	|							(ВЫБРАТЬ
	|								Т.ОбъектУчета
	|							ИЗ
	|								втОбъектыУчета КАК Т)) КАК МестоУчетаНМА
	|		ПО втПараметрыОбъектовУчета.ОбъектУчета = МестоУчетаНМА.НематериальныйАктив
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектУчета";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаСчетаРеглУчета(ТекстыЗапроса)
	
	ИмяТаблицы = "втСчетаРеглУчета";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаПараметрыОбъектовУчета(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втСчетаРеглУчета
	|"+
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	втПараметрыОбъектовУчета.СчетУчета КАК Счет
	|ПОМЕСТИТЬ втСчетаРеглУчета
	|ИЗ
	|	втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	втПараметрыОбъектовУчета.СчетАмортизации
	|ИЗ
	|	втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаОстаткиРеглУчета(ТекстыЗапроса)
	
	ИмяТаблицы = "втОстаткиРеглУчета";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаПараметрыОбъектовУчета(ТекстыЗапроса);
	ВременнаяТаблицаСчетаРеглУчета(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втОстаткиРеглУчета
	|"+
	"ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Счет КАК Счет,
	|	ХозрасчетныйОстатки.Субконто1 КАК ОбъектУчета,
	|	ХозрасчетныйОстатки.СуммаОстаток КАК Сумма,
	|	ХозрасчетныйОстатки.СуммаНУОстаток КАК СуммаНУ
	|ПОМЕСТИТЬ втОстаткиРеглУчета
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&КонецМесяца,
	|			Счет В
	|				(ВЫБРАТЬ
	|					Т.Счет
	|				ИЗ
	|					втСчетаРеглУчета КАК Т),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
	|			Организация = &Организация
	|				И (Субконто1, НаправлениеДеятельности) В
	|					(ВЫБРАТЬ
	|						Т.ОбъектУчета,
	|						Т.НаправлениеДеятельности
	|					ИЗ
	|						втПараметрыОбъектовУчета КАК Т)) КАК ХозрасчетныйОстатки
	|ГДЕ
	|	(&ПогашениеУпрЗатрат
	|			ИЛИ &СписаниеОстаточнойСтоимости
	|			ИЛИ &ТекущееСостояниеОбъектов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Счет,
	|	ХозрасчетныйОстатки.Субконто1,
	|	ХозрасчетныйОстатки.СуммаОстаток,
	|	ХозрасчетныйОстатки.СуммаНУОстаток
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&КонецМесяца,
	|			Счет В
	|				(ВЫБРАТЬ
	|					Т.Счет
	|				ИЗ
	|					втСчетаРеглУчета КАК Т),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.НематериальныеАктивы),
	|			Организация = &Организация
	|				И (Субконто1, НаправлениеДеятельности) В
	|					(ВЫБРАТЬ
	|						Т.ОбъектУчета,
	|						Т.НаправлениеДеятельности
	|					ИЗ
	|						втПараметрыОбъектовУчета КАК Т)) КАК ХозрасчетныйОстатки
	|ГДЕ
	|	(&ПогашениеУпрЗатрат
	|			ИЛИ &СписаниеОстаточнойСтоимости
	|			ИЛИ &ТекущееСостояниеОбъектов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Хозрасчетный.СчетДт,
	|	ХозрасчетныйСубконто.Значение,
	|	-Хозрасчетный.Сумма,
	|	-Хозрасчетный.СуммаНУДт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный КАК Хозрасчетный
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Субконто КАК ХозрасчетныйСубконто
	|		ПО Хозрасчетный.Регистратор = ХозрасчетныйСубконто.Регистратор
	|			И Хозрасчетный.НомерСтроки = ХозрасчетныйСубконто.НомерСтроки
	|			И (ХозрасчетныйСубконто.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияБухгалтерии.Дебет))
	|			И (ХозрасчетныйСубконто.Вид = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства))
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|		ПО (ХозрасчетныйСубконто.Значение = втПараметрыОбъектовУчета.ОбъектУчета)
	|			И Хозрасчетный.НаправлениеДеятельностиДт = втПараметрыОбъектовУчета.НаправлениеДеятельности
	|ГДЕ
	|	(&ПогашениеУпрЗатрат
	|			ИЛИ &СписаниеОстаточнойСтоимости
	|			ИЛИ &ТекущееСостояниеОбъектов)
	|	И Хозрасчетный.Регистратор = &Ссылка
	|	И Хозрасчетный.Организация = &Организация
	|	И Хозрасчетный.СчетДт В
	|			(ВЫБРАТЬ
	|				Т.Счет
	|			ИЗ
	|				втСчетаРеглУчета КАК Т)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Хозрасчетный.СчетКт,
	|	ХозрасчетныйСубконто.Значение,
	|	Хозрасчетный.Сумма,
	|	Хозрасчетный.СуммаНУКт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный КАК Хозрасчетный
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Субконто КАК ХозрасчетныйСубконто
	|		ПО Хозрасчетный.Регистратор = ХозрасчетныйСубконто.Регистратор
	|			И Хозрасчетный.НомерСтроки = ХозрасчетныйСубконто.НомерСтроки
	|			И (ХозрасчетныйСубконто.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияБухгалтерии.Кредит))
	|			И (ХозрасчетныйСубконто.Вид = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства))
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|		ПО (ХозрасчетныйСубконто.Значение = втПараметрыОбъектовУчета.ОбъектУчета)
	|			И Хозрасчетный.НаправлениеДеятельностиКт = втПараметрыОбъектовУчета.НаправлениеДеятельности
	|ГДЕ
	|	(&ПогашениеУпрЗатрат
	|			ИЛИ &СписаниеОстаточнойСтоимости
	|			ИЛИ &ЧастичнаяЛиквидация
	|			ИЛИ &ТекущееСостояниеОбъектов)
	|	И Хозрасчетный.Регистратор = &Ссылка
	|	И Хозрасчетный.Организация = &Организация
	|	И Хозрасчетный.СчетКт В
	|			(ВЫБРАТЬ
	|				Т.Счет
	|			ИЗ
	|				втСчетаРеглУчета КАК Т)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Хозрасчетный.СчетДт,
	|	ХозрасчетныйСубконто.Значение,
	|	-Хозрасчетный.Сумма,
	|	-Хозрасчетный.СуммаНУДт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный КАК Хозрасчетный
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Субконто КАК ХозрасчетныйСубконто
	|		ПО Хозрасчетный.Регистратор = ХозрасчетныйСубконто.Регистратор
	|			И Хозрасчетный.НомерСтроки = ХозрасчетныйСубконто.НомерСтроки
	|			И (ХозрасчетныйСубконто.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияБухгалтерии.Дебет))
	|			И (ХозрасчетныйСубконто.Вид = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.НематериальныеАктивы))
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|		ПО (ХозрасчетныйСубконто.Значение = втПараметрыОбъектовУчета.ОбъектУчета)
	|			И Хозрасчетный.НаправлениеДеятельностиДт = втПараметрыОбъектовУчета.НаправлениеДеятельности
	|ГДЕ
	|	(&ПогашениеУпрЗатрат
	|			ИЛИ &СписаниеОстаточнойСтоимости
	//|			ИЛИ &ЧастичнаяЛиквидация
	|			ИЛИ &ТекущееСостояниеОбъектов)
	|	И Хозрасчетный.Регистратор = &Ссылка
	|	И Хозрасчетный.Организация = &Организация
	|	И Хозрасчетный.СчетДт В
	|			(ВЫБРАТЬ
	|				Т.Счет
	|			ИЗ
	|				втСчетаРеглУчета КАК Т)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Хозрасчетный.СчетКт,
	|	ХозрасчетныйСубконто.Значение,
	|	Хозрасчетный.Сумма,
	|	Хозрасчетный.СуммаНУКт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный КАК Хозрасчетный
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Субконто КАК ХозрасчетныйСубконто
	|		ПО Хозрасчетный.Регистратор = ХозрасчетныйСубконто.Регистратор
	|			И Хозрасчетный.НомерСтроки = ХозрасчетныйСубконто.НомерСтроки
	|			И (ХозрасчетныйСубконто.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияБухгалтерии.Кредит))
	|			И (ХозрасчетныйСубконто.Вид = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.НематериальныеАктивы))
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|		ПО (ХозрасчетныйСубконто.Значение = втПараметрыОбъектовУчета.ОбъектУчета)
	|			И Хозрасчетный.НаправлениеДеятельностиКт = втПараметрыОбъектовУчета.НаправлениеДеятельности
	|ГДЕ
	|	(&ПогашениеУпрЗатрат
	|			ИЛИ &СписаниеОстаточнойСтоимости
	|			ИЛИ &ТекущееСостояниеОбъектов)
	|	И Хозрасчетный.Регистратор = &Ссылка
	|	И Хозрасчетный.Организация = &Организация
	|	И Хозрасчетный.СчетКт В
	|			(ВЫБРАТЬ
	|				Т.Счет
	|			ИЗ
	|				втСчетаРеглУчета КАК Т)";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаСтоимостиРеглДанныеДляГруппировки(ТекстыЗапроса)
	
	ИмяТаблицы = "втСтоимостиРеглДанныеДляГруппировки";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаПараметрыОбъектовУчета(ТекстыЗапроса);
	ВременнаяТаблицаОстаткиРеглУчета(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втСтоимостиРеглДанныеДляГруппировки
	|"+
	"ВЫБРАТЬ
	|	втПараметрыОбъектовУчета.ОбъектУчета КАК ОбъектУчета,
	|	втОстаткиРеглУчета.Сумма КАК Сумма,
	|	втОстаткиРеглУчета.СуммаНУ КАК СуммаНУ
	|ПОМЕСТИТЬ втСтоимостиРеглДанныеДляГруппировки
	|ИЗ
	|	втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втОстаткиРеглУчета КАК втОстаткиРеглУчета
	|		ПО втПараметрыОбъектовУчета.ОбъектУчета = втОстаткиРеглУчета.ОбъектУчета
	|			И втПараметрыОбъектовУчета.СчетУчета = втОстаткиРеглУчета.Счет
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втПараметрыОбъектовУчета.ОбъектУчета,
	|	втОстаткиРеглУчета.Сумма,
	|	втОстаткиРеглУчета.СуммаНУ
	|ИЗ
	|	втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втОстаткиРеглУчета КАК втОстаткиРеглУчета
	|		ПО втПараметрыОбъектовУчета.ОбъектУчета = втОстаткиРеглУчета.ОбъектУчета
	|			И втПараметрыОбъектовУчета.СчетАмортизации = втОстаткиРеглУчета.Счет
	|";
		
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаСтоимостиРегл(ТекстыЗапроса)
	
	ИмяТаблицы = "втСтоимостиРегл";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаСтоимостиРеглДанныеДляГруппировки(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втСтоимостиРегл
	|"+
	"ВЫБРАТЬ
	|	втСтоимостиРеглДанныеДляГруппировки.ОбъектУчета КАК ОбъектУчета,
	|	СУММА(втСтоимостиРеглДанныеДляГруппировки.Сумма) КАК Сумма,
	|	СУММА(втСтоимостиРеглДанныеДляГруппировки.СуммаНУ) КАК СуммаНУ
	|ПОМЕСТИТЬ втСтоимостиРегл
	|ИЗ
	|	втСтоимостиРеглДанныеДляГруппировки КАК втСтоимостиРеглДанныеДляГруппировки
	|
	|СГРУППИРОВАТЬ ПО
	|	втСтоимостиРеглДанныеДляГруппировки.ОбъектУчета";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаСтоимостиУпрПрочиеАктивыДанныеДляГруппировки(ТекстыЗапроса)
	
	ИмяТаблицы = "втСтоимостиУпрПрочиеАктивыДанные";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаПараметрыОбъектовУчета(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втСтоимостиУпрПрочиеАктивыДанныеДляГруппировки
	|"+
	"ВЫБРАТЬ
	|	ПрочиеАктивыПассивыОстатки.Организация КАК Организация,
	|	ПрочиеАктивыПассивыОстатки.Подразделение КАК Подразделение,
	|	ПрочиеАктивыПассивыОстатки.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ПрочиеАктивыПассивыОстатки.Статья КАК Статья,
	|	ПрочиеАктивыПассивыОстатки.Аналитика КАК Аналитика,
	|	ПрочиеАктивыПассивыОстатки.СуммаОстаток КАК Сумма
	|ПОМЕСТИТЬ втСтоимостиУпрПрочиеАктивыДанныеДляГруппировки
	|ИЗ
	|	РегистрНакопления.ПрочиеАктивыПассивы.Остатки(
	|			&КонецМесяца,
	|			Организация = &Организация
	|				И Статья В (ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.НематериальныеАктивы), ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ОсновныеСредства))
	|				И (Аналитика, НаправлениеДеятельности) В
	|					(ВЫБРАТЬ
	|						Т.ОбъектУчета,
	|						Т.НаправлениеДеятельности
	|					ИЗ
	|						втПараметрыОбъектовУчета КАК Т)) КАК ПрочиеАктивыПассивыОстатки
	|ГДЕ
	|	&ПогашениеУпрЗатрат
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПрочиеАктивыПассивы.Организация,
	|	ПрочиеАктивыПассивы.Подразделение,
	|	ПрочиеАктивыПассивы.НаправлениеДеятельности,
	|	ПрочиеАктивыПассивы.Статья,
	|	ПрочиеАктивыПассивы.Аналитика,
	|	ВЫБОР
	|		КОГДА ПрочиеАктивыПассивы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА -ПрочиеАктивыПассивы.Сумма
	|		ИНАЧЕ ПрочиеАктивыПассивы.Сумма
	|	КОНЕЦ
	|ИЗ
	|	РегистрНакопления.ПрочиеАктивыПассивы КАК ПрочиеАктивыПассивы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|		ПО ПрочиеАктивыПассивы.Аналитика = втПараметрыОбъектовУчета.ОбъектУчета
	|			И ПрочиеАктивыПассивы.НаправлениеДеятельности = втПараметрыОбъектовУчета.НаправлениеДеятельности
	|ГДЕ
	|	&ПогашениеУпрЗатрат
	|	И ПрочиеАктивыПассивы.Статья В (
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.НематериальныеАктивы), 
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ОсновныеСредства))
	|	И ПрочиеАктивыПассивы.Регистратор = &Ссылка
	|	И ПрочиеАктивыПассивы.Организация = &Организация
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПрочиеАктивыПассивы.Организация,
	|	ПрочиеАктивыПассивы.Подразделение,
	|	ПрочиеАктивыПассивы.НаправлениеДеятельности,
	|	ПрочиеАктивыПассивы.Статья,
	|	ПрочиеАктивыПассивы.Аналитика,
	|	ВЫБОР
	|		КОГДА ПрочиеАктивыПассивы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА -ПрочиеАктивыПассивы.Сумма
	|		ИНАЧЕ ПрочиеАктивыПассивы.Сумма
	|	КОНЕЦ
	|ИЗ
	|	РегистрНакопления.ПрочиеАктивыПассивы КАК ПрочиеАктивыПассивы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|		ПО ПрочиеАктивыПассивы.Аналитика = втПараметрыОбъектовУчета.ОбъектУчета
	|			И ПрочиеАктивыПассивы.НаправлениеДеятельности = втПараметрыОбъектовУчета.НаправлениеДеятельности
	|ГДЕ
	|	&ПогашениеУпрЗатрат
	|	И ПрочиеАктивыПассивы.Организация = &Организация
	|	И ПрочиеАктивыПассивы.Статья В (
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.НематериальныеАктивы), 
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ОсновныеСредства))
	|	И ПрочиеАктивыПассивы.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4
	|	И &ИспользоватьВнеоборотныеАктивы2_4
	|	И ПрочиеАктивыПассивы.Период МЕЖДУ НАЧАЛОПЕРИОДА(&НачалоУчета2_4, ДЕНЬ) И КОНЕЦПЕРИОДА(&НачалоУчета2_4, ДЕНЬ)
	|	И КОНЕЦПЕРИОДА(&Период, МЕСЯЦ) = КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(&НачалоУчета2_4, ДЕНЬ, -1), МЕСЯЦ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПрочиеАктивыПассивы.Организация,
	|	ПрочиеАктивыПассивы.Подразделение,
	|	ПрочиеАктивыПассивы.НаправлениеДеятельности,
	|	ПрочиеАктивыПассивы.Статья,
	|	ПрочиеАктивыПассивы.Аналитика,
	|	ВЫБОР
	|		КОГДА ПрочиеАктивыПассивы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА -ПрочиеАктивыПассивы.Сумма
	|		ИНАЧЕ ПрочиеАктивыПассивы.Сумма
	|	КОНЕЦ
	|ИЗ
	|	РегистрНакопления.ПрочиеАктивыПассивы КАК ПрочиеАктивыПассивы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|		ПО ПрочиеАктивыПассивы.Аналитика = втПараметрыОбъектовУчета.ОбъектУчета
	|			И ПрочиеАктивыПассивы.НаправлениеДеятельности = втПараметрыОбъектовУчета.НаправлениеДеятельности
	|ГДЕ
	|	&ПогашениеУпрЗатрат
	|	И ПрочиеАктивыПассивы.Организация = &Организация
	|	И (ПрочиеАктивыПассивы.Регистратор ССЫЛКА Документ.ВводОстатков
	|		ИЛИ ПрочиеАктивыПассивы.Регистратор ССЫЛКА Документ.ВводОстатковПрочихАктивовПассивов
	|		ИЛИ ПрочиеАктивыПассивы.Регистратор ССЫЛКА Документ.ВводОстатковСПодотчетниками
	|		ИЛИ ПрочиеАктивыПассивы.Регистратор ССЫЛКА Документ.ВводОстатковПрочиеРасходы)
	|	И &ИспользоватьВнеоборотныеАктивы2_4
	|	И ПрочиеАктивыПассивы.Период МЕЖДУ НАЧАЛОПЕРИОДА(&НачалоУчета2_4, ДЕНЬ) И КОНЕЦПЕРИОДА(&НачалоУчета2_4, ДЕНЬ)
	|	И КОНЕЦПЕРИОДА(&Период, МЕСЯЦ) = КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(&НачалоУчета2_4, ДЕНЬ, -1), МЕСЯЦ)";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаСтоимостиУпрПрочиеАктивы(ТекстыЗапроса) Экспорт
	
	ИмяТаблицы = "втСтоимостиУпрПрочиеАктивы";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаСтоимостиУпрПрочиеАктивыДанныеДляГруппировки(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втСтоимостиУпрПрочиеАктивы
	|"+
	"ВЫБРАТЬ
	|	втСтоимостиУпрПрочиеАктивыДанныеДляГруппировки.Организация КАК Организация,
	|	втСтоимостиУпрПрочиеАктивыДанныеДляГруппировки.Подразделение КАК Подразделение,
	|	втСтоимостиУпрПрочиеАктивыДанныеДляГруппировки.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	втСтоимостиУпрПрочиеАктивыДанныеДляГруппировки.Статья КАК Статья,
	|	втСтоимостиУпрПрочиеАктивыДанныеДляГруппировки.Аналитика КАК Аналитика,
	|	СУММА(втСтоимостиУпрПрочиеАктивыДанныеДляГруппировки.Сумма) КАК Сумма
	|ПОМЕСТИТЬ втСтоимостиУпрПрочиеАктивы
	|ИЗ
	|	втСтоимостиУпрПрочиеАктивыДанныеДляГруппировки КАК втСтоимостиУпрПрочиеАктивыДанныеДляГруппировки
	|
	|СГРУППИРОВАТЬ ПО
	|	втСтоимостиУпрПрочиеАктивыДанныеДляГруппировки.Организация,
	|	втСтоимостиУпрПрочиеАктивыДанныеДляГруппировки.Подразделение,
	|	втСтоимостиУпрПрочиеАктивыДанныеДляГруппировки.НаправлениеДеятельности,
	|	втСтоимостиУпрПрочиеАктивыДанныеДляГруппировки.Статья,
	|	втСтоимостиУпрПрочиеАктивыДанныеДляГруппировки.Аналитика
	|
	|ИМЕЮЩИЕ
	|	СУММА(втСтоимостиУпрПрочиеАктивыДанныеДляГруппировки.Сумма) > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Аналитика";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаСтоимостиУпрПрочиеРасходыДанныеДляГруппировки(ТекстыЗапроса)
	
	ИмяТаблицы = "втСтоимостиУпрПрочиеРасходыДанныеДляГруппировки";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаПараметрыОбъектовУчета(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втСтоимостиУпрПрочиеРасходыДанныеДляГруппировки
	|"+
	"ВЫБРАТЬ
	|	ПрочиеРасходыОстатки.Организация КАК Организация,
	|	ПрочиеРасходыОстатки.Подразделение КАК Подразделение,
	|	ПрочиеРасходыОстатки.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ПрочиеРасходыОстатки.СтатьяРасходов КАК СтатьяРасходов,
	|	ПрочиеРасходыОстатки.АналитикаРасходов КАК АналитикаРасходов,
	|	ПрочиеРасходыОстатки.СуммаОстаток КАК Сумма,
	|	ПрочиеРасходыОстатки.СуммаУпрОстаток КАК СуммаУпр,
	|	ПрочиеРасходыОстатки.СуммаБезНДСОстаток КАК СуммаБезНДС
	|ПОМЕСТИТЬ втСтоимостиУпрПрочиеРасходыДанныеДляГруппировки
	|ИЗ
	|	РегистрНакопления.ПрочиеРасходы.Остатки(
	|			&КонецМесяца,
	|			СтатьяРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|				И Организация = &Организация
	|				И (АналитикаРасходов, НаправлениеДеятельности) В
	|					(ВЫБРАТЬ
	|						Т.ОбъектУчета,
	|						Т.НаправлениеДеятельности
	|					ИЗ
	|						втПараметрыОбъектовУчета КАК Т)) КАК ПрочиеРасходыОстатки
	|ГДЕ
	|	&ПогашениеУпрЗатрат
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПрочиеРасходы.Организация,
	|	ПрочиеРасходы.Подразделение,
	|	ПрочиеРасходы.НаправлениеДеятельности,
	|	ПрочиеРасходы.СтатьяРасходов,
	|	ПрочиеРасходы.АналитикаРасходов,
	|	ВЫБОР
	|		КОГДА ПрочиеРасходы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА -ПрочиеРасходы.Сумма
	|		ИНАЧЕ ПрочиеРасходы.Сумма
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ПрочиеРасходы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА -ПрочиеРасходы.СуммаУпр
	|		ИНАЧЕ ПрочиеРасходы.СуммаУпр
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ПрочиеРасходы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА -ПрочиеРасходы.СуммаБезНДС
	|		ИНАЧЕ ПрочиеРасходы.СуммаБезНДС
	|	КОНЕЦ
	|ИЗ
	|	РегистрНакопления.ПрочиеРасходы КАК ПрочиеРасходы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|		ПО ПрочиеРасходы.АналитикаРасходов = втПараметрыОбъектовУчета.ОбъектУчета
	|			И ПрочиеРасходы.НаправлениеДеятельности = втПараметрыОбъектовУчета.НаправлениеДеятельности
	|			И ПрочиеРасходы.СтатьяРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|ГДЕ
	|	&ПогашениеУпрЗатрат
	|	И ПрочиеРасходы.Регистратор = &Ссылка
	|	И ПрочиеРасходы.Организация = &Организация
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПрочиеРасходы.Организация,
	|	ПрочиеРасходы.Подразделение,
	|	ПрочиеРасходы.НаправлениеДеятельности,
	|	ПрочиеРасходы.СтатьяРасходов,
	|	ПрочиеРасходы.АналитикаРасходов,
	|	ВЫБОР
	|		КОГДА ПрочиеРасходы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА -ПрочиеРасходы.Сумма
	|		ИНАЧЕ ПрочиеРасходы.Сумма
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ПрочиеРасходы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА -ПрочиеРасходы.СуммаУпр
	|		ИНАЧЕ ПрочиеРасходы.СуммаУпр
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ПрочиеРасходы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА -ПрочиеРасходы.СуммаБезНДС
	|		ИНАЧЕ ПрочиеРасходы.СуммаБезНДС
	|	КОНЕЦ
	|ИЗ
	|	РегистрНакопления.ПрочиеРасходы КАК ПрочиеРасходы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|		ПО ПрочиеРасходы.АналитикаРасходов = втПараметрыОбъектовУчета.ОбъектУчета
	|			И ПрочиеРасходы.НаправлениеДеятельности = втПараметрыОбъектовУчета.НаправлениеДеятельности
	|ГДЕ
	|	&ПогашениеУпрЗатрат
	|	И ПрочиеРасходы.Организация = &Организация
	|	И ПрочиеРасходы.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4
	|	И &ИспользоватьВнеоборотныеАктивы2_4
	|	И ПрочиеРасходы.Период МЕЖДУ НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(&НачалоУчета2_4, ДЕНЬ, -1), ДЕНЬ) И КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(&НачалоУчета2_4, ДЕНЬ, -1), ДЕНЬ)
	|	И КОНЕЦПЕРИОДА(&Период, МЕСЯЦ) = КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(&НачалоУчета2_4, ДЕНЬ, -1), МЕСЯЦ)";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаСтоимостиУпрПрочиеРасходы(ТекстыЗапроса) Экспорт
	
	ИмяТаблицы = "втСтоимостиУпрПрочиеРасходы";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаСтоимостиУпрПрочиеРасходыДанныеДляГруппировки(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втСтоимостиУпрПрочиеРасходы
	|"+
	"ВЫБРАТЬ
	|	втСтоимостиУпрПрочиеРасходыДанныеДляГруппировки.Организация КАК Организация,
	|	втСтоимостиУпрПрочиеРасходыДанныеДляГруппировки.Подразделение КАК Подразделение,
	|	втСтоимостиУпрПрочиеРасходыДанныеДляГруппировки.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	втСтоимостиУпрПрочиеРасходыДанныеДляГруппировки.СтатьяРасходов КАК СтатьяРасходов,
	|	втСтоимостиУпрПрочиеРасходыДанныеДляГруппировки.АналитикаРасходов КАК АналитикаРасходов,
	|	СУММА(втСтоимостиУпрПрочиеРасходыДанныеДляГруппировки.Сумма) КАК Сумма,
	|	СУММА(втСтоимостиУпрПрочиеРасходыДанныеДляГруппировки.СуммаУпр) КАК СуммаУпр,
	|	СУММА(втСтоимостиУпрПрочиеРасходыДанныеДляГруппировки.СуммаБезНДС) КАК СуммаБезНДС
	|ПОМЕСТИТЬ втСтоимостиУпрПрочиеРасходы
	|ИЗ
	|	втСтоимостиУпрПрочиеРасходыДанныеДляГруппировки КАК втСтоимостиУпрПрочиеРасходыДанныеДляГруппировки
	|
	|СГРУППИРОВАТЬ ПО
	|	втСтоимостиУпрПрочиеРасходыДанныеДляГруппировки.Организация,
	|	втСтоимостиУпрПрочиеРасходыДанныеДляГруппировки.Подразделение,
	|	втСтоимостиУпрПрочиеРасходыДанныеДляГруппировки.НаправлениеДеятельности,
	|	втСтоимостиУпрПрочиеРасходыДанныеДляГруппировки.СтатьяРасходов,
	|	втСтоимостиУпрПрочиеРасходыДанныеДляГруппировки.АналитикаРасходов
	|
	|ИМЕЮЩИЕ
	|	СУММА(втСтоимостиУпрПрочиеРасходыДанныеДляГруппировки.Сумма) > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаРасходов";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаАмортизацияУпрПрочиеАктивы(ТекстыЗапроса) Экспорт
	
	ИмяТаблицы = "втАмортизацияУпрПрочиеАктивы";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаНачисленнаяАмортизация(ТекстыЗапроса);
	ВременнаяТаблицаСтоимостиУпрПрочиеАктивы(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втАмортизацияУпрПрочиеАктивы
	|" +
	"ВЫБРАТЬ
	|	&Организация КАК Организация,
	|	втСтоимостиУпрПрочиеАктивы.Подразделение КАК Подразделение,
	|	втСтоимостиУпрПрочиеАктивы.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	втСтоимостиУпрПрочиеАктивы.Статья КАК Статья,
	|	втСтоимостиУпрПрочиеАктивы.Аналитика КАК Аналитика,
	|	СУММА(ВЫРАЗИТЬ(втСтоимостиУпрПрочиеАктивы.Сумма * втНачисленнаяАмортизация.Коэффициент КАК ЧИСЛО(15, 2))) КАК Сумма
	|ПОМЕСТИТЬ втАмортизацияУпрПрочиеАктивы
	|ИЗ
	|	втНачисленнаяАмортизация КАК втНачисленнаяАмортизация
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСтоимостиУпрПрочиеАктивы КАК втСтоимостиУпрПрочиеАктивы
	|		ПО втНачисленнаяАмортизация.ОбъектУчета = втСтоимостиУпрПрочиеАктивы.Аналитика
	|
	|СГРУППИРОВАТЬ ПО
	|	втСтоимостиУпрПрочиеАктивы.Подразделение,
	|	втСтоимостиУпрПрочиеАктивы.НаправлениеДеятельности,
	|	втСтоимостиУпрПрочиеАктивы.Статья,
	|	втСтоимостиУпрПрочиеАктивы.Аналитика";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаАмортизацияУпрПрочиеРасходы(ТекстыЗапроса) Экспорт
	
	ИмяТаблицы = "втАмортизацияУпрПрочиеРасходы";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаНачисленнаяАмортизация(ТекстыЗапроса);
	ВременнаяТаблицаСтоимостиУпрПрочиеРасходы(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втАмортизацияУпрПрочиеРасходы
	|" +
	"ВЫБРАТЬ
	|	&Организация КАК Организация,
	|	втСтоимостиУпрПрочиеРасходы.Подразделение КАК Подразделение,
	|	втСтоимостиУпрПрочиеРасходы.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	втСтоимостиУпрПрочиеРасходы.СтатьяРасходов КАК СтатьяРасходов,
	|	втСтоимостиУпрПрочиеРасходы.АналитикаРасходов КАК АналитикаРасходов,
	|	СУММА(ВЫРАЗИТЬ(втСтоимостиУпрПрочиеРасходы.Сумма * втНачисленнаяАмортизация.Коэффициент КАК ЧИСЛО(15, 2))) КАК Сумма,
	|	СУММА(ВЫРАЗИТЬ(втСтоимостиУпрПрочиеРасходы.СуммаУпр * втНачисленнаяАмортизация.Коэффициент КАК ЧИСЛО(15, 2))) КАК СуммаУпр,
	|	0 КАК СуммаБезНДС,
	|	0 КАК СуммаРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница
	|ПОМЕСТИТЬ втАмортизацияУпрПрочиеРасходы
	|ИЗ
	|	втНачисленнаяАмортизация КАК втНачисленнаяАмортизация
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСтоимостиУпрПрочиеРасходы КАК втСтоимостиУпрПрочиеРасходы
	|		ПО втНачисленнаяАмортизация.ОбъектУчета = втСтоимостиУпрПрочиеРасходы.АналитикаРасходов
	|ГДЕ
	|	втСтоимостиУпрПрочиеРасходы.СтатьяРасходов.ВариантРаспределенияРасходовРегл В (
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаНаправленияДеятельности), 
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаРасходыБудущихПериодов), 
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы), 
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы), 
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НеРаспределять))
	|	И НЕ втСтоимостиУпрПрочиеРасходы.СтатьяРасходов.РасходыНаРемонтОС
	|
	|СГРУППИРОВАТЬ ПО
	|	втСтоимостиУпрПрочиеРасходы.Подразделение,
	|	втСтоимостиУпрПрочиеРасходы.НаправлениеДеятельности,
	|	втСтоимостиУпрПрочиеРасходы.СтатьяРасходов,
	|	втСтоимостиУпрПрочиеРасходы.АналитикаРасходов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Организация,
	|	втСтоимостиУпрПрочиеРасходы.Подразделение,
	|	втСтоимостиУпрПрочиеРасходы.НаправлениеДеятельности,
	|	втСтоимостиУпрПрочиеРасходы.СтатьяРасходов,
	|	втСтоимостиУпрПрочиеРасходы.АналитикаРасходов,
	|	СУММА(ВЫРАЗИТЬ(втСтоимостиУпрПрочиеРасходы.Сумма * втНачисленнаяАмортизация.Коэффициент КАК ЧИСЛО(15, 2))),
	|	СУММА(ВЫРАЗИТЬ(втСтоимостиУпрПрочиеРасходы.СуммаУпр * втНачисленнаяАмортизация.Коэффициент КАК ЧИСЛО(15, 2))),
	|	СУММА(ВЫРАЗИТЬ(втСтоимостиУпрПрочиеРасходы.СуммаБезНДС * втНачисленнаяАмортизация.Коэффициент КАК ЧИСЛО(15, 2))),
	|	0,
	|	0,
	|	0
	|ИЗ
	|	втНачисленнаяАмортизация КАК втНачисленнаяАмортизация
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСтоимостиУпрПрочиеРасходы КАК втСтоимостиУпрПрочиеРасходы
	|		ПО втНачисленнаяАмортизация.ОбъектУчета = втСтоимостиУпрПрочиеРасходы.АналитикаРасходов
	|ГДЕ
	|	втСтоимостиУпрПрочиеРасходы.СтатьяРасходов.ВариантРаспределенияРасходовРегл В (
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров), 
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты))
	|	И НЕ втСтоимостиУпрПрочиеРасходы.СтатьяРасходов.РасходыНаРемонтОС
	|
	|СГРУППИРОВАТЬ ПО
	|	втСтоимостиУпрПрочиеРасходы.Подразделение,
	|	втСтоимостиУпрПрочиеРасходы.НаправлениеДеятельности,
	|	втСтоимостиУпрПрочиеРасходы.СтатьяРасходов,
	|	втСтоимостиУпрПрочиеРасходы.АналитикаРасходов";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры
Процедура ВременнаяТаблицаТекущееСостояниеОбъектовДанныеДляГруппировки(ТекстыЗапроса)
	
	ИмяТаблицы = "втТекущееСостояниеОбъектовДанныеДляГруппировки";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаНачисленнаяАмортизацияДокумента(ТекстыЗапроса);
	ВременнаяТаблицаПараметрыОбъектовУчета(ТекстыЗапроса);
	ВременнаяТаблицаОстаткиРеглУчета(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втТекущееСостояниеОбъектовДанныеДляГруппировки
	|"+
	"ВЫБРАТЬ
	|	втПараметрыОбъектовУчета.ОбъектУчета КАК ОбъектУчета,
	|	втПараметрыОбъектовУчета.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	втОстаткиРеглУчета.Сумма КАК ВосстановительнаяСтоимостьБУ,
	|	втОстаткиРеглУчета.СуммаНУ КАК ВосстановительнаяСтоимостьНУ,
	|	0 КАК ВосстановительнаяСтоимостьПР,
	|	0 КАК ВосстановительнаяСтоимостьВР,
	|	0 КАК НакопленнаяАмортизацияБУ,
	|	0 КАК НакопленнаяАмортизацияНУ,
	|	0 КАК НакопленнаяАмортизацияПР,
	|	0 КАК НакопленнаяАмортизацияВР,
	|	0 КАК ВосстановительнаяСтоимостьБУЦФ,
	|	0 КАК ВосстановительнаяСтоимостьНУЦФ,
	|	0 КАК ВосстановительнаяСтоимостьПРЦФ,
	|	0 КАК ВосстановительнаяСтоимостьВРЦФ,
	|	0 КАК НакопленнаяАмортизацияБУЦФ,
	|	0 КАК НакопленнаяАмортизацияНУЦФ,
	|	0 КАК НакопленнаяАмортизацияПРЦФ,
	|	0 КАК НакопленнаяАмортизацияВРЦФ,
	|	0 КАК КорректировкаСтоимостиНУ,
	|	0 КАК КорректировкаСтоимостиПР,
	|	0 КАК КорректировкаСтоимостиВР
	|	
	|ПОМЕСТИТЬ втТекущееСостояниеОбъектовДанныеДляГруппировки
	|ИЗ
	|	втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втОстаткиРеглУчета КАК втОстаткиРеглУчета
	|		ПО втПараметрыОбъектовУчета.ОбъектУчета = втОстаткиРеглУчета.ОбъектУчета
	|			И втПараметрыОбъектовУчета.СчетУчета = втОстаткиРеглУчета.Счет
	|ГДЕ
	|	&ТекущееСостояниеОбъектов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втПараметрыОбъектовУчета.ОбъектУчета,
	|	втПараметрыОбъектовУчета.НаправлениеДеятельности,
	|	0,
	|	0,
	|	0,
	|	0,
	|	-втОстаткиРеглУчета.Сумма,
	|	-втОстаткиРеглУчета.СуммаНУ,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0
	|ИЗ
	|	втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втОстаткиРеглУчета КАК втОстаткиРеглУчета
	|		ПО втПараметрыОбъектовУчета.ОбъектУчета = втОстаткиРеглУчета.ОбъектУчета
	|			И втПараметрыОбъектовУчета.СчетАмортизации = втОстаткиРеглУчета.Счет
	|ГДЕ
	|	&ТекущееСостояниеОбъектов
	|
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втНачисленнаяАмортизацияДокумента.ОбъектУчета,
	|	втПараметрыОбъектовУчета.НаправлениеДеятельности,
	|	0,
	|	0,
	|	0,
	|	0,
	|	втНачисленнаяАмортизацияДокумента.СуммаБУ,
	|	втНачисленнаяАмортизацияДокумента.СуммаНУ,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0
	|ИЗ
	|	втНачисленнаяАмортизацияДокумента КАК втНачисленнаяАмортизацияДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|		ПО втПараметрыОбъектовУчета.ОбъектУчета = втНачисленнаяАмортизацияДокумента.ОбъектУчета
	|ГДЕ
	|	&ТекущееСостояниеОбъектов
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектУчета";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаТекущееСостояниеОбъектов(ТекстыЗапроса)
	
	ИмяТаблицы = "втТекущееСостояниеОбъектов";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаТекущееСостояниеОбъектовДанныеДляГруппировки(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втТекущееСостояниеОбъектов
	|"+
	"ВЫБРАТЬ
	|	втТекущееСостояниеОбъектовДанныеДляГруппировки.ОбъектУчета КАК ОбъектУчета,
	|	втТекущееСостояниеОбъектовДанныеДляГруппировки.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьБУ) КАК ВосстановительнаяСтоимостьБУ,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьНУ) КАК ВосстановительнаяСтоимостьНУ,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьПР) КАК ВосстановительнаяСтоимостьПР,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьВР) КАК ВосстановительнаяСтоимостьВР,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияБУ) КАК НакопленнаяАмортизацияБУ,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияНУ) КАК НакопленнаяАмортизацияНУ,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияПР) КАК НакопленнаяАмортизацияПР,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияВР) КАК НакопленнаяАмортизацияВР,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьБУ) - СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияБУ) КАК ОстаточнаяСтоимостьБУ,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьНУ) - СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияНУ) КАК ОстаточнаяСтоимостьНУ,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьПР) - СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияПР) КАК ОстаточнаяСтоимостьПР,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьВР) - СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияВР) КАК ОстаточнаяСтоимостьВР,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьБУЦФ) КАК ВосстановительнаяСтоимостьБУЦФ,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьНУЦФ) КАК ВосстановительнаяСтоимостьНУЦФ,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьПРЦФ) КАК ВосстановительнаяСтоимостьПРЦФ,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьВРЦФ) КАК ВосстановительнаяСтоимостьВРЦФ,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияБУЦФ) КАК НакопленнаяАмортизацияБУЦФ,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияНУЦФ) КАК НакопленнаяАмортизацияНУЦФ,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияПРЦФ) КАК НакопленнаяАмортизацияПРЦФ,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияВРЦФ) КАК НакопленнаяАмортизацияВРЦФ,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьБУЦФ) - СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияБУЦФ) КАК ОстаточнаяСтоимостьБУЦФ,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьНУЦФ) - СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияНУЦФ) КАК ОстаточнаяСтоимостьНУЦФ,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьПРЦФ) - СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияПРЦФ) КАК ОстаточнаяСтоимостьПРЦФ,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьВРЦФ) - СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияВРЦФ) КАК ОстаточнаяСтоимостьВРЦФ,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьБУ) + СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьБУЦФ) КАК ПолнаяВосстановительнаяСтоимостьБУ,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьНУ) + СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьНУЦФ) КАК ПолнаяВосстановительнаяСтоимостьНУ,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьПР) + СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьПРЦФ) КАК ПолнаяВосстановительнаяСтоимостьПР,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьВР) + СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьВРЦФ) КАК ПолнаяВосстановительнаяСтоимостьВР,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияБУ) + СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияБУЦФ) КАК ПолнаяНакопленнаяАмортизацияБУ,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияНУ) + СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияНУЦФ) КАК ПолнаяНакопленнаяАмортизацияНУ,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияПР) + СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияПРЦФ) КАК ПолнаяНакопленнаяАмортизацияПР,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияВР) + СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияВРЦФ) КАК ПолнаяНакопленнаяАмортизацияВР,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьБУ) - СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияБУ) + СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьБУЦФ) - СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияБУЦФ) КАК ПолнаяОстаточнаяСтоимостьБУ,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьНУ) - СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияНУ) + СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьНУЦФ) - СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияНУЦФ) КАК ПолнаяОстаточнаяСтоимостьНУ,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьПР) - СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияПР) + СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьПРЦФ) - СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияПРЦФ) КАК ПолнаяОстаточнаяСтоимостьПР,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьВР) - СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияВР) + СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьВРЦФ) - СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияВРЦФ) КАК ПолнаяОстаточнаяСтоимостьВР,
	|
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.КорректировкаСтоимостиНУ) КАК КорректировкаСтоимостиНУ,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.КорректировкаСтоимостиПР) КАК КорректировкаСтоимостиПР,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.КорректировкаСтоимостиВР) КАК КорректировкаСтоимостиВР,
	|
	|	ВЫБОР
	|		КОГДА СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьБУ) = 0
	|				И СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьБУЦФ) = 0
	|			ТОГДА 0
	|		ИНАЧЕ СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьБУЦФ) / (СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьБУ) + СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьБУЦФ))
	|	КОНЕЦ КАК ДоляБУЦФ,
	|	ВЫБОР
	|		КОГДА СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьНУ) = 0
	|				И СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьНУЦФ) = 0
	|			ТОГДА 0
	|		ИНАЧЕ СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьНУЦФ) / (СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьНУ) + СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьНУЦФ))
	|	КОНЕЦ КАК ДоляНУЦФ,
	|	ВЫБОР
	|		КОГДА СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьПР) = 0
	|				И СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьПРЦФ) = 0
	|			ТОГДА 0
	|		ИНАЧЕ СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьПРЦФ) / (СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьПР) + СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьПРЦФ))
	|	КОНЕЦ КАК ДоляПРЦФ,
	|	ВЫБОР
	|		КОГДА СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьВР) = 0
	|				И СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьВРЦФ) = 0
	|			ТОГДА 0
	|		ИНАЧЕ СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьВРЦФ) / (СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьВР) + СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьВРЦФ))
	|	КОНЕЦ КАК ДоляВРЦФ
	|ПОМЕСТИТЬ втТекущееСостояниеОбъектов
	|ИЗ
	|	втТекущееСостояниеОбъектовДанныеДляГруппировки КАК втТекущееСостояниеОбъектовДанныеДляГруппировки
	|
	|СГРУППИРОВАТЬ ПО
	|	втТекущееСостояниеОбъектовДанныеДляГруппировки.ОбъектУчета,
	|	втТекущееСостояниеОбъектовДанныеДляГруппировки.НаправлениеДеятельности
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектУчета";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

#КонецОбласти

#Область ОтражениеАмортизацииВОперативномУчете_Движения

Функция ПрочиеРасходы_АмортизацияРеглСтоимости() Экспорт
	
	// Амортизация регл. стоимости основных средств
	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	
	|	втНачисленнаяАмортизация.Организация КАК Организация,
	|	втНачисленнаяАмортизация.Подразделение КАК Подразделение,
	|	втНачисленнаяАмортизация.СтатьяРасходов КАК СтатьяРасходов,
	|	втНачисленнаяАмортизация.АналитикаРасходов КАК АналитикаРасходов,
	|	втНачисленнаяАмортизация.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	&НалоговоеНазначениеОрганизации КАК НалоговоеНазначение,
	|	
	|	0 КАК СуммаСНДС,
	|	0 КАК СуммаБезНДС,
	|	0 КАК СуммаБезНДСУпр,
	|	втНачисленнаяАмортизация.СуммаБУ КАК СуммаСНДСРегл,
	|	втНачисленнаяАмортизация.СуммаБУ КАК СуммаБезНДСРегл,
	|	0 КАК НДСРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры
	|ИЗ
	|	втНачисленнаяАмортизация КАК втНачисленнаяАмортизация
	|";
	
КонецФункции

Функция ПрочиеРасходы_АмортизацияУпрСтоимостиИзПрочихАктивов() Экспорт
	
	// Начисление амортизации от остатка упр. стоимости, хранящейся в регистре ПрочиеАктивыПассивы.
	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	
	|	втНачисленнаяАмортизация.Организация КАК Организация,
	|	втНачисленнаяАмортизация.Подразделение КАК Подразделение,
	|	втНачисленнаяАмортизация.СтатьяРасходов КАК СтатьяРасходов,
	|	втНачисленнаяАмортизация.АналитикаРасходов КАК АналитикаРасходов,
	|	втНачисленнаяАмортизация.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	&НалоговоеНазначениеОрганизации КАК НалоговоеНазначение,
	|	
	|	СУММА(ВЫРАЗИТЬ(втСтоимостиУпрПрочиеАктивы.Сумма
	|		* втНачисленнаяАмортизация.Коэффициент КАК ЧИСЛО(15, 2))) КАК СуммаСНДС,
	|	СУММА(ВЫРАЗИТЬ(втСтоимостиУпрПрочиеАктивы.Сумма
	|		* втНачисленнаяАмортизация.Коэффициент КАК ЧИСЛО(15, 2))) КАК СуммаБезНДС,
	|	СУММА(ВЫРАЗИТЬ(втСтоимостиУпрПрочиеАктивы.Сумма
	|		* втНачисленнаяАмортизация.Коэффициент КАК ЧИСЛО(15, 2))) КАК СуммаБезНДСУпр,
	|	0 КАК СуммаСНДСРегл,
	|	0 КАК СуммаБезНДСРегл,
	|	0 КАК НДСРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры
	|ИЗ
	|	втНачисленнаяАмортизация КАК втНачисленнаяАмортизация
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСтоимостиУпрПрочиеАктивы КАК втСтоимостиУпрПрочиеАктивы
	|		ПО втНачисленнаяАмортизация.ОбъектУчета = втСтоимостиУпрПрочиеАктивы.Аналитика
	|ГДЕ
	|	&ИспользоватьУчетПрочихАктивовПассивов
	|	И &ПогашениеУпрЗатрат
	|СГРУППИРОВАТЬ ПО
	|	втНачисленнаяАмортизация.Организация,
	|	втНачисленнаяАмортизация.Подразделение,
	|	втНачисленнаяАмортизация.НаправлениеДеятельности,
	|	втНачисленнаяАмортизация.СтатьяРасходов,
	|	втНачисленнаяАмортизация.АналитикаРасходов
	|";
	
КонецФункции

Функция ПрочиеРасходы_АмортизацияУпрСтоимостиИзПрочихРасходов() Экспорт
	
	// Начисление амортизации от остатка упр. стоимости, хранящейся в регистре ПрочиеРасходы.
	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	
	|	втАмортизацияУпрПрочиеРасходы.Организация КАК Организация,
	|	втАмортизацияУпрПрочиеРасходы.Подразделение КАК Подразделение,
	|	втАмортизацияУпрПрочиеРасходы.СтатьяРасходов КАК СтатьяРасходов,
	|	втАмортизацияУпрПрочиеРасходы.АналитикаРасходов КАК АналитикаРасходов,
	|	втАмортизацияУпрПрочиеРасходы.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	&НалоговоеНазначениеОрганизации КАК НалоговоеНазначение,
	|	
	|	втАмортизацияУпрПрочиеРасходы.Сумма КАК СуммаСНДС,
	|	втАмортизацияУпрПрочиеРасходы.Сумма КАК СуммаБезНДС,
	|	втАмортизацияУпрПрочиеРасходы.СуммаУпр КАК СуммаБезНДСУпр,
	|	втАмортизацияУпрПрочиеРасходы.СуммаРегл КАК СуммаСНДСРегл,
	|	втАмортизацияУпрПрочиеРасходы.СуммаРегл КАК СуммаБезНДСРегл,
	|	0 КАК НДСРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры
	|ИЗ
	|	втАмортизацияУпрПрочиеРасходы КАК втАмортизацияУпрПрочиеРасходы
	|ГДЕ
	|	&ПогашениеУпрЗатрат
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	
	|	втНачисленнаяАмортизация.Организация КАК Организация,
	|	втНачисленнаяАмортизация.Подразделение КАК Подразделение,
	|	втНачисленнаяАмортизация.СтатьяРасходов КАК СтатьяРасходов,
	|	втНачисленнаяАмортизация.АналитикаРасходов КАК АналитикаРасходов,
	|	втНачисленнаяАмортизация.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	&НалоговоеНазначениеОрганизации КАК НалоговоеНазначение,
	|	
	|	СУММА(ВЫРАЗИТЬ(втСтоимостиУпрПрочиеРасходы.Сумма
	|		* втНачисленнаяАмортизация.Коэффициент КАК ЧИСЛО(15, 2))) КАК СуммаСНДС,
	|	СУММА(ВЫРАЗИТЬ(втСтоимостиУпрПрочиеРасходы.СуммаУпр
	|		* втНачисленнаяАмортизация.Коэффициент КАК ЧИСЛО(15, 2))) КАК СуммаБезНДС,
	|	СУММА(ВЫРАЗИТЬ(втСтоимостиУпрПрочиеРасходы.Сумма
	|		* втНачисленнаяАмортизация.Коэффициент КАК ЧИСЛО(15, 2))) КАК СуммаБезНДСУпр,
	|	0 КАК СуммаСНДСРегл,
	|	0 КАК СуммаБезНДСРегл,
	|	0 КАК НДСРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры
	|ИЗ
	|	втНачисленнаяАмортизация КАК втНачисленнаяАмортизация
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСтоимостиУпрПрочиеРасходы КАК втСтоимостиУпрПрочиеРасходы
	|		ПО втНачисленнаяАмортизация.ОбъектУчета = втСтоимостиУпрПрочиеРасходы.АналитикаРасходов
	|ГДЕ
	|	&ПогашениеУпрЗатрат
	|СГРУППИРОВАТЬ ПО
	|	втНачисленнаяАмортизация.Организация,
	|	втНачисленнаяАмортизация.Подразделение,
	|	втНачисленнаяАмортизация.НаправлениеДеятельности,
	|	втНачисленнаяАмортизация.СтатьяРасходов,
	|	втНачисленнаяАмортизация.АналитикаРасходов
	|";
	
КонецФункции

Функция ПрочиеРасходы_СписаниеОстаточнойУпрСтоимостиИзПрочихАктивов()
	
	// Списание остатка упр. стоимости, хранящейся в регистре ПрочиеАктивыПассивы
	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|	&СтатьяРасходов КАК СтатьяРасходов,
	|	&АналитикаРасходов КАК АналитикаРасходов,
	|	ЕСТЬNULL(втПараметрыОбъектовУчета.НаправлениеДеятельности,
	|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельности,
	|	&НалоговоеНазначениеОрганизации КАК НалоговоеНазначение,
	|	
	|	втСтоимостиУпрПрочиеАктивы.Сумма - ЕСТЬNULL(втАмортизацияУпрПрочиеАктивы.Сумма, 0) КАК СуммаСНДС,
	|	втСтоимостиУпрПрочиеАктивы.Сумма - ЕСТЬNULL(втАмортизацияУпрПрочиеАктивы.Сумма, 0) КАК СуммаБезНДС,
	|	втСтоимостиУпрПрочиеАктивы.Сумма - ЕСТЬNULL(втАмортизацияУпрПрочиеАктивы.Сумма, 0) КАК СуммаБезНДСУпр,
	|	0 КАК СуммаСНДСРегл,
	|	0 КАК СуммаБезНДСРегл,
	|	0 КАК НДСРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры
	|ИЗ
	|	втСтоимостиУпрПрочиеАктивы КАК втСтоимостиУпрПрочиеАктивы
	|	ЛЕВОЕ СОЕДИНЕНИЕ втАмортизацияУпрПрочиеАктивы КАК втАмортизацияУпрПрочиеАктивы
	|	ПО втСтоимостиУпрПрочиеАктивы.Организация = втАмортизацияУпрПрочиеАктивы.Организация
	|		И втСтоимостиУпрПрочиеАктивы.Подразделение = втАмортизацияУпрПрочиеАктивы.Подразделение
	|		И втСтоимостиУпрПрочиеАктивы.НаправлениеДеятельности = втАмортизацияУпрПрочиеАктивы.НаправлениеДеятельности
	|		И втСтоимостиУпрПрочиеАктивы.Статья = втАмортизацияУпрПрочиеАктивы.Статья
	|		И втСтоимостиУпрПрочиеАктивы.Аналитика = втАмортизацияУпрПрочиеАктивы.Аналитика
	|	ЛЕВОЕ СОЕДИНЕНИЕ втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|	ПО втСтоимостиУпрПрочиеАктивы.Аналитика = втПараметрыОбъектовУчета.ОбъектУчета
	|ГДЕ
	|	&СписаниеОстаточнойСтоимости
	|";
	
КонецФункции

Функция ПрочиеРасходы_СписаниеОстаточнойУпрСтоимостиИзПрочихРасходов()
	
	// Списание остатка упр. стоимости, хранящейся в регистре ПрочиеРасходы
	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	
	|	&Организация КАК Организация,
	|	втСтоимостиУпрПрочиеРасходы.Подразделение КАК Подразделение,
	|	втСтоимостиУпрПрочиеРасходы.СтатьяРасходов КАК СтатьяРасходов,
	|	втСтоимостиУпрПрочиеРасходы.АналитикаРасходов КАК АналитикаРасходов,
	|	втСтоимостиУпрПрочиеРасходы.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	&НалоговоеНазначениеОрганизации КАК НалоговоеНазначение,
	|	
	|	втСтоимостиУпрПрочиеРасходы.Сумма - ЕСТЬNULL(втАмортизацияУпрПрочиеРасходы.Сумма, 0) КАК СуммаСНДС,
	|	втСтоимостиУпрПрочиеРасходы.Сумма - ЕСТЬNULL(втАмортизацияУпрПрочиеРасходы.Сумма, 0) КАК СуммаБезНДС,
	|	втСтоимостиУпрПрочиеРасходы.СуммаУпр - ЕСТЬNULL(втАмортизацияУпрПрочиеРасходы.СуммаУпр, 0) КАК СуммаБезНДСУпр,
	|	0 КАК СуммаСНДСРегл,
	|	0 КАК СуммаБезНДСРегл,
	|	0 КАК НДСРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры
	|ИЗ
	|	втСтоимостиУпрПрочиеРасходы КАК втСтоимостиУпрПрочиеРасходы
	|	ЛЕВОЕ СОЕДИНЕНИЕ втАмортизацияУпрПрочиеРасходы КАК втАмортизацияУпрПрочиеРасходы
	|	ПО втСтоимостиУпрПрочиеРасходы.Организация = втАмортизацияУпрПрочиеРасходы.Организация
	|		И втСтоимостиУпрПрочиеРасходы.Подразделение = втАмортизацияУпрПрочиеРасходы.Подразделение
	|		И втСтоимостиУпрПрочиеРасходы.НаправлениеДеятельности = втАмортизацияУпрПрочиеРасходы.НаправлениеДеятельности
	|		И втСтоимостиУпрПрочиеРасходы.СтатьяРасходов = втАмортизацияУпрПрочиеРасходы.СтатьяРасходов
	|		И втСтоимостиУпрПрочиеРасходы.АналитикаРасходов = втАмортизацияУпрПрочиеРасходы.АналитикаРасходов
	|ГДЕ
	|	&СписаниеОстаточнойСтоимости
	|	И НЕ втСтоимостиУпрПрочиеРасходы.СтатьяРасходов.РасходыНаРемонтОС
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|	&СтатьяРасходов КАК СтатьяРасходов,
	|	&АналитикаРасходов КАК АналитикаРасходов,
	|	ЕСТЬNULL(втПараметрыОбъектовУчета.НаправлениеДеятельности,
	|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельности,
	|	&НалоговоеНазначениеОрганизации КАК НалоговоеНазначение,
	|	
	|	втСтоимостиУпрПрочиеРасходы.Сумма - ЕСТЬNULL(втАмортизацияУпрПрочиеРасходы.Сумма, 0) КАК СуммаСНДС,
	|	втСтоимостиУпрПрочиеРасходы.СуммаБезНДС - ЕСТЬNULL(втАмортизацияУпрПрочиеРасходы.СуммаБезНДС, 0) КАК СуммаБезНДС,
	|	втСтоимостиУпрПрочиеРасходы.СуммаУпр - ЕСТЬNULL(втАмортизацияУпрПрочиеРасходы.СуммаУпр, 0) КАК СуммаБезНДСУпр,
	|	0 КАК СуммаСНДСРегл,
	|	0 КАК СуммаБезНДСРегл,
	|	0 КАК НДСРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры
	|ИЗ
	|	втСтоимостиУпрПрочиеРасходы КАК втСтоимостиУпрПрочиеРасходы
	|	ЛЕВОЕ СОЕДИНЕНИЕ втАмортизацияУпрПрочиеРасходы КАК втАмортизацияУпрПрочиеРасходы
	|	ПО втСтоимостиУпрПрочиеРасходы.Организация = втАмортизацияУпрПрочиеРасходы.Организация
	|		И втСтоимостиУпрПрочиеРасходы.Подразделение = втАмортизацияУпрПрочиеРасходы.Подразделение
	|		И втСтоимостиУпрПрочиеРасходы.НаправлениеДеятельности = втАмортизацияУпрПрочиеРасходы.НаправлениеДеятельности
	|		И втСтоимостиУпрПрочиеРасходы.СтатьяРасходов = втАмортизацияУпрПрочиеРасходы.СтатьяРасходов
	|		И втСтоимостиУпрПрочиеРасходы.АналитикаРасходов = втАмортизацияУпрПрочиеРасходы.АналитикаРасходов
	|	ЛЕВОЕ СОЕДИНЕНИЕ втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|	ПО втСтоимостиУпрПрочиеРасходы.АналитикаРасходов = втПараметрыОбъектовУчета.ОбъектУчета
	|ГДЕ
	|	&СписаниеОстаточнойСтоимости
	|	И НЕ втСтоимостиУпрПрочиеРасходы.СтатьяРасходов.РасходыНаРемонтОС
	|";
	
КонецФункции


Функция ПартииПрочихРасходов_АмортизацияРеглСтоимости()
	
	// Амортизация регл. стоимости основных средств
	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	
	|	втНачисленнаяАмортизация.Организация КАК Организация,
	|	втНачисленнаяАмортизация.Подразделение КАК Подразделение,
	|	втНачисленнаяАмортизация.СтатьяРасходов КАК СтатьяРасходов,
	|	втНачисленнаяАмортизация.АналитикаРасходов КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
	|	&Ссылка КАК ДокументПоступленияРасходов,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
	|	втНачисленнаяАмортизация.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
	|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначение,
	|	
	|	0 КАК Стоимость,
	|	0 КАК СтоимостьБезНДС,
	|	0 КАК НДСУпр,
	|	втНачисленнаяАмортизация.СуммаБУ КАК СтоимостьРегл,
	|	0 КАК НДСРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация
	|ИЗ
	|	втНачисленнаяАмортизация КАК втНачисленнаяАмортизация
	|ГДЕ 
	|	(втНачисленнаяАмортизация.СтатьяРасходов.ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|		ИЛИ втНачисленнаяАмортизация.СтатьяРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|   )
	|";
	
КонецФункции

Функция ПартииПрочихРасходов_АмортизацияУпрСтоимостиИзПрочихАктивов()
	
	// Начисление амортизации от остатка упр. стоимости, хранящейся в регистре ПрочиеАктивыПассивы.
	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	
	|	втНачисленнаяАмортизация.Организация КАК Организация,
	|	втНачисленнаяАмортизация.Подразделение КАК Подразделение,
	|	втНачисленнаяАмортизация.СтатьяРасходов КАК СтатьяРасходов,
	|	втНачисленнаяАмортизация.АналитикаРасходов КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
	|	&Ссылка КАК ДокументПоступленияРасходов,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
	|	втНачисленнаяАмортизация.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
	|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначение,
	|	
	|	СУММА(ВЫРАЗИТЬ(втСтоимостиУпрПрочиеАктивы.Сумма
	|		* втНачисленнаяАмортизация.Коэффициент КАК ЧИСЛО(15, 2))) КАК Стоимость,
	|	СУММА(ВЫРАЗИТЬ(втСтоимостиУпрПрочиеАктивы.Сумма
	|		* втНачисленнаяАмортизация.Коэффициент КАК ЧИСЛО(15, 2))) КАК СтоимостьБезНДС,
	|	0 КАК НДСУпр,
	|	0 КАК СтоимостьРегл,
	|	0 КАК НДСРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация
	|ИЗ
	|	втНачисленнаяАмортизация КАК втНачисленнаяАмортизация
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСтоимостиУпрПрочиеАктивы КАК втСтоимостиУпрПрочиеАктивы
	|		ПО втНачисленнаяАмортизация.ОбъектУчета = втСтоимостиУпрПрочиеАктивы.Аналитика
	|ГДЕ 
	|	(втНачисленнаяАмортизация.СтатьяРасходов.ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|		ИЛИ втНачисленнаяАмортизация.СтатьяРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|   )
	|СГРУППИРОВАТЬ ПО
	|	втНачисленнаяАмортизация.Организация,
	|	втНачисленнаяАмортизация.Подразделение,
	|	втНачисленнаяАмортизация.СтатьяРасходов,
	|	втНачисленнаяАмортизация.АналитикаРасходов,
	|	втНачисленнаяАмортизация.НаправлениеДеятельности";
	
КонецФункции

Функция ПартииПрочихРасходов_АмортизацияУпрСтоимостиИзПрочихРасходов()
	
	// Начисление амортизации от остатка упр. стоимости, хранящейся в регистре ПрочиеРасходы.
	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	
	|	втНачисленнаяАмортизация.Организация КАК Организация,
	|	втНачисленнаяАмортизация.Подразделение КАК Подразделение,
	|	втНачисленнаяАмортизация.СтатьяРасходов КАК СтатьяРасходов,
	|	втНачисленнаяАмортизация.АналитикаРасходов КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
	|	&Ссылка КАК ДокументПоступленияРасходов,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
	|	втНачисленнаяАмортизация.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
	|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначение,
	|	
	|	СУММА(ВЫРАЗИТЬ(втСтоимостиУпрПрочиеРасходы.Сумма
	|		* втНачисленнаяАмортизация.Коэффициент КАК ЧИСЛО(15, 2))) КАК Стоимость,
	|	СУММА(ВЫРАЗИТЬ(втСтоимостиУпрПрочиеРасходы.СуммаБезНДС
	|		* втНачисленнаяАмортизация.Коэффициент КАК ЧИСЛО(15, 2))) КАК СтоимостьБезНДС,
	|	0 КАК НДСУпр,
	|	0 КАК СтоимостьРегл,
	|	0 КАК НДСРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация
	|ИЗ
	|	втНачисленнаяАмортизация КАК втНачисленнаяАмортизация
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСтоимостиУпрПрочиеРасходы КАК втСтоимостиУпрПрочиеРасходы
	|		ПО втНачисленнаяАмортизация.ОбъектУчета = втСтоимостиУпрПрочиеРасходы.АналитикаРасходов
	|ГДЕ 
	|	(втНачисленнаяАмортизация.СтатьяРасходов.ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|		ИЛИ втНачисленнаяАмортизация.СтатьяРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|   )
	|СГРУППИРОВАТЬ ПО
	|	втНачисленнаяАмортизация.Организация,
	|	втНачисленнаяАмортизация.Подразделение,
	|	втНачисленнаяАмортизация.СтатьяРасходов,
	|	втНачисленнаяАмортизация.АналитикаРасходов,
	|	втНачисленнаяАмортизация.НаправлениеДеятельности";
	
КонецФункции

Функция ПартииПрочихРасходов_СписаниеОстаточнойУпрСтоимостиИзПрочихАктивов()
	
	// Списание остатка упр. стоимости, хранящейся в регистре ПрочиеАктивыПассивы
	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|	&СтатьяРасходов КАК СтатьяРасходов,
	|	&АналитикаРасходов КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
	|	&Ссылка КАК ДокументПоступленияРасходов,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
	|	ЕСТЬNULL(втПараметрыОбъектовУчета.НаправлениеДеятельности,
	|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
	|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначение,
	|	
	|	СУММА(втСтоимостиУпрПрочиеАктивы.Сумма - ЕСТЬNULL(втАмортизацияУпрПрочиеАктивы.Сумма, 0)) КАК Сумма,
	|	СУММА(втСтоимостиУпрПрочиеАктивы.Сумма - ЕСТЬNULL(втАмортизацияУпрПрочиеАктивы.Сумма, 0)) КАК СуммаБезНДС,
	|	0 КАК НДСУпр,
	|	0 КАК СтоимостьРегл,
	|	0 КАК НДСРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация
	|ИЗ
	|	втСтоимостиУпрПрочиеАктивы КАК втСтоимостиУпрПрочиеАктивы
	|	ЛЕВОЕ СОЕДИНЕНИЕ втАмортизацияУпрПрочиеАктивы КАК втАмортизацияУпрПрочиеАктивы
	|	ПО втСтоимостиУпрПрочиеАктивы.Статья = втАмортизацияУпрПрочиеАктивы.Статья
	|		И втСтоимостиУпрПрочиеАктивы.Аналитика = втАмортизацияУпрПрочиеАктивы.Аналитика
	|	ЛЕВОЕ СОЕДИНЕНИЕ втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|	ПО втСтоимостиУпрПрочиеАктивы.Аналитика = втПараметрыОбъектовУчета.ОбъектУчета
	|ГДЕ
	|	&СписаниеОстаточнойСтоимости
	|СГРУППИРОВАТЬ ПО
	|	втСтоимостиУпрПрочиеАктивы.Подразделение,
	|	втСтоимостиУпрПрочиеАктивы.Статья,
	|	втСтоимостиУпрПрочиеАктивы.Аналитика,
	|	ЕСТЬNULL(втПараметрыОбъектовУчета.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка))";
	
КонецФункции

Функция ПартииПрочихРасходов_СписаниеОстаточнойУпрСтоимостиИзПрочихРасходов()
	
	// Списание остатка упр. стоимости, хранящейся в регистре ПрочиеРасходы
	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|	&СтатьяРасходов КАК СтатьяРасходов,
	|	&АналитикаРасходов КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
	|	&Ссылка КАК ДокументПоступленияРасходов,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
	|	ЕСТЬNULL(втПараметрыОбъектовУчета.НаправлениеДеятельности,
	|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
	|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначение,
	|	
	|	СУММА(втСтоимостиУпрПрочиеРасходы.Сумма - ЕСТЬNULL(втАмортизацияУпрПрочиеРасходы.Сумма, 0)) КАК Сумма,
	|	СУММА(втСтоимостиУпрПрочиеРасходы.СуммаБезНДС - ЕСТЬNULL(втАмортизацияУпрПрочиеРасходы.СуммаБезНДС, 0)) КАК СуммаБезНДС,
	|	0 КАК НДСУпр,
	|	0 КАК СтоимостьРегл,
	|	0 КАК НДСРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация
	|ИЗ
	|	втСтоимостиУпрПрочиеРасходы КАК втСтоимостиУпрПрочиеРасходы
	|	ЛЕВОЕ СОЕДИНЕНИЕ втАмортизацияУпрПрочиеРасходы КАК втАмортизацияУпрПрочиеРасходы
	|	ПО втСтоимостиУпрПрочиеРасходы.СтатьяРасходов = втАмортизацияУпрПрочиеРасходы.СтатьяРасходов
	|		И втСтоимостиУпрПрочиеРасходы.АналитикаРасходов = втАмортизацияУпрПрочиеРасходы.АналитикаРасходов
	|	ЛЕВОЕ СОЕДИНЕНИЕ втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|	ПО втСтоимостиУпрПрочиеРасходы.АналитикаРасходов = втПараметрыОбъектовУчета.ОбъектУчета
	|ГДЕ
	|	&СписаниеОстаточнойСтоимости
	|СГРУППИРОВАТЬ ПО
	|	втСтоимостиУпрПрочиеРасходы.Подразделение,
	|	втСтоимостиУпрПрочиеРасходы.СтатьяРасходов,
	|	втСтоимостиУпрПрочиеРасходы.АналитикаРасходов,
	|	ЕСТЬNULL(втПараметрыОбъектовУчета.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка))";
	
КонецФункции


Функция ПрочиеДоходы_ПустаяТаблица()
	
	// Пустая таблица движений регистра ПрочиеДоходы, требуется для контроля правильного именования полей объединения.
	Возврат
	"ВЫБРАТЬ
	|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК Период,
	|	НЕОПРЕДЕЛЕНО КАК Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяДоходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаДоходов,
	|	
	|	0 КАК Сумма,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
	|	0 КАК СуммаРегл,
	|	ЛОЖЬ КАК РасчетСебестоимости
	|	
	|ГДЕ
	|	ЛОЖЬ";
	
КонецФункции

Функция ПрочиеДоходы_ПризнаниеДоходовОтЦелевогоФинансированияУпрПриАмортизации()
	
	// Движения признания доходов от целевого финансирования при амортизации актива
	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Ссылка КАК Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	
	|	втПризнаниеДоходовОтЦФ.Организация КАК Организация,
	|	втПризнаниеДоходовОтЦФ.ПодразделениеАмортизации КАК Подразделение,
	|	втПризнаниеДоходовОтЦФ.НаправлениеДеятельностиАмортизации КАК НаправлениеДеятельности,
	|	втПризнаниеДоходовОтЦФ.СтатьяДоходов КАК СтатьяДоходов,
	|	втПризнаниеДоходовОтЦФ.АналитикаДоходов КАК АналитикаДоходов,
	|	
	|	ВЫРАЗИТЬ((втЦелевыеСредстваУпр.Сумма * (втПризнаниеДоходовОтЦФ.СуммаРегл/втЦелевыеСредстваРеглСгруппированныеПоНаправлениям.Сумма)) КАК ЧИСЛО(15,2)) КАК Сумма,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
	|	втПризнаниеДоходовОтЦФ.СуммаРегл КАК СуммаРегл,
	|	ЛОЖЬ КАК РасчетСебестоимости
	|ИЗ
	|	втПризнаниеДоходовОтЦФ КАК втПризнаниеДоходовОтЦФ
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ втЦелевыеСредстваРеглСгруппированныеПоНаправлениям КАК втЦелевыеСредстваРеглСгруппированныеПоНаправлениям
	|		ПО втПризнаниеДоходовОтЦФ.Подразделение = втЦелевыеСредстваРеглСгруппированныеПоНаправлениям.Подразделение
	|			И втПризнаниеДоходовОтЦФ.НаправлениеДеятельности = втЦелевыеСредстваРеглСгруппированныеПоНаправлениям.НаправлениеДеятельности
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ втЦелевыеСредстваУпр КАК втЦелевыеСредстваУпр
	|		ПО втПризнаниеДоходовОтЦФ.Подразделение = втЦелевыеСредстваУпр.Подразделение
	|			И втПризнаниеДоходовОтЦФ.НаправлениеДеятельности = втЦелевыеСредстваУпр.НаправлениеДеятельности
	|ГДЕ
	|	&ИспользоватьУчетПрочихДоходовРасходов
	|	И &ПогашениеУпрЗатрат";
	
КонецФункции

Функция ПрочиеДоходы_ПризнаниеДоходовОтЦелевогоФинансированияУпрПриСписании()
	
	// Движения признания доходов от целевого финансирования при списании актива
	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Ссылка КАК Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	
	|	втПризнаниеДоходовОтЦФ.Организация КАК Организация,
	|	втПризнаниеДоходовОтЦФ.Подразделение КАК Подразделение,
	|	втПризнаниеДоходовОтЦФ.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	втПризнаниеДоходовОтЦФ.СтатьяДоходов КАК СтатьяДоходов,
	|	втПризнаниеДоходовОтЦФ.АналитикаДоходов КАК АналитикаДоходов,
	|	
	|	(втЦелевыеСредстваУпр.Сумма * (втЦелевыеСредстваРегл.Сумма/втЦелевыеСредстваРеглСгруппированныеПоНаправлениям.Сумма))
	|	- ВЫРАЗИТЬ((втЦелевыеСредстваУпр.Сумма * (втПризнаниеДоходовОтЦФ.СуммаРегл/втЦелевыеСредстваРеглСгруппированныеПоНаправлениям.Сумма)) КАК ЧИСЛО(15,2)) КАК Сумма,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
	|	втЦелевыеСредстваРегл.Сумма - втПризнаниеДоходовОтЦФ.СуммаРегл КАК СуммаРегл,
	|	ЛОЖЬ КАК РасчетСебестоимости
	|ИЗ
	|	втПризнаниеДоходовОтЦФ КАК втПризнаниеДоходовОтЦФ
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ втЦелевыеСредстваРегл КАК втЦелевыеСредстваРегл
	|		ПО втПризнаниеДоходовОтЦФ.Подразделение = втЦелевыеСредстваРегл.Подразделение
	|			И втПризнаниеДоходовОтЦФ.НаправлениеДеятельности = втЦелевыеСредстваРегл.НаправлениеДеятельности
	|			И втПризнаниеДоходовОтЦФ.ОбъектУчета = втЦелевыеСредстваРегл.ОбъектУчета
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ втЦелевыеСредстваРеглСгруппированныеПоНаправлениям КАК втЦелевыеСредстваРеглСгруппированныеПоНаправлениям
	|		ПО втПризнаниеДоходовОтЦФ.Подразделение = втЦелевыеСредстваРеглСгруппированныеПоНаправлениям.Подразделение
	|			И втПризнаниеДоходовОтЦФ.НаправлениеДеятельности = втЦелевыеСредстваРеглСгруппированныеПоНаправлениям.НаправлениеДеятельности
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ втЦелевыеСредстваУпр КАК втЦелевыеСредстваУпр
	|		ПО втПризнаниеДоходовОтЦФ.Подразделение = втЦелевыеСредстваУпр.Подразделение
	|			И втПризнаниеДоходовОтЦФ.НаправлениеДеятельности = втЦелевыеСредстваУпр.НаправлениеДеятельности
	|ГДЕ
	|	&СписаниеОстаточнойСтоимости
	|	И &ПогашениеУпрЗатрат
	|	И &ИспользоватьУчетПрочихДоходовРасходов";
	
КонецФункции

Функция ПрочиеАктивыПассивы_ПустаяТаблица()
	
	// Пустая таблица движений регистра ПрочиеАктивыПассивы, требуется для контроля правильного именования полей объединения.
	Возврат
	"ВЫБРАТЬ
	|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка) КАК Статья,
	|	НЕОПРЕДЕЛЕНО КАК Аналитика,
	|	
	|	0 КАК Сумма
	|ГДЕ
	|	ЛОЖЬ";
	
КонецФункции

Функция ПрочиеАктивыПассивы_АмортизацияУпрСтоимостиИзПрочихАктивов()
	
	// Начисление амортизации от остатка упр. стоимости, хранящейся в регистре ПрочиеАктивыПассивы.
	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	
	|	втАмортизацияУпрПрочиеАктивы.Организация КАК Организация,
	|	втАмортизацияУпрПрочиеАктивы.Подразделение КАК Подразделение,
	|	втАмортизацияУпрПрочиеАктивы.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	втАмортизацияУпрПрочиеАктивы.Статья КАК Статья,
	|	втАмортизацияУпрПрочиеАктивы.Аналитика КАК Аналитика,
	|	
	|	втАмортизацияУпрПрочиеАктивы.Сумма КАК Сумма
	|ИЗ
	|	втАмортизацияУпрПрочиеАктивы КАК втАмортизацияУпрПрочиеАктивы
	|ГДЕ
	|	&ИспользоватьУчетПрочихАктивовПассивов
	|	И &ПогашениеУпрЗатрат";
	
КонецФункции

Функция ПрочиеАктивыПассивы_СписаниеОстаточнойУпрСтоимостиИзПрочихАктивов()
	
	// Списание остатка упр. стоимости, хранящейся в регистре ПрочиеАктивыПассивы
	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	
	|	втСтоимостиУпрПрочиеАктивы.Организация КАК Организация,
	|	втСтоимостиУпрПрочиеАктивы.Подразделение КАК Подразделение,
	|	втСтоимостиУпрПрочиеАктивы.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	втСтоимостиУпрПрочиеАктивы.Статья КАК Статья,
	|	втСтоимостиУпрПрочиеАктивы.Аналитика КАК Аналитика,
	|	
	|	втСтоимостиУпрПрочиеАктивы.Сумма - ЕСТЬNULL(втАмортизацияУпрПрочиеАктивы.Сумма, 0) КАК Сумма
	|ИЗ
	|	втСтоимостиУпрПрочиеАктивы КАК втСтоимостиУпрПрочиеАктивы
	|	ЛЕВОЕ СОЕДИНЕНИЕ втАмортизацияУпрПрочиеАктивы КАК втАмортизацияУпрПрочиеАктивы
	|	ПО втСтоимостиУпрПрочиеАктивы.Статья = втАмортизацияУпрПрочиеАктивы.Статья
	|		И втСтоимостиУпрПрочиеАктивы.Аналитика = втАмортизацияУпрПрочиеАктивы.Аналитика
	|ГДЕ
	|	&ИспользоватьУчетПрочихАктивовПассивов
	|	И &СписаниеОстаточнойСтоимости
	|	И &ПогашениеУпрЗатрат";
	
КонецФункции

Функция ПрочиеАктивыПассивы_ПризнаниеДоходовОтЦелевогоФинансированияУпрПриАмортизации()
	
	// Движения признания доходов от целевого финансирования при амортизации актива
	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	
	|	втПризнаниеДоходовОтЦФ.Организация КАК Организация,
	|	втПризнаниеДоходовОтЦФ.Подразделение КАК Подразделение,
	|	втПризнаниеДоходовОтЦФ.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ЦелевоеФинансирование) КАК Статья,
	|	ЗНАЧЕНИЕ(Перечисление.СтатьиБезАналитики.ПустаяСсылка) КАК Аналитика,
	|	
	|	ВЫРАЗИТЬ((втЦелевыеСредстваУпр.Сумма * (втПризнаниеДоходовОтЦФ.СуммаРегл/втЦелевыеСредстваРеглСгруппированныеПоНаправлениям.Сумма)) КАК ЧИСЛО(15,2)) КАК Сумма
	|ИЗ
	|	втПризнаниеДоходовОтЦФ КАК втПризнаниеДоходовОтЦФ
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ втЦелевыеСредстваРеглСгруппированныеПоНаправлениям КАК втЦелевыеСредстваРеглСгруппированныеПоНаправлениям
	|		ПО втПризнаниеДоходовОтЦФ.Подразделение = втЦелевыеСредстваРеглСгруппированныеПоНаправлениям.Подразделение
	|			И втПризнаниеДоходовОтЦФ.НаправлениеДеятельности = втЦелевыеСредстваРеглСгруппированныеПоНаправлениям.НаправлениеДеятельности
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ втЦелевыеСредстваУпр КАК втЦелевыеСредстваУпр
	|		ПО втПризнаниеДоходовОтЦФ.Подразделение = втЦелевыеСредстваУпр.Подразделение
	|			И втПризнаниеДоходовОтЦФ.НаправлениеДеятельности = втЦелевыеСредстваУпр.НаправлениеДеятельности
	|ГДЕ
	|	&ИспользоватьУчетПрочихАктивовПассивов
	|	И &ПогашениеУпрЗатрат";
	
КонецФункции

Функция ПрочиеАктивыПассивы_ПризнаниеДоходовОтЦелевогоФинансированияУпрПриСписании()
	
	// Движения признания доходов от целевого финансирования при списании актива
	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	
	|	втПризнаниеДоходовОтЦФ.Организация КАК Организация,
	|	втПризнаниеДоходовОтЦФ.Подразделение КАК Подразделение,
	|	втПризнаниеДоходовОтЦФ.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ЦелевоеФинансирование) КАК Статья,
	|	ЗНАЧЕНИЕ(Перечисление.СтатьиБезАналитики.ПустаяСсылка) КАК Аналитика,
	|	
	|	(втЦелевыеСредстваУпр.Сумма * (втЦелевыеСредстваРегл.Сумма/втЦелевыеСредстваРеглСгруппированныеПоНаправлениям.Сумма))
	|	- ВЫРАЗИТЬ((втЦелевыеСредстваУпр.Сумма * (втПризнаниеДоходовОтЦФ.СуммаРегл/втЦелевыеСредстваРеглСгруппированныеПоНаправлениям.Сумма)) КАК ЧИСЛО(15,2)) КАК Сумма
	|ИЗ
	|	втПризнаниеДоходовОтЦФ КАК втПризнаниеДоходовОтЦФ
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ втЦелевыеСредстваРегл КАК втЦелевыеСредстваРегл
	|		ПО втПризнаниеДоходовОтЦФ.Подразделение = втЦелевыеСредстваРегл.Подразделение
	|			И втПризнаниеДоходовОтЦФ.НаправлениеДеятельности = втЦелевыеСредстваРегл.НаправлениеДеятельности
	|			И втПризнаниеДоходовОтЦФ.ОбъектУчета = втЦелевыеСредстваРегл.ОбъектУчета
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ втЦелевыеСредстваРеглСгруппированныеПоНаправлениям КАК втЦелевыеСредстваРеглСгруппированныеПоНаправлениям
	|		ПО втПризнаниеДоходовОтЦФ.Подразделение = втЦелевыеСредстваРеглСгруппированныеПоНаправлениям.Подразделение
	|			И втПризнаниеДоходовОтЦФ.НаправлениеДеятельности = втЦелевыеСредстваРеглСгруппированныеПоНаправлениям.НаправлениеДеятельности
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ втЦелевыеСредстваУпр КАК втЦелевыеСредстваУпр
	|		ПО втПризнаниеДоходовОтЦФ.Подразделение = втЦелевыеСредстваУпр.Подразделение
	|			И втПризнаниеДоходовОтЦФ.НаправлениеДеятельности = втЦелевыеСредстваУпр.НаправлениеДеятельности
	|ГДЕ
	|	&СписаниеОстаточнойСтоимости
	|	И &ПогашениеУпрЗатрат
	|	И &ИспользоватьУчетПрочихАктивовПассивов";
	
КонецФункции

#КонецОбласти

#Область ЗаданияКЗакрытиюМесяца


Процедура ЗафиксироватьРасчетАмортизации(ВыполненныеЗадания, ЗаданияНаСледующийПериод) Экспорт

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Задания.Месяц,
	|	Задания.Операция,
	|	Задания.Организация,
	|	Задания.НомерЗадания,
	|	Задания.Документ
	|ИЗ
	|	КэшГраниц КАК Задания";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = ВыполненныеЗадания.ВременныеТаблицы;
	Результат = Запрос.Выполнить();
	
	// Очистка записей по которым был выполнен расчет.
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		Набор = РегистрыСведений.ЗаданияКЗакрытиюМесяца.СоздатьНаборЗаписей();
		Набор.Отбор.Месяц.Установить(Выборка.Месяц);
		Набор.Отбор.Операция.Установить(Выборка.Операция);
		Набор.Отбор.Организация.Установить(Выборка.Организация);
		Набор.Отбор.НомерЗадания.Установить(Выборка.НомерЗадания);
		Набор.Отбор.Документ.Установить(Выборка.Документ);
		Набор.Записать(); 
	КонецЦикла;
	
	// Добавление записей на следующий период
	ТекущийНомерЗадания = ЗакрытиеМесяцаСервер.ТекущийНомерЗадания();
	Для каждого Выборка Из ЗаданияНаСледующийПериод Цикл
		Если ЗначениеЗаполнено(Выборка.Месяц) Тогда
			НоваяЗапись = РегистрыСведений.ЗаданияКЗакрытиюМесяца.СоздатьМенеджерЗаписи();
			ЗаполнитьЗначенияСвойств(НоваяЗапись, Выборка);
			НоваяЗапись.НомерЗадания = ТекущийНомерЗадания;
			НоваяЗапись.Записать(Истина);
		КонецЕсли; 
	КонецЦикла; 
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

// ПРОВЕРКИ ДАННЫХ ОС НА КОРРЕКТНОСТЬ

Процедура ПроверитьСоответствиеОСОрганизации(ТаблицаОС, ТаблицаРеквизиты, Отказ) Экспорт
	
	Параметры = ПодготовитьПараметрыСоответствиеОСОрганизации(ТаблицаОС, ТаблицаРеквизиты);
	
	Если Параметры.ТаблицаОС.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки,
	|	ВЫРАЗИТЬ(ТаблицаОС.ОсновноеСредство КАК Справочник.ОбъектыЭксплуатации) КАК ОсновноеСредство
	|ПОМЕСТИТЬ ТаблицаОС
	|ИЗ
	|	&ТаблицаОС КАК ТаблицаОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МестонахождениеОС.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ МестонахождениеОС
	|ИЗ
	|	РегистрСведений.МестонахождениеОС.СрезПоследних(
	|			&Период,
	|				ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						ТаблицаОС.ОсновноеСредство
	|					ИЗ
	|						ТаблицаОС КАК ТаблицаОС)) КАК МестонахождениеОС
	|ГДЕ
	|	МестонахождениеОС.Организация = &Организация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки,
	|	ВЫБОР
	|		КОГДА МестонахождениеОС.ОсновноеСредство ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ОтражалосьВБухгалтерскомУчете,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ТаблицаОС.ОсновноеСредство.Код КАК КодОС
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ МестонахождениеОС КАК МестонахождениеОС
	|		ПО ТаблицаОС.ОсновноеСредство = МестонахождениеОС.ОсновноеСредство
	|ГДЕ
	|	МестонахождениеОС.ОсновноеСредство ЕСТЬ NULL 
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаОС.НомерСтроки";

	Реквизиты = Параметры.Реквизиты[0];

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Период", Новый Граница(Новый МоментВремени(Реквизиты.Период, Реквизиты.Регистратор), ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("Организация", Реквизиты.Организация);
	Запрос.УстановитьПараметр("ТаблицаОС", Параметры.ТаблицаОС);

	УстановитьПривилегированныйРежим(Истина);
	РезультатЗапроса = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);

	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();

		ШаблонСообщенияБУ = НСтр("ru='Основное средство <%1 (%2)> не отражалось в бухгалтерском учете по организации <%3>';uk='Основний засіб <%1 (%2)> не відображався в бухгалтерському обліку по організації <%3>'");

		Пока Выборка.Следующий() Цикл
			
			Если НЕ Выборка.ОтражалосьВБухгалтерскомУчете Тогда
				
				ТекстСообщения = СтрШаблон(ШаблонСообщенияБУ,
									Выборка.ОсновноеСредство, 
									Выборка.КодОС, 
									Реквизиты.Организация);

				Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(Реквизиты.ИмяСписка, Выборка.НомерСтроки, "ОсновноеСредство");

				ОбщегоНазначения.СообщитьПользователю(
					ТекстСообщения, 
					Реквизиты.Регистратор, 
					Поле, 
					"Объект", 
					Отказ);
					
			КонецЕсли;
				
		КонецЦикла;

	КонецЕсли;

КонецПроцедуры

Функция ПодготовитьПараметрыСоответствиеОСОрганизации(ТаблицаОС, ТаблицаРеквизиты)

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.ТаблицаОС

	СписокОбязательныхКолонок = ""
	+ "НомерСтроки,"      // <Число, 5, 0>
	+ "ОсновноеСредство"; // <СправочникСсылка.ОбъектыЭксплуатации>

	Параметры.Вставить("ТаблицаОС",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаОС, СписокОбязательныхКолонок));

	// Подготовка таблицы Параметры.Реквизиты

	СписокОбязательныхКолонок = ""
	+ "Период,"      // <Дата>
	+ "ИмяСписка,"   // <Строка, 0>
	+ "Организация," // <СправочникСсылка.Организации>
	+ "Регистратор"; // <ДокументСсылка.*>

	Параметры.Вставить("Реквизиты",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции

Процедура ПроверитьСостояниеОСПринятоКУчету(ТаблицаОС, ТаблицаРеквизиты, Отказ) Экспорт
	
	Параметры = ПодготовитьПараметрыСостояниеОСПринятоКУчету(ТаблицаОС, ТаблицаРеквизиты);
	
	Если Параметры.ТаблицаОС.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки,
	|	ВЫРАЗИТЬ(ТаблицаОС.ОсновноеСредство КАК Справочник.ОбъектыЭксплуатации) КАК ОсновноеСредство
	|ПОМЕСТИТЬ ТаблицаОС
	|ИЗ
	|	&ТаблицаОС КАК ТаблицаОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПорядокУчетаОСБУ.ОсновноеСредство КАК ОсновноеСредство,
	|	ПорядокУчетаОСБУ.Период КАК ДатаСостояния,
	|	ПорядокУчетаОСБУ.Регистратор,
	|	ПорядокУчетаОСБУ.Состояние,
	|	ПорядокУчетаОСБУ.Организация
	|ПОМЕСТИТЬ СостоянияОС
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаОС КАК ТаблицаОС
	|		ПО ПорядокУчетаОСБУ.ОсновноеСредство = ТаблицаОС.ОсновноеСредство
	|			И (ПорядокУчетаОСБУ.Период < &Дата)
	|			И (ПорядокУчетаОСБУ.Организация = &Организация)
	|			И (ПорядокУчетаОСБУ.Активность = ИСТИНА)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СостоянияОС.ОсновноеСредство КАК ОсновноеСредство,
	|	МАКСИМУМ(СостоянияОС.ДатаСостояния) КАК ДатаСостояния
	|ПОМЕСТИТЬ ДатыПоследнихСостоянийОС
	|ИЗ
	|	СостоянияОС КАК СостоянияОС
	|
	|СГРУППИРОВАТЬ ПО
	|	СостоянияОС.ОсновноеСредство
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СостоянияОС.ОсновноеСредство КАК ОсновноеСредство,
	|	СостоянияОС.ДатаСостояния,
	|	СостоянияОС.Регистратор,
	|	СостоянияОС.Организация,
	|	СостоянияОС.Состояние
	|ПОМЕСТИТЬ ПоследниеСостоянияОС
	|ИЗ
	|	ДатыПоследнихСостоянийОС КАК ДатыПоследнихСостоянийОС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СостоянияОС КАК СостоянияОС
	|		ПО ДатыПоследнихСостоянийОС.ОсновноеСредство = СостоянияОС.ОсновноеСредство
	|			И ДатыПоследнихСостоянийОС.ДатаСостояния = СостоянияОС.ДатаСостояния
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОС.ОсновноеСредство,
	|	ТаблицаОС.ОсновноеСредство.Код КАК КодОС,
	|	ТаблицаОС.НомерСтроки КАК НомерСтроки,
	|	ПоследниеСостоянияОС.ДатаСостояния,
	|	ПоследниеСостоянияОС.Регистратор,
	|	ПоследниеСостоянияОС.Организация,
	|	ПоследниеСостоянияОС.Состояние
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПоследниеСостоянияОС КАК ПоследниеСостоянияОС
	|		ПО ТаблицаОС.ОсновноеСредство = ПоследниеСостоянияОС.ОсновноеСредство
	|ГДЕ
	|	(ПоследниеСостоянияОС.Состояние ЕСТЬ NULL
	|			ИЛИ ПоследниеСостоянияОС.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета))
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Реквизиты = Параметры.Реквизиты[0];

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Дата", Реквизиты.Период);
	Запрос.УстановитьПараметр("Организация", Реквизиты.Организация);
	Запрос.УстановитьПараметр("ТаблицаОС", Параметры.ТаблицаОС);

	УстановитьПривилегированныйРежим(Истина);
	РезультатЗапроса = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);

	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Выборка.Состояние = Null Тогда
			ШаблонСообщения = НСтр("ru='По состоянию на %4.
|Основное средство <%1 (%2)> не принято к учету в организации <%3>.'
|;uk='Станом на %4.
|Основний засіб <%1 (%2)> не прийнято до обліку в організації <%3>.'");
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения, Выборка.ОсновноеСредство,
				Выборка.КодОС, Реквизиты.Организация, Формат(Реквизиты.Период, "ДЛФ=D"));
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Реквизиты.Регистратор, Реквизиты.ИмяСписка + "["
				+ Формат(Выборка.НомерСтроки - 1, "ЧН=0; ЧГ=") + "].ОсновноеСредство", "Объект", Отказ);
		Иначе
			ШаблонСообщения = НСтр("ru='Основное средство <%1 (%2)> снято с учета в организации <%3>
|документом <%4>. Дата состояния: %5'
|;uk='Основний засіб <%1 (%2)> знято з обліку в організації <%3>
|документом <%4>. Дата стану: %5'");
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения, Выборка.ОсновноеСредство,
				Выборка.КодОС, Реквизиты.Организация, Выборка.Регистратор, Формат(Выборка.ДатаСостояния, "ДЛФ=D"));
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Реквизиты.Регистратор, Реквизиты.ИмяСписка + "["
				+ Формат(Выборка.НомерСтроки - 1, "ЧН=0; ЧГ=") + "].ОсновноеСредство", "Объект", Отказ);
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

Функция ПодготовитьПараметрыСостояниеОСПринятоКУчету(ТаблицаОС, ТаблицаРеквизиты)

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.ТаблицаОС

	СписокОбязательныхКолонок = ""
	+ "НомерСтроки,"      // <Число, 5, 0>
	+ "ОсновноеСредство"; // <СправочникСсылка.ОбъектыЭксплуатации>

	Параметры.Вставить("ТаблицаОС",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаОС, СписокОбязательныхКолонок));

	// Подготовка таблицы Параметры.Реквизиты

	СписокОбязательныхКолонок = ""
	+ "Период,"      // <Дата>
	+ "ИмяСписка,"   // <Строка, 0>
	+ "Организация," // <ДокументСсылка.*>
	+ "Регистратор"; // <СправочникСсылка.Организации>

	Параметры.Вставить("Реквизиты",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции

Процедура ПроверитьСоответствиеМестонахожденияОС(ТаблицаОС, ТаблицаРеквизиты, Отказ) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Параметры = ПодготовитьПараметрыСоответствиеМестонахожденияОС(ТаблицаОС, ТаблицаРеквизиты);

	Если Параметры.ТаблицаОС.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Реквизиты = Параметры.Реквизиты[0];

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Период", Новый Граница(Новый МоментВремени(Реквизиты.Период, Реквизиты.Регистратор), ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("Организация", Реквизиты.Организация);
	Запрос.УстановитьПараметр("ТаблицаОС", Параметры.ТаблицаОС);
	Запрос.УстановитьПараметр("Подразделение", Реквизиты.Подразделение);
	Запрос.УстановитьПараметр("МОЛ", Реквизиты.МОЛ);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки,
	|	ВЫРАЗИТЬ(ТаблицаОС.ОсновноеСредство КАК Справочник.ОбъектыЭксплуатации) КАК ОсновноеСредство
	|ПОМЕСТИТЬ ТаблицаОС
	|ИЗ
	|	&ТаблицаОС КАК ТаблицаОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МестонахождениеОСБУ.ОсновноеСредство КАК ОсновноеСредство,
	|	МестонахождениеОСБУ.МОЛ,
	|	МестонахождениеОСБУ.Местонахождение КАК Подразделение
	|ПОМЕСТИТЬ МестонахождениеОСБУ
	|ИЗ
	|	РегистрСведений.МестонахождениеОС.СрезПоследних(
	|			&Период,
	|			Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						ТаблицаОС.ОсновноеСредство
	|					ИЗ
	|						ТаблицаОС КАК ТаблицаОС)) КАК МестонахождениеОСБУ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ТаблицаОС.ОсновноеСредство.Код КАК КодОС,
	|	МестонахождениеОСБУ.МОЛ,
	|	МестонахождениеОСБУ.Подразделение
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ МестонахождениеОСБУ КАК МестонахождениеОСБУ
	|		ПО ТаблицаОС.ОсновноеСредство = МестонахождениеОСБУ.ОсновноеСредство
	|ГДЕ
	|	(МестонахождениеОСБУ.ОсновноеСредство ЕСТЬ NULL
	|			ИЛИ МестонахождениеОСБУ.Подразделение <> &Подразделение
	|			ИЛИ &МОЛ <> НЕОПРЕДЕЛЕНО
	|				И МестонахождениеОСБУ.МОЛ <> &МОЛ)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаОС.НомерСтроки";

	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();

		ШаблонСообщенияПодразделение = НСтр("ru='Основное средство <%1 (%2)> не отражалось в учете в местонахождении <%3>';uk='Основний засіб <%1 (%2)> не відображався в обліку в місцезнаходженні <%3>'");
		ШаблонСообщенияМОЛ = НСтр("ru='Основное средство <%1 (%2)> не отражалось в учете за МОЛ <%3>';uk='Основний засіб <%1 (%2)> не відображали в обліку за МВО <%3>'");

		Пока Выборка.Следующий() Цикл
			Если Выборка.Подразделение <> Реквизиты.Подразделение Тогда
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщенияПодразделение,
					Выборка.ОсновноеСредство, Выборка.КодОС, Реквизиты.Подразделение);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Реквизиты.Регистратор, Реквизиты.ИмяСписка + "["
					+ Формат(Выборка.НомерСтроки - 1, "ЧН=0; ЧГ=") + "].ОсновноеСредство", "Объект", Отказ);
			КонецЕсли;

			Если Реквизиты.МОЛ <> Неопределено И Выборка.МОЛ <> Реквизиты.МОЛ Тогда
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщенияМОЛ,
					Выборка.ОсновноеСредство, Выборка.КодОС, Реквизиты.МОЛ);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Реквизиты.Регистратор, Реквизиты.ИмяСписка + "["
					+ Формат(Выборка.НомерСтроки - 1, "ЧН=0; ЧГ=") + "].ОсновноеСредство", "Объект", Отказ);
			КонецЕсли;
		КонецЦикла;

	КонецЕсли;

КонецПроцедуры

Функция ПодготовитьПараметрыСоответствиеМестонахожденияОС(ТаблицаОС, ТаблицаРеквизиты)

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.ТаблицаОС

	СписокОбязательныхКолонок = ""
	+ "НомерСтроки,"      // <Число, 5, 0>
	+ "ОсновноеСредство"; // <СправочникСсылка.ОбъектыЭксплуатации>

	Параметры.Вставить("ТаблицаОС",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаОС, СписокОбязательныхКолонок));

	// Подготовка таблицы Параметры.Реквизиты

	СписокОбязательныхКолонок = ""
	+ "Период,"        // <Дата>
	+ "ИмяСписка,"     // <Строка, 0>
	+ "МОЛ,"           // <СправочникСсылка.ФизическиеЛица> - МОЛ, за которым закреплено ОС
	+ "Организация,"   // <СправочникСсылка.Организации>
	+ "Подразделение," // Подразделение в котором находится ОС
	+ "Регистратор";   // <ДокументСсылка.*>

	Параметры.Вставить("Реквизиты",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции

Процедура ПроверитьЗаполнениеСчетаУчетаОС(ТаблицаОС, ТаблицаРеквизиты, Отказ) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Параметры = ПодготовитьПараметрыЗаполнениеСчетаУчетаОС(ТаблицаОС, ТаблицаРеквизиты);

	Если Параметры.ТаблицаОС.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Реквизиты = Параметры.Реквизиты[0];

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Период", Новый Граница(Новый МоментВремени(Реквизиты.Период, Реквизиты.Регистратор), ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("Организация", Реквизиты.Организация);
	Запрос.УстановитьПараметр("ТаблицаОС", Параметры.ТаблицаОС);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки,
	|	ВЫРАЗИТЬ(ТаблицаОС.ОсновноеСредство КАК Справочник.ОбъектыЭксплуатации) КАК ОсновноеСредство
	|ПОМЕСТИТЬ ТаблицаОС
	|ИЗ
	|	&ТаблицаОС КАК ТаблицаОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СчетаУчетаОС.ОсновноеСредство,
	|	СчетаУчетаОС.СчетУчета КАК СчетУчета
	|ПОМЕСТИТЬ СчетаУчетаОС
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОС.СрезПоследних(
	|			&Период,
	|			ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						ТаблицаОС.ОсновноеСредство
	|					ИЗ
	|						ТаблицаОС КАК ТаблицаОС)) КАК СчетаУчетаОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетУчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ТаблицаОС.ОсновноеСредство.Код КАК КодОС,
	|	СчетаУчетаОС.СчетУчета
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ СчетаУчетаОС КАК СчетаУчетаОС
	|		ПО ТаблицаОС.ОсновноеСредство = СчетаУчетаОС.ОсновноеСредство
	|ГДЕ
	|	(СчетаУчетаОС.ОсновноеСредство ЕСТЬ NULL
	|			ИЛИ СчетаУчетаОС.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаОС.НомерСтроки";

	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();

		ШаблонСообщения = НСтр("ru='Для основного средства <%1 (%2)> не указан счет учета.';uk='Для основного засобу <%1 (%2)> не вказано рахунок обліку.'");

		Пока Выборка.Следующий() Цикл
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения,
				Выборка.ОсновноеСредство, Выборка.КодОС);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Реквизиты.Регистратор, Реквизиты.ИмяСписка + "["
				+ Формат(Выборка.НомерСтроки - 1, "ЧН=0; ЧГ=") + "].ОсновноеСредство", "Объект", Отказ);
		КонецЦикла;

	КонецЕсли;

КонецПроцедуры

Процедура ПроверитьЗаполнениеСчетаЗабалансовогоУчетаОС(ТаблицаОС, ТаблицаРеквизиты, Отказ) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Параметры = ПодготовитьПараметрыЗаполнениеСчетаУчетаОС(ТаблицаОС, ТаблицаРеквизиты);

	Если Параметры.ТаблицаОС.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Реквизиты = Параметры.Реквизиты[0];

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Период", Новый Граница(Новый МоментВремени(Реквизиты.Период, Реквизиты.Регистратор), ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("Организация", Реквизиты.Организация);
	Запрос.УстановитьПараметр("ТаблицаОС", Параметры.ТаблицаОС);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки,
	|	ВЫРАЗИТЬ(ТаблицаОС.ОсновноеСредство КАК Справочник.ОбъектыЭксплуатации) КАК ОсновноеСредство
	|ПОМЕСТИТЬ ТаблицаОС
	|ИЗ
	|	&ТаблицаОС КАК ТаблицаОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СчетаУчетаОС.ОсновноеСредство,
	|	СчетаУчетаОС.СчетЗабалансовогоУчета КАК СчетЗабалансовогоУчета
	|ПОМЕСТИТЬ СчетаУчетаОС
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОС.СрезПоследних(
	|			&Период,
	|			ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						ТаблицаОС.ОсновноеСредство
	|					ИЗ
	|						ТаблицаОС КАК ТаблицаОС)) КАК СчетаУчетаОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетЗабалансовогоУчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ТаблицаОС.ОсновноеСредство.Код КАК КодОС,
	|	СчетаУчетаОС.СчетЗабалансовогоУчета
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ СчетаУчетаОС КАК СчетаУчетаОС
	|		ПО ТаблицаОС.ОсновноеСредство = СчетаУчетаОС.ОсновноеСредство
	|ГДЕ
	|	(СчетаУчетаОС.ОсновноеСредство ЕСТЬ NULL
	|			ИЛИ СчетаУчетаОС.СчетЗабалансовогоУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаОС.НомерСтроки";

	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();

		ШаблонСообщения = НСтр("ru='Для основного средства <%1 (%2)> не указан счет учета.';uk='Для основного засобу <%1 (%2)> не вказано рахунок обліку.'");

		Пока Выборка.Следующий() Цикл
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения,
				Выборка.ОсновноеСредство, Выборка.КодОС);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Реквизиты.Регистратор, Реквизиты.ИмяСписка + "["
				+ Формат(Выборка.НомерСтроки - 1, "ЧН=0; ЧГ=") + "].ОсновноеСредство", "Объект", Отказ);
		КонецЦикла;

	КонецЕсли;

КонецПроцедуры

Функция ПодготовитьПараметрыЗаполнениеСчетаУчетаОС(ТаблицаОС, ТаблицаРеквизиты)

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.ТаблицаОС

	СписокОбязательныхКолонок = ""
	+ "НомерСтроки,"      // <Число, 5, 0>
	+ "ОсновноеСредство"; // <СправочникСсылка.ОбъектыЭксплуатации>

	Параметры.Вставить("ТаблицаОС",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаОС, СписокОбязательныхКолонок));

	// Подготовка таблицы Параметры.Реквизиты

	СписокОбязательныхКолонок = ""
	+ "Период,"      // <Дата>
	+ "ИмяСписка,"   // <Строка, 0>
	+ "Организация," // <СправочникСсылка.Организации>
	+ "Регистратор"; // <ДокументСсылка.*>

	Параметры.Вставить("Реквизиты",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции

Процедура ПроверитьСоответствиеОСНалоговомуНазначению(ТаблицаОС, ТаблицаРеквизиты, Отказ) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Параметры = ПодготовитьПараметрыСоответствиеОСНалоговомуНазначению(ТаблицаОС, ТаблицаРеквизиты);
	
	Если Параметры.ТаблицаОС.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Реквизиты = Параметры.Реквизиты[0];
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Период", Новый Граница(Новый МоментВремени(Реквизиты.Период, Реквизиты.Регистратор), ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("Организация", Реквизиты.Организация);
	Запрос.УстановитьПараметр("НалоговоеНазначение", Реквизиты.НалоговоеНазначение);
	Запрос.УстановитьПараметр("ТаблицаОС", Параметры.ТаблицаОС);
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаОС.НомерСтроки,
		|	ВЫРАЗИТЬ(ТаблицаОС.ОсновноеСредство КАК Справочник.ОбъектыЭксплуатации) КАК ОсновноеСредство
		|ПОМЕСТИТЬ ТаблицаОС
		|ИЗ
		|	&ТаблицаОС КАК ТаблицаОС
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОсновноеСредство
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаОС.НомерСтроки,
		|	ТаблицаОС.ОсновноеСредство,
		|	ТаблицаОС.ОсновноеСредство.Код КАК КодОС,
		|	ПорядокУчетаОСБУ.НалоговоеНазначение
		|ИЗ
		|	ТаблицаОС КАК ТаблицаОС
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(
		|				&Период,
		|				Организация = &Организация
		|					И ОсновноеСредство В
		|						(ВЫБРАТЬ
		|							ТаблицаОС.ОсновноеСредство
		|						ИЗ
		|							ТаблицаОС КАК ТаблицаОС)) КАК ПорядокУчетаОСБУ
		|		ПО ТаблицаОС.ОсновноеСредство = ПорядокУчетаОСБУ.ОсновноеСредство
		|ГДЕ
		|	ПорядокУчетаОСБУ.НалоговоеНазначение <> &НалоговоеНазначение";
	
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();

		ШаблонСообщенияБУ = НСтр("ru='Налоговое назначение ОС <%1 (%2)> отличается от указанного в документе <%3>';uk='Податкове призначення ОЗ <%1 (%2)> відрізняється від зазначеного в документі <%3>'");
		
		Пока Выборка.Следующий() Цикл
			
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщенияБУ,
				Выборка.ОсновноеСредство, Выборка.КодОС, Реквизиты.НалоговоеНазначение);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Реквизиты.Регистратор, Реквизиты.ИмяСписка + "["
				+ Формат(Выборка.НомерСтроки - 1, "ЧН=0; ЧГ=") + "].ОсновноеСредство", "Объект", Отказ);
				
		КонецЦикла;

	КонецЕсли;

КонецПроцедуры

Функция ПодготовитьПараметрыСоответствиеОСНалоговомуНазначению(ТаблицаОС, ТаблицаРеквизиты)

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.ТаблицаОС

	СписокОбязательныхКолонок = ""
	+ "НомерСтроки,"      // <Число, 5, 0>
	+ "ОсновноеСредство"; // <СправочникСсылка.ОбъектыЭксплуатации>

	Параметры.Вставить("ТаблицаОС",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаОС, СписокОбязательныхКолонок));


	// Подготовка таблицы Параметры.Реквизиты

	СписокОбязательныхКолонок = ""
	+ "Период,"      // <Дата>
	+ "ИмяСписка,"   // <Строка, 0>
	+ "Организация," // <СправочникСсылка.Организации>
	+ "НалоговоеНазначение," // <СправочникСсылка.НалоговыеНазначенияАктивовИЗатрат>
	+ "Регистратор"; // <ДокументСсылка.*>

	Параметры.Вставить("Реквизиты",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции		


// РЕГИСТРАЦИЯ СОСТОЯНИЯ ОС

Процедура ПроверитьВозможностьИзмененияСостоянияОС(ТаблицаОС, ТаблицаРеквизиты, Отказ) Экспорт
	
	Параметры = ПодготовитьПараметрыВозможностьИзмененияСостоянияОС(ТаблицаОС, ТаблицаРеквизиты);
	
	Если Параметры.ТаблицаОС.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Реквизиты = Параметры.Реквизиты[0];
	
	Если Реквизиты.СостояниеОС = Перечисления.СостоянияОС.ПринятоКУчету
		Или Реквизиты.СостояниеОС = Перечисления.СостоянияОС.ПринятоКЗабалансовомуУчету Тогда
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ТаблицаОС.НомерСтроки,
		|	ВЫРАЗИТЬ(ТаблицаОС.ОсновноеСредство КАК Справочник.ОбъектыЭксплуатации) КАК ОсновноеСредство
		|ПОМЕСТИТЬ ТаблицаОС
		|ИЗ
		|	&ТаблицаОС КАК ТаблицаОС
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОсновноеСредство
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаОС.НомерСтроки,
		|	ПорядокУчетаОСБУ.ОсновноеСредство КАК ОсновноеСредство,
		|	ПорядокУчетаОСБУ.Период,
		|	ПорядокУчетаОСБУ.Регистратор,
		|	ПорядокУчетаОСБУ.Состояние,
		|	ПорядокУчетаОСБУ.Организация
		|ПОМЕСТИТЬ СостоянияОС
		|ИЗ
		|	РегистрСведений.ПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаОС КАК ТаблицаОС
		|		ПО ПорядокУчетаОСБУ.ОсновноеСредство = ТаблицаОС.ОсновноеСредство
		|			И (ПорядокУчетаОСБУ.Период < &Дата)
		|			И (ПорядокУчетаОСБУ.Регистратор <> &Документ)
		|			И (ПорядокУчетаОСБУ.Активность = ИСТИНА)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОсновноеСредство
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СостоянияОС.ОсновноеСредство КАК ОсновноеСредство,
		|	МАКСИМУМ(СостоянияОС.Период) КАК Период
		|ПОМЕСТИТЬ ДатыПоследнихСостоянийОС
		|ИЗ
		|	СостоянияОС КАК СостоянияОС
		|
		|СГРУППИРОВАТЬ ПО
		|	СостоянияОС.ОсновноеСредство
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОсновноеСредство
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СостоянияОС.ОсновноеСредство,
		|	СостоянияОС.ОсновноеСредство.Код КАК КодОС,
		|	СостоянияОС.Период,
		|	СостоянияОС.НомерСтроки КАК НомерСтроки,
		|	СостоянияОС.Регистратор,
		|	СостоянияОС.Организация
		|ИЗ
		|	ДатыПоследнихСостоянийОС КАК ДатыПоследнихСостоянийОС
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СостоянияОС КАК СостоянияОС
		|		ПО ДатыПоследнихСостоянийОС.ОсновноеСредство = СостоянияОС.ОсновноеСредство
		|			И ДатыПоследнихСостоянийОС.Период = СостоянияОС.Период
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОС КАК ПервоначальныеСведения
		|		ПО ДатыПоследнихСостоянийОС.ОсновноеСредство = ПервоначальныеСведения.ОсновноеСредство
		|			И ДатыПоследнихСостоянийОС.Период = ПервоначальныеСведения.Период
		|ГДЕ
		|	СостоянияОС.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
		|	ИЛИ (СостоянияОС.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКЗабалансовомуУчету)
		|		И ЕСТЬNULL(ПервоначальныеСведения.Договор, ЗНАЧЕНИЕ(Справочник.ДоговорыЛизинга.ПустаяСсылка)) В (
		|						НЕОПРЕДЕЛЕНО, 
		|						ЗНАЧЕНИЕ(Справочник.ДоговорыЛизинга.ПустаяСсылка)))
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
		
		Запрос = Новый Запрос(ТекстЗапроса);
		Запрос.УстановитьПараметр("Организация", Реквизиты.Организация );
		Запрос.УстановитьПараметр("Состояние", Реквизиты.СостояниеОС);
		Запрос.УстановитьПараметр("Документ", Реквизиты.Регистратор);
		Запрос.УстановитьПараметр("ТаблицаОС", Параметры.ТаблицаОС);
		Запрос.УстановитьПараметр("Дата", Реквизиты.Период);
		Запрос.УстановитьПараметр("Документ", Реквизиты.Регистратор);
		
		УстановитьПривилегированныйРежим(Истина);
		РезультатЗапроса = Запрос.Выполнить();
		УстановитьПривилегированныйРежим(Ложь);

		Если НЕ РезультатЗапроса.Пустой() Тогда
			Выборка = РезультатЗапроса.Выбрать();
			
			ШаблонСообщения = НСтр("ru='Основное средство <%1 (%2)> принято к учету в организации <%3>
|документом <%4>. Дата состояния: %5'
|;uk='Основний засіб <%1 (%2)> прийнято до обліку в організації <%3>
|документом <%4>. Дата стану: %5'");
			
			Пока Выборка.Следующий() Цикл
				
				ТекстСообщения = СтрШаблон(ШаблонСообщения, 
									Выборка.ОсновноеСредство,
									Выборка.КодОС, 
									Выборка.Организация, 
									Выборка.Регистратор, 
									Формат(Выборка.ДатаСостояния, "ДЛФ=D"));
									
				Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(
									Реквизиты.ИмяСписка,
									Выборка.НомерСтроки,
									"ОсновноеСредство");
									
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
						ТекстСообщения, 
						Реквизиты.Регистратор, 
						Поле, 
						"Объект", 
						Отказ);
			КонецЦикла;
			
			Возврат;
		КонецЕсли;
		
	ИначеЕсли Реквизиты.СостояниеОС = Перечисления.СостоянияОС.СнятоСУчета Тогда
		
		ПроверитьСостояниеОСПринятоКУчету(Параметры.ТаблицаОС, Параметры.Реквизиты, Отказ);
	
	КонецЕсли;
	
КонецПроцедуры

Функция ПодготовитьПараметрыВозможностьИзмененияСостоянияОС(ТаблицаОС, ТаблицаРеквизиты)

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.ТаблицаОС

	СписокОбязательныхКолонок = ""
	+ "НомерСтроки,"      // <Число, 5, 0>
	+ "ОсновноеСредство"; // <СправочникСсылка.ОбъектыЭксплуатации>

	Параметры.Вставить("ТаблицаОС",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаОС, СписокОбязательныхКолонок));

	// Подготовка таблицы Параметры.Реквизиты

	СписокОбязательныхКолонок = ""
	+ "Период,"      // <Дата>
	+ "ИмяСписка,"   // <Строка, 0>
	+ "Организация," // <СправочникСсылка.Организации>
	+ "СостояниеОС," // <ПеречислениеСсылка.СостоянияОС> - состояние ОС, которое требуется установить
	+ "Регистратор"; // <ДокументСсылка.*>

	Параметры.Вставить("Реквизиты",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции


// РАСЧЕТ АМОРТИЗАЦИИ ОС

Функция ПодготовитьТаблицуАмортизацияОС(ТаблицаОС, ТаблицаРеквизиты, ТаблицаПараметровРасчетаАмортизации = Неопределено, КоличествоОбработанныхДанных = 0, Отказ = Ложь) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Параметры = ПодготовитьПараметрыАмортизацияОС(ТаблицаОС, ТаблицаРеквизиты);
	
	Реквизиты = Параметры.Реквизиты[0];
	
	ТаблицаАмортизации = ПустаяТаблицаЗначенийНачисленнойАмортизации();
	
	Если ТаблицаРеквизиты.Колонки.Найти("ДоначислениеВНУ") = Неопределено Тогда
		ДоначислениеВНУ = Ложь;
	Иначе
		ДоначислениеВНУ = ТаблицаРеквизиты[0].ДоначислениеВНУ;
	КонецЕсли;
	ОтражатьВНалоговомУчете = УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Реквизиты.Организация, Реквизиты.Период)
			ИЛИ ДоначислениеВНУ;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Организация", Реквизиты.Организация);
	Запрос.УстановитьПараметр("НачалоГода", НачалоГода(Реквизиты.ДатаРасчета));
	Запрос.УстановитьПараметр("НачалоПериодаДата", НачалоМесяца(Реквизиты.ДатаРасчета));
	Запрос.УстановитьПараметр("НачалоПериода", Новый Граница(НачалоМесяца(Реквизиты.ДатаРасчета), ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(Реквизиты.ДатаРасчета));
	Запрос.УстановитьПараметр("Период", Реквизиты.ДатаРасчета);
	Запрос.УстановитьПараметр("ИспользуетсяУправлениеВНА_2_4", ВнеоборотныеАктивы.ИспользуетсяУправлениеВНА_2_4(Реквизиты.ДатаРасчета));
	
	// Получим список основных средств для расчета амортизации
	Если Параметры.ТаблицаОС.Количество() > 0 Тогда
		Запрос.УстановитьПараметр("ТаблицаОС", Параметры.ТаблицаОС);
		Запрос.Текст = ПолучитьТекстЗапросаАмортизацияОСНеСнятыеСУчетаОСПоТаблице();
	Иначе
		Запрос.УстановитьПараметр("ПериодСостояния", НачалоМесяца(Реквизиты.ДатаРасчета));
		Запрос.Текст = ПолучитьТекстЗапросаАмортизацияОСНеСнятыеСУчетаОСВсе();
	КонецЕсли;
	Запрос.Выполнить();
	
	Если Параметры.ТаблицаОС.Количество() > 0 Тогда
		Запрос.Текст = ПолучитьТекстЗапросаОСПринятыеКУчетуВМесяцАмортизацииПоТаблице();
	Иначе
		Запрос.Текст = ПолучитьТекстЗапросаОСПринятыеКУчетуВМесяцАмортизацииВсе();
	КонецЕсли;
	Запрос.Выполнить();
	
	Запрос.Текст = ПолучитьТекстЗапросаАмортизируемыеОСПринятыеКУчетуВМесяцАмортизации();
	Запрос.Выполнить();
	
	Запрос.Текст = ПолучитьТекстЗапросаАмортизацияОСНачислениеАмортизации();
	Запрос.Выполнить();
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НачислениеАмортизацииБУ.ОсновноеСредство КАК ОсновноеСредство
	|ИЗ
	|	НачислениеАмортизацииБУ КАК НачислениеАмортизацииБУ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НачислениеАмортизацииНУ.ОсновноеСредство
	|ИЗ
	|	НачислениеАмортизацииНУ КАК НачислениеАмортизацииНУ";
	ТаблицаОСНачислениеАмортизации = Запрос.Выполнить().Выгрузить();
	ТаблицаОСНачислениеАмортизации.Свернуть("ОсновноеСредство");
	
	Запрос.Текст = ПолучитьТекстЗапросаАмортизацияОСПринятыеКУчетуВМесяцАмортизацииНачислениеАмортизации();
	Запрос.Выполнить();
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НачислениеАмортизацииБУАмортизируемыеВМесяцПринятияКУчету.ОсновноеСредство КАК ОсновноеСредство
	|ИЗ
	|	НачислениеАмортизацииБУАмортизируемыеВМесяцПринятияКУчету КАК НачислениеАмортизацииБУАмортизируемыеВМесяцПринятияКУчету
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НачислениеАмортизацииНУАмортизируемыеВМесяцПринятияКУчету.ОсновноеСредство
	|ИЗ
	|	НачислениеАмортизацииНУАмортизируемыеВМесяцПринятияКУчету КАК НачислениеАмортизацииНУАмортизируемыеВМесяцПринятияКУчету";
	ТаблицаОСНачислениеАмортизацииПринятыеКУчетуВМесяцАмортизации = Запрос.Выполнить().Выгрузить();
	ТаблицаОСНачислениеАмортизацииПринятыеКУчетуВМесяцАмортизации.Свернуть("ОсновноеСредство");
	
	Запрос.УстановитьПараметр("ТаблицаОСНачислениеАмортизации", ТаблицаОСНачислениеАмортизации);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаОСНачислениеАмортизации.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ СписокОС
	|ИЗ
	|	&ТаблицаОСНачислениеАмортизации КАК ТаблицаОСНачислениеАмортизации
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";
	Запрос.Выполнить();
	
	Запрос.УстановитьПараметр("ТаблицаОСНачислениеАмортизацииПринятыеКУчетуВМесяцАмортизации", ТаблицаОСНачислениеАмортизацииПринятыеКУчетуВМесяцАмортизации);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаОСНачислениеАмортизацииПринятыеКУчетуВМесяцАмортизации.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ СписокОСАмортизируемыеВМесяцПринятияКУчету
	|ИЗ
	|	&ТаблицаОСНачислениеАмортизацииПринятыеКУчетуВМесяцАмортизации КАК ТаблицаОСНачислениеАмортизацииПринятыеКУчетуВМесяцАмортизации
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";
	Запрос.Выполнить();
	
	// Получим дополнительные параметры из регистров сведений
	СписокЗапросов = Новый Массив;
	СписокЗапросов.Добавить(ПолучитьТекстЗапросаАмортизацияОСПервоначальныеСведения());
	СписокЗапросов.Добавить(ПолучитьТекстЗапросаАмортизацияОСПорядокУчета());
	СписокЗапросов.Добавить(ПолучитьТекстЗапросаАмортизацияОСПараметрыАмортизации());
	СписокЗапросов.Добавить(ПолучитьТекстЗапросаАмортизацияОСПараметрыОтраженияВУчете());
	СписокЗапросов.Добавить(ПолучитьТекстЗапросаАмортизацияОСПрочиеПараметры());
	Запрос.Текст = СтрСоединить(СписокЗапросов, ОбщегоНазначения.РазделительПакетаЗапросов());
	Запрос.Выполнить();
	
	СписокЗапросов = Новый Массив;
	СписокЗапросов.Добавить(ПолучитьТекстЗапросаАмортизацияОСПервоначальныеСведенияАмортизируемыеВМесяцПринятияКУчету());
	СписокЗапросов.Добавить(ПолучитьТекстЗапросаАмортизацияОСПорядокУчетаАмортизируемыеВМесяцПринятияКУчету());
	СписокЗапросов.Добавить(ПолучитьТекстЗапросаАмортизацияОСПараметрыАмортизацииАмортизируемыеВМесяцПринятияКУчету());
	СписокЗапросов.Добавить(ПолучитьТекстЗапросаАмортизацияОСПараметрыОтраженияВУчетеАмортизируемыеВМесяцПринятияКУчету());
	СписокЗапросов.Добавить(ПолучитьТекстЗапросаАмортизацияОСПрочиеПараметрыАмортизируемыеВМесяцПринятияКУчету());
	Запрос.Текст = СтрСоединить(СписокЗапросов, ОбщегоНазначения.РазделительПакетаЗапросов());
	Запрос.Выполнить();

	
	// Получим таблицу графиков амортизации
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПараметрыАмортизацииОСБУ.ГрафикАмортизации
	|ИЗ
	|	ПараметрыАмортизацииОСБУ КАК ПараметрыАмортизацииОСБУ";
	СписокГрафиков = Запрос.Выполнить().Выгрузить();
	ТаблицаГрафиков = ГрафикиАмортизацииОС(СписокГрафиков);
	
	// Соберем все параметры в одну таблицу
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СписокОС.ОсновноеСредство КАК ОсновноеСредство,
	|	СписокОС.ОсновноеСредство.ИнвентарныйНомер КАК ИнвентарныйНомер,
	|	ПорядокУчетаОС.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ЕСТЬNULL(НачислениеАмортизацииБУ.НачислятьАмортизациюБУ, ЛОЖЬ) КАК НачислятьАмортизациюБУ,
	|	ЕСТЬNULL(НачислениеАмортизацииНУ.НачислятьАмортизациюНУ, ЛОЖЬ) КАК НачислятьАмортизациюНУ,
	|	ЕСТЬNULL(ВыработкаОС.ОбъемВыработки, 0) КАК Количество,
	|	ЕСТЬNULL(ПараметрыАмортизацииОСБУ.СрокИспользованияДляВычисленияАмортизации, 0) КАК СрокИспользованияДляВычисленияАмортизации,
	|	ЕСТЬNULL(ПараметрыАмортизацииОСБУ.СтоимостьДляВычисленияАмортизации, 0) КАК СтоимостьДляВычисленияАмортизации,
	|	ЕСТЬNULL(ПараметрыАмортизацииОСБУ.СрокИспользованияДляВычисленияАмортизацииНУ, 0) КАК СрокИспользованияДляВычисленияАмортизацииНУ,
	|	ЕСТЬNULL(ПараметрыАмортизацииОСБУ.СтоимостьДляВычисленияАмортизацииНУ, 0) КАК СтоимостьДляВычисленияАмортизацииНУ,
	|	ЕСТЬNULL(ПараметрыАмортизацииОСБУ.ЛиквидационнаяСтоимость, 0) КАК ЛиквидационнаяСтоимость,
	|	ЕСТЬNULL(ПараметрыАмортизацииОСБУ.ОбъемПродукцииРаботДляВычисленияАмортизации, 0) КАК ОбъемПродукцииРаботДляВычисленияАмортизации,
	|	ПараметрыАмортизацииОСБУ.Период КАК Период,
	|	ПараметрыАмортизацииОСБУ.Период КАК ПериодНУ,
	|	ПараметрыАмортизацииОСБУ.ГрафикАмортизации КАК ГрафикАмортизации,
	|	СчетаБухгалтерскогоУчетаОС.СчетУчета КАК СчетУчета,
	|	СчетаБухгалтерскогоУчетаОС.СчетНачисленияАмортизации КАК СчетНачисленияАмортизации,
	|	СчетаБухгалтерскогоУчетаОС.СчетДооценки КАК СчетДооценки,
	|	СчетаБухгалтерскогоУчетаОСНачалоГода.СчетУчета КАК СчетУчетаНачалоГода,
	|	СчетаБухгалтерскогоУчетаОСНачалоГода.СчетНачисленияАмортизации КАК СчетНачисленияАмортизацииНачалоГода,
	|	ПервоначальныеСведенияОС.СпособНачисленияАмортизации КАК СпособНачисленияАмортизации,
	|	ПервоначальныеСведенияОС.СпособНачисленияАмортизацииНУ КАК СпособНачисленияАмортизацииНУ,
	|	ЕСТЬNULL(ПервоначальныеСведенияОС.ПервоначальнаяСтоимость, 0) КАК ПервоначальнаяСтоимость,
	|	МестонахождениеОСБУ.Подразделение КАК ПодразделениеЗатрат,
	|	ПорядокУчетаОСБУ.СтатьяРасходов КАК СтатьяРасходов,
	|	ПорядокУчетаОСБУ.АналитикаРасходов КАК АналитикаРасходов,
	|	ПорядокУчетаОСБУ.НалоговоеНазначение КАК НалоговоеНазначение,
	|	ПорядокУчетаОСБУ.СпособОтраженияРасходовЗаданДокументом КАК СпособОтраженияРасходовЗаданДокументом,
	|	ПорядокУчетаОСБУ.СпособОтраженияРасходов КАК СпособОтраженияРасходов,
	|	ЕСТЬNULL(ПорядокУчетаОСБУ.СпособОтраженияРасходовДокументОснование, НЕОПРЕДЕЛЕНО) КАК СпособОтраженияРасходовДокументОснование,
	|	ЕСТЬNULL(ПараметрыАмортизацииОСБУ.СрокПолезногоИспользованияНУ, 0) КАК СрокПолезногоИспользованияНУ,
	|	ПервоначальныеСведенияОС.ДатаПринятияКУчету КАК ДатаПринятияКУчету,
	|	ЛОЖЬ КАК АмортизируетсяВМесяцПринятияКУчету,
	|	МестонахождениеОСБУ.Подразделение КАК Подразделение
	|ПОМЕСТИТЬ СписокОССПараметрами
	|ИЗ
	|	СписокОС КАК СписокОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ НачислениеАмортизацииБУ КАК НачислениеАмортизацииБУ
	|		ПО СписокОС.ОсновноеСредство = НачислениеАмортизацииБУ.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ НачислениеАмортизацииНУ КАК НачислениеАмортизацииНУ
	|		ПО СписокОС.ОсновноеСредство = НачислениеАмортизацииНУ.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПервоначальныеСведенияОС КАК ПервоначальныеСведенияОС
	|		ПО СписокОС.ОсновноеСредство = ПервоначальныеСведенияОС.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПараметрыАмортизацииОСБУ КАК ПараметрыАмортизацииОСБУ
	|		ПО СписокОС.ОсновноеСредство = ПараметрыАмортизацииОСБУ.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПорядокУчетаОС КАК ПорядокУчетаОС
	|		ПО СписокОС.ОсновноеСредство = ПорядокУчетаОС.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
	|		ПО СписокОС.ОсновноеСредство = ПорядокУчетаОСБУ.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ СчетаБухгалтерскогоУчетаОС КАК СчетаБухгалтерскогоУчетаОС
	|		ПО СписокОС.ОсновноеСредство = СчетаБухгалтерскогоУчетаОС.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ СчетаБухгалтерскогоУчетаОСНачалоГода КАК СчетаБухгалтерскогоУчетаОСНачалоГода
	|		ПО СписокОС.ОсновноеСредство = СчетаБухгалтерскогоУчетаОСНачалоГода.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВыработкаОС КАК ВыработкаОС
	|		ПО СписокОС.ОсновноеСредство = ВыработкаОС.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ МестонахождениеОСБУ КАК МестонахождениеОСБУ
	|		ПО СписокОС.ОсновноеСредство = МестонахождениеОСБУ.ОсновноеСредство
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СписокОСАмортизируемыеВМесяцПринятияКУчету.ОсновноеСредство КАК ОсновноеСредство,
	|	СписокОСАмортизируемыеВМесяцПринятияКУчету.ОсновноеСредство.ИнвентарныйНомер КАК ИнвентарныйНомер,
	|	ПорядокУчетаОСАмортизируемыеВМесяцПринятияКУчету.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ЕСТЬNULL(НачислениеАмортизацииБУАмортизируемыеВМесяцПринятияКУчету.НачислятьАмортизациюБУ, ЛОЖЬ) КАК НачислятьАмортизациюБУ,
	|
	|	ВЫБОР 
	|		КОГДА 
	|			 ПервоначальныеСведенияОСАмортизируемыеВМесяцПринятияКУчету.СпособНачисленияАмортизацииНУ В ( 
	|							ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииОС.ПропорциональноОбъемуПродукции),
	|							ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииОС._50_50), 
	|							ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииОС._100)) 
	|
	|		ТОГДА ЕСТЬNULL(НачислениеАмортизацииНУАмортизируемыеВМесяцПринятияКУчету.НачислятьАмортизациюНУ, ЛОЖЬ) 
	|		ИНАЧЕ  ЛОЖЬ	КОНЕЦ КАК НачислятьАмортизациюНУ,		
	| 
	|	ЕСТЬNULL(ВыработкаОСАмортизируемыеВМесяцПринятияКУчету.ОбъемВыработки, 0) КАК Количество,
	|	ЕСТЬNULL(ПараметрыАмортизацииОСБУАмортизируемыеВМесяцПринятияКУчету.СрокИспользованияДляВычисленияАмортизации, 0) КАК СрокИспользованияДляВычисленияАмортизации,
	|	ЕСТЬNULL(ПараметрыАмортизацииОСБУАмортизируемыеВМесяцПринятияКУчету.СтоимостьДляВычисленияАмортизации, 0) КАК СтоимостьДляВычисленияАмортизации,
	|	ЕСТЬNULL(ПараметрыАмортизацииОСБУАмортизируемыеВМесяцПринятияКУчету.СрокИспользованияДляВычисленияАмортизацииНУ, 0) КАК СрокИспользованияДляВычисленияАмортизацииНУ,
	|	ЕСТЬNULL(ПараметрыАмортизацииОСБУАмортизируемыеВМесяцПринятияКУчету.СтоимостьДляВычисленияАмортизацииНУ, 0) КАК СтоимостьДляВычисленияАмортизацииНУ,
	|	ЕСТЬNULL(ПараметрыАмортизацииОСБУАмортизируемыеВМесяцПринятияКУчету.ЛиквидационнаяСтоимость, 0) КАК ЛиквидационнаяСтоимость,
	|	ЕСТЬNULL(ПараметрыАмортизацииОСБУАмортизируемыеВМесяцПринятияКУчету.ОбъемПродукцииРаботДляВычисленияАмортизации, 0) КАК ОбъемПродукцииРаботДляВычисленияАмортизации,
	|	ПараметрыАмортизацииОСБУАмортизируемыеВМесяцПринятияКУчету.Период КАК Период,
	|	ПараметрыАмортизацииОСБУАмортизируемыеВМесяцПринятияКУчету.Период КАК ПериодНУ,
	|	ПараметрыАмортизацииОСБУАмортизируемыеВМесяцПринятияКУчету.ГрафикАмортизации КАК ГрафикАмортизации,
	|	СчетаБухгалтерскогоУчетаОСАмортизируемыеВМесяцПринятияКУчету.СчетУчета КАК СчетУчета,
	|	СчетаБухгалтерскогоУчетаОСАмортизируемыеВМесяцПринятияКУчету.СчетНачисленияАмортизации КАК СчетНачисленияАмортизации,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДооценки,
	|	СчетаБухгалтерскогоУчетаОСНачалоГодаАмортизируемыеВМесяцПринятияКУчету.СчетУчета КАК СчетУчетаНачалоГода,
	|	СчетаБухгалтерскогоУчетаОСНачалоГодаАмортизируемыеВМесяцПринятияКУчету.СчетНачисленияАмортизации КАК СчетНачисленияАмортизацииНачалоГода,
	|	ПервоначальныеСведенияОСАмортизируемыеВМесяцПринятияКУчету.СпособНачисленияАмортизации КАК СпособНачисленияАмортизации,
	|	ПервоначальныеСведенияОСАмортизируемыеВМесяцПринятияКУчету.СпособНачисленияАмортизацииНУ КАК СпособНачисленияАмортизацииНУ,
	|	ЕСТЬNULL(ПервоначальныеСведенияОСАмортизируемыеВМесяцПринятияКУчету.ПервоначальнаяСтоимость, 0) КАК ПервоначальнаяСтоимость,
	|	МестонахождениеОСБУАмортизируемыеВМесяцПринятияКУчету.Подразделение КАК ПодразделениеЗатрат,
	|	ПорядокУчетаОСБУАмортизируемыеВМесяцПринятияКУчету.СтатьяРасходов КАК СтатьяРасходов,
	|	ПорядокУчетаОСБУАмортизируемыеВМесяцПринятияКУчету.АналитикаРасходов КАК АналитикаРасходов,
	|	ПорядокУчетаОСБУАмортизируемыеВМесяцПринятияКУчету.НалоговоеНазначение КАК НалоговоеНазначение,
	|	ПорядокУчетаОСБУАмортизируемыеВМесяцПринятияКУчету.СпособОтраженияРасходовЗаданДокументом КАК СпособОтраженияРасходовЗаданДокументом,
	|	ПорядокУчетаОСБУАмортизируемыеВМесяцПринятияКУчету.СпособОтраженияРасходов КАК СпособОтраженияРасходов,
	|	ЕСТЬNULL(ПорядокУчетаОСБУАмортизируемыеВМесяцПринятияКУчету.СпособОтраженияРасходовДокументОснование, НЕОПРЕДЕЛЕНО) КАК СпособОтраженияРасходовДокументОснование,
	|	ЕСТЬNULL(ПараметрыАмортизацииОСБУАмортизируемыеВМесяцПринятияКУчету.СрокПолезногоИспользованияНУ, 0) КАК СрокПолезногоИспользованияНУ,
	|	ПервоначальныеСведенияОСАмортизируемыеВМесяцПринятияКУчету.ДатаПринятияКУчету КАК ДатаПринятияКУчету,
	|	ИСТИНА КАК АмортизируетсяВМесяцПринятияКУчету,
	|	МестонахождениеОСБУАмортизируемыеВМесяцПринятияКУчету.Подразделение КАК Подразделение
	|
	|ИЗ
	|	СписокОСАмортизируемыеВМесяцПринятияКУчету КАК СписокОСАмортизируемыеВМесяцПринятияКУчету
	|		ЛЕВОЕ СОЕДИНЕНИЕ НачислениеАмортизацииБУАмортизируемыеВМесяцПринятияКУчету КАК НачислениеАмортизацииБУАмортизируемыеВМесяцПринятияКУчету
	|		ПО СписокОСАмортизируемыеВМесяцПринятияКУчету.ОсновноеСредство = НачислениеАмортизацииБУАмортизируемыеВМесяцПринятияКУчету.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ НачислениеАмортизацииНУАмортизируемыеВМесяцПринятияКУчету КАК НачислениеАмортизацииНУАмортизируемыеВМесяцПринятияКУчету
	|		ПО СписокОСАмортизируемыеВМесяцПринятияКУчету.ОсновноеСредство = НачислениеАмортизацииНУАмортизируемыеВМесяцПринятияКУчету.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПервоначальныеСведенияОСАмортизируемыеВМесяцПринятияКУчету КАК ПервоначальныеСведенияОСАмортизируемыеВМесяцПринятияКУчету
	|		ПО СписокОСАмортизируемыеВМесяцПринятияКУчету.ОсновноеСредство = ПервоначальныеСведенияОСАмортизируемыеВМесяцПринятияКУчету.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПараметрыАмортизацииОСБУАмортизируемыеВМесяцПринятияКУчету КАК ПараметрыАмортизацииОСБУАмортизируемыеВМесяцПринятияКУчету
	|		ПО СписокОСАмортизируемыеВМесяцПринятияКУчету.ОсновноеСредство = ПараметрыАмортизацииОСБУАмортизируемыеВМесяцПринятияКУчету.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПорядокУчетаОСАмортизируемыеВМесяцПринятияКУчету КАК ПорядокУчетаОСАмортизируемыеВМесяцПринятияКУчету
	|		ПО СписокОСАмортизируемыеВМесяцПринятияКУчету.ОсновноеСредство = ПорядокУчетаОСАмортизируемыеВМесяцПринятияКУчету.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПорядокУчетаОСБУАмортизируемыеВМесяцПринятияКУчету КАК ПорядокУчетаОСБУАмортизируемыеВМесяцПринятияКУчету
	|		ПО СписокОСАмортизируемыеВМесяцПринятияКУчету.ОсновноеСредство = ПорядокУчетаОСБУАмортизируемыеВМесяцПринятияКУчету.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ СчетаБухгалтерскогоУчетаОСАмортизируемыеВМесяцПринятияКУчету КАК СчетаБухгалтерскогоУчетаОСАмортизируемыеВМесяцПринятияКУчету
	|		ПО СписокОСАмортизируемыеВМесяцПринятияКУчету.ОсновноеСредство = СчетаБухгалтерскогоУчетаОСАмортизируемыеВМесяцПринятияКУчету.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ СчетаБухгалтерскогоУчетаОСНачалоГодаАмортизируемыеВМесяцПринятияКУчету КАК СчетаБухгалтерскогоУчетаОСНачалоГодаАмортизируемыеВМесяцПринятияКУчету
	|		ПО СписокОСАмортизируемыеВМесяцПринятияКУчету.ОсновноеСредство = СчетаБухгалтерскогоУчетаОСНачалоГодаАмортизируемыеВМесяцПринятияКУчету.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВыработкаОСАмортизируемыеВМесяцПринятияКУчету КАК ВыработкаОСАмортизируемыеВМесяцПринятияКУчету
	|		ПО СписокОСАмортизируемыеВМесяцПринятияКУчету.ОсновноеСредство = ВыработкаОСАмортизируемыеВМесяцПринятияКУчету.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ МестонахождениеОСБУАмортизируемыеВМесяцПринятияКУчету КАК МестонахождениеОСБУАмортизируемыеВМесяцПринятияКУчету
	|		ПО СписокОСАмортизируемыеВМесяцПринятияКУчету.ОсновноеСредство = МестонахождениеОСБУАмортизируемыеВМесяцПринятияКУчету.ОсновноеСредство
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";
	Запрос.Выполнить();
	
	Запрос.УстановитьПараметр("Регистратор", Реквизиты.Регистратор);
	// Получим амортизацию ранее начисленную документом
	Если ЗначениеЗаполнено(Реквизиты.Регистратор) Тогда
		Запрос.Текст = ПолучитьТекстЗапросаАмортизацияОСАмортизацияПоДокументу();
		Запрос.Выполнить();
	Иначе
		ПустаяТаблицаОборотов = Новый ТаблицаЗначений;
		ПустаяТаблицаОборотов.Колонки.Добавить("ОсновноеСредство", Новый ОписаниеТипов("СправочникСсылка.ОбъектыЭксплуатации"));
		ПустаяТаблицаОборотов.Колонки.Добавить("АмортизацияОборот", ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
		ПустаяТаблицаОборотов.Колонки.Добавить("АмортизацияНУОборот", ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
		
		Запрос.УстановитьПараметр("ПустаяТаблицаОборотов", ПустаяТаблицаОборотов);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ПустаяТаблицаОборотов.ОсновноеСредство КАК ОсновноеСредство,
		|	ПустаяТаблицаОборотов.АмортизацияОборот КАК АмортизацияОборот,
		|	ПустаяТаблицаОборотов.АмортизацияНУОборот КАК АмортизацияНУОборот
		|ПОМЕСТИТЬ АмортизацияОСДокумента
		|ИЗ
		|	&ПустаяТаблицаОборотов КАК ПустаяТаблицаОборотов";
		Запрос.Выполнить();
	КонецЕсли;
	
	Если ОбщегоНазначенияБПВызовСервераПовтИсп.ИспользоватьУправляемыеБлокировки() Тогда
		
		// Блокировка регистра бухгалтерии.
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	СчетаНачисленияАмортизацииБУ.Счет
		|ИЗ
		|	СчетаНачисленияАмортизацииБУ КАК СчетаНачисленияАмортизацииБУ
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СчетаНачисленияАмортизацииБУНачалоГода.Счет
		|ИЗ
		|	СчетаНачисленияАмортизацииБУНачалоГода КАК СчетаНачисленияАмортизацииБУНачалоГода";
		
		РезультатЗапроса = Запрос.Выполнить();

		СтруктураПараметровБлокировки = Новый Структура("ТипТаблицы, ИмяТаблицы, ИсточникДанных",
			"РегистрБухгалтерии", "Хозрасчетный", РезультатЗапроса);

		СтруктураЗначенийБлокировки = Новый Структура;
		СтруктураЗначенийБлокировки.Вставить("Период", Новый Диапазон(, КонецМесяца(Реквизиты.ДатаРасчета)));
		СтруктураЗначенийБлокировки.Вставить("Организация", Реквизиты.Организация);

		СтруктураИсточникаДанных = Новый Структура("Счет", "Счет");

		ОбщегоНазначенияБПВызовСервера.УстановитьУправляемуюБлокировку(СтруктураПараметровБлокировки, СтруктураЗначенийБлокировки, СтруктураИсточникаДанных);

	КонецЕсли;

	// Получим суммы из регистра бухгалтерии
	Запрос.Текст = ПолучитьТекстЗапросаАмортизацияОСДанныеПроводок();
	Запрос.Выполнить();
	
	// Получим амортизированные за период активы  
	Запрос.Текст = ПолучитьТекстЗапросаНачисленнаяАмортизацияЗаПериод(ДоначислениеВНУ);
	Запрос.Выполнить();
	
	// Заполнение соответствия способов отражения расходов
	СоответствиеСпособовОтражения = Новый Соответствие;
	Запрос.Текст = ПолучитьТекстЗапросаСпособовОтраженияРасходов();
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			СоответствиеСпособовОтражения.Вставить(Выборка.СпособОтраженияРасходов, Выборка.ОтражениеАмортизационныхРасходов.Выгрузить());
		КонецЦикла;
	КонецЕсли;
	
	// Сформируем основную таблицу для расчета
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СписокОС.ОсновноеСредство,
	|	ПРЕДСТАВЛЕНИЕ(СписокОС.ОсновноеСредство) КАК ОсновноеСредствоПредставление,
	|	СписокОС.ОсновноеСредство.Код КАК Код,
	|	СписокОС.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	СписокОС.НачислятьАмортизациюБУ КАК НачислятьАмортизациюБУ,
	|	СписокОС.НачислятьАмортизациюНУ КАК НачислятьАмортизациюНУ,
	|	СписокОС.Количество КАК Количество,
	|	СписокОС.СрокИспользованияДляВычисленияАмортизации КАК СрокИспользованияДляВычисленияАмортизации,
	|	СписокОС.СтоимостьДляВычисленияАмортизации КАК СтоимостьДляВычисленияАмортизации,
	|	СписокОС.СрокИспользованияДляВычисленияАмортизацииНУ КАК СрокИспользованияДляВычисленияАмортизацииНУ,
	|	СписокОС.СтоимостьДляВычисленияАмортизацииНУ КАК СтоимостьДляВычисленияАмортизацииНУ,
	|	СписокОС.ЛиквидационнаяСтоимость КАК ЛиквидационнаяСтоимость,
	|	СписокОС.ОбъемПродукцииРаботДляВычисленияАмортизации КАК ОбъемПродукцииРаботДляВычисленияАмортизации,
	|	СписокОС.Период КАК Период,
	|	СписокОС.ПериодНУ КАК ПериодНУ,
	|	СписокОС.ГрафикАмортизации КАК ГрафикАмортизации,
	|	СписокОС.СчетУчета КАК СчетУчета,
	|	СписокОС.СчетНачисленияАмортизации КАК СчетНачисленияАмортизации,
	|	СписокОС.ИнвентарныйНомер КАК ИнвентарныйНомер,
	|	СписокОС.СпособНачисленияАмортизации КАК СпособНачисленияАмортизации,
	|	СписокОС.СпособНачисленияАмортизацииНУ КАК СпособНачисленияАмортизацииНУ,
	|	СписокОС.НалоговоеНазначение КАК НалоговоеНазначение,
	|	СписокОС.ПервоначальнаяСтоимость КАК ПервоначальнаяСтоимость,
	|	СписокОС.СтатьяРасходов КАК СтатьяРасходов,
	|	СписокОС.АналитикаРасходов КАК АналитикаРасходов,
	|	ЕСТЬNULL(СписокОС.СпособОтраженияРасходовЗаданДокументом, ЛОЖЬ) КАК СпособОтраженияРасходовЗаданДокументом,
	|	СписокОС.СпособОтраженияРасходов КАК СпособОтраженияРасходов,
	|	СписокОС.СрокПолезногоИспользованияНУ КАК СрокПолезногоИспользованияНУ,
	|	СписокОС.ДатаПринятияКУчету КАК ДатаПринятияКУчету,
	|	СписокОС.АмортизируетсяВМесяцПринятияКУчету КАК АмортизируетсяВМесяцПринятияКУчету,
	|	СписокОС.Подразделение КАК Подразделение,
	|
	|	ЕСТЬNULL(СтоимостьОСНачалоПериода.СуммаОстатокДт, 0) КАК СтоимостьНачальныйОстаток,
	|	ЕСТЬNULL(СтоимостьОСКонецПериода.СуммаОстатокДт, 0) КАК СтоимостьКонечныйОстаток,
	|	ЕСТЬNULL(ОстаткиДооценкиНачалоПериода.СуммаОстатокКт, 0) КАК СуммаДопКапиталаДоУменьшения,
	|
	|	ЕСТЬNULL(АмортизацияОСНачалоПериода.СуммаОстатокКт, 0) КАК АмортизацияНачальныйОстаток,
	|
	|	(ЕСТЬNULL(СтоимостьНаНачалоГода.СуммаОстатокДт, 0) - ЕСТЬNULL(АмортизацияНаНачалоГода.СуммаОстатокКт, 0)) КАК СтоимостьНаНачалоГода,
	|	ЕСТЬNULL(СтоимостьОСНачалоПериода.СуммаНУОстатокДт, 0) КАК СтоимостьНУНачальныйОстаток,
	|	ЕСТЬNULL(СтоимостьОСКонецПериода.СуммаНУОстатокДт, 0) КАК СтоимостьНУКонечныйОстаток,
	|	ЕСТЬNULL(АмортизацияОСНачалоПериода.СуммаНУОстатокКт, 0) КАК АмортизацияНУНачальныйОстаток,
	|	
	|	ЕСТЬNULL(СтоимостьОСНачалоПериода.СуммаОстатокДт, 0)
	|		- ЕСТЬNULL(АмортизацияОСНачалоПериода.СуммаОстатокКт, 0) КАК ОстаточнаяСтоимостьБУ,
	|
	|	ЕСТЬNULL(СтоимостьОСНачалоПериода.СуммаНУОстатокДт, 0) - ЕСТЬNULL(АмортизацияОСНачалоПериода.СуммаНУОстатокКт, 0) КАК ОстаточнаяСтоимостьНУ,
	|
	|	
	|	ЕСТЬNULL(АмортизацияОСОбороты.АмортизацияОборот, 0) КАК АмортизацияОборот,
	|	ЕСТЬNULL(АмортизацияОСОбороты.АмортизацияНУОборот, 0) КАК АмортизацияНУОборот,
	|	
	|	ВЫБОР КОГДА втАмортизированныеАктивы.ОсновноеСредство ЕСТЬ NULL
	|		ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЕстьНачислениеАмортизацииЗаПериод
	|ИЗ
	|	СписокОССПараметрами КАК СписокОС
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиНачалоПериода КАК СтоимостьОСНачалоПериода
	|		ПО СписокОС.ОсновноеСредство = СтоимостьОСНачалоПериода.ОсновноеСредство
	|			И СписокОС.СчетУчета = СтоимостьОСНачалоПериода.Счет
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиДооценкиНачалоПериода КАК ОстаткиДооценкиНачалоПериода
	|		ПО СписокОС.ОсновноеСредство = ОстаткиДооценкиНачалоПериода.ОсновноеСредство
	|			И СписокОС.СчетДооценки = ОстаткиДооценкиНачалоПериода.Счет
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиКонецПериода КАК СтоимостьОСКонецПериода
	|		ПО СписокОС.ОсновноеСредство = СтоимостьОСКонецПериода.ОсновноеСредство
	|			И СписокОС.СчетУчета = СтоимостьОСКонецПериода.Счет
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиНачалоПериода КАК АмортизацияОСНачалоПериода
	|		ПО СписокОС.ОсновноеСредство = АмортизацияОСНачалоПериода.ОсновноеСредство
	|			И СписокОС.СчетНачисленияАмортизации = АмортизацияОСНачалоПериода.Счет
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиКонецПериода КАК АмортизацияОСКонецПериода
	|		ПО СписокОС.ОсновноеСредство = АмортизацияОСКонецПериода.ОсновноеСредство
	|			И СписокОС.СчетНачисленияАмортизации = АмортизацияОСКонецПериода.Счет
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ АмортизацияОСОбороты КАК АмортизацияОСОбороты
	|		ПО СписокОС.ОсновноеСредство = АмортизацияОСОбороты.ОсновноеСредство
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиНаНачалоГода КАК СтоимостьНаНачалоГода
	|		ПО СписокОС.ОсновноеСредство = СтоимостьНаНачалоГода.ОсновноеСредство
	|			И СписокОС.СчетУчетаНачалоГода = СтоимостьНаНачалоГода.Счет
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиНаНачалоГода КАК АмортизацияНаНачалоГода
	|		ПО СписокОС.ОсновноеСредство = АмортизацияНаНачалоГода.ОсновноеСредство
	|			И СписокОС.СчетНачисленияАмортизацииНачалоГода = АмортизацияНаНачалоГода.Счет
	|	
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ втАмортизированныеАктивы КАК втАмортизированныеАктивы
	|		ПО СписокОС.ОсновноеСредство = втАмортизированныеАктивы.ОсновноеСредство
	|
	|УПОРЯДОЧИТЬ ПО
	|	Код";
	
	ВыборкаПоОС = Запрос.Выполнить().Выбрать();
	
	КоличествоОбработанныхДанных = КоличествоОбработанныхДанных + ВыборкаПоОС.Количество();
	
	Пока ВыборкаПоОС.Следующий() Цикл
		
		СуммаАмортизацииБУ = 0;
		СуммаАмортизацииНУ = 0;
		СуммаУменьшенияДооценки = 0;
		
		СписатьОстатокБУ = Ложь;
		СписатьОстатокНУ = Ложь;
		НачислятьАмортизациюБУ =  ВыборкаПоОС.НачислятьАмортизациюБУ И НЕ ДоначислениеВНУ;
		
		СтоимостьДляВычисленияАмортизации 			= ВыборкаПоОС.СтоимостьДляВычисленияАмортизации;
		ЛиквидационнаяСтоимость						= ВыборкаПоОС.ЛиквидационнаяСтоимость;
		АмортизируемаяСтоимость	 					= СтоимостьДляВычисленияАмортизации - ЛиквидационнаяСтоимость;
		СрокИспользованияДляВычисленияАмортизации	= ВыборкаПоОС.СрокИспользованияДляВычисленияАмортизации;
		
		СтоимостьДляВычисленияАмортизацииНУ 		= ВыборкаПоОС.СтоимостьДляВычисленияАмортизацииНУ;
		АмортизируемаяСтоимостьНУ	 				= СтоимостьДляВычисленияАмортизацииНУ - ЛиквидационнаяСтоимость;
		СрокИспользованияДляВычисленияАмортизацииНУ	= ВыборкаПоОС.СрокИспользованияДляВычисленияАмортизацииНУ;
		
		Если ВыборкаПоОС.АмортизируетсяВМесяцПринятияКУчету Тогда
			ОстаточнаяСтоимостьНаМоментАмортизации   = ВыборкаПоОС.СтоимостьКонечныйОстаток - ВыборкаПоОС.ЛиквидационнаяСтоимость;
			ОстаточнаяСтоимостьНаМоментАмортизацииНУ = ВыборкаПоОС.СтоимостьНУКонечныйОстаток - ВыборкаПоОС.ЛиквидационнаяСтоимость;
		Иначе
			ОстаточнаяСтоимостьНаМоментАмортизации   = ВыборкаПоОС.СтоимостьНачальныйОстаток - ВыборкаПоОС.ЛиквидационнаяСтоимость - ВыборкаПоОС.АмортизацияНачальныйОстаток;
			ОстаточнаяСтоимостьНаМоментАмортизацииНУ = ВыборкаПоОС.СтоимостьНУНачальныйОстаток - ВыборкаПоОС.ЛиквидационнаяСтоимость - ВыборкаПоОС.АмортизацияНУНачальныйОстаток;
		КонецЕсли;
		
		Если ВыборкаПоОС.ДатаПринятияКУчету = NULL Тогда
	    	ДатаВводаВЭксплуатациюНУ = NULL;
		Иначе	
			ДатаВводаВЭксплуатациюНУ = Макс(ВыборкаПоОС.ДатаПринятияКУчету, '20110331');
		КонецЕсли;
		
		Списание_ОС = ТипЗнч(Реквизиты.Регистратор) = Тип("ДокументСсылка.СписаниеОС") 
									ИЛИ ТипЗнч(Реквизиты.Регистратор) = Тип("ДокументСсылка.ПодготовкаКПередачеОС");
		
		Если НЕ ЗначениеЗаполнено(ВыборкаПоОС.СчетНачисленияАмортизации) Тогда
			Если Реквизиты.ВыдаватьСообщения Тогда
				СообщитьОбОшибкеПриНачисленииАмортизации(ВыборкаПоОС, НСтр("ru='Не указан счет для начисления амортизации';uk='Не зазначений рахунок для нарахування амортизації'"), 
					Реквизиты.Регистратор, Отказ);
			КонецЕсли;
			Продолжить;
		КонецЕсли;
		
		// Параметры расчета
		Если ТаблицаПараметровРасчетаАмортизации <> Неопределено Тогда
			
			ПараметрыАмортизации = ТаблицаПараметровРасчетаАмортизации.Добавить();
			ПараметрыАмортизации.ОбъектУчета = ВыборкаПоОС.ОсновноеСредство;

			Если НачислятьАмортизациюБУ Тогда
				ПараметрыАмортизации.МетодНачисленияБУ = ВыборкаПоОС.СпособНачисленияАмортизации;
				ПараметрыАмортизации.СрокИспользованияБУ = ВыборкаПоОС.СрокИспользованияДляВычисленияАмортизации;
				ПараметрыАмортизации.СтоимостьБУ = ВыборкаПоОС.СтоимостьДляВычисленияАмортизации;
				ПараметрыАмортизации.СтоимостьНаНачалоГодаБУ = ВыборкаПоОС.СтоимостьНаНачалоГода;
				ПараметрыАмортизации.ВыработкаЗаМесяцБУ = ВыборкаПоОС.Количество;
				ПараметрыАмортизации.ОбъемПродукцииБУ = ВыборкаПоОС.ОбъемПродукцииРаботДляВычисленияАмортизации;
			КонецЕсли;
			
			Если ВыборкаПоОС.НачислятьАмортизациюНУ Тогда
				ПараметрыАмортизации.СрокИспользованияНУ = ВыборкаПоОС.СрокПолезногоИспользованияНУ;
			КонецЕсли;
			
			// Остальные параметры устанавливаются по месту расчета
			
		КонецЕсли; 
		
		Пропустить = Ложь;
		
		Если НачислятьАмортизациюБУ Тогда
					
			Если НЕ ЗначениеЗаполнено(ВыборкаПоОС.СпособНачисленияАмортизации) Тогда
				Если Реквизиты.ВыдаватьСообщения Тогда
					СообщитьОбОшибкеПриНачисленииАмортизации(ВыборкаПоОС, НСтр("ru='Не указан способ начисления амортизации';uk='Не вказаний спосіб нарахування амортизації'"),
						Реквизиты.Регистратор, Отказ);
				КонецЕсли;
				Пропустить = Истина;
			КонецЕсли;
			
			Если ОстаточнаяСтоимостьНаМоментАмортизации <= 0 Тогда
			
				Пропустить = Истина; // остаточная стоимость на начало месяца равна 0
			КонецЕсли;
			
			Если ВыборкаПоОС.ЕстьНачислениеАмортизацииЗаПериод Тогда
				Пропустить = Истина; // по указанному ОС в этом месяце уже начисляли амортизацию
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(ВыборкаПоОС.СтоимостьДляВычисленияАмортизации)
				И ОстаточнаяСтоимостьНаМоментАмортизации > 0 Тогда
				
				Если Реквизиты.ВыдаватьСообщения Тогда
					СообщениеОбОшибке = НСтр("ru='Стоимость для начисления амортизации равна нулю
|Возможно, не выполнено закрытие месяца за предыдущий период'
|;uk='Вартість для нарахування амортизації дорівнює нулю
|Можливо, не виконано закриття місяця за попередній період'");
					СообщитьОбОшибкеПриНачисленииАмортизации(ВыборкаПоОС, СообщениеОбОшибке, Реквизиты.Регистратор, Отказ);
				КонецЕсли;
				Пропустить = Истина;
			КонецЕсли;
			
			Если (ВыборкаПоОС.СпособНачисленияАмортизации = Перечисления.СпособыНачисленияАмортизацииОС.Линейный
				ИЛИ ВыборкаПоОС.СпособНачисленияАмортизации = Перечисления.СпособыНачисленияАмортизацииОС.УменьшаемогоОстатка)
				И НЕ ЗначениеЗаполнено(ВыборкаПоОС.СрокИспользованияДляВычисленияАмортизации) Тогда
				
				Пропустить = Истина;
			КонецЕсли;
			
			Если НЕ Пропустить Тогда
				
				Если ВыборкаПоОС.СпособНачисленияАмортизации = Перечисления.СпособыНачисленияАмортизацииОС.Линейный Тогда
					
					СуммаГодовойАмортизации = АмортизируемаяСтоимость / ВыборкаПоОС.СрокИспользованияДляВычисленияАмортизации * 12;
					
					
					Если НЕ ЗначениеЗаполнено(ВыборкаПоОС.ГрафикАмортизации) Тогда
						СуммаАмортизации   = СуммаГодовойАмортизации / 12;
						КоэффициентПериода = 0;
					Иначе
						КоэффициентПериода = ПолучитьКоэффициентАмортизацииИзГрафика(
							ТаблицаГрафиков, ВыборкаПоОС.ГрафикАмортизации, Реквизиты.ДатаРасчета);
						СуммаАмортизации   = СуммаГодовойАмортизации * КоэффициентПериода;
						Если ТаблицаПараметровРасчетаАмортизации <> Неопределено Тогда
							ПараметрыАмортизации.КоэффициентПериода = КоэффициентПериода;
						КонецЕсли;
					КонецЕсли;
					
				ИначеЕсли ВыборкаПоОС.СпособНачисленияАмортизации = Перечисления.СпособыНачисленияАмортизацииОС.ПропорциональноОбъемуПродукции Тогда
					
					Если НЕ ЗначениеЗаполнено(ВыборкаПоОС.Количество) Тогда
						Пропустить = Истина;
					КонецЕсли;
					
					Если НЕ ЗначениеЗаполнено(ВыборкаПоОС.ОбъемПродукцииРаботДляВычисленияАмортизации) Тогда
						Если Реквизиты.ВыдаватьСообщения = Истина Тогда
							СообщитьОбОшибкеПриНачисленииАмортизации(ВыборкаПоОС, НСтр("ru='Объем продукции для вычисления не определен';uk='Об''єм продукції для обчислення не визначено'"), 
								Реквизиты.Регистратор, Отказ);
						КонецЕсли;
						Пропустить = Истина;
					КонецЕсли;
					
					Если Пропустить Тогда
						СуммаАмортизации = 0
					Иначе
						СуммаАмортизации = АмортизируемаяСтоимость * ВыборкаПоОС.Количество / ВыборкаПоОС.ОбъемПродукцииРаботДляВычисленияАмортизации;
					КонецЕсли;
					
				ИначеЕсли ВыборкаПоОС.СпособНачисленияАмортизации = Перечисления.СпособыНачисленияАмортизацииОС.УменьшаемогоОстатка Тогда
					
					Если ВыборкаПоОС.ЛиквидационнаяСтоимость = 0 Тогда					
						Если Реквизиты.ВыдаватьСообщения Тогда
							
							СообщитьОбОшибкеПриНачисленииАмортизации(ВыборкаПоОС, СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='При расчете амортизации по способу %1 не указана ликвидационная стоимость';uk='При розрахунку амортизації за способом %1 не вказана ліквідаційна вартість'"),ВыборкаПоОС.СпособНачисленияАмортизации),
							                                         Реквизиты.Регистратор, Отказ);
						КонецЕсли;
						Продолжить;					
					КонецЕсли;

					Если ВыборкаПоОС.СрокИспользованияДляВычисленияАмортизации = 0 Тогда						
						Если Реквизиты.ВыдаватьСообщения Тогда							
							СообщитьОбОшибкеПриНачисленииАмортизации(ВыборкаПоОС, СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='При расчете амортизации по способу %1 не указан срок полезного использования';uk='При розрахунку амортизації за способом %1 не зазначений строк корисного використання'"),ВыборкаПоОС.СпособНачисленияАмортизации),
							                                         Реквизиты.Регистратор, Отказ);
						КонецЕсли;						
						Продолжить;						
					КонецЕсли;
					
					Если Год(ВыборкаПоОС.Период) = Год(Реквизиты.ДатаРасчета) Тогда						
						СтоимостьИтоговая = ВыборкаПоОС.СтоимостьДляВычисленияАмортизации;						
					Иначе						
						СтоимостьИтоговая = ВыборкаПоОС.СтоимостьНаНачалоГода;						
					КонецЕсли;
										
		 			Если ВыборкаПоОС.ДатаПринятияКУчету = NULL Тогда						
						Если Реквизиты.ВыдаватьСообщения Тогда							
							СообщитьОбОшибкеПриНачисленииАмортизации(ВыборкаПоОС, СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='При расчете амортизации по способу %1 не определилась дата ввода в эксплуатацию';uk='При розрахунку амортизації за способом %1 не визначилася дата введення в експлуатацію'"),ВыборкаПоОС.СпособНачисленияАмортизации),
							                                         Реквизиты.Регистратор, Отказ);
						КонецЕсли;						
						Продолжить;						
					КонецЕсли;
					
					РазностьЛет = Год(Реквизиты.ДатаРасчета) - Год(ВыборкаПоОС.ДатаПринятияКУчету);
					
					Если РазностьЛет > 0 Тогда						
						ОсталосьЭксплуатироватьВЭтомГоду = ВыборкаПоОС.СрокИспользованияДляВычисленияАмортизации 
						                                   - РазностьЛет * 12
						                                   + Месяц(ВыборкаПоОС.ДатаПринятияКУчету)														   
					ИначеЕсли ВыборкаПоОС.СрокИспользованияДляВычисленияАмортизации < 12 Тогда											   						
						ОсталосьЭксплуатироватьВЭтомГоду = ВыборкаПоОС.СрокИспользованияДляВычисленияАмортизации;														   
					Иначе						
						ОсталосьЭксплуатироватьВЭтомГоду = 0;														   
					КонецЕсли;
															   
					Если (ОсталосьЭксплуатироватьВЭтомГоду < 12) И (ОсталосьЭксплуатироватьВЭтомГоду > 0)  Тогда						
						// Последний год применяем прямолинейный метод						
						СуммаГодовойАмортизации = 12 * (СтоимостьИтоговая - ВыборкаПоОС.ЛиквидационнаяСтоимость) / ОсталосьЭксплуатироватьВЭтомГоду						
					ИначеЕсли ОсталосьЭксплуатироватьВЭтомГоду >= 0 Тогда						
						СуммаГодовойАмортизации = СтоимостьИтоговая * (1 - Pow(ВыборкаПоОС.ЛиквидационнаяСтоимость / ВыборкаПоОС.СтоимостьДляВычисленияАмортизации,
						                                                       12 / ВыборкаПоОС.СрокИспользованияДляВычисленияАмортизации));																			   
					Иначе // Срок использования исчерпан						
						СуммаГодовойАмортизации = 0;						
						Если Реквизиты.ВыдаватьСообщения Тогда							
							Сообщить(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Бух. расчет амортизации: для основного средства %1 при расчете по способу %2 срок использования исчерпан!';uk='Бух. розрахунок амортизації: для основного засобу %1 при розрахунку способом %2 строк використання вичерпаний!'"), ВыборкаПоОС.ОсновноеСредство, ВыборкаПоОС.СпособНачисленияАмортизации));							
						КонецЕсли;						
					КонецЕсли;

					Если НЕ ЗначениеЗаполнено(ВыборкаПоОС.ГрафикАмортизации) Тогда						
						СуммаАмортизации   = СуммаГодовойАмортизации / 12;						
					Иначе						
						КоэффициентАмортизации = ПолучитьКоэффициентАмортизацииИзГрафика(ТаблицаГрафиков,
						                                                                 ВыборкаПоОС.ГрафикАмортизации,
																						 Реквизиты.ДатаРасчета);
						СуммаАмортизации       = СуммаГодовойАмортизации * КоэффициентАмортизации;					
					КонецЕсли;
				ИначеЕсли ВыборкаПоОС.СпособНачисленияАмортизации = Перечисления.СпособыНачисленияАмортизацииОС.УскоренногоУменьшенияОстатка Тогда // - для Украины 
			
					Если ВыборкаПоОС.СрокИспользованияДляВычисленияАмортизации = 0 Тогда
						Если Реквизиты.ВыдаватьСообщения Тогда							
							СообщитьОбОшибкеПриНачисленииАмортизации(ВыборкаПоОС, СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='При расчете амортизации по способу %1 не указан срок полезного использования';uk='При розрахунку амортизації за способом %1 не зазначений строк корисного використання'"),
																	 ВыборкаПоОС.СпособНачисленияАмортизации), Реквизиты.Регистратор, Отказ);	
						КонецЕсли;						
						Продолжить;						
					КонецЕсли; 
					
					Если ВыборкаПоОС.СрокИспользованияДляВычисленияАмортизации <= 24 Тогда						
						Если Реквизиты.ВыдаватьСообщения Тогда							
							СообщитьОбОшибкеПриНачисленииАмортизации(ВыборкаПоОС, СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Для корректного начисления амортизации срок использования должен быть более 24 месяца. При расчете амортизации по способу %1 указан срок полезного использования <%2> мес.';uk='Для коректного нарахування амортизації строк використання повинен бути більше 24 місяці. При розрахунку амортизації за способом %1 зазначений строк корисного використання <%2> міс.'"),
																	 ВыборкаПоОС.СпособНачисленияАмортизации, ВыборкаПоОС.СрокИспользованияДляВычисленияАмортизации),
							                                         Реквизиты.Регистратор, Отказ);
						КонецЕсли;						
					КонецЕсли; 
					
					Если Год(ВыборкаПоОС.Период) = Год(Реквизиты.ДатаРасчета) Тогда						
						СтоимостьИтоговая = ВыборкаПоОС.СтоимостьДляВычисленияАмортизации;						
					Иначе						
						СтоимостьИтоговая = ВыборкаПоОС.СтоимостьНаНачалоГода;						
					КонецЕсли;										
					
					Если ВыборкаПоОС.ДатаПринятияКУчету = NULL Тогда						
						Если Реквизиты.ВыдаватьСообщения Тогда							
							СообщитьОбОшибкеПриНачисленииАмортизации(ВыборкаПоОС, СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='При расчете амортизации по способу %1 не определилась дата ввода в эксплуатацию';uk='При розрахунку амортизації за способом %1 не визначилася дата введення в експлуатацію'"),
																	 ВыборкаПоОС.СпособНачисленияАмортизации), Реквизиты.Регистратор, Отказ);							   
						КонецЕсли;						
						Продолжить;						
					КонецЕсли;
					
					РазностьЛет = Год(Реквизиты.ДатаРасчета) - Год(ВыборкаПоОС.ДатаПринятияКУчету);
					
					Если РазностьЛет > 0 Тогда						
						ОсталосьЭксплуатироватьВЭтомГоду = ВыборкаПоОС.СрокИспользованияДляВычисленияАмортизации 
						                                   - РазностьЛет * 12
						                                   + Месяц(ВыборкаПоОС.ДатаПринятияКУчету)														   
					ИначеЕсли ВыборкаПоОС.СрокИспользованияДляВычисленияАмортизации < 12 Тогда											   						
						ОсталосьЭксплуатироватьВЭтомГоду = ВыборкаПоОС.СрокИспользованияДляВычисленияАмортизации;														   
					Иначе						
						ОсталосьЭксплуатироватьВЭтомГоду = 0;														   
					КонецЕсли;
					
					Если (ОсталосьЭксплуатироватьВЭтомГоду <= 12) И (ОсталосьЭксплуатироватьВЭтомГоду > 0)  Тогда						
						// Последний год применяем прямолинейный метод						
						СуммаГодовойАмортизации = 12 * (СтоимостьИтоговая - ВыборкаПоОС.ЛиквидационнаяСтоимость) / ОсталосьЭксплуатироватьВЭтомГоду;		
					ИначеЕсли ОсталосьЭксплуатироватьВЭтомГоду >= 0 Тогда						
						СуммаГодовойАмортизации = 2 * (СтоимостьИтоговая) / ВыборкаПоОС.СрокИспользованияДляВычисленияАмортизации * 12;						
					Иначе // Срок использования исчерпан						
						СуммаГодовойАмортизации = 0;						
						Если Реквизиты.ВыдаватьСообщения Тогда							
							Сообщить(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Бух. расчет амортизации: для основного средства %1 при расчете по способу %2 срок использования исчерпан!';uk='Бух. розрахунок амортизації: для основного засобу %1 при розрахунку способом %2 строк використання вичерпаний!'"), ВыборкаПоОС.ОсновноеСредство, ВыборкаПоОС.СпособНачисленияАмортизации));							
						КонецЕсли;					
					КонецЕсли;
										
					Если НЕ ЗначениеЗаполнено(ВыборкаПоОС.ГрафикАмортизации) Тогда						
						СуммаАмортизации   = СуммаГодовойАмортизации / 12;						
					Иначе						
						КоэффициентАмортизации = ПолучитьКоэффициентАмортизацииИзГрафика(ТаблицаГрафиков,
						                                                                 ВыборкаПоОС.ГрафикАмортизации,
																						 Реквизиты.ДатаРасчета);
						СуммаАмортизации        = СуммаГодовойАмортизации * КоэффициентАмортизации;						
					КонецЕсли; 
					
				ИначеЕсли ВыборкаПоОС.СпособНачисленияАмортизации = Перечисления.СпособыНачисленияАмортизацииОС.Кумулятивный Тогда // - для Украины

					Если ВыборкаПоОС.СрокИспользованияДляВычисленияАмортизации = 0 Тогда
						
						Если Реквизиты.ВыдаватьСообщения Тогда
							
							СообщитьОбОшибкеПриНачисленииАмортизации(ВыборкаПоОС, СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='При расчете амортизации по способу %1 не указан срок полезного использования';uk='При розрахунку амортизації за способом %1 не зазначений строк корисного використання'"),
																	 ВыборкаПоОС.СпособНачисленияАмортизации), Реквизиты.Регистратор, Отказ);
						КонецЕсли;
						
						Продолжить;
						
					КонецЕсли; 
					
					Если ВыборкаПоОС.ДатаПринятияКУчету = NULL Тогда
						
						Если Реквизиты.ВыдаватьСообщения Тогда
							
							СообщитьОбОшибкеПриНачисленииАмортизации(ВыборкаПоОС, СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='При расчете амортизации по способу %1 не определилась дата ввода в эксплуатацию';uk='При розрахунку амортизації за способом %1 не визначилася дата введення в експлуатацію'"),
																	 ВыборкаПоОС.СпособНачисленияАмортизации), Реквизиты.Регистратор, Отказ);
						КонецЕсли;
						
						Продолжить;
						
					КонецЕсли;

					ЧислоЛетПользования       = Макс(1,ВыборкаПоОС.СрокИспользованияДляВычисленияАмортизации / 12);
					ЧислоЛетПользования  = Цел(ЧислоЛетПользования) + ?(ЧислоЛетПользования  
												- Цел(ЧислоЛетПользования) = 0, 0, 1); // округляем к наибольшему целому 
					
					ГодИспользования          = Год(Реквизиты.ДатаРасчета) - Год(ВыборкаПоОС.ДатаПринятияКУчету) + 1;
					
					Если Месяц(ВыборкаПоОС.ДатаПринятияКУчету) >= Месяц(Реквизиты.ДатаРасчета) Тогда
						
						ГодИспользования	  = ГодИспользования - 1;
						
					КонецЕсли; 

					СуммаГодовойАмортизации   = АмортизируемаяСтоимость * (ЧислоЛетПользования - ГодИспользования + 1)
							/ (ЧислоЛетПользования * (ЧислоЛетПользования + 1) / 2 );
												  
					Если НЕ ЗначениеЗаполнено(ВыборкаПоОС.ГрафикАмортизации) Тогда
						
						СуммаАмортизации = СуммаГодовойАмортизации / 12;

					Иначе
						
						КоэффициентАмортизации  = ПолучитьКоэффициентАмортизацииИзГрафика(ТаблицаГрафиков,
						                                                                  ВыборкаПоОС.ГрафикАмортизации,
																						  Реквизиты.ДатаРасчета);
						СуммаАмортизации        = СуммаГодовойАмортизации * КоэффициентАмортизации;

					КонецЕсли;

				
				ИначеЕсли ВыборкаПоОС.СпособНачисленияАмортизации = Перечисления.СпособыНачисленияАмортизацииОС._50_50 Тогда
			
					Если ВыборкаПоОС.АмортизируетсяВМесяцПринятияКУчету Тогда
						// При первом начислении амортизации (при вводе в эксплуатацию) - 50%
						// Оставшиеся 50% будут начислены в документах списания
						СуммаАмортизации = АмортизируемаяСтоимость / 2;
					ИначеЕсли НЕ ВыборкаПоОС.АмортизируетсяВМесяцПринятияКУчету И Списание_ОС Тогда
						СуммаАмортизации = АмортизируемаяСтоимость / 2;
					Иначе
						СуммаАмортизации = 0;
					КонецЕсли;
					
					Метод_50_50 = Истина;
					
					ЛиквидационнаяСтоимость = 0;
				
				ИначеЕсли ВыборкаПоОС.СпособНачисленияАмортизации = Перечисления.СпособыНачисленияАмортизацииОС._100 Тогда

					// При первом же начислении амортизации - 100%
					// Стоимость всегда должна быть полностью амортизирована
					СуммаАмортизации = ОстаточнаяСтоимостьНаМоментАмортизации;
					
					Если СуммаАмортизации <= 0 Тогда
						
						НачислятьАмортизацию = Ложь;
						
					КонецЕсли;
					
					ЛиквидационнаяСтоимость = 0
				КонецЕсли;
				
				ВсегоОсталосьСписать = ОстаточнаяСтоимостьНаМоментАмортизации;
				
				СписатьОстатокБУ = (ВсегоОсталосьСписать < СуммаАмортизации);
				СуммаАмортизацииБУ = Окр(Макс(0, Мин(СуммаАмортизации, ВсегоОсталосьСписать)), 2);
				
				Если УчетнаяПолитика.ВключатьСуммуДооценокОСВСоставНераспределеннойПрибыли(Реквизиты.Организация, Реквизиты.ДатаРасчета)
						И ВыборкаПоОС.СуммаДопКапиталаДоУменьшения > 0 Тогда 
						
					Если СписатьОстатокБУ Тогда 
						 СуммаУменьшенияДооценки = ВыборкаПоОС.СуммаДопКапиталаДоУменьшения;
					 Иначе
						СуммаУменьшенияДооценки = Окр((СуммаАмортизацииБУ * ВыборкаПоОС.СуммаДопКапиталаДоУменьшения)/ОстаточнаяСтоимостьНаМоментАмортизации,2);
					КонецЕсли;
					
				КонецЕсли;
	
								
			КонецЕсли;
			
		КонецЕсли;
		
		Пропустить = Ложь;
		
		Если ОтражатьВНалоговомУчете Тогда
			
			Если ВыборкаПоОС.НачислятьАмортизациюНУ Тогда
			
				Если  ВыборкаПоОС.НалоговоеНазначение = Справочники.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяНеХозДеятельность Тогда
					Если Реквизиты.ВыдаватьСообщения Тогда
						СообщитьОбОшибкеПриНачисленииАмортизации(ВыборкаПоОС, СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Указано нехоз. налоговое назначение. Амортизация (НУ) не начислена';uk='Зазначено негосп. податкове призначення. Амортизацію (ПО) не нараховано'"),
																 ВыборкаПоОС.НалоговоеНазначение), Реквизиты.Регистратор, ЛОЖЬ);
					КонецЕсли;
					Пропустить = Истина;
				КонецЕсли;
				
				//Если (ВыборкаПоОС.СтоимостьНУНачальныйОстаток - ВыборкаПоОС.АмортизацияНУНачальныйОстаток) = 0 Тогда
				Если ОстаточнаяСтоимостьНаМоментАмортизацииНУ <= 0 Тогда	
					Пропустить = Истина; // остаточная стоимость на начало месяца равна 0
				КонецЕсли;
				
				Если ВыборкаПоОС.ЕстьНачислениеАмортизацииЗаПериод Тогда
					Пропустить = Истина; // по указанному ОС в этом месяце уже начисляли амортизацию
				КонецЕсли;
				
				
				
				Если ВыборкаПоОС.СпособНачисленияАмортизацииНУ = Перечисления.СпособыНачисленияАмортизацииОС.Линейный
					И НЕ ЗначениеЗаполнено(СрокИспользованияДляВычисленияАмортизацииНУ) Тогда
					
					Если Реквизиты.ВыдаватьСообщения Тогда
						СообщитьОбОшибкеПриНачисленииАмортизации(ВыборкаПоОС, НСтр("ru='Срок использования равен нулю';uk='Строк використання дорівнює нулю'"), 
							Реквизиты.Регистратор, Отказ);
					КонецЕсли;
					Продолжить;
				КонецЕсли;
				
				Если ТаблицаПараметровРасчетаАмортизации <> Неопределено Тогда
					ПараметрыАмортизации.МетодНачисленияНУ = ВыборкаПоОС.СпособНачисленияАмортизацииНУ;
				КонецЕсли;
				
				Если НЕ Пропустить Тогда
					
					СуммаАмортизации = 0;
					
					СтоимостьДляВычисления 	=	АмортизируемаяСтоимостьНУ;
					
					Если ВыборкаПоОС.СпособНачисленияАмортизацииНУ = Перечисления.СпособыНачисленияАмортизацииОС.Линейный Тогда
					
	  					СуммаГодовойАмортизации = СтоимостьДляВычисления / СрокИспользованияДляВычисленияАмортизацииНУ * 12;
						
						Если НЕ ЗначениеЗаполнено(ВыборкаПоОС.ГрафикАмортизации) Тогда
							СуммаАмортизации   = СуммаГодовойАмортизации / 12;
							КоэффициентПериода = 0;
						Иначе
							КоэффициентПериода = ПолучитьКоэффициентАмортизацииИзГрафика(
								ТаблицаГрафиков, ВыборкаПоОС.ГрафикАмортизации, Реквизиты.ДатаРасчета);
							СуммаАмортизации   = СуммаГодовойАмортизации * КоэффициентПериода;
							Если ТаблицаПараметровРасчетаАмортизации <> Неопределено Тогда
								ПараметрыАмортизации.КоэффициентПериода = КоэффициентПериода;
							КонецЕсли;
						КонецЕсли;
						
						Если ТаблицаПараметровРасчетаАмортизации <> Неопределено Тогда
							ПараметрыАмортизации.СтоимостьНУ = СтоимостьДляВычисления;
						КонецЕсли;
					ИначеЕсли ВыборкаПоОС.СпособНачисленияАмортизацииНУ = Перечисления.СпособыНачисленияАмортизацииОС.ПропорциональноОбъемуПродукции Тогда
						
						Если НЕ ЗначениеЗаполнено(ВыборкаПоОС.Количество) Тогда
							Пропустить = Истина;
						КонецЕсли;
						
						Если НЕ ЗначениеЗаполнено(ВыборкаПоОС.ОбъемПродукцииРаботДляВычисленияАмортизации) Тогда
							Если Реквизиты.ВыдаватьСообщения = Истина Тогда
								СообщитьОбОшибкеПриНачисленииАмортизации(ВыборкаПоОС, НСтр("ru='Объем продукции для вычисления не определен';uk='Об''єм продукції для обчислення не визначено'"), 
									Реквизиты.Регистратор, Отказ);
							КонецЕсли;
							Пропустить = Истина;
						КонецЕсли;
						
						Если Пропустить Тогда
							СуммаАмортизации = 0
						Иначе
							СуммаАмортизации = СтоимостьДляВычисления * ВыборкаПоОС.Количество / ВыборкаПоОС.ОбъемПродукцииРаботДляВычисленияАмортизации;
						КонецЕсли;
					ИначеЕсли ВыборкаПоОС.СпособНачисленияАмортизацииНУ = Перечисления.СпособыНачисленияАмортизацииОС.УменьшаемогоОстатка Тогда
						
						Если СрокИспользованияДляВычисленияАмортизацииНУ = 0 Тогда					
							Если Реквизиты.ВыдаватьСообщения Тогда								
								СообщитьОбОшибкеПриНачисленииАмортизации(ВыборкаПоОС, СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='При расчете амортизации по способу %1 не указан срок полезного использования (НУ)';uk='При розрахунку амортизації за способом %1 не зазначено строк корисного використання (ПО)'"),
																	 ВыборкаПоОС.СпособНачисленияАмортизации), Реквизиты.Регистратор, Отказ);				 
							КонецЕсли;							
							Продолжить;							
						КонецЕсли;
				
						Если Год(ВыборкаПоОС.ПериодНУ) = Год(Реквизиты.ДатаРасчета) Тогда							
							СтоимостьИтоговая = ВыборкаПоОС.СтоимостьДляВычисленияАмортизацииНУ;							
						Иначе							
							СтоимостьИтоговая = ВыборкаПоОС.СтоимостьНаНачалоГода;							
						КонецЕсли;
												
						
						Если ДатаВводаВЭксплуатациюНУ = NULL Тогда
							Если Реквизиты.ВыдаватьСообщения Тогда								
								СообщитьОбОшибкеПриНачисленииАмортизации(ВыборкаПоОС, СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='При расчете амортизации (НУ) по способу %1 не определилась дата ввода в эксплуатацию';uk='При розрахунку амортизації (ПО) за способом %1 не визначилася дата введення в експлуатацію'"),
																	 ВыборкаПоОС.СпособНачисленияАмортизации), Реквизиты.Регистратор, Отказ);
							КонецЕсли;							
							Продолжить;							
						КонецЕсли;
						
						РазностьЛет = Год(Реквизиты.ДатаРасчета) - Год(ДатаВводаВЭксплуатациюНУ);
						
						Если РазностьЛет > 0 Тогда							
							ОсталосьЭксплуатироватьВЭтомГоду = СрокИспользованияДляВычисленияАмортизацииНУ 
							                                   - РазностьЛет * 12
							                                   + Месяц(ДатаВводаВЭксплуатациюНУ)															   
						ИначеЕсли СрокИспользованияДляВычисленияАмортизацииНУ < 12 Тогда											   							
							ОсталосьЭксплуатироватьВЭтомГоду = СрокИспользованияДляВычисленияАмортизацииНУ;															   
						Иначе							
							ОсталосьЭксплуатироватьВЭтомГоду = 0;															   
						КонецЕсли;
																   
						Если (ОсталосьЭксплуатироватьВЭтомГоду < 12) И (ОсталосьЭксплуатироватьВЭтомГоду > 0)  Тогда							
							// Последний год применяем прямолинейный метод							
							СуммаГодовойАмортизацииНУ = 12 * (СтоимостьИтоговая - ЛиквидационнаяСтоимость) / ОсталосьЭксплуатироватьВЭтомГоду							
						ИначеЕсли ОсталосьЭксплуатироватьВЭтомГоду >= 0 Тогда							
							СуммаГодовойАмортизацииНУ = СтоимостьИтоговая * (1 - Pow(ЛиквидационнаяСтоимость / ВыборкаПоОС.СтоимостьДляВычисленияАмортизацииНУ,
							                                                       12 / СрокИспользованияДляВычисленияАмортизацииНУ));																				   
						Иначе // Срок использования исчерпан							
							СуммаГодовойАмортизацииНУ = 0;							
							Если Реквизиты.ВыдаватьСообщения Тогда								
								Сообщить(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Нал. расчет амортизации: для основного средства %1 при расчете по способу %2 срок использования исчерпан!';uk='Под. розрахунок амортизації: для основного засобу %1 при розрахунку способом %2 строк використання вичерпаний!'"), ВыборкаПоОС.ОсновноеСредство, ВыборкаПоОС.СпособНачисленияАмортизации));								
							КонецЕсли;							
						КонецЕсли;

						Если НЕ ЗначениеЗаполнено(ВыборкаПоОС.ГрафикАмортизации) Тогда							
							СуммаАмортизации   = СуммаГодовойАмортизацииНУ / 12;	
						Иначе							
							КоэффициентАмортизации = ПолучитьКоэффициентАмортизацииИзГрафика(ТаблицаГрафиков,
							                                                                 ВыборкаПоОС.ГрафикАмортизации,
																							 Реквизиты.ДатаРасчета);
																							 
							СуммаАмортизации       = СуммаГодовойАмортизацииНУ * КоэффициентАмортизации;
							
						КонецЕсли;
					ИначеЕсли ВыборкаПоОС.СпособНачисленияАмортизацииНУ = Перечисления.СпособыНачисленияАмортизацииОС.УскоренногоУменьшенияОстатка Тогда	
						
						Если СрокИспользованияДляВычисленияАмортизацииНУ = 0 Тогда					
							Если Реквизиты.ВыдаватьСообщения Тогда								
																
								СообщитьОбОшибкеПриНачисленииАмортизации(ВыборкаПоОС, СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='При расчете амортизации по способу %1 не указан срок полезного использования (НУ)';uk='При розрахунку амортизації за способом %1 не зазначено строк корисного використання (ПО)'"),
																	 ВыборкаПоОС.СпособНачисленияАмортизации), Реквизиты.Регистратор, Отказ);
							КонецЕсли;							
								Продолжить;						
						КонецЕсли; 
				
						Если СрокИспользованияДляВычисленияАмортизацииНУ <= 24 Тогда														
							Если Реквизиты.ВыдаватьСообщения Тогда								
								СообщитьОбОшибкеПриНачисленииАмортизации(ВыборкаПоОС, СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Для корректного начисления амортизации срок использования должен быть более 24 месяца. При расчете амортизации по способу %1 указан срок полезного использования (НУ) <%2> мес.';uk='Для коректного нарахування амортизації строк використання повинен бути більше 24 місяці. При розрахунку амортизації за способом %1 зазначений строк корисного використання (ПО) <%2> міс.'"),
																	 ВыборкаПоОС.СпособНачисленияАмортизации, ВыборкаПоОС.СрокИспользованияДляВычисленияАмортизации),
							                                         Реквизиты.Регистратор, Отказ);
							КонецЕсли;							
						КонецЕсли; 
						
						Если Год(ВыборкаПоОС.ПериодНУ) = Год(Реквизиты.ДатаРасчета) Тогда							
							СтоимостьИтоговая = ВыборкаПоОС.СтоимостьДляВычисленияАмортизацииНУ;							
						Иначе							
							СтоимостьИтоговая = ВыборкаПоОС.СтоимостьНаНачалоГода;							
						КонецЕсли;
						
						Если ДатаВводаВЭксплуатациюНУ = NULL Тогда							
							Если Реквизиты.ВыдаватьСообщения Тогда								
								СообщитьОбОшибкеПриНачисленииАмортизации(ВыборкаПоОС, СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='При расчете амортизации (НУ) по способу %1 не определилась дата ввода в эксплуатацию';uk='При розрахунку амортизації (ПО) за способом %1 не визначилася дата введення в експлуатацію'"),
																	 ВыборкаПоОС.СпособНачисленияАмортизации), Реквизиты.Регистратор, Отказ);
							КонецЕсли;							
							Продолжить;							
						КонецЕсли;
						
						РазностьЛет = Год(Реквизиты.ДатаРасчета) - Год(ДатаВводаВЭксплуатациюНУ);
						
						Если РазностьЛет > 0 Тогда							
							ОсталосьЭксплуатироватьВЭтомГоду = СрокИспользованияДляВычисленияАмортизацииНУ 
							                                   - РазностьЛет * 12
							                                   + Месяц(ДатаВводаВЭксплуатациюНУ)															   
						ИначеЕсли СрокИспользованияДляВычисленияАмортизацииНУ < 12 Тогда											   							
							ОсталосьЭксплуатироватьВЭтомГоду = СрокИспользованияДляВычисленияАмортизацииНУ;															   
						Иначе							
							ОсталосьЭксплуатироватьВЭтомГоду = 0;															   
						КонецЕсли;
						
						Если (ОсталосьЭксплуатироватьВЭтомГоду <= 12) И (ОсталосьЭксплуатироватьВЭтомГоду > 0)  Тогда							
							// Последний год применяем прямолинейный метод							
							СуммаГодовойАмортизацииНУ = 12 * (СтоимостьИтоговая - ЛиквидационнаяСтоимость) / ОсталосьЭксплуатироватьВЭтомГоду;							
						ИначеЕсли ОсталосьЭксплуатироватьВЭтомГоду >= 0 Тогда							
							СуммаГодовойАмортизацииНУ = 2 * (СтоимостьИтоговая) / СрокИспользованияДляВычисленияАмортизацииНУ * 12;							
						Иначе // Срок использования исчерпан							
							СуммаГодовойАмортизацииНУ = 0;							
							Если Реквизиты.ВыдаватьСообщения Тогда								
								Сообщить(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Нал. расчет амортизации: для основного средства %1 при расчете по способу %2 срок использования исчерпан!';uk='Под. розрахунок амортизації: для основного засобу %1 при розрахунку способом %2 строк використання вичерпаний!'"), ВыборкаПоОС.ОсновноеСредство, ВыборкаПоОС.СпособНачисленияАмортизации));								
							КонецЕсли;						
						КонецЕсли;
												
						Если НЕ ЗначениеЗаполнено(ВыборкаПоОС.ГрафикАмортизации) Тогда
							
							СуммаАмортизации   = СуммаГодовойАмортизацииНУ / 12;
							
						Иначе							
							КоэффициентАмортизации = ПолучитьКоэффициентАмортизацииИзГрафика(ТаблицаГрафиков,
							                                                                 ВыборкаПоОС.ГрафикАмортизации,
																							 Реквизиты.ДатаРасчета);
																							 
							СуммаАмортизации        = СуммаГодовойАмортизацииНУ * КоэффициентАмортизации;
							
						КонецЕсли;
					ИначеЕсли ВыборкаПоОС.СпособНачисленияАмортизацииНУ = Перечисления.СпособыНачисленияАмортизацииОС.Кумулятивный Тогда
						
						Если СрокИспользованияДляВычисленияАмортизацииНУ = 0 Тогда					
							Если Реквизиты.ВыдаватьСообщения Тогда								
								СообщитьОбОшибкеПриНачисленииАмортизации(ВыборкаПоОС, СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='При расчете амортизации по способу %1 не указан срок полезного использования (НУ)';uk='При розрахунку амортизації за способом %1 не зазначено строк корисного використання (ПО)'"),
																	 ВыборкаПоОС.СпособНачисленияАмортизации), Реквизиты.Регистратор, Отказ);
							КонецЕсли;						
							Продолжить;					
						КонецЕсли; 
						
						Если ДатаВводаВЭксплуатациюНУ = NULL Тогда							
							Если Реквизиты.ВыдаватьСообщения Тогда								
								СообщитьОбОшибкеПриНачисленииАмортизации(ВыборкаПоОС, СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='При расчете амортизации (НУ) по способу %1 не определилась дата ввода в эксплуатацию';uk='При розрахунку амортизації (ПО) за способом %1 не визначилася дата введення в експлуатацію'"),
																	 ВыборкаПоОС.СпособНачисленияАмортизации), Реквизиты.Регистратор, Отказ);
							КонецЕсли;							
							Продолжить;							
						КонецЕсли;

						ЧислоЛетПользования       = Макс(1,СрокИспользованияДляВычисленияАмортизацииНУ / 12);
						ЧислоЛетПользования  = Цел(ЧислоЛетПользования) + ?(ЧислоЛетПользования  
													- Цел(ЧислоЛетПользования) = 0, 0, 1); // округляем к наибольшему целому 						
						ГодИспользования          = Год(Реквизиты.ДатаРасчета) - Год(ДатаВводаВЭксплуатациюНУ) + 1;
						
						Если Месяц(ДатаВводаВЭксплуатациюНУ) >= Месяц(Реквизиты.ДатаРасчета) Тогда							
							ГодИспользования	  = ГодИспользования - 1;							
						КонецЕсли; 

						СуммаГодовойАмортизацииНУ   = АмортизируемаяСтоимостьНУ * (ЧислоЛетПользования - ГодИспользования + 1)
								/ (ЧислоЛетПользования * (ЧислоЛетПользования + 1) / 2 );
													  
						Если НЕ ЗначениеЗаполнено(ВыборкаПоОС.ГрафикАмортизации) Тогда
							
							СуммаАмортизации = СуммаГодовойАмортизацииНУ / 12;

						Иначе
							
							КоэффициентАмортизации  = ПолучитьКоэффициентАмортизацииИзГрафика(ТаблицаГрафиков,
							                                                                  ВыборкаПоОС.ГрафикАмортизации,
																							  Реквизиты.ДатаРасчета);
																							  
							СуммаАмортизации        = СуммаГодовойАмортизацииНУ * КоэффициентАмортизации;

						КонецЕсли;

					
					ИначеЕсли ВыборкаПоОС.СпособНачисленияАмортизацииНУ = Перечисления.СпособыНачисленияАмортизацииОС._50_50 Тогда
				
						Если ВыборкаПоОС.АмортизируетсяВМесяцПринятияКУчету Тогда
							// При первом начислении амортизации (при вводе в эксплуатацию) - 50%
							// Оставшиеся 50% будут начислены в документах списания
							СуммаАмортизации = СтоимостьДляВычисления / 2;
						ИначеЕсли НЕ ВыборкаПоОС.АмортизируетсяВМесяцПринятияКУчету И Списание_ОС Тогда
							СуммаАмортизации = СтоимостьДляВычисления / 2;
						Иначе
							СуммаАмортизации = 0;
						КонецЕсли;
						
						Метод_50_50 = Истина;
						
						ЛиквидационнаяСтоимость = 0;
				
					ИначеЕсли ВыборкаПоОС.СпособНачисленияАмортизацииНУ = Перечисления.СпособыНачисленияАмортизацииОС._100 Тогда

					// При первом же начислении амортизации - 100%
					// Стоимость всегда должна быть полностью амортизирована
						СуммаАмортизации = СтоимостьДляВычисления;
						
						Если СуммаАмортизации <= 0 Тогда
							
							НачислятьАмортизацию = Ложь;
							
						КонецЕсли;
						
						ЛиквидационнаяСтоимость = 0

					
					КонецЕсли;
					
					ВсегоОсталосьСписать = ОстаточнаяСтоимостьНаМоментАмортизацииНУ;
					
					СуммаАмортизацииНУ = Окр(Мин(ВсегоОсталосьСписать, СуммаАмортизации), 2);
										
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
		СпособОтражения = Неопределено;
		Если ВыборкаПоОС.СпособОтраженияРасходовЗаданДокументом Тогда
			СпособОтражения = СоответствиеСпособовОтражения.Получить(ВыборкаПоОС.СпособОтраженияРасходов);
		КонецЕсли;
		
		НовыеСтроки = ПодготовитьСтрокиВТаблицуАмортизации(ВыборкаПоОС, СуммаАмортизацииБУ, СуммаАмортизацииНУ, СуммаУменьшенияДооценки);
			
		ДобавитьСтрокиВТаблицуАмортизации(ТаблицаАмортизации, ВыборкаПоОС, НовыеСтроки, СпособОтражения);
		
				
	КонецЦикла;
	
	Возврат ТаблицаАмортизации;
	
КонецФункции

Функция ПодготовитьСтрокиВТаблицуАмортизации(
		ВыборкаДанных,
		СуммаАмортизацииБУ, СуммаАмортизацииНУ, СуммаУменьшенияДооценки)
	ПоляСтроки = "ОбъектУчета, СуммаБУ, СуммаНУ, СуммаУменьшенияДооценки, Коэффициент";
	
	СтрокаАмортизации = Новый Структура(ПоляСтроки);
	
	
	МассивРезультат = Новый Массив;
	
	Если СуммаАмортизацииБУ > 0
		ИЛИ СуммаАмортизацииНУ > 0 Тогда
		
		МассивРезультат.Добавить(СтрокаАмортизации);
		
		ЗаполнитьЗначенияСвойств(СтрокаАмортизации, ВыборкаДанных);
		
		СтрокаАмортизации.ОбъектУчета = ВыборкаДанных.ОсновноеСредство;
		
		СтрокаАмортизации.СуммаБУ = СуммаАмортизацииБУ;
		СтрокаАмортизации.СуммаНУ = СуммаАмортизацииНУ;
		СтрокаАмортизации.СуммаУменьшенияДооценки = СуммаУменьшенияДооценки;
		
		Если ВыборкаДанных.СтоимостьНачальныйОстаток <= ВыборкаДанных.АмортизацияНачальныйОстаток Тогда
			СтрокаАмортизации.Коэффициент = 0;
		Иначе
			СтрокаАмортизации.Коэффициент = СуммаАмортизацииБУ / (ВыборкаДанных.СтоимостьНачальныйОстаток - ВыборкаДанных.АмортизацияНачальныйОстаток);
		КонецЕсли;
		
				
	КонецЕсли;
	
	Возврат МассивРезультат;
	
КонецФункции

Процедура ДобавитьСтрокиВТаблицуАмортизации(Таблица, ВыборкаДанных, НовыеСтроки, ТаблицаРаспределения)
	
	Для Каждого Строка Из НовыеСтроки Цикл
		
		Если (Строка.СуммаБУ = 0 И Строка.СуммаНУ= 0 И Строка.СуммаУменьшенияДооценки = 0) Тогда
			Продолжить;
		КонецЕсли;
		 
		Если ТаблицаРаспределения = Неопределено Тогда
			СтрокаТаблицыЗатрат = Таблица.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТаблицыЗатрат, ВыборкаДанных);
			ЗаполнитьЗначенияСвойств(СтрокаТаблицыЗатрат, Строка);
		Иначе
			МассивКоэффициентов = ТаблицаРаспределения.ВыгрузитьКолонку("Коэффициент");
			СуммыБУ = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(Строка.СуммаБУ, МассивКоэффициентов);
			СуммыНУ = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(Строка.СуммаНУ, МассивКоэффициентов);
			СуммыУменьшенияДооценки = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(Строка.СуммаУменьшенияДооценки, МассивКоэффициентов);
			Коэффициенты = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(Строка.Коэффициент, МассивКоэффициентов, 36);
			
			Если СуммыБУ = Неопределено И СуммыНУ = Неопределено И СуммыУменьшенияДооценки Тогда
				Продолжить;
			КонецЕсли;
			
			Для Индекс=0 По ТаблицаРаспределения.Количество()-1 Цикл
				ПравилоОтражения = ТаблицаРаспределения[Индекс];
				СтрокаТаблицыЗатрат = Таблица.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТаблицыЗатрат, ВыборкаДанных);
				ЗаполнитьЗначенияСвойств(СтрокаТаблицыЗатрат, Строка);
				ЗаполнитьЗначенияСвойств(СтрокаТаблицыЗатрат, ПравилоОтражения);
				СтрокаТаблицыЗатрат.СуммаБУ = ?(СуммыБУ=Неопределено, 0, СуммыБУ[Индекс]);
				СтрокаТаблицыЗатрат.СуммаНУ = ?(СуммыНУ=Неопределено, 0, СуммыНУ[Индекс]);
				СтрокаТаблицыЗатрат.СуммаУменьшенияДооценки = ?(СуммыУменьшенияДооценки=Неопределено, 0, СуммыУменьшенияДооценки[Индекс]);
				СтрокаТаблицыЗатрат.Коэффициент = ?(Коэффициенты=Неопределено, 0, Коэффициенты[Индекс]);
				
			КонецЦикла;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПодготовитьПараметрыАмортизацияОС(ТаблицаОС, ТаблицаРеквизиты)

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.ТаблицаОС

	СписокОбязательныхКолонок = ""
	+ "НомерСтроки,"      // <Число, 5, 0>
	+ "ОсновноеСредство"; // <СправочникСсылка.ОбъектыЭксплуатации>

	Параметры.Вставить("ТаблицаОС",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаОС, СписокОбязательныхКолонок));

	// Подготовка таблицы Параметры.Реквизиты

	СписокОбязательныхКолонок = ""
	+ "Период,"      // <Дата>
	+ "ДатаРасчета," // <Дата>
	+ "Организация," // <СправочникСсылка.Организации>
	+ "Регистратор," // <ДокументСсылка.*>
	+ "ВыдаватьСообщения"; // <Булево>

	Параметры.Вставить("Реквизиты",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции

Функция ПолучитьТекстЗапросаАмортизацияОСНеСнятыеСУчетаОСВсе()

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПорядокУчетаОСБУ.ОсновноеСредство КАК ОсновноеСредство,
	|	ПорядокУчетаОСБУ.Организация КАК Организация,
	|	МАКСИМУМ(ПорядокУчетаОСБУ.Период) КАК Период
	|ПОМЕСТИТЬ ДатыПоследнихСостояний
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов КАК ДокВводОстатков
	|		ПО ДокВводОстатков.Ссылка = ПорядокУчетаОСБУ.Регистратор
	|ГДЕ
	|	(ПорядокУчетаОСБУ.Период < &ПериодСостояния
	|			И НЕ ПорядокУчетаОСБУ.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов
	|		ИЛИ ПорядокУчетаОСБУ.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов
	|			И КОНЕЦПЕРИОДА(ДокВводОстатков.Дата, МЕСЯЦ) < &ПериодСостояния)
	|	И ПорядокУчетаОСБУ.Организация = &Организация
	|
	|СГРУППИРОВАТЬ ПО
	|	ПорядокУчетаОСБУ.ОсновноеСредство,
	|	ПорядокУчетаОСБУ.Организация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПорядокУчетаОСБУ.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ НеСнятыеСУчета
	|ИЗ
	|	ДатыПоследнихСостояний КАК ДатыПоследнихСостояний
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
	|		ПО ДатыПоследнихСостояний.ОсновноеСредство = ПорядокУчетаОСБУ.ОсновноеСредство
	|			И ДатыПоследнихСостояний.Организация = ПорядокУчетаОСБУ.Организация
	|			И ДатыПоследнихСостояний.Период = ПорядокУчетаОСБУ.Период
	|ГДЕ
	|	ПорядокУчетаОСБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";

	Возврат ТекстЗапроса;

КонецФункции

Функция ПолучитьТекстЗапросаАмортизацияОСНеСнятыеСУчетаОСПоТаблице()

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ ТаблицаОС
	|ИЗ
	|	&ТаблицаОС КАК ТаблицаОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СостоянияОС.ОсновноеСредство КАК ОсновноеСредство,
	|	СостоянияОС.Период КАК ДатаСостояния,
	|	СостоянияОС.Состояние
	|ПОМЕСТИТЬ СостоянияОС
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСБУ КАК СостоянияОС
	|		ПО ТаблицаОС.ОсновноеСредство = СостоянияОС.ОсновноеСредство
	|ГДЕ
	|	СостоянияОС.Организация = &Организация
	|	И СостоянияОС.Период < &Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	ДатаСостояния
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СостоянияОС.ОсновноеСредство КАК ОсновноеСредство,
	|	МАКСИМУМ(СостоянияОС.ДатаСостояния) КАК ДатаСостояния
	|ПОМЕСТИТЬ ДатыПоследнихСостояний
	|ИЗ
	|	СостоянияОС КАК СостоянияОС
	|
	|СГРУППИРОВАТЬ ПО
	|	СостоянияОС.ОсновноеСредство
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	ДатаСостояния
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СостоянияОС.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ НеСнятыеСУчета
	|ИЗ
	|	ДатыПоследнихСостояний КАК ДатыПоследнихСостояний
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СостоянияОС КАК СостоянияОС
	|		ПО ДатыПоследнихСостояний.ОсновноеСредство = СостоянияОС.ОсновноеСредство
	|			И ДатыПоследнихСостояний.ДатаСостояния = СостоянияОС.ДатаСостояния
	|ГДЕ
	|	СостоянияОС.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";

	Возврат ТекстЗапроса;

КонецФункции

Функция ПолучитьТекстЗапросаПринятыеКУчетуОСВсе()

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПорядокУчетаОСБУ.ОсновноеСредство КАК ОсновноеСредство,
	|	ПорядокУчетаОСБУ.Организация КАК Организация,
	|	МАКСИМУМ(ПорядокУчетаОСБУ.Период) КАК Период
	|ПОМЕСТИТЬ ДатыПоследнихСостояний
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов КАК ДокВводОстатков
	|		ПО (ДокВводОстатков.Ссылка = ПорядокУчетаОСБУ.Регистратор)
	|ГДЕ
	|	(ПорядокУчетаОСБУ.Период < НАЧАЛОПЕРИОДА(&ПериодСостояния, МЕСЯЦ)
	|				И НЕ ПорядокУчетаОСБУ.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов
	|			ИЛИ ПорядокУчетаОСБУ.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов
	|				И КОНЕЦПЕРИОДА(ДокВводОстатков.Дата, МЕСЯЦ) < НАЧАЛОПЕРИОДА(&ПериодСостояния, МЕСЯЦ))
	|	И ПорядокУчетаОСБУ.Организация = &Организация
	|	И ПорядокУчетаОСБУ.Активность
	|
	|СГРУППИРОВАТЬ ПО
	|	ПорядокУчетаОСБУ.ОсновноеСредство,
	|	ПорядокУчетаОСБУ.Организация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПорядокУчетаОСБУ.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ НеСнятыеСУчета
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПорядокУчетаОСБУ.ОсновноеСредство КАК ОсновноеСредство
	|	ИЗ
	|		ДатыПоследнихСостояний КАК ДатыПоследнихСостояний
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
	|			ПО ДатыПоследнихСостояний.ОсновноеСредство = ПорядокУчетаОСБУ.ОсновноеСредство
	|				И ДатыПоследнихСостояний.Организация = ПорядокУчетаОСБУ.Организация
	|				И ДатыПоследнихСостояний.Период = ПорядокУчетаОСБУ.Период
	|				И (ПорядокУчетаОСБУ.Активность)
	|	ГДЕ
	|		ПорядокУчетаОСБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПорядокУчетаОСБУ.ОсновноеСредство
	|	ИЗ
	|		РегистрСведений.ПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
	|	ГДЕ
	|		ПорядокУчетаОСБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|		И ПорядокУчетаОСБУ.Организация = &Организация
	|		И ПорядокУчетаОСБУ.Период МЕЖДУ НАЧАЛОПЕРИОДА(&ПериодСостояния, МЕСЯЦ) И &ПериодСостояния
	|		И ПорядокУчетаОСБУ.Активность) КАК ПорядокУчетаОСБУ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";

	Возврат ТекстЗапроса;

КонецФункции

Функция ПолучитьТекстЗапросаПринятыеКУчетуОСПоТаблице()

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ ТаблицаОС
	|ИЗ
	|	&ТаблицаОС КАК ТаблицаОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПорядокУчетаОСБУ.ОсновноеСредство КАК ОсновноеСредство,
	|	ПорядокУчетаОСБУ.Организация КАК Организация,
	|	МАКСИМУМ(ПорядокУчетаОСБУ.Период) КАК Период
	|ПОМЕСТИТЬ ДатыПоследнихСостояний
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
	|		ПО ПорядокУчетаОСБУ.ОсновноеСредство = ТаблицаОС.ОсновноеСредство
	|			И ПорядокУчетаОСБУ.Организация = &Организация
	|			И ПорядокУчетаОСБУ.Активность
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов КАК ДокВводОстатков
	|		ПО (ДокВводОстатков.Ссылка = ПорядокУчетаОСБУ.Регистратор)
	|ГДЕ
	|	(ПорядокУчетаОСБУ.Период < НАЧАЛОПЕРИОДА(&ПериодСостояния, МЕСЯЦ)
	|				И НЕ ПорядокУчетаОСБУ.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов
	|			ИЛИ ПорядокУчетаОСБУ.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов
	|				И КОНЕЦПЕРИОДА(ДокВводОстатков.Дата, МЕСЯЦ) < НАЧАЛОПЕРИОДА(&ПериодСостояния, МЕСЯЦ))
	|
	|СГРУППИРОВАТЬ ПО
	|	ПорядокУчетаОСБУ.ОсновноеСредство,
	|	ПорядокУчетаОСБУ.Организация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПорядокУчетаОСБУ.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ НеСнятыеСУчета
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПорядокУчетаОСБУ.ОсновноеСредство КАК ОсновноеСредство
	|	ИЗ
	|		ДатыПоследнихСостояний КАК ДатыПоследнихСостояний
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
	|			ПО ДатыПоследнихСостояний.ОсновноеСредство = ПорядокУчетаОСБУ.ОсновноеСредство
	|				И ДатыПоследнихСостояний.Организация = ПорядокУчетаОСБУ.Организация
	|				И ДатыПоследнихСостояний.Период = ПорядокУчетаОСБУ.Период
	|				И (ПорядокУчетаОСБУ.Активность)
	|	ГДЕ
	|		ПорядокУчетаОСБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПорядокУчетаОСБУ.ОсновноеСредство
	|	ИЗ
	|		ТаблицаОС КАК ТаблицаОС
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
	|			ПО ПорядокУчетаОСБУ.ОсновноеСредство = ТаблицаОС.ОсновноеСредство
	|				И ПорядокУчетаОСБУ.Организация = &Организация
	|				И ПорядокУчетаОСБУ.Активность
	|	ГДЕ
	|		ПорядокУчетаОСБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|		И ПорядокУчетаОСБУ.Период МЕЖДУ НАЧАЛОПЕРИОДА(&ПериодСостояния, МЕСЯЦ) И &ПериодСостояния) КАК ПорядокУчетаОСБУ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";

	Возврат ТекстЗапроса;

КонецФункции

Функция ПолучитьТекстЗапросаОСПринятыеКУчетуВМесяцАмортизацииВсе()

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПорядокУчетаОСБУ.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ ПринятыеКУчетуВМесяцАмортизации
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
	|ГДЕ
	|	ПорядокУчетаОСБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|	И ПорядокУчетаОСБУ.Организация = &Организация
	|	И ПорядокУчетаОСБУ.Период МЕЖДУ &НачалоПериодаДата И &КонецПериода
	|	И ПорядокУчетаОСБУ.Активность
	|
	|СГРУППИРОВАТЬ ПО
	|	ПорядокУчетаОСБУ.ОсновноеСредство
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПорядокУчетаОСБУ.ОсновноеСредство";

	Возврат ТекстЗапроса;

КонецФункции

Функция ПолучитьТекстЗапросаОСПринятыеКУчетуВМесяцАмортизацииПоТаблице()

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПорядокУчетаОСБУ.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ ПринятыеКУчетуВМесяцАмортизации
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
	|		ПО (ПорядокУчетаОСБУ.ОсновноеСредство = ТаблицаОС.ОсновноеСредство)
	|			И (ПорядокУчетаОСБУ.Организация = &Организация)
	|			И (ПорядокУчетаОСБУ.Активность)
	|ГДЕ
	|	ПорядокУчетаОСБУ.Период МЕЖДУ &НачалоПериодаДата И &КонецПериода
	|	И ПорядокУчетаОСБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПорядокУчетаОСБУ.ОсновноеСредство
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПорядокУчетаОСБУ.ОсновноеСредство";

	Возврат ТекстЗапроса;

КонецФункции

Функция ПолучитьТекстЗапросаАмортизируемыеОСПринятыеКУчетуВМесяцАмортизации()

	ТекстЗапроса =
	
	"ВЫБРАТЬ
	|	ПервоначальныеСведенияОС.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ ПоНаработкеОСПринятыеКУчетуВМесяцАмортизации
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОС.СрезПоследних(
	|			&КонецПериода,
	|			Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						ПринятыеКУчетуВМесяцАмортизации.ОсновноеСредство
	|					ИЗ
	|						ПринятыеКУчетуВМесяцАмортизации КАК ПринятыеКУчетуВМесяцАмортизации)) КАК ПервоначальныеСведенияОС
	|ГДЕ
	|	ПервоначальныеСведенияОС.МетодНачисленияАмортизацииБУ = ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииОС.ПропорциональноОбъемуПродукции)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПервоначальныеСведенияОС.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ УпрощенныеОСПринятыеКУчетуВМесяцАмортизации
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОС.СрезПоследних(
	|			&КонецПериода,
	|			Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						ПринятыеКУчетуВМесяцАмортизации.ОсновноеСредство
	|					ИЗ
	|						ПринятыеКУчетуВМесяцАмортизации КАК ПринятыеКУчетуВМесяцАмортизации)) КАК ПервоначальныеСведенияОС
	|ГДЕ
	|	ПервоначальныеСведенияОС.МетодНачисленияАмортизацииБУ В (ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииОС._50_50), ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииОС._100))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоНаработкеОСПринятыеКУчетуВМесяцАмортизации.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ АмортизируемыеОСПринятыеКУчетуВМесяцАмортизации
	|ИЗ
	|	ПоНаработкеОСПринятыеКУчетуВМесяцАмортизации КАК ПоНаработкеОСПринятыеКУчетуВМесяцАмортизации
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УпрощенныеОСПринятыеКУчетуВМесяцАмортизации.ОсновноеСредство
	|ИЗ
	|	УпрощенныеОСПринятыеКУчетуВМесяцАмортизации КАК УпрощенныеОСПринятыеКУчетуВМесяцАмортизации
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";

	Возврат ТекстЗапроса;

КонецФункции

Функция ПолучитьТекстЗапросаАмортизацияОСНачислениеАмортизации()

	ТекстЗапрос =
	"ВЫБРАТЬ
	|	НачислениеАмортизацииБУ.ОсновноеСредство КАК ОсновноеСредство,
	|	НачислениеАмортизацииБУ.НачислятьАмортизациюБУ КАК НачислятьАмортизациюБУ
	|ПОМЕСТИТЬ НачислениеАмортизацииБУ
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(
	|			&НачалоПериода,
	|			Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						НеСнятыеСУчета.ОсновноеСредство
	|					ИЗ
	|						НеСнятыеСУчета)) КАК НачислениеАмортизацииБУ
	|ГДЕ
	|	НачислениеАмортизацииБУ.НачислятьАмортизациюБУ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НачислениеАмортизацииНУ.ОсновноеСредство КАК ОсновноеСредство,
	|	НачислениеАмортизацииНУ.НачислятьАмортизациюНУ КАК НачислятьАмортизациюНУ
	|ПОМЕСТИТЬ НачислениеАмортизацииНУ
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(
	|			&НачалоПериода,
	|			Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						НеСнятыеСУчета.ОсновноеСредство
	|					ИЗ
	|						НеСнятыеСУчета)) КАК НачислениеАмортизацииНУ
	|ГДЕ
	|	НачислениеАмортизацииНУ.НачислятьАмортизациюНУ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";

	Возврат ТекстЗапрос;

КонецФункции

Функция ПолучитьТекстЗапросаАмортизацияОСПринятыеКУчетуВМесяцАмортизацииНачислениеАмортизации()

	ТекстЗапрос =
	"ВЫБРАТЬ
	|	НачислениеАмортизацииБУАмортизируемыеВМесяцПринятияКУчету.ОсновноеСредство КАК ОсновноеСредство,
	|	НачислениеАмортизацииБУАмортизируемыеВМесяцПринятияКУчету.НачислятьАмортизациюБУ КАК НачислятьАмортизациюБУ
	|ПОМЕСТИТЬ НачислениеАмортизацииБУАмортизируемыеВМесяцПринятияКУчету
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(
	|			&КонецПериода,
	|			Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						АмортизируемыеОСПринятыеКУчетуВМесяцАмортизации.ОсновноеСредство
	|					ИЗ
	|						АмортизируемыеОСПринятыеКУчетуВМесяцАмортизации)) КАК НачислениеАмортизацииБУАмортизируемыеВМесяцПринятияКУчету
	|ГДЕ
	|	НачислениеАмортизацииБУАмортизируемыеВМесяцПринятияКУчету.НачислятьАмортизациюБУ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НачислениеАмортизацииНУАмортизируемыеВМесяцПринятияКУчету.ОсновноеСредство КАК ОсновноеСредство,
	|	НачислениеАмортизацииНУАмортизируемыеВМесяцПринятияКУчету.НачислятьАмортизациюНУ КАК НачислятьАмортизациюНУ
	|ПОМЕСТИТЬ НачислениеАмортизацииНУАмортизируемыеВМесяцПринятияКУчету
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(
	|			&КонецПериода,
	|			Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						АмортизируемыеОСПринятыеКУчетуВМесяцАмортизации.ОсновноеСредство
	|					ИЗ
	|						АмортизируемыеОСПринятыеКУчетуВМесяцАмортизации)) КАК НачислениеАмортизацииНУАмортизируемыеВМесяцПринятияКУчету
	|ГДЕ
	|	НачислениеАмортизацииНУАмортизируемыеВМесяцПринятияКУчету.НачислятьАмортизациюНУ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";

	Возврат ТекстЗапрос;

КонецФункции

Функция ПолучитьТекстЗапросаАмортизацияОСПервоначальныеСведения()

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПервоначальныеСведенияОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ПервоначальныеСведенияОС.МетодНачисленияАмортизацииБУ КАК СпособНачисленияАмортизации,
	|	ПервоначальныеСведенияОС.МетодНачисленияАмортизацииНУ КАК СпособНачисленияАмортизацииНУ,
	|	ПервоначальныеСведенияОС.ПервоначальнаяСтоимостьБУ КАК ПервоначальнаяСтоимость,
	|	ПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюБУ КАК ДатаПринятияКУчету
	|ПОМЕСТИТЬ ПервоначальныеСведенияОС
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОС.СрезПоследних(
	|			&НачалоПериода,
	|			Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						СписокОС КАК СписокОС)) КАК ПервоначальныеСведенияОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";

	Возврат ТекстЗапроса;

КонецФункции

Функция ПолучитьТекстЗапросаАмортизацияОСПервоначальныеСведенияАмортизируемыеВМесяцПринятияКУчету()

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПервоначальныеСведенияОС.ОсновноеСредство КАК ОсновноеСредство, 
	|	ПервоначальныеСведенияОС.МетодНачисленияАмортизацииБУ КАК СпособНачисленияАмортизации,
	|	ПервоначальныеСведенияОС.МетодНачисленияАмортизацииНУ КАК СпособНачисленияАмортизацииНУ,
	|	ПервоначальныеСведенияОС.ПервоначальнаяСтоимостьБУ КАК ПервоначальнаяСтоимость,
	|	ПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюБУ КАК ДатаПринятияКУчету
	|ПОМЕСТИТЬ ПервоначальныеСведенияОСАмортизируемыеВМесяцПринятияКУчету
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОС.СрезПоследних(
	|			&КонецПериода,
	|			Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокОСАмортизируемыеВМесяцПринятияКУчету.ОсновноеСредство
	|					ИЗ
	|						СписокОСАмортизируемыеВМесяцПринятияКУчету КАК СписокОСАмортизируемыеВМесяцПринятияКУчету)) КАК ПервоначальныеСведенияОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";

	Возврат ТекстЗапроса;

КонецФункции

Функция ПолучитьТекстЗапросаАмортизацияОСПорядокУчета()

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПорядокУчетаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ПорядокУчетаОС.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	ПорядокУчетаОС.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ПорядокУчетаОС.ПоказательНаработки КАК ПоказательНаработки,
	|	ПорядокУчетаОС.ОбъемНаработки КАК ОбъемНаработки,
	|	ПорядокУчетаОС.СчетУчета КАК СчетУчета,
	|	ПорядокУчетаОС.СчетДооценки КАК СчетДооценки,
	|	ПорядокУчетаОС.СчетНачисленияАмортизации КАК СчетНачисленияАмортизации
	|ПОМЕСТИТЬ ПорядокУчетаОС
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОС.СрезПоследних(
	|			&НачалоПериода,
	|			ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						СписокОС КАК СписокОС)) КАК ПорядокУчетаОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";

	Возврат ТекстЗапроса;

КонецФункции

Функция ПолучитьТекстЗапросаАмортизацияОСПорядокУчетаАмортизируемыеВМесяцПринятияКУчету()

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПорядокУчетаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ПорядокУчетаОС.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	ПорядокУчетаОС.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ПорядокУчетаОС.ПоказательНаработки КАК ПоказательНаработки,
	|	ПорядокУчетаОС.ОбъемНаработки КАК ОбъемНаработки,
	|	ПорядокУчетаОС.СчетУчета КАК СчетУчета,
	|	ПорядокУчетаОС.СчетДооценки КАК СчетДооценки,
	|	ПорядокУчетаОС.СчетНачисленияАмортизации КАК СчетНачисленияАмортизации
	|ПОМЕСТИТЬ ПорядокУчетаОСАмортизируемыеВМесяцПринятияКУчету
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОС.СрезПоследних(
	|			&КонецПериода,
	|			ОсновноеСредство В
	|				(ВЫБРАТЬ
	|					СписокОСАмортизируемыеВМесяцПринятияКУчету.ОсновноеСредство
	|				ИЗ
	|					СписокОСАмортизируемыеВМесяцПринятияКУчету КАК СписокОСАмортизируемыеВМесяцПринятияКУчету)) КАК ПорядокУчетаОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";

	Возврат ТекстЗапроса;

КонецФункции


Функция ПолучитьТекстЗапросаАмортизацияОСПараметрыАмортизации()

	ТекстЗапроса =
	
	"ВЫБРАТЬ
	|	ПервоначальныеСведенияОС.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ АмПоНаработкеОС
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОС.СрезПоследних(&НачалоПериода, Организация = &Организация) КАК ПервоначальныеСведенияОС
	|ГДЕ
	|	ПервоначальныеСведенияОС.МетодНачисленияАмортизацииБУ = ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииОС.ПропорциональноОбъемуПродукции)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АмПоНаработкеОС.ОсновноеСредство,
	|	ПорядокУчетаОС.ПоказательНаработки
	|ПОМЕСТИТЬ АмортизируемыеПоНаработкеОС
	|ИЗ
	|	АмПоНаработкеОС КАК АмПоНаработкеОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПорядокУчетаОС КАК ПорядокУчетаОС
	|		ПО АмПоНаработкеОС.ОсновноеСредство = ПорядокУчетаОС.ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(НаработкиПериодНачало.ОбъектЭксплуатации, НаработкиПериодОкончание.ОбъектЭксплуатации) КАК ОсновноеСредство,
	|	ЕСТЬNULL(НаработкиПериодНачало.ПоказательНаработки, НаработкиПериодОкончание.ПоказательНаработки) КАК ПоказательНаработки,
	|	ЕСТЬNULL(НаработкиПериодОкончание.Значение, 0) - ЕСТЬNULL(НаработкиПериодНачало.Значение, 0) КАК ОбъемВыработки
	|ПОМЕСТИТЬ ВыработкаОС
	|ИЗ
	|	РегистрСведений.НаработкиОбъектовЭксплуатации.СрезПоследних(
	|			&НачалоПериодаДата,
	|			(ОбъектЭксплуатации, ПоказательНаработки) В
	|				(ВЫБРАТЬ
	|					АмортизируемыеПоНаработкеОС.ОсновноеСредство,
	|					АмортизируемыеПоНаработкеОС.ПоказательНаработки
	|				ИЗ
	|					АмортизируемыеПоНаработкеОС КАК АмортизируемыеПоНаработкеОС)) КАК НаработкиПериодНачало
	|		ПОЛНОЕ СОЕДИНЕНИЕ РегистрСведений.НаработкиОбъектовЭксплуатации.СрезПоследних(
	|				&КонецПериода,
	|				(ОбъектЭксплуатации, ПоказательНаработки) В
	|					(ВЫБРАТЬ
	|						АмортизируемыеПоНаработкеОС.ОсновноеСредство,
	|						АмортизируемыеПоНаработкеОС.ПоказательНаработки
	|					ИЗ
	|						АмортизируемыеПоНаработкеОС КАК АмортизируемыеПоНаработкеОС)) КАК НаработкиПериодОкончание
	|		ПО НаработкиПериодНачало.ОбъектЭксплуатации = НаработкиПериодОкончание.ОбъектЭксплуатации
	|			И НаработкиПериодНачало.ПоказательНаработки = НаработкиПериодОкончание.ПоказательНаработки
	|
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПараметрыАмортизацииОСБУ.ОсновноеСредство КАК ОсновноеСредство,
	|	ПараметрыАмортизацииОСБУ.СрокИспользованияДляВычисленияАмортизации КАК СрокИспользованияДляВычисленияАмортизации,
	|	ПараметрыАмортизацииОСБУ.СтоимостьДляВычисленияАмортизации КАК СтоимостьДляВычисленияАмортизации,
	|	ПараметрыАмортизацииОСБУ.СрокИспользованияДляВычисленияАмортизацииНУ КАК СрокИспользованияДляВычисленияАмортизацииНУ,
	|	ПараметрыАмортизацииОСБУ.СтоимостьДляВычисленияАмортизацииНУ КАК СтоимостьДляВычисленияАмортизацииНУ,
	|	ПараметрыАмортизацииОСБУ.ЛиквидационнаяСтоимость КАК ЛиквидационнаяСтоимость,
	|	ПараметрыАмортизацииОСБУ.ОбъемПродукцииРаботДляВычисленияАмортизации КАК ОбъемПродукцииРаботДляВычисленияАмортизации,
	|	ПараметрыАмортизацииОСБУ.СрокПолезногоИспользованияНУ КАК СрокПолезногоИспользованияНУ,
	|	ПараметрыАмортизацииОСБУ.ГрафикАмортизации КАК ГрафикАмортизации,
	|	ПараметрыАмортизацииОСБУ.Период КАК Период
	|ПОМЕСТИТЬ ПараметрыАмортизацииОСБУ
	|ИЗ
	|	РегистрСведений.ПараметрыАмортизацииОСБУ.СрезПоследних(
	|			&НачалоПериода,
	|			Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						СписокОС КАК СписокОС)) КАК ПараметрыАмортизацииОСБУ
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";

	Возврат ТекстЗапроса;

КонецФункции

Функция ПолучитьТекстЗапросаАмортизацияОСПараметрыАмортизацииАмортизируемыеВМесяцПринятияКУчету()

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПоНаработкеОСПринятыеКУчетуВМесяцАмортизации.ОсновноеСредство КАК ОсновноеСредство,
	|	ПорядокУчетаОСАмортизируемыеВМесяцПринятияКУчету.ПоказательНаработки КАК ПоказательНаработки
	|ПОМЕСТИТЬ АмортизируемыеПоНаработкеОСВМесяцПринятияКУчету
	|ИЗ
	|	ПоНаработкеОСПринятыеКУчетуВМесяцАмортизации КАК ПоНаработкеОСПринятыеКУчетуВМесяцАмортизации
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПорядокУчетаОСАмортизируемыеВМесяцПринятияКУчету КАК ПорядокУчетаОСАмортизируемыеВМесяцПринятияКУчету
	|		ПО ПоНаработкеОСПринятыеКУчетуВМесяцАмортизации.ОсновноеСредство = ПорядокУчетаОСАмортизируемыеВМесяцПринятияКУчету.ОсновноеСредство
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	ПоказательНаработки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(НаработкиПериодНачало.ОбъектЭксплуатации, НаработкиПериодОкончание.ОбъектЭксплуатации) КАК ОсновноеСредство,
	|	ЕСТЬNULL(НаработкиПериодНачало.ПоказательНаработки, НаработкиПериодОкончание.ПоказательНаработки) КАК ПоказательНаработки,
	|	ЕСТЬNULL(НаработкиПериодОкончание.Значение, 0) - ЕСТЬNULL(НаработкиПериодНачало.Значение, 0) КАК ОбъемВыработки
	|ПОМЕСТИТЬ ВыработкаОСАмортизируемыеВМесяцПринятияКУчету
	|ИЗ
	|	РегистрСведений.НаработкиОбъектовЭксплуатации.СрезПоследних(
	|			&НачалоПериодаДата,
	|			(ОбъектЭксплуатации, ПоказательНаработки) В
	|				(ВЫБРАТЬ
	|					АмортизируемыеПоНаработкеОСВМесяцПринятияКУчету.ОсновноеСредство,
	|					АмортизируемыеПоНаработкеОСВМесяцПринятияКУчету.ПоказательНаработки
	|				ИЗ
	|					АмортизируемыеПоНаработкеОСВМесяцПринятияКУчету КАК АмортизируемыеПоНаработкеОСВМесяцПринятияКУчету)) КАК НаработкиПериодНачало
	|		ПОЛНОЕ СОЕДИНЕНИЕ РегистрСведений.НаработкиОбъектовЭксплуатации.СрезПоследних(
	|				&КонецПериода,
	|				(ОбъектЭксплуатации, ПоказательНаработки) В
	|					(ВЫБРАТЬ
	|						АмортизируемыеПоНаработкеОСВМесяцПринятияКУчету.ОсновноеСредство,
	|						АмортизируемыеПоНаработкеОСВМесяцПринятияКУчету.ПоказательНаработки
	|					ИЗ
	|						АмортизируемыеПоНаработкеОСВМесяцПринятияКУчету КАК АмортизируемыеПоНаработкеОСВМесяцПринятияКУчету)) КАК НаработкиПериодОкончание
	|		ПО НаработкиПериодНачало.ОбъектЭксплуатации = НаработкиПериодОкончание.ОбъектЭксплуатации
	|			И НаработкиПериодНачало.ПоказательНаработки = НаработкиПериодОкончание.ПоказательНаработки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПараметрыАмортизацииОСБУ.ОсновноеСредство КАК ОсновноеСредство,
	|	ПараметрыАмортизацииОСБУ.СрокИспользованияДляВычисленияАмортизации КАК СрокИспользованияДляВычисленияАмортизации,
	|	ПараметрыАмортизацииОСБУ.СтоимостьДляВычисленияАмортизации КАК СтоимостьДляВычисленияАмортизации,
	|	ПараметрыАмортизацииОСБУ.СрокИспользованияДляВычисленияАмортизацииНУ КАК СрокИспользованияДляВычисленияАмортизацииНУ,
	|	ПараметрыАмортизацииОСБУ.СтоимостьДляВычисленияАмортизацииНУ КАК СтоимостьДляВычисленияАмортизацииНУ,
	|	ПараметрыАмортизацииОСБУ.ЛиквидационнаяСтоимость КАК ЛиквидационнаяСтоимость,
	|	ПараметрыАмортизацииОСБУ.ОбъемПродукцииРаботДляВычисленияАмортизации КАК ОбъемПродукцииРаботДляВычисленияАмортизации,
	|	ПараметрыАмортизацииОСБУ.СрокПолезногоИспользованияНУ КАК СрокПолезногоИспользованияНУ,
	|	ПараметрыАмортизацииОСБУ.ГрафикАмортизации КАК ГрафикАмортизации,
	|	ПараметрыАмортизацииОСБУ.Период КАК Период
	|ПОМЕСТИТЬ ПараметрыАмортизацииОСБУАмортизируемыеВМесяцПринятияКУчету
	|ИЗ
	|	РегистрСведений.ПараметрыАмортизацииОСБУ.СрезПоследних(
	|			&КонецПериода,
	|			Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокОСАмортизируемыеВМесяцПринятияКУчету.ОсновноеСредство
	|					ИЗ
	|						СписокОСАмортизируемыеВМесяцПринятияКУчету КАК СписокОСАмортизируемыеВМесяцПринятияКУчету)) КАК ПараметрыАмортизацииОСБУ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";

	Возврат ТекстЗапроса;

КонецФункции

Функция ПолучитьТекстЗапросаАмортизацияОСПараметрыОтраженияВУчете()
	
	ТекстЗапроса ="
	|ВЫБРАТЬ
	|	ПорядокУчетаОСБУ.ОсновноеСредство КАК ОсновноеСредство,
	|	ПорядокУчетаОСБУ.СтатьяРасходовБУ КАК СтатьяРасходов,
	|	ПорядокУчетаОСБУ.АналитикаРасходовБУ КАК АналитикаРасходов,
	|	ПорядокУчетаОСБУ.СпособОтраженияРасходовБУ КАК СпособОтраженияРасходов,
	|
	|	НЕ ПорядокУчетаОСБУ.СпособОтраженияРасходовБУ В (
	|			ЗНАЧЕНИЕ(Документ.ИзменениеПараметровОС.ПустаяСсылка),
	|			ЗНАЧЕНИЕ(Документ.ИзменениеПараметровОС2_4.ПустаяСсылка),
	|			НЕОПРЕДЕЛЕНО) КАК СпособОтраженияРасходовЗаданДокументом,
	|
	|	ЕСТЬNULL(ИзменениеПараметровАмортизацииОС.ДокументОснование, НЕОПРЕДЕЛЕНО) КАК СпособОтраженияРасходовДокументОснование,
	|	ПорядокУчетаОСБУ.НалоговоеНазначение
	|ПОМЕСТИТЬ ПорядокУчетаОСБУ
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(
	|			&НачалоПериода,
	|			Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						СписокОС КАК СписокОС)) КАК ПорядокУчетаОСБУ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИзменениеПараметровОС КАК ИзменениеПараметровАмортизацииОС
	|		ПО ПорядокУчетаОСБУ.СпособОтраженияРасходовБУ = ИзменениеПараметровАмортизацииОС.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПорядокУчетаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ЕСТЬNULL(СчетУчетаСтоимости.СчетУчета, ПорядокУчетаОС.СчетУчета) КАК СчетУчета,
	|	ЕСТЬNULL(СчетУчетаАмортизации.СчетУчета, ПорядокУчетаОС.СчетНачисленияАмортизации) КАК СчетНачисленияАмортизации,
	|	ЕСТЬNULL(СчетУчетаДооценки.СчетУчета, ПорядокУчетаОС.СчетДооценки) КАК СчетДооценки
	|ПОМЕСТИТЬ СчетаБухгалтерскогоУчетаОС
	|ИЗ
	|	ПорядокУчетаОС КАК ПорядокУчетаОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОтраженияНаСчетахУчета КАК СчетУчетаСтоимости
	|		ПО СчетУчетаСтоимости.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА)
	|			И СчетУчетаСтоимости.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			И СчетУчетаСтоимости.АналитикаУчета = ПорядокУчетаОС.ГруппаФинансовогоУчета
	|			И СчетУчетаСтоимости.МестоУчета = НЕОПРЕДЕЛЕНО
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОтраженияНаСчетахУчета КАК СчетУчетаАмортизации
	|		ПО СчетУчетаАмортизации.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА)
	|			И СчетУчетаАмортизации.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			И СчетУчетаАмортизации.АналитикаУчета = ПорядокУчетаОС.ГруппаФинансовогоУчета
	|			И СчетУчетаАмортизации.МестоУчета = НЕОПРЕДЕЛЕНО
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОтраженияНаСчетахУчета КАК СчетУчетаДооценки
	|		ПО СчетУчетаАмортизации.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ДооценкаВНА)
	|			И СчетУчетаАмортизации.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			И СчетУчетаАмортизации.АналитикаУчета = ПорядокУчетаОС.ГруппаФинансовогоУчета
	|			И СчетУчетаАмортизации.МестоУчета = НЕОПРЕДЕЛЕНО
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПорядокУчетаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ЕСТЬNULL(СчетУчетаСтоимости.СчетУчета, ПорядокУчетаОС.СчетУчета) КАК СчетУчета,
	|	 ЕСТЬNULL(СчетУчетаАмортизации.СчетУчета, ПорядокУчетаОС.СчетНачисленияАмортизации) КАК СчетНачисленияАмортизации
	|ПОМЕСТИТЬ СчетаБухгалтерскогоУчетаОСНачалоГода
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОС.СрезПоследних(
	|			&НачалоГода,
	|			ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						СписокОС КАК СписокОС)) КАК ПорядокУчетаОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОтраженияНаСчетахУчета КАК СчетУчетаСтоимости
	|		ПО СчетУчетаСтоимости.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА)
	|			И СчетУчетаСтоимости.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			И СчетУчетаСтоимости.АналитикаУчета = ПорядокУчетаОС.ГруппаФинансовогоУчета
	|			И СчетУчетаСтоимости.МестоУчета = НЕОПРЕДЕЛЕНО
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОтраженияНаСчетахУчета КАК СчетУчетаАмортизации
	|		ПО СчетУчетаАмортизации.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА)
	|			И СчетУчетаАмортизации.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			И СчетУчетаАмортизации.АналитикаУчета = ПорядокУчетаОС.ГруппаФинансовогоУчета
	|			И СчетУчетаАмортизации.МестоУчета = НЕОПРЕДЕЛЕНО
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетаБухгалтерскогоУчетаОС.СчетУчета КАК Счет
	|ПОМЕСТИТЬ СчетаУчетаБУ
	|ИЗ
	|	СчетаБухгалтерскогоУчетаОС КАК СчетаБухгалтерскогоУчетаОС
	//|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетаБухгалтерскогоУчетаОСНачалоГода.СчетУчета КАК Счет
	|ПОМЕСТИТЬ СчетаУчетаБУНачалоГода
	|ИЗ
	|	СчетаБухгалтерскогоУчетаОСНачалоГода КАК СчетаБухгалтерскогоУчетаОСНачалоГода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетаБухгалтерскогоУчетаОС.СчетНачисленияАмортизации КАК Счет
	|ПОМЕСТИТЬ СчетаНачисленияАмортизацииБУ
	|ИЗ
	|	СчетаБухгалтерскогоУчетаОС КАК СчетаБухгалтерскогоУчетаОС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетаБухгалтерскогоУчетаОС.СчетДооценки КАК Счет
	|ПОМЕСТИТЬ СчетаДооценки
	|ИЗ
	|	СчетаБухгалтерскогоУчетаОС КАК СчетаБухгалтерскогоУчетаОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетаБухгалтерскогоУчетаОСНачалоГода.СчетНачисленияАмортизации КАК Счет
	|ПОМЕСТИТЬ СчетаНачисленияАмортизацииБУНачалоГода
	|ИЗ
	|	СчетаБухгалтерскогоУчетаОСНачалоГода КАК СчетаБухгалтерскогоУчетаОСНачалоГода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СчетаУчетаБУ.Счет КАК Счет
	|ПОМЕСТИТЬ СчетаНачалоПериода
	|ИЗ
	|	СчетаУчетаБУ КАК СчетаУчетаБУ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СчетаНачисленияАмортизацииБУ.Счет
	|ИЗ
	|	СчетаНачисленияАмортизацииБУ КАК СчетаНачисленияАмортизацииБУ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СчетаУчетаБУ.Счет КАК Счет
	|ПОМЕСТИТЬ СчетаКонецПериода
	|ИЗ
	|	СчетаУчетаБУ КАК СчетаУчетаБУ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СчетаНачисленияАмортизацииБУ.Счет
	|ИЗ
	|	СчетаНачисленияАмортизацииБУ КАК СчетаНачисленияАмортизацииБУ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СчетаУчетаБУНачалоГода.Счет КАК Счет
	|ПОМЕСТИТЬ СчетаНачалоГода
	|ИЗ
	|	СчетаУчетаБУНачалоГода КАК СчетаУчетаБУНачалоГода
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СчетаНачисленияАмортизацииБУНачалоГода.Счет
	|ИЗ
	|	СчетаНачисленияАмортизацииБУНачалоГода КАК СчетаНачисленияАмортизацииБУНачалоГода
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет";

	Возврат ТекстЗапроса;

КонецФункции

Функция ПолучитьТекстЗапросаАмортизацияОСПараметрыОтраженияВУчетеАмортизируемыеВМесяцПринятияКУчету()
	
	ТекстЗапроса =
	  "ВЫБРАТЬ
	  |	ПорядокУчетаОСБУ.ОсновноеСредство КАК ОсновноеСредство,
	  |	ПорядокУчетаОСБУ.СтатьяРасходовБУ КАК СтатьяРасходов,
	  |	ПорядокУчетаОСБУ.АналитикаРасходовБУ КАК АналитикаРасходов,
	  |	ПорядокУчетаОСБУ.СпособОтраженияРасходовБУ КАК СпособОтраженияРасходов,
	  |	НЕ ПорядокУчетаОСБУ.СпособОтраженияРасходовБУ В (ЗНАЧЕНИЕ(Документ.ИзменениеПараметровОС.ПустаяСсылка), ЗНАЧЕНИЕ(Документ.ИзменениеПараметровОС2_4.ПустаяСсылка), НЕОПРЕДЕЛЕНО) КАК СпособОтраженияРасходовЗаданДокументом,
	  |	ЕСТЬNULL(ИзменениеПараметровАмортизацииОС.ДокументОснование, НЕОПРЕДЕЛЕНО) КАК СпособОтраженияРасходовДокументОснование,
	  |	ПорядокУчетаОСБУ.НалоговоеНазначение КАК НалоговоеНазначение
	  |ПОМЕСТИТЬ ПорядокУчетаОСБУАмортизируемыеВМесяцПринятияКУчету
	  |ИЗ
	  |	РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(
	  |			&КонецПериода,
	  |			Организация = &Организация
	  |				И ОсновноеСредство В
	  |					(ВЫБРАТЬ
	  |						СписокОСАмортизируемыеВМесяцПринятияКУчету.ОсновноеСредство
	  |					ИЗ
	  |						СписокОСАмортизируемыеВМесяцПринятияКУчету КАК СписокОСАмортизируемыеВМесяцПринятияКУчету)) КАК ПорядокУчетаОСБУ
	  |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИзменениеПараметровОС КАК ИзменениеПараметровАмортизацииОС
	  |		ПО ПорядокУчетаОСБУ.СпособОтраженияРасходовБУ = ИзменениеПараметровАмортизацииОС.Ссылка
	  |
	  |ИНДЕКСИРОВАТЬ ПО
	  |	ОсновноеСредство
	  |;
	  |
	  |////////////////////////////////////////////////////////////////////////////////
	  |ВЫБРАТЬ
	  |	ПорядокУчетаОСАмортизируемыеВМесяцПринятияКУчету.ОсновноеСредство КАК ОсновноеСредство,
	  |	ЕСТЬNULL(СчетУчетаСтоимости.СчетУчета, ПорядокУчетаОСАмортизируемыеВМесяцПринятияКУчету.СчетУчета) КАК СчетУчета,
	  |	ЕСТЬNULL(СчетУчетаАмортизации.СчетУчета, ПорядокУчетаОСАмортизируемыеВМесяцПринятияКУчету.СчетНачисленияАмортизации) КАК СчетНачисленияАмортизации
	  |ПОМЕСТИТЬ СчетаБухгалтерскогоУчетаОСАмортизируемыеВМесяцПринятияКУчету
	  |ИЗ
	  |	ПорядокУчетаОСАмортизируемыеВМесяцПринятияКУчету КАК ПорядокУчетаОСАмортизируемыеВМесяцПринятияКУчету
	  |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОтраженияНаСчетахУчета КАК СчетУчетаСтоимости
	  |		ПО (СчетУчетаСтоимости.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА))
	  |			И (СчетУчетаСтоимости.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка))
	  |			И (СчетУчетаСтоимости.АналитикаУчета = ПорядокУчетаОСАмортизируемыеВМесяцПринятияКУчету.ГруппаФинансовогоУчета)
	  |			И (СчетУчетаСтоимости.МестоУчета = НЕОПРЕДЕЛЕНО)
	  |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОтраженияНаСчетахУчета КАК СчетУчетаАмортизации
	  |		ПО (СчетУчетаАмортизации.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА))
	  |			И (СчетУчетаАмортизации.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка))
	  |			И (СчетУчетаАмортизации.АналитикаУчета = ПорядокУчетаОСАмортизируемыеВМесяцПринятияКУчету.ГруппаФинансовогоУчета)
	  |			И (СчетУчетаАмортизации.МестоУчета = НЕОПРЕДЕЛЕНО)
	  |
	  |ИНДЕКСИРОВАТЬ ПО
	  |	ОсновноеСредство
	  |;
	  |
	  |////////////////////////////////////////////////////////////////////////////////
	  |ВЫБРАТЬ
	  |	ПорядокУчетаОС.ОсновноеСредство КАК ОсновноеСредство,
	  |	ЕСТЬNULL(СчетУчетаСтоимости.СчетУчета, ПорядокУчетаОС.СчетУчета) КАК СчетУчета,
	  |	ЕСТЬNULL(СчетУчетаАмортизации.СчетУчета, ПорядокУчетаОС.СчетНачисленияАмортизации) КАК СчетНачисленияАмортизации
	  |ПОМЕСТИТЬ СчетаБухгалтерскогоУчетаОСНачалоГодаАмортизируемыеВМесяцПринятияКУчету
	  |ИЗ
	  |	РегистрСведений.ПорядокУчетаОС.СрезПоследних(
	  |			&НачалоГода,
	  |			ОсновноеСредство В
	  |				(ВЫБРАТЬ
	  |					СписокОСАмортизируемыеВМесяцПринятияКУчету.ОсновноеСредство
	  |				ИЗ
	  |					СписокОСАмортизируемыеВМесяцПринятияКУчету КАК СписокОСАмортизируемыеВМесяцПринятияКУчету)) КАК ПорядокУчетаОС
	  |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОтраженияНаСчетахУчета КАК СчетУчетаСтоимости
	  |		ПО (СчетУчетаСтоимости.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА))
	  |			И (СчетУчетаСтоимости.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка))
	  |			И (СчетУчетаСтоимости.АналитикаУчета = ПорядокУчетаОС.ГруппаФинансовогоУчета)
	  |			И (СчетУчетаСтоимости.МестоУчета = НЕОПРЕДЕЛЕНО)
	  |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОтраженияНаСчетахУчета КАК СчетУчетаАмортизации
	  |		ПО (СчетУчетаАмортизации.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА))
	  |			И (СчетУчетаАмортизации.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка))
	  |			И (СчетУчетаАмортизации.АналитикаУчета = ПорядокУчетаОС.ГруппаФинансовогоУчета)
	  |			И (СчетУчетаАмортизации.МестоУчета = НЕОПРЕДЕЛЕНО)
	  |
	  |ИНДЕКСИРОВАТЬ ПО
	  |	ОсновноеСредство
	  |;
	  |
	  |////////////////////////////////////////////////////////////////////////////////
	  |ВЫБРАТЬ РАЗЛИЧНЫЕ
	  |	СчетаБухгалтерскогоУчетаОСАмортизируемыеВМесяцПринятияКУчету.СчетУчета КАК Счет
	  |ПОМЕСТИТЬ СчетаУчетаБУАмортизируемыеВМесяцПринятияКУчету
	  |ИЗ
	  |	СчетаБухгалтерскогоУчетаОСАмортизируемыеВМесяцПринятияКУчету КАК СчетаБухгалтерскогоУчетаОСАмортизируемыеВМесяцПринятияКУчету
	  |;
	  |
	  |////////////////////////////////////////////////////////////////////////////////
	  |ВЫБРАТЬ РАЗЛИЧНЫЕ
	  |	СчетаБухгалтерскогоУчетаОСНачалоГодаАмортизируемыеВМесяцПринятияКУчету.СчетУчета КАК Счет
	  |ПОМЕСТИТЬ СчетаУчетаБУНачалоГодаАмортизируемыеВМесяцПринятияКУчету
	  |ИЗ
	  |	СчетаБухгалтерскогоУчетаОСНачалоГодаАмортизируемыеВМесяцПринятияКУчету КАК СчетаБухгалтерскогоУчетаОСНачалоГодаАмортизируемыеВМесяцПринятияКУчету
	  |;
	  |
	  |////////////////////////////////////////////////////////////////////////////////
	  |ВЫБРАТЬ РАЗЛИЧНЫЕ
	  |	СчетаБухгалтерскогоУчетаОСАмортизируемыеВМесяцПринятияКУчету.СчетНачисленияАмортизации КАК Счет
	  |ПОМЕСТИТЬ СчетаНачисленияАмортизацииБУАмортизируемыеВМесяцПринятияКУчету
	  |ИЗ
	  |	СчетаБухгалтерскогоУчетаОСАмортизируемыеВМесяцПринятияКУчету КАК СчетаБухгалтерскогоУчетаОСАмортизируемыеВМесяцПринятияКУчету
	  |;
	  |
	  |////////////////////////////////////////////////////////////////////////////////
	  |ВЫБРАТЬ РАЗЛИЧНЫЕ
	  |	СчетаБухгалтерскогоУчетаОСНачалоГодаАмортизируемыеВМесяцПринятияКУчету.СчетНачисленияАмортизации КАК Счет
	  |ПОМЕСТИТЬ СчетаНачисленияАмортизацииБУНачалоГодаАмортизируемыеВМесяцПринятияКУчету
	  |ИЗ
	  |	СчетаБухгалтерскогоУчетаОСНачалоГодаАмортизируемыеВМесяцПринятияКУчету КАК СчетаБухгалтерскогоУчетаОСНачалоГодаАмортизируемыеВМесяцПринятияКУчету
	  |;
	  |
	  |////////////////////////////////////////////////////////////////////////////////
	  |ВЫБРАТЬ
	  |	СчетаУчетаБУАмортизируемыеВМесяцПринятияКУчету.Счет КАК Счет
	  |ПОМЕСТИТЬ СчетаНачалоПериодаАмортизируемыеВМесяцПринятияКУчету
	  |ИЗ
	  |	СчетаУчетаБУАмортизируемыеВМесяцПринятияКУчету КАК СчетаУчетаБУАмортизируемыеВМесяцПринятияКУчету
	  |
	  |ОБЪЕДИНИТЬ ВСЕ
	  |
	  |ВЫБРАТЬ
	  |	СчетаНачисленияАмортизацииБУАмортизируемыеВМесяцПринятияКУчету.Счет
	  |ИЗ
	  |	СчетаНачисленияАмортизацииБУАмортизируемыеВМесяцПринятияКУчету КАК СчетаНачисленияАмортизацииБУАмортизируемыеВМесяцПринятияКУчету
	  |
	  |ИНДЕКСИРОВАТЬ ПО
	  |	Счет
	  |;
	  |
	  |////////////////////////////////////////////////////////////////////////////////
	  |ВЫБРАТЬ
	  |	СчетаУчетаБУАмортизируемыеВМесяцПринятияКУчету.Счет КАК Счет
	  |ПОМЕСТИТЬ СчетаКонецПериодаАмортизируемыеВМесяцПринятияКУчету
	  |ИЗ
	  |	СчетаУчетаБУАмортизируемыеВМесяцПринятияКУчету КАК СчетаУчетаБУАмортизируемыеВМесяцПринятияКУчету
	  |
	  |ОБЪЕДИНИТЬ ВСЕ
	  |
	  |ВЫБРАТЬ
	  |	СчетаНачисленияАмортизацииБУАмортизируемыеВМесяцПринятияКУчету.Счет
	  |ИЗ
	  |	СчетаНачисленияАмортизацииБУАмортизируемыеВМесяцПринятияКУчету КАК СчетаНачисленияАмортизацииБУАмортизируемыеВМесяцПринятияКУчету
	  |
	  |ИНДЕКСИРОВАТЬ ПО
	  |	Счет
	  |;
	  |
	  |////////////////////////////////////////////////////////////////////////////////
	  |ВЫБРАТЬ
	  |	СчетаУчетаБУНачалоГодаАмортизируемыеВМесяцПринятияКУчету.Счет КАК Счет
	  |ПОМЕСТИТЬ СчетаНачалоГодаАмортизируемыеВМесяцПринятияКУчету
	  |ИЗ
	  |	СчетаУчетаБУНачалоГодаАмортизируемыеВМесяцПринятияКУчету КАК СчетаУчетаБУНачалоГодаАмортизируемыеВМесяцПринятияКУчету
	  |
	  |ОБЪЕДИНИТЬ ВСЕ
	  |
	  |ВЫБРАТЬ
	  |	СчетаНачисленияАмортизацииБУНачалоГодаАмортизируемыеВМесяцПринятияКУчету.Счет
	  |ИЗ
	  |	СчетаНачисленияАмортизацииБУНачалоГодаАмортизируемыеВМесяцПринятияКУчету КАК СчетаНачисленияАмортизацииБУНачалоГодаАмортизируемыеВМесяцПринятияКУчету
	  |
	  |ИНДЕКСИРОВАТЬ ПО
	  |	Счет";

	Возврат ТекстЗапроса;

КонецФункции

Функция ПолучитьТекстЗапросаАмортизацияОСПрочиеПараметры()

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	МестонахождениеОСБУ.ОсновноеСредство КАК ОсновноеСредство,
	|	МестонахождениеОСБУ.Местонахождение КАК Подразделение
	|ПОМЕСТИТЬ МестонахождениеОСБУ
	|ИЗ
	|	РегистрСведений.МестонахождениеОС.СрезПоследних(
	|			&НачалоПериода,
	|			Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						СписокОС КАК СписокОС)) КАК МестонахождениеОСБУ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";

	Возврат ТекстЗапроса;

КонецФункции

Функция ПолучитьТекстЗапросаАмортизацияОСПрочиеПараметрыАмортизируемыеВМесяцПринятияКУчету()

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	МестонахождениеОСБУ.ОсновноеСредство КАК ОсновноеСредство,
	|	МестонахождениеОСБУ.Местонахождение КАК Подразделение
	|ПОМЕСТИТЬ МестонахождениеОСБУАмортизируемыеВМесяцПринятияКУчету
	|ИЗ
	|	РегистрСведений.МестонахождениеОС.СрезПоследних(
	|			&КонецПериода,
	|			ОсновноеСредство В
	|				(ВЫБРАТЬ
	|					СписокОСАмортизируемыеВМесяцПринятияКУчету.ОсновноеСредство
	|				ИЗ
	|					СписокОСАмортизируемыеВМесяцПринятияКУчету КАК СписокОСАмортизируемыеВМесяцПринятияКУчету)) КАК МестонахождениеОСБУ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";

	Возврат ТекстЗапроса;

КонецФункции

Функция ПолучитьТекстЗапросаАмортизацияОСАмортизацияПоДокументу()

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Хозрасчетный.НомерСтроки КАК НомерСтроки,
	|	Хозрасчетный.Сумма,
	|	Хозрасчетный.СуммаНУКт,
	|	Хозрасчетный.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ Проводки
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный КАК Хозрасчетный
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СчетаНачисленияАмортизацииБУ КАК СчетаНачисленияАмортизацииБУ
	|		ПО Хозрасчетный.СчетКт = СчетаНачисленияАмортизацииБУ.Счет
	|ГДЕ
	|	Хозрасчетный.Регистратор = &Регистратор
	|	И Хозрасчетный.Период МЕЖДУ &НачалоПериодаДата И &КонецПериода
	|	И Хозрасчетный.Организация = &Организация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйСубконто.Значение КАК ОсновноеСредство,
	|	СУММА(Проводки.Сумма) КАК АмортизацияОборот,
	|	СУММА(Проводки.СуммаНУКт) КАК АмортизацияНУОборот
	|ПОМЕСТИТЬ АмортизацияОСДокумента
	|ИЗ
	|	Проводки КАК Проводки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Субконто КАК ХозрасчетныйСубконто
	|		ПО Проводки.Регистратор = ХозрасчетныйСубконто.Регистратор
	|			И Проводки.НомерСтроки = ХозрасчетныйСубконто.НомерСтроки
	|			И (ХозрасчетныйСубконто.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияБухгалтерии.Кредит))
	|			И (ХозрасчетныйСубконто.Вид = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства))
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйСубконто.Значение
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";

	Возврат ТекстЗапроса ;

КонецФункции

Функция ПолучитьТекстЗапросаАмортизацияОСДанныеПроводок()
	
	ТекстЗапроса ="
	|ВЫБРАТЬ
	|	ОстаткиНачалоПериода.Субконто1 КАК ОсновноеСредство,
	|	ОстаткиНачалоПериода.Счет КАК Счет,
	|	ОстаткиНачалоПериода.СуммаОстатокДт,
	|	ОстаткиНачалоПериода.СуммаНУОстатокДт,
	|	ОстаткиНачалоПериода.СуммаОстатокКт,
	|	ОстаткиНачалоПериода.СуммаНУОстатокКт
	|ПОМЕСТИТЬ ОстаткиНачалоПериода
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&НачалоПериода,
	|			Счет В
	|				(ВЫБРАТЬ
	|					СчетаНачалоПериода.Счет
	|				ИЗ
	|					СчетаНачалоПериода КАК СчетаНачалоПериода),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
	|			Организация = &Организация
	|				И Субконто1 В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						СписокОС КАК СписокОС)) КАК ОстаткиНачалоПериода
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиДооценкиНачалоПериода.Субконто1 КАК ОсновноеСредство,
	|	ОстаткиДооценкиНачалоПериода.Счет КАК Счет,
	|	ОстаткиДооценкиНачалоПериода.СуммаОстатокКт
	|ПОМЕСТИТЬ ОстаткиДооценкиНачалоПериода
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&НачалоПериода,
	|			Счет В
	|				(ВЫБРАТЬ
	|					СчетаДооценки.Счет
	|				ИЗ
	|					СчетаДооценки КАК СчетаДооценки),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
	|			Организация = &Организация
	|				И Субконто1 В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						СписокОС КАК СписокОС)) КАК ОстаткиДооценкиНачалоПериода
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиКонецПериода.Субконто1 КАК ОсновноеСредство,
	|	ОстаткиКонецПериода.Счет КАК Счет,
	|	ОстаткиКонецПериода.СуммаОстатокДт,
	|	ОстаткиКонецПериода.СуммаНУОстатокДт,
	|	ОстаткиКонецПериода.СуммаОстатокКт,
	|	ОстаткиКонецПериода.СуммаНУОстатокКт
	|ПОМЕСТИТЬ ОстаткиКонецПериода
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&КонецПериода,
	|			Счет В
	|				(ВЫБРАТЬ
	|					СчетаКонецПериода.Счет
	|				ИЗ
	|					СчетаКонецПериода КАК СчетаКонецПериода
	|				ОБЪЕДИНИТЬ ВСЕ 
 	|				ВЫБРАТЬ
	|					СчетаКонецПериодаАмортизируемыеВМесяцПринятияКУчету.Счет
	|				ИЗ
	|					СчетаКонецПериодаАмортизируемыеВМесяцПринятияКУчету КАК СчетаКонецПериодаАмортизируемыеВМесяцПринятияКУчету
	|					),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
	|			Организация = &Организация
	|				И Субконто1 В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						СписокОС КАК СписокОС
	|					ОБЪЕДИНИТЬ ВСЕ 
	|					ВЫБРАТЬ
	|						СписокОСАмортизируемыеВМесяцПринятияКУчету.ОсновноеСредство
	|					ИЗ
	|						СписокОСАмортизируемыеВМесяцПринятияКУчету КАК СписокОСАмортизируемыеВМесяцПринятияКУчету
	|					)) КАК ОстаткиКонецПериода
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиНаНачалоГода.Субконто1 КАК ОсновноеСредство,
	|	ОстаткиНаНачалоГода.Счет КАК Счет,
	|	ОстаткиНаНачалоГода.СуммаОстатокДт,
	|	ОстаткиНаНачалоГода.СуммаОстатокКт
	|ПОМЕСТИТЬ ОстаткиНаНачалоГода
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&НачалоГода,
	|			Счет В
	|				(ВЫБРАТЬ
	|					СчетаНачалоГода.Счет
	|				ИЗ
	|					СчетаНачалоГода КАК СчетаНачалоГода),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
	|			Организация = &Организация
	|				И Субконто1 В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						СписокОС КАК СписокОС)) КАК ОстаткиНаНачалоГода
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АмортизацияОСОбороты.Субконто1 КАК ОсновноеСредство,
	|	АмортизацияОСОбороты.СуммаОборотКт КАК АмортизацияОборот,
	|	АмортизацияОСОбороты.СуммаНУОборотКт КАК АмортизацияНУОборот
	|ПОМЕСТИТЬ АмортизацияОСЗаПериод
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&НачалоПериодаДата,
	|			&КонецПериода,
	|			,
	|			Счет В
	|				(ВЫБРАТЬ
	|					СчетаНачисленияАмортизацииБУ.Счет
	|				ИЗ
	|					СчетаНачисленияАмортизацииБУ КАК СчетаНачисленияАмортизацииБУ),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
	|			Организация = &Организация
	|				И Субконто1 В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						СписокОС КАК СписокОС),
	|			,
	|			) КАК АмортизацияОСОбороты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаПериод.ОсновноеСредство КАК ОсновноеСредство,
	|	ЗаПериод.АмортизацияОборот - ЕСТЬNULL(ПоДокументу.АмортизацияОборот, 0) КАК АмортизацияОборот,
	|	ЗаПериод.АмортизацияНУОборот - ЕСТЬNULL(ПоДокументу.АмортизацияНУОборот, 0) КАК АмортизацияНУОборот
	|ПОМЕСТИТЬ АмортизацияОСОбороты
	|ИЗ
	|	АмортизацияОСЗаПериод КАК ЗаПериод
	|		ЛЕВОЕ СОЕДИНЕНИЕ АмортизацияОСДокумента КАК ПоДокументу
	|		ПО ЗаПериод.ОсновноеСредство = ПоДокументу.ОсновноеСредство
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";

	Возврат ТекстЗапроса;

КонецФункции

Функция ПолучитьТекстЗапросаСпособовОтраженияРасходов()
	
	Возврат
	"ВЫБРАТЬ
	|	ИзменениеПараметровОС.Ссылка КАК СпособОтраженияРасходов,
	|	ИзменениеПараметровОС.ОтражениеАмортизационныхРасходов.(
	|		НомерСтроки,
	|		Подразделение КАК Подразделение,
	|		НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		СтатьяРасходов,
	|		АналитикаРасходов,
	|		Коэффициент
	|	)
	|ИЗ
	|	ПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ИзменениеПараметровОС КАК ИзменениеПараметровОС
	|		ПО ПорядокУчетаОСБУ.СпособОтраженияРасходов = ИзменениеПараметровОС.Ссылка
	|ГДЕ
	|	ПорядокУчетаОСБУ.СпособОтраженияРасходовЗаданДокументом";
	
КонецФункции

Функция ПолучитьТекстЗапросаНачисленнаяАмортизацияЗаПериод(ДоначислениеВНУ = Ложь)

	ТекстЗапроса ="
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.ОбъектУчета КАК ОсновноеСредство
	|ПОМЕСТИТЬ втАктивыВДокументахЗаПериод
	|ИЗ
	|	Документ.АмортизацияОС КАК Документ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.АмортизацияОС.НачисленнаяАмортизация КАК ТабличнаяЧасть
	|		ПО Документ.Ссылка = ТабличнаяЧасть.Ссылка
	|ГДЕ
	|	Документ.Дата МЕЖДУ &НачалоПериодаДата И &КонецПериода
	|	И Документ.Проведен
	|	И НЕ Документ.ПометкаУдаления
	|	И Документ.Ссылка <> &Регистратор 
	|	//УсловиеДокументАмортизация
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.ОбъектУчета
	|ИЗ
	|	Документ.ИзменениеПараметровОС КАК Документ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ИзменениеПараметровОС.НачисленнаяАмортизация КАК ТабличнаяЧасть
	|		ПО Документ.Ссылка = ТабличнаяЧасть.Ссылка
	|ГДЕ
	|	Документ.Дата МЕЖДУ &НачалоПериодаДата И &КонецПериода
	|	И Документ.Проведен
	|	И НЕ Документ.ПометкаУдаления
	|	И Документ.Ссылка <> &Регистратор
	|	//УсловиеПрочиеДокументы
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.ОбъектУчета
	|ИЗ
	|	Документ.МодернизацияОС КАК Документ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.МодернизацияОС.НачисленнаяАмортизация КАК ТабличнаяЧасть
	|		ПО Документ.Ссылка = ТабличнаяЧасть.Ссылка
	|ГДЕ
	|	Документ.Дата МЕЖДУ &НачалоПериодаДата И &КонецПериода
	|	И Документ.Проведен
	|	И НЕ Документ.ПометкаУдаления
	|	И Документ.Ссылка <> &Регистратор
	|	//УсловиеПрочиеДокументы
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.ОбъектУчета
	|ИЗ
	|	Документ.ПеремещениеОС КАК Документ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПеремещениеОС.НачисленнаяАмортизация КАК ТабличнаяЧасть
	|		ПО Документ.Ссылка = ТабличнаяЧасть.Ссылка
	|ГДЕ
	|	Документ.Дата МЕЖДУ &НачалоПериодаДата И &КонецПериода
	|	И Документ.Проведен
	|	И НЕ Документ.ПометкаУдаления
	|	И Документ.Ссылка <> &Регистратор
	|	//УсловиеПрочиеДокументы
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.ОбъектУчета
	|ИЗ
	|	Документ.ПодготовкаКПередачеОС КАК Документ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПодготовкаКПередачеОС.НачисленнаяАмортизация КАК ТабличнаяЧасть
	|		ПО Документ.Ссылка = ТабличнаяЧасть.Ссылка
	|ГДЕ
	|	Документ.Дата МЕЖДУ &НачалоПериодаДата И &КонецПериода
	|	И Документ.Проведен
	|	И НЕ Документ.ПометкаУдаления
	|	И Документ.Ссылка <> &Регистратор
	|	//УсловиеПрочиеДокументы
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.ОбъектУчета
	|ИЗ
	|	Документ.СписаниеОС КАК Документ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеОС.НачисленнаяАмортизация КАК ТабличнаяЧасть
	|		ПО Документ.Ссылка = ТабличнаяЧасть.Ссылка
	|ГДЕ
	|	Документ.Дата МЕЖДУ &НачалоПериодаДата И &КонецПериода
	|	И Документ.Проведен
	|	И НЕ Документ.ПометкаУдаления
	|	И Документ.Ссылка <> &Регистратор
	|	//УсловиеПрочиеДокументы
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.ОбъектУчета
	|ИЗ
	|	Документ.ПереоценкаОС КАК Документ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПереоценкаОС.НачисленнаяАмортизация КАК ТабличнаяЧасть
	|		ПО Документ.Ссылка = ТабличнаяЧасть.Ссылка
	|ГДЕ
	|	Документ.Дата МЕЖДУ &НачалоПериодаДата И &КонецПериода
	|	И Документ.Проведен
	|	И НЕ Документ.ПометкаУдаления
	|	И Документ.Ссылка <> &Регистратор
	|	//УсловиеПрочиеДокументы
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.ОбъектУчета
	|ИЗ
	|	Документ.РемонтОС КАК Документ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РемонтОС.НачисленнаяАмортизация КАК ТабличнаяЧасть
	|		ПО Документ.Ссылка = ТабличнаяЧасть.Ссылка
	|ГДЕ
	|	Документ.Дата МЕЖДУ &НачалоПериодаДата И &КонецПериода
	|	И Документ.Проведен
	|	И НЕ Документ.ПометкаУдаления
	|	И Документ.Ссылка <> &Регистратор
	|	//УсловиеПрочиеДокументы
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.ОбъектУчета
	|ИЗ
	|	Документ.КорректировкаНалоговогоНазначенияОС КАК Документ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаНалоговогоНазначенияОС.НачисленнаяАмортизация КАК ТабличнаяЧасть
	|		ПО Документ.Ссылка = ТабличнаяЧасть.Ссылка
	|ГДЕ
	|	Документ.Дата МЕЖДУ &НачалоПериодаДата И &КонецПериода
	|	И Документ.Проведен
	|	И НЕ Документ.ПометкаУдаления
	|	И Документ.Ссылка <> &Регистратор
	|	//УсловиеПрочиеДокументы
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйДвиженияССубконто.СубконтоКт1
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ДвиженияССубконто(
	|			&НачалоПериодаДата,
	|			&КонецПериода,
	|			Регистратор <> &Регистратор
	|				И Регистратор ССЫЛКА Документ.АмортизацияОС 
	|				//УсловиеХозрасчетный
	|				И СчетКт В
	|					(ВЫБРАТЬ
	|						Т.СчетНачисленияАмортизации
	|					ИЗ
	|						ПорядокУчетаОС КАК Т),
	|			,
	|			) КАК ХозрасчетныйДвиженияССубконто
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	втАктивыВДокументахЗаПериод.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ втАмортизированныеАктивы
	|ИЗ
	|	втАктивыВДокументахЗаПериод КАК втАктивыВДокументахЗаПериод
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ втАктивыВДокументахЗаПериод";

	Если ДоначислениеВНУ Тогда
		УсловиеДокументАмортизация = "И ТабличнаяЧасть.СуммаНУ <> 0";
		УсловиеПрочиеДокументы = "И ТабличнаяЧасть.СуммаНУ <> 0";
		УсловиеХозрасчетный = "И СуммаНУКт <> 0";
	Иначе
		УсловиеДокументАмортизация = "И Документ.ДоначислениеВНУ = Ложь";
		УсловиеПрочиеДокументы = ""; 
		УсловиеХозрасчетный = "И Регистратор.ДоначислениеВНУ = Ложь";
	КонецЕсли;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//УсловиеДокументАмортизация", УсловиеДокументАмортизация);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//УсловиеПрочиеДокументы", УсловиеПрочиеДокументы);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//УсловиеХозрасчетный", УсловиеХозрасчетный);
    Возврат ТекстЗапроса;

КонецФункции

Функция ГрафикиАмортизацииОС(Графики)

	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Графики", Графики);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ГодовыеГрафикиАмортизацииОС.Ссылка КАК График,
	|	ГодовыеГрафикиАмортизацииОС.Коэффициент1,
	|	ГодовыеГрафикиАмортизацииОС.Коэффициент2,
	|	ГодовыеГрафикиАмортизацииОС.Коэффициент3,
	|	ГодовыеГрафикиАмортизацииОС.Коэффициент4,
	|	ГодовыеГрафикиАмортизацииОС.Коэффициент5,
	|	ГодовыеГрафикиАмортизацииОС.Коэффициент6,
	|	ГодовыеГрафикиАмортизацииОС.Коэффициент7,
	|	ГодовыеГрафикиАмортизацииОС.Коэффициент8,
	|	ГодовыеГрафикиАмортизацииОС.Коэффициент9,
	|	ГодовыеГрафикиАмортизацииОС.Коэффициент10,
	|	ГодовыеГрафикиАмортизацииОС.Коэффициент11,
	|	ГодовыеГрафикиАмортизацииОС.Коэффициент12,
	|	ГодовыеГрафикиАмортизацииОС.Коэффициент1 + ГодовыеГрафикиАмортизацииОС.Коэффициент2 + ГодовыеГрафикиАмортизацииОС.Коэффициент3 + ГодовыеГрафикиАмортизацииОС.Коэффициент4 + ГодовыеГрафикиАмортизацииОС.Коэффициент5 + ГодовыеГрафикиАмортизацииОС.Коэффициент6 + ГодовыеГрафикиАмортизацииОС.Коэффициент7 + ГодовыеГрафикиАмортизацииОС.Коэффициент8 + ГодовыеГрафикиАмортизацииОС.Коэффициент9 + ГодовыеГрафикиАмортизацииОС.Коэффициент10 + ГодовыеГрафикиАмортизацииОС.Коэффициент11 + ГодовыеГрафикиАмортизацииОС.Коэффициент12 КАК СуммаКоэффициентов
	|ИЗ
	|	Справочник.ГодовыеГрафикиАмортизацииОС КАК ГодовыеГрафикиАмортизацииОС";
	ТаблицаГрафиков = Запрос.Выполнить().Выгрузить();
	ТаблицаГрафиков.Индексы.Добавить("График");

	Возврат ТаблицаГрафиков;

КонецФункции

Функция ПолучитьКоэффициентАмортизацииИзГрафика(ТаблицаГрафиков, График, ДатаРасчета)
	
	СтрокаТаблицы = ТаблицаГрафиков.Найти(График, "График");
	Если СтрокаТаблицы = Неопределено Тогда
		Возврат 0;
	КонецЕсли;
	
	СуммаВсех = СтрокаТаблицы.СуммаКоэффициентов;
	
	КоэффициентАмортизации = 0;
	
	Если СуммаВсех = 0 Тогда
		КоэффициентАмортизации = 1;
	Иначе
		СуммаОдного = СтрокаТаблицы["Коэффициент" + Месяц(ДатаРасчета)];
		КоэффициентАмортизации = СуммаОдного / СуммаВсех;
	КонецЕсли;

	Возврат КоэффициентАмортизации;

КонецФункции // ПолучитьКоэффициентАмортизацииИзГрафика()

Процедура СообщитьОбОшибкеПриНачисленииАмортизации(Выборка, ТекстСообщения, РегОперация, Отказ, Ссылка = Неопределено)
	
	ШаблонСообщения = НСтр("ru='%1 для основного средства %2 (%3), инвентарный номер %4.';uk='%1 для основного засобу %2 (%3), інвентарний номер %4.'");
	ТекстСообщенияОбОшибке = СтрШаблон(ШаблонСообщения, ТекстСообщения, Выборка.ОсновноеСредствоПредставление, Выборка.Код, Выборка.ИнвентарныйНомер);
	
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщенияОбОшибке, Ссылка,,, Отказ);
	
КонецПроцедуры

// ПРОЧЕЕ

// Получает документ и дату принятия к учету основного средства по бух учету.
//
// Параметры
//
//
// Возвращаемое значение
//  Дата и документ - через указанные параметры процедуры.
//
Процедура СведенияОПринятииКУчетуОС(ОсновноеСредство, Организация, ДокРегистратор, ДатаДокРегистратора) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюБУ КАК Документ,
	|	ПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюБУ.Дата КАК Дата
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОС.СрезПоследних(, Организация = &Организация И ОсновноеСредство = &ОС) КАК ПервоначальныеСведенияОС
	|ГДЕ
	|	НЕ ПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюБУ.Дата ЕСТЬ NULL";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ОС", ОсновноеСредство);
	Запрос.УстановитьПараметр("Организация", Организация);

	ВыборкаДоков = Запрос.Выполнить().Выбрать();

	Если ВыборкаДоков.Следующий()  Тогда
		ДокРегистратор      = ВыборкаДоков.Документ;
		ДатаДокРегистратора = ВыборкаДоков.Дата;
	Иначе
		ДокРегистратор      = Неопределено;
		ДатаДокРегистратора = '00010101';
	КонецЕсли;

КонецПроцедуры

// Получает документ и дату выбытия основного средства по бух учету.
//
// Параметры
//
//
// Возвращаемое значение
//  Дата и документ - через указанные параметры процедуры.
//
Процедура СведенияОВыбытииОС(ОсновноеСредство, Организация, ДокРегистратор, ДатаДокРегистратора) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПервоначальныеСведенияОС.ДокументСнятияСУчета КАК Документ,
	|	ПервоначальныеСведенияОС.ДокументСнятияСУчета.Дата КАК Дата
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОС.СрезПоследних(, Организация = &Организация И ОсновноеСредство = &ОС) КАК ПервоначальныеСведенияОС
	|ГДЕ
	|	НЕ ПервоначальныеСведенияОС.ДокументСнятияСУчета.Дата ЕСТЬ NULL";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ОС", ОсновноеСредство);
	Запрос.УстановитьПараметр("Организация", Организация);

	ВыборкаДоков = Запрос.Выполнить().Выбрать();

	Если ВыборкаДоков.Следующий()  Тогда
		ДокРегистратор      = ВыборкаДоков.Документ;
		ДатаДокРегистратора = ВыборкаДоков.Дата;
	Иначе
		ДокРегистратор      = Неопределено;
		ДатаДокРегистратора = '00010101';
	КонецЕсли;

КонецПроцедуры

// Функция возвращает таблицу значений с инвентарными номерами ОС.
//
// Параметры
//  ТаблицаОС   - Таблица значений со списком ОС, для которой нужно получить инвентарные номера.
//                Обязательные колонки: НомерСтроки, ОсновноеСредство
//  Организация - Организация, по которой требуется получить инвентарные номера.
//  Дата        - Дата, на которую требуется получить инвентарные номера.
//
// Возвращаемое значение:
//   ТаблицаЗначений - Таблица с инвентарными номерами. Колонки: НомерСтроки, ОсновноеСредство, ИнвентарныйНомер.
//
Функция ИнвентарныеНомераОС(Знач ТаблицаОС, Знач Организация, Знач Дата) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ТаблицаОС", ТаблицаОС);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Дата", Дата);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ТаблицаОС.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ ТаблицаОС
	|ИЗ
	|	&ТаблицаОС КАК ТаблицаОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки КАК НомерСтроки,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ЕСТЬNULL(ОбъектыЭксплуатации.ИнвентарныйНомер, """") КАК ИнвентарныйНомер
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыЭксплуатации КАК ОбъектыЭксплуатации
	|		ПО ТаблицаОС.ОсновноеСредство = ОбъектыЭксплуатации.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	РезультатЗапроса = Запрос.Выполнить();
	
	Результат = РезультатЗапроса.Выгрузить();
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат Результат;
	
КонецФункции

//  Функция возвращает инвентарный номерам ОС.
//
// Параметры
//  ОсновноеСредство - Объект основных средств, для которого требуется получить инвентарный номер.
//  Организация      - Организация, по которой требуется получить инвентарный номер.
//  Дата             - Дата, на которую требуется получить инвентарный номер.
//
// Возвращаемое значение:
//   Строка - Инвентарный номер переданного ОС.
//
Функция ПолучитьИнвентарныйНомерОС(Знач ОсновноеСредство, Знач Организация, Знач Дата) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ОсновноеСредство) Тогда
		Возврат "";
	КонецЕсли; 
	
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОсновноеСредство, "ИнвентарныйНомер");
	
КонецФункции

//  Функция дозаполняет табличную часть основных средств документа основными средствами
// с наименованием совпадающим с заданным основным средством. В случае отсутствия основных
// средств с подходящим наименованием, выдает сообщение об ошибке.
//
// Параметры
//  ПараметрыФормы   - Структура с параметрами заполнения, ключи структуры:
//  	Форма             - форма заполняемого документа
//  	Объект            - Значение основного реквизита формы - документа для заполнения
//  	ИмяТабличнойЧасти - Имя табличной части основных средств документа, значение по умолчанию "ОС"
//  	ПолучатьИнвентарныйНомерИзКода - Флаг необходимости получения основного средства из кода 
//  		справочника (в противном случае, по данным регистра сведений). Значение по умолчанию Ложь.
//  
//  ОсновноеСредство - Основное средство по наименованию которого требуется дозаполнить табличную часть.
//
// Возвращаемое значение:
//   Булево - Истина - в табличную часть добавлены строки с подходящими ОС, Ложь - подходящих ОС не найдено.
//
Функция ДозаполнитьТабличнуюЧастьОсновнымиСредствамиПоНаименованию(ПараметрыФормы, ОсновноеСредство) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Форма = ПараметрыФормы.Форма;
	Объект = ПараметрыФормы.Объект;
	Если ПараметрыФормы.Свойство("ИмяТабличнойЧасти") Тогда
		ИмяТабличнойЧасти = ПараметрыФормы.ИмяТабличнойЧасти;
	Иначе
		ИмяТабличнойЧасти = "ОС";
	КонецЕсли;
	Если ПараметрыФормы.Свойство("ПолучатьИнвентарныйНомерИзКода") Тогда
		ПолучатьИнвентарныйНомерИзКода = ПараметрыФормы.ПолучатьИнвентарныйНомерИзКода;
	Иначе
		ПолучатьИнвентарныйНомерИзКода = Ложь;
	КонецЕсли;
	
	ОсновноеСредствоНаименование = Строка(ОсновноеСредство);
	
	СписокОС = Объект[ИмяТабличнойЧасти].Выгрузить(, "ОсновноеСредство");
	
	Запрос = Новый Запрос();
	
	Запрос.УстановитьПараметр("СписокОС", СписокОС);
	Запрос.УстановитьПараметр("Наименование", ОсновноеСредствоНаименование);
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("Дата", Объект.Дата);
	Запрос.УстановитьПараметр("ПолучатьИнвентарныйНомерИзКода", ПолучатьИнвентарныйНомерИзКода);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОсновныеСредства.Ссылка КАК ОсновноеСредство,
	|	ВЫБОР
	|		КОГДА &ПолучатьИнвентарныйНомерИзКода
	|			ТОГДА ОсновныеСредства.Код
	|		ИНАЧЕ ОсновныеСредства.ИнвентарныйНомер
	|	КОНЕЦ КАК ИнвентарныйНомер
	|ИЗ
	|	Справочник.ОбъектыЭксплуатации КАК ОсновныеСредства
	|ГДЕ
	|	ОсновныеСредства.Наименование = &Наименование
	|	И (НЕ ОсновныеСредства.Ссылка В (&СписокОС))
	|	И ОсновныеСредства.ПометкаУдаления = ЛОЖЬ
	|	И ОсновныеСредства.ЭтоГруппа = ЛОЖЬ
	|УПОРЯДОЧИТЬ ПО
	|	ОсновноеСредство,
	|	ИнвентарныйНомер
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		ШаблонСообщения = НСтр("ru='Другие элементы справочника с наименованием ""%1"" в справочнике ""Основные средства"" отсутствуют.';uk='Інші елементи довідника з найменуванням ""%1"" в довіднику ""Основні засоби"" відсутні.'");
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения, ОсновноеСредствоНаименование);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "Объект");
		Возврат Ложь;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = Объект[ИмяТабличнойЧасти].Добавить();
		НоваяСтрока.ОсновноеСредство = Выборка.ОсновноеСредство;
		НоваяСтрока.ИнвентарныйНомер = Выборка.ИнвентарныйНомер;
	КонецЦикла;
	
	Форма.Модифицированность = Истина;
	
	Возврат Истина;
	
КонецФункции

//  Процедура перезаполняет переданную коллекцию формы подобранными основными средствами.
// По основным средствам присутствовавшим в коллекции изначально, данные колонок 
// дополняются исходными.
//
// Параметр:
//  КоллекцияОС - ДанныеФормыКоллекция, отображение табличной части с основными средствами
//  	в реквизит управляемой формы. Обязательно должна присутствовать колонка ОсновноеСредство.
//  
//  ВыбранноеЗначение - Структура, значение из обработчика ОбработкаВыбора полученное в результате
//  	подбора
// ..
//  Возвращаемое значение:
//    Массив - Массив новых строк коллекции.
//
Функция ОбработатьПодборОсновныхСредств(Знач КоллекцияОС, Знач ВыбранноеЗначение) Экспорт
	
	ТаблицаОС = ПолучитьИзВременногоХранилища(ВыбранноеЗначение.АдресОСВХранилище);
	
	ИсходныеДанные = КоллекцияОС.Выгрузить();
	ИсходныеДанные.Индексы.Добавить("ОсновноеСредство");
	
	ДобавленныеСтроки = Новый Массив;
	
	КоллекцияОС.Очистить();
	Для каждого СтрокаТаблицыОС Из ТаблицаОС Цикл
		ЭлементКоллекции = КоллекцияОС.Добавить();
		
		СтрокаИсходныхДанных = ИсходныеДанные.Найти(СтрокаТаблицыОС.ОсновноеСредство, "ОсновноеСредство");
		Если СтрокаИсходныхДанных <> Неопределено Тогда
			ЗаполнитьЗначенияСвойств(ЭлементКоллекции, СтрокаИсходныхДанных);
		Иначе
			ДобавленныеСтроки.Добавить(ЭлементКоллекции);
		КонецЕсли;
			
		ЗаполнитьЗначенияСвойств(ЭлементКоллекции, СтрокаТаблицыОС);
	КонецЦикла;
	
	Возврат ДобавленныеСтроки;
	
КонецФункции

// Возвращает из справочника событий ОС первую найденную запись с заданным видом события,
// иначе возвращает пустую ссылку на справочник.
//
// Параметры
//  ВидСобытия (Перечисление ВидыСобытийОС): вид события.
//
// Возвращаемое значение:
//   элемент справочника событий ОС.
//
Функция ПолучитьСобытиеПоОСИзСправочника(ВидСобытия) Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ВидСобытияОС", ВидСобытия);
	Запрос.Текст = "
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Ссылка,
	|	ВидСобытияОС
	|ИЗ
	|	Справочник.СобытияОС КАК СобытияОС
	|
	|ГДЕ
	|	ВидСобытияОС = &ВидСобытияОС";
	ТаблицаСобытий = Запрос.Выполнить().Выгрузить();

	Если ТаблицаСобытий.Количество()>0 Тогда
		Возврат ТаблицаСобытий[0].Ссылка;

	Иначе
		Возврат Справочники.СобытияОС.ПустаяСсылка();

	КонецЕсли;

КонецФункции // ПолучитьСобытиеОСИзСправочника()

#КонецОбласти

#КонецОбласти
