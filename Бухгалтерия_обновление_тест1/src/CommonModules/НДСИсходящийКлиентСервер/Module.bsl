
#Область РаботаСТабличнымиЧастямиНалоговыхДокументов

Функция СоздатьСтруктуруДляОбработкиПоТекущейСтроке(ТекущаяСтрока, ОбработатьРеквизитыРегл) Экспорт
	
	ТекущаяСтрокаДляОбработки = Новый Структура("
		|Номенклатура, ТипНоменклатуры, 
		|Характеристика, ХарактеристикиИспользуются, 
		|Упаковка, КоличествоУпаковок, Количество,  
		|Цена, Сумма, 
	    |Содержание,
		|КодНоменклатурыПоКлассификатору, РежимЭкспортногоОбеспечения, Вес, ЕдиницаИзмерения,
		|СтавкаНДС, СуммаНДС, СуммаСНДС
		|"
	);
	
	ЗаполнитьЗначенияСвойств(ТекущаяСтрокаДляОбработки, ТекущаяСтрока, , "Цена, СуммаНДС, СуммаСНДС");
	
	Если ОбработатьРеквизитыРегл Тогда
		ТекущаяСтрокаДляОбработки.Цена      = ТекущаяСтрока.ЦенаРегл;
		ТекущаяСтрокаДляОбработки.Сумма     = ТекущаяСтрока.СуммаБезНДСРегл;
		ТекущаяСтрокаДляОбработки.СуммаНДС  = ТекущаяСтрока.СуммаНДСРегл;
		ТекущаяСтрокаДляОбработки.СуммаСНДС = ТекущаяСтрока.СуммаБезНДСРегл + ТекущаяСтрока.СуммаНДСРегл;
	Иначе
		ТекущаяСтрокаДляОбработки.Цена      = ТекущаяСтрока.Цена;
		ТекущаяСтрокаДляОбработки.Сумма     = ТекущаяСтрока.СуммаБезНДС;
		ТекущаяСтрокаДляОбработки.СуммаНДС  = ТекущаяСтрока.СуммаНДС;
		ТекущаяСтрокаДляОбработки.СуммаСНДС = ТекущаяСтрока.СуммаСНДС;
	КонецЕсли;
	
	Возврат ТекущаяСтрокаДляОбработки;
	
КонецФункции

Процедура ЗаполнитьТекущуюСтрокуПоСтруктуреДляОбработки(ТекущаяСтрока, ТекущаяСтрокаДляОбработки, ОбработатьРеквизитыРегл) Экспорт
	
	ЗаполнитьЗначенияСвойств(ТекущаяСтрока, ТекущаяСтрокаДляОбработки, , "Цена, СуммаНДС, СуммаСНДС");
	
	Если ОбработатьРеквизитыРегл Тогда
		ТекущаяСтрока.ЦенаРегл        = ТекущаяСтрокаДляОбработки.Цена;
		ТекущаяСтрока.СуммаБезНДСРегл = ТекущаяСтрокаДляОбработки.Сумма;
		ТекущаяСтрока.СуммаНДСРегл    = ТекущаяСтрокаДляОбработки.СуммаНДС;
	Иначе	
		ТекущаяСтрока.Цена            = ТекущаяСтрокаДляОбработки.Цена;
		ТекущаяСтрока.СуммаБезНДС     = ТекущаяСтрокаДляОбработки.Сумма;
		ТекущаяСтрока.СуммаНДС        = ТекущаяСтрокаДляОбработки.СуммаНДС;
		ТекущаяСтрока.СуммаСНДС       = ТекущаяСтрокаДляОбработки.СуммаСНДС;
	КонецЕсли;
	
КонецПроцедуры

Процедура РассчитатьВесДляЭкспортногоОбеспечения(ТекущаяСтрока, КэшированныеЗначения) Экспорт
	
	Если КэшированныеЗначения = Неопределено Тогда
		КэшированныеЗначения = ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруКэшируемыеЗначения();
	КонецЕсли;

	Если ТекущаяСтрока.РежимЭкспортногоОбеспечения = Неопределено Тогда
		#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
			ТекущаяСтрока.РежимЭкспортногоОбеспечения = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущаяСтрока.КодНоменклатурыПоКлассификатору, "РежимЭкспортногоОбеспечения");
		#Иначе
			НДСИсходящийСервер.РассчитатьВесДляЭкспортногоОбеспечения(ТекущаяСтрока, КэшированныеЗначения);
			Возврат;
		#КонецЕсли
	КонецЕсли;
	
	Если ТекущаяСтрока.РежимЭкспортногоОбеспечения <> Истина Тогда
		ТекущаяСтрока.Вес = 0;
		Возврат;
	КонецЕсли; 
	
	КоэфКГ = 1;
	Если НЕ КэшированныеЗначения.Свойство("КоэффициентКГ", КоэфКГ) Тогда
		#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
			
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
			               |	УпаковкиЕдиницыИзмерения.Ссылка
			               |ИЗ
			               |	Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиЕдиницыИзмерения
			               |ГДЕ
			               |	УпаковкиЕдиницыИзмерения.Код = ""0301""
			               |	И УпаковкиЕдиницыИзмерения.Наименование = ""кг""
			               |
			               |УПОРЯДОЧИТЬ ПО
			               |	УпаковкиЕдиницыИзмерения.ПометкаУдаления";
			
			Выборка = Запрос.Выполнить().Выбрать();
			Если Выборка.Следующий() Тогда
				КоэфКГ = ОбработкаТабличнойЧастиКлиентСервер.ПолучитьКоэффициентУпаковки(Выборка.Ссылка, КэшированныеЗначения).Коэффициент;
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(КоэфКГ) Тогда
				КоэфКГ = 1;
			КонецЕсли;
			КэшированныеЗначения.Вставить("КоэффициентКГ", КоэфКГ);
			
		#Иначе
			НДСИсходящийСервер.РассчитатьВесДляЭкспортногоОбеспечения(ТекущаяСтрока, КэшированныеЗначения);
			Возврат;
		#КонецЕсли
	КонецЕсли;
	
	ТекУпаковка = ТекущаяСтрока.Упаковка;
	Если НЕ ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура) Тогда
		ТекУпаковка = ТекущаяСтрока.ЕдиницаИзмерения;
	ИначеЕсли НЕ ЗначениеЗаполнено(ТекущаяСтрока.Упаковка) Тогда 
	#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда 
		ТекУпаковка = ТекущаяСтрока.Номенклатура.ЕдиницаИзмерения;
	ИначеЕсли ТекущаяСтрока.Упаковка.ТипИзмеряемойВеличины = Перечисления.ТипыИзмеряемыхВеличин.Упаковка Тогда
	#Иначе
		НДСИсходящийСервер.РассчитатьВесДляЭкспортногоОбеспечения(ТекущаяСтрока, КэшированныеЗначения);
		Возврат;
	#КонецЕсли
		
	КонецЕсли;
		
	ВесУпаковки = 0;
	
	Если ЗначениеЗаполнено(ТекУпаковка) Тогда
		
		КлючКэша = ОбработкаТабличнойЧастиКлиентСервер.КлючКэшаУпаковки(ТекущаяСтрока.Номенклатура, ТекУпаковка); 
		ВесУпаковки = КэшированныеЗначения.ВесУпаковок[КлючКэша];
		Если ВесУпаковки = Неопределено Тогда
			#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
				ЗначенияРеквизитов = ОбработкаТабличнойЧастиСервер.ДанныеОбУпаковке(ТекущаяСтрока.Номенклатура, ТекУпаковка, КэшированныеЗначения);
				ВесУпаковки    		   =  ЗначенияРеквизитов.Вес;
			#Иначе
				НДСИсходящийСервер.РассчитатьВесДляЭкспортногоОбеспечения(ТекущаяСтрока, КэшированныеЗначения);
				Возврат;
			#КонецЕсли
		КонецЕсли;
		
	КонецЕсли;
	
	ТекущаяСтрока.Вес = ТекущаяСтрока.КоличествоУпаковок * ВесУпаковки / КоэфКГ;
		
КонецПроцедуры

#КонецОбласти

#Область Прочее

Функция ПолучитьСписокАвтокорректируемыхВидовОперацийНН() Экспорт
	
	СписокЗначений = Новый СписокЗначений;
	
	СписокЗначений.Добавить(ПредопределенноеЗначение("Перечисление.ВидыОперацийНалоговыхДокументов.ОблагаемыеОперации"));
	СписокЗначений.Добавить(ПредопределенноеЗначение("Перечисление.ВидыОперацийНалоговыхДокументов.ОсвобожденныеОперации"));
	СписокЗначений.Добавить(ПредопределенноеЗначение("Перечисление.ВидыОперацийНалоговыхДокументов.НеНДСОперации"));
	СписокЗначений.Добавить(ПредопределенноеЗначение("Перечисление.ВидыОперацийНалоговыхДокументов.ИтоговаяРозницаОблагаемыеОперации"));
	СписокЗначений.Добавить(ПредопределенноеЗначение("Перечисление.ВидыОперацийНалоговыхДокументов.ИтоговаяРозницаОсвобожденныеОперации"));
	
	Возврат СписокЗначений;
	
КонецФункции
//

Функция ПолучитьБазовыйНалоговыйДокументДляП2(Приложение2, ВозвращатьЭтотДокументЕслиБазовогоНету = Ложь) Экспорт
	
	Если Приложение2.ВидОперацииВозвратКорректировка = ПредопределенноеЗначение("Перечисление.ВидыОперацийПриложений2КНалоговойНакладной.Корректировка")
		 И ЗначениеЗаполнено(Приложение2.НалоговаяНакладная) Тогда
		Возврат Приложение2.НалоговаяНакладная;
		
	ИначеЕсли Приложение2.ВидОперацииВозвратКорректировка = ПредопределенноеЗначение("Перечисление.ВидыОперацийПриложений2КНалоговойНакладной.КорректировкаВозврата")
		 И ЗначениеЗаполнено(Приложение2.ОсновноеП2ДляВозврата) Тогда
		Возврат Приложение2.ОсновноеП2ДляВозврата;
		
	ИначеЕсли ВозвращатьЭтотДокументЕслиБазовогоНету Тогда
		Возврат Приложение2.Ссылка;
		
	Иначе
		Возврат Неопределено;
		
	КонецЕсли;
	
КонецФункции

#КонецОбласти
