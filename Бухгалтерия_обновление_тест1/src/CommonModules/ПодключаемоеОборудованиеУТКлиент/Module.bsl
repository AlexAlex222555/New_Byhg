
#Область ПрограммныйИнтерфейс

// Подключает или отключает оборудования в зависимости от переданного статуса подключения
// 
// Параметры:
// 	СтатусПодключения - Булево - Статус подключения оборудования: Истина - подключить, Ложь - отключить
// 	Форма - ФормаКлиентскогоПриложения - Форма документа
// 	ИспользуемоеОборудование - Массив Из СправочникСсылка.ПодключаемоеОборудование - Доступное текущему пользователю
// 	 оборудование, в том числе эквайринговые терминалы.
// 	ТаблицаОборудования - ТаблицаЗначений - Список доступного оборудования печати чеков
// 	ОповещениеЗавершения - ОписаниеОповещения - Оповедение о завершении выполнения действия
Процедура УстановитьСтатусПодключенияОборудования(СтатусПодключения, Форма, ИспользуемоеОборудование, ТаблицаОборудования, ОповещениеЗавершения = Неопределено) Экспорт
	
	Для Каждого Оборудование Из ИспользуемоеОборудование Цикл
		Контекст = Новый Структура;
		Контекст.Вставить("Оборудование", Оборудование);
		Контекст.Вставить("ТаблицаОборудования", ТаблицаОборудования);
		Контекст.Вставить("УникальныйИдентификатор", Форма.УникальныйИдентификатор);
		Контекст.Вставить("ОповещениеЗавершения", ОповещениеЗавершения);
		
		Если СтатусПодключения Тогда
			ОписаниеОповещения = Новый ОписаниеОповещения("НачатьПодключениеОборудованиеПоИдентификаторуЗавершение", ЭтотОбъект, Контекст);
			МенеджерОборудованияКлиент.НачатьПодключениеОборудованиеПоИдентификатору(ОписаниеОповещения, Форма.УникальныйИдентификатор, Оборудование);
		Иначе
			ОписаниеОповещения = Новый ОписаниеОповещения("НачатьОтключениеОборудованиеПоИдентификаторуЗавершение", ЭтотОбъект, Контекст);
			МенеджерОборудованияКлиент.НачатьОтключениеОборудованиеПоИдентификатору(ОписаниеОповещения, Форма.УникальныйИдентификатор, Оборудование);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// Открыть форму предварительного просмотра чека ККМ.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - Форма.
//  ПараметрыОперации - Структура - Структура со свойствами:
//   * ДокументСсылка;
//   * Организация;
//   * ТорговыйОбъект;
//   * ПодключенноеОборудование;
//   * Сумма;
//   * ВыемкаДенежныхСредствИзКассыККМ
//   * ВнесениеДенежныхСредствВКассуККМ
//  РежимЗаписи - РежимЗаписиДокумента - Режим записи.
//  ОповещениеПриЗавершении - ОписаниеОповещения - Описание оповещения.
//
Процедура ПробитьЧек(Форма, ПараметрыОперации, РежимЗаписи, ОповещениеПриЗавершении = Неопределено) Экспорт
	
	ОчиститьСообщения();
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Форма",                   Форма);
	ДополнительныеПараметры.Вставить("ПараметрыОперации",       ПараметрыОперации);
	ДополнительныеПараметры.Вставить("ОповещениеПриЗавершении", ОповещениеПриЗавершении);
	ДополнительныеПараметры.Вставить("РежимЗаписиДокумента",    РежимЗаписи);
	ДополнительныеПараметры.Вставить("ИмяПроцедуры",            "ПробитиеЧекаПослеЗаписиДокумента");
	
	ОбработатьРежимЗаписи(Истина, ДополнительныеПараметры);
	
КонецПроцедуры

// Пробить чек выемки денежных средств.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - Форма.
//  ПараметрыОперации - Структура - Структура со свойствами:
//   * ДокументСсылка;
//   * Организация;
//   * ТорговыйОбъект;
//   * ПодключенноеОборудование;
//   * Сумма;
//   * ВыемкаДенежныхСредствИзКассыККМ
//   * ВнесениеДенежныхСредствВКассуККМ
//  РежимЗаписи - РежимЗаписиДокумента - Режим записи.
//  ОповещениеПриЗавершении - ОписаниеОповещения - Описание оповещения.
//
Процедура ПробитьЧекВыемкаДенежныхСредств(Форма, ПараметрыОперации, РежимЗаписи, ОповещениеПриЗавершении) Экспорт
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Форма",                   Форма);
	ДополнительныеПараметры.Вставить("ПараметрыОперации",       ПараметрыОперации);
	ДополнительныеПараметры.Вставить("ОповещениеПриЗавершении", ОповещениеПриЗавершении);
	ДополнительныеПараметры.Вставить("РежимЗаписиДокумента",    РежимЗаписи);
	ДополнительныеПараметры.Вставить("ИмяПроцедуры",            "ПробитиеЧекаВыемкаДенежныхСредствПослеЗаписиДокумента");
	
	РозничныеПродажиКлиент.ОбработатьСостояниеСмены(
		Форма,
		Новый ОписаниеОповещения("ОбработатьРежимЗаписи", ЭтотОбъект, ДополнительныеПараметры));
	
КонецПроцедуры

// Пробить чек внесения денежных средств.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - Форма.
//  ПараметрыОперации - Структура - Структура со свойствами:
//   * ДокументСсылка;
//   * Организация;
//   * ТорговыйОбъект;
//   * ПодключенноеОборудование;
//   * Сумма;
//   * ВыемкаДенежныхСредствИзКассыККМ
//   * ВнесениеДенежныхСредствВКассуККМ
//  РежимЗаписи - РежимЗаписиДокумента - Режим записи.
//  ОповещениеПриЗавершении - ОписаниеОповещения - Описание оповещения.
//
Процедура ПробитьЧекВнесениеДенежныхСредств(Форма, ПараметрыОперации, РежимЗаписи, ОповещениеПриЗавершении) Экспорт
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Форма",                   Форма);
	ДополнительныеПараметры.Вставить("ПараметрыОперации",       ПараметрыОперации);
	ДополнительныеПараметры.Вставить("ОповещениеПриЗавершении", ОповещениеПриЗавершении);
	ДополнительныеПараметры.Вставить("РежимЗаписиДокумента",    РежимЗаписи);
	ДополнительныеПараметры.Вставить("ИмяПроцедуры",            "ПробитиеЧекаВнесениеДенежныхСредствПослеЗаписиДокумента");
	
	РозничныеПродажиКлиент.ОбработатьСостояниеСмены(
		Форма,
		Новый ОписаниеОповещения("ОбработатьРежимЗаписи", ЭтотОбъект, ДополнительныеПараметры));
	
КонецПроцедуры

// Процедура формирует очередь чеков для последующей фискализации
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - Форма.
//  ПараметрыОперации - Структура - Структура со свойствами:
//   * ДокументСсылка;
//   * Организация;
//   * ТорговыйОбъект;
//   * ПодключенноеОборудование;
//   * Сумма;
//   * ВыемкаДенежныхСредствИзКассыККМ
//   * ВнесениеДенежныхСредствВКассуККМ
//  РежимЗаписи - РежимЗаписиДокумента - Режим записи.
//  ОповещениеПриЗавершении - ОписаниеОповещения - Описание оповещения.
//
Процедура СформироватьОчередьЧеков(Форма, ПараметрыОперации, РежимЗаписи, ОповещениеПриЗавершении = Неопределено) Экспорт
	
	ОчиститьСообщения();
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Форма",                   Форма);
	ДополнительныеПараметры.Вставить("ПараметрыОперации",       ПараметрыОперации);
	ДополнительныеПараметры.Вставить("ОповещениеПриЗавершении", ОповещениеПриЗавершении);
	ДополнительныеПараметры.Вставить("РежимЗаписиДокумента",    РежимЗаписи);
	ДополнительныеПараметры.Вставить("ИмяПроцедуры",            "СформироватьОчередьЧековПослеЗаписиДокумента");
	
	ОбработатьРежимЗаписи(Истина, ДополнительныеПараметры);
	
КонецПроцедуры

// Получить структуру реквизитов операции инкассации кассового узла.
// 
// Возвращаемое значение:
//  Структура - Структура со свойствами:
//   * Дата - Дата - Дата операции.
//   * ДокументОснование - ДокументСсылка - Ссылка на документ-основание.
//   * Организация - ОпределяемыйТип.ОрганизацияБПО - Организация.
//   * ТорговыйОбъект - ОпределяемыйТип.ТорговыйОбъектБПО - Торговый объект.
//   * Устройство - СправочникСсылка.ПодключаемоеОборудование - Устройство.
//   * ТипОперации - ПеречислениеСсылка.ТипыОперацииКассовогоУзла - Тип операции.
//   * Сумма - Число - Сумма.
//   * ДополнительныеПараметры - Структура - Дополнительные параметры.
//
Функция СтруктураРеквизитыОперацииИнкассацииКассовогоУзла() Экспорт
	
	ДополнительныеПараметры = Новый Структура;
	
	Реквизиты = Новый Структура;
	
	Реквизиты.Вставить("Дата");
	Реквизиты.Вставить("ДокументОснование");
	Реквизиты.Вставить("Организация");
	Реквизиты.Вставить("ТорговыйОбъект");
	Реквизиты.Вставить("Устройство");
	
	Реквизиты.Вставить("ТипОперации");
	Реквизиты.Вставить("Сумма");
	
	Реквизиты.Вставить("ДополнительныеПараметры", ДополнительныеПараметры);
	
	Возврат Реквизиты;
	
КонецФункции

// Записать объект.
//
// Параметры:
//  Форма - РасширениеУправляемойФормыДляСправочника - Форма.
//  РежимЗаписиДокумента - РежимЗаписиДокумента - Режим записи.
//  ОповещениеПриЗавершении - ОписаниеОповещения - Описание оповещения.
//
Процедура ЗаписатьОбъект(Форма, РежимЗаписиДокумента, ОписаниеОповещения) Экспорт
	
	ОтветЧерезОписаниеОповещения = ОбщегоНазначенияУТКлиентСервер.ЕстьРеквизитОбъекта(Форма, "НеВыполнятьПроверкуПередЗаписью");
	
	Проведен = Ложь;
	Попытка
		
		Если ОтветЧерезОписаниеОповещения Тогда
			
			Форма.Записать(
				Новый Структура(
					"РежимЗаписи, ДействиеПослеЗаписи",
					РежимЗаписиДокумента,
					ОписаниеОповещения));
			
		Иначе
			
			Проведен = Форма.Записать(
				Новый Структура(
					"РежимЗаписи",
					РежимЗаписиДокумента));
			
		КонецЕсли;
		
	Исключение
		
		Проведен = Ложь;
		
	КонецПопытки;
	
	Если Не ОтветЧерезОписаниеОповещения Тогда
		ВыполнитьОбработкуОповещения(ОписаниеОповещения, Проведен);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПослеОтветаНаВопросОЗаписиДокумента(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		
		Если ДополнительныеПараметры.ОповещениеПриЗавершении <> Неопределено Тогда
			ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОповещениеПриЗавершении, Ложь);
		КонецЕсли;
		
	Иначе
		
		ЗаписатьОбъект(
			ДополнительныеПараметры.Форма,
			ДополнительныеПараметры.РежимЗаписиДокумента,
			Новый ОписаниеОповещения(ДополнительныеПараметры.ИмяПроцедуры, ЭтотОбъект, ДополнительныеПараметры));
		
	КонецЕсли;
	
КонецПроцедуры

// Параметры:
// 	ДополнительныеПараметры - Структура:
// 		* Форма - ФормаКлиентскогоПриложения:
// 			** Объект - ДанныеФормыСтруктура:
// 				*** Ссылка - ДокументСсылка
//
Процедура ПробитиеЧекаПослеЗаписиДокумента(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено
		Или Не Результат Тогда
		
		Если ДополнительныеПараметры.РежимЗаписиДокумента = РежимЗаписиДокумента.Запись Тогда
			ПоказатьПредупреждение(
				Неопределено,
				НСтр("ru='Не удалось записать документ';uk='Не вдалося записати документ'"));
		Иначе
			ПоказатьПредупреждение(
				Неопределено,
				НСтр("ru='Не удалось провести документ';uk='Не вдалося провести документ'"));
		КонецЕсли;
		
		Если ДополнительныеПараметры.ОповещениеПриЗавершении <> Неопределено Тогда
			ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОповещениеПриЗавершении, Ложь);
		КонецЕсли;
		
	Иначе
		
		Если ДополнительныеПараметры.ПараметрыОперации.ДокументСсылка <> Неопределено
			И Не ЗначениеЗаполнено(ДополнительныеПараметры.ПараметрыОперации.ДокументСсылка) Тогда
			ДополнительныеПараметры.ПараметрыОперации.ДокументСсылка = ДополнительныеПараметры.Форма.Объект.Ссылка;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Параметры:
// 	ДополнительныеПараметры - Структура:
// 		* Форма - ФормаКлиентскогоПриложения:
// 			** Объект - ДанныеФормыСтруктура:
// 				*** Ссылка - ДокументСсылка
//
Процедура ПробитиеЧекаВыемкаДенежныхСредствПослеЗаписиДокумента(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено
		Или Не Результат Тогда
		
		Если ДополнительныеПараметры.РежимЗаписиДокумента = РежимЗаписиДокумента.Запись Тогда
			ПоказатьПредупреждение(
				Неопределено,
				НСтр("ru='Не удалось записать документ';uk='Не вдалося записати документ'"));
		Иначе
			ПоказатьПредупреждение(
				Неопределено,
				НСтр("ru='Не удалось провести документ';uk='Не вдалося провести документ'"));
		КонецЕсли;
		
		Если ДополнительныеПараметры.ОповещениеПриЗавершении <> Неопределено Тогда
			ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОповещениеПриЗавершении, Ложь);
		КонецЕсли;
		
	Иначе
		
		Если ДополнительныеПараметры.ПараметрыОперации.ДокументСсылка <> Неопределено
			И Не ЗначениеЗаполнено(ДополнительныеПараметры.ПараметрыОперации.ДокументСсылка) Тогда
			ДополнительныеПараметры.ПараметрыОперации.ДокументСсылка = ДополнительныеПараметры.Форма.Объект.Ссылка;
		КонецЕсли;
		
		ПараметрыОперации = Новый Структура;
		ПараметрыОперации.Вставить("ТипИнкассации", 0);
		ПараметрыОперации.Вставить("Сумма",         ДополнительныеПараметры.ПараметрыОперации.Сумма);
		ПараметрыОперации.Вставить("ДокументОснование", ДополнительныеПараметры.ПараметрыОперации.ДокументСсылка);
		
		МенеджерОборудованияКлиент.НачатьИнкассациюНаФискальномУстройстве(
			,
			ДополнительныеПараметры.Форма.УникальныйИдентификатор,
			ПараметрыОперации,
			ДополнительныеПараметры.ПараметрыОперации.ПодключенноеОборудование);
		
	КонецЕсли;
	
КонецПроцедуры

// Параметры:
// 	ДополнительныеПараметры - Структура:
// 		* Форма - ФормаКлиентскогоПриложения:
// 			** Объект - ДанныеФормыСтруктура:
// 				*** Ссылка - ДокументСсылка
//
Процедура ПробитиеЧекаВнесениеДенежныхСредствПослеЗаписиДокумента(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено
		Или Не Результат Тогда
		
		Если ДополнительныеПараметры.РежимЗаписиДокумента = РежимЗаписиДокумента.Запись Тогда
			ПоказатьПредупреждение(
				Неопределено,
				НСтр("ru='Не удалось записать документ';uk='Не вдалося записати документ'"));
		Иначе
			ПоказатьПредупреждение(
				Неопределено,
				НСтр("ru='Не удалось провести документ';uk='Не вдалося провести документ'"));
		КонецЕсли;
		
		Если ДополнительныеПараметры.ОповещениеПриЗавершении <> Неопределено Тогда
			ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОповещениеПриЗавершении, Ложь);
		КонецЕсли;
		
	Иначе
		
		Если ДополнительныеПараметры.ПараметрыОперации.ДокументСсылка <> Неопределено
			И Не ЗначениеЗаполнено(ДополнительныеПараметры.ПараметрыОперации.ДокументСсылка) Тогда
			ДополнительныеПараметры.ПараметрыОперации.ДокументСсылка = ДополнительныеПараметры.Форма.Объект.Ссылка;
		КонецЕсли;
		
		ПараметрыОперации = Новый Структура;
		ПараметрыОперации.Вставить("ТипИнкассации", 1);
		ПараметрыОперации.Вставить("Сумма",         ДополнительныеПараметры.ПараметрыОперации.Сумма);
		ПараметрыОперации.Вставить("ДокументОснование", ДополнительныеПараметры.ПараметрыОперации.ДокументСсылка);
		
		МенеджерОборудованияКлиент.НачатьИнкассациюНаФискальномУстройстве(
			,
			ДополнительныеПараметры.Форма.УникальныйИдентификатор,
			ПараметрыОперации,
			ДополнительныеПараметры.ПараметрыОперации.ПодключенноеОборудование);
		
	КонецЕсли;
	
КонецПроцедуры


Процедура ОбработатьРежимЗаписи(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено
		Или Не Результат Тогда
		ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОповещениеПриЗавершении, Ложь);
	КонецЕсли;
	
	Если ДополнительныеПараметры.РежимЗаписиДокумента = РежимЗаписиДокумента.Запись
		И (Не ЗначениеЗаполнено(ДополнительныеПараметры.Форма.Объект.Ссылка) Или ДополнительныеПараметры.Форма.Модифицированность) Тогда
		
		ПоказатьВопрос(
			Новый ОписаниеОповещения("ПослеОтветаНаВопросОЗаписиДокумента", ЭтотОбъект, ДополнительныеПараметры),
			НСтр("ru='Операция возможна только после записи документа, записать документ?';uk='Операція можлива тільки після запису документа, записати документ?'"),
			РежимДиалогаВопрос.ДаНет);
		
	ИначеЕсли ДополнительныеПараметры.РежимЗаписиДокумента = РежимЗаписиДокумента.Проведение
		И (Не ДополнительныеПараметры.Форма.Объект.Проведен Или ДополнительныеПараметры.Форма.Модифицированность) Тогда
		
		ПоказатьВопрос(
			Новый ОписаниеОповещения("ПослеОтветаНаВопросОЗаписиДокумента", ЭтотОбъект, ДополнительныеПараметры),
			НСтр("ru='Операция возможна только после проведения документа, провести документ?';uk='Операція можлива тільки після проведення документа, провести документ?'"),
			РежимДиалогаВопрос.ДаНет);
		
	Иначе
		ОписаниеОповещения = Новый ОписаниеОповещения(ДополнительныеПараметры.ИмяПроцедуры, ЭтотОбъект, ДополнительныеПараметры);
		ВыполнитьОбработкуОповещения(ОписаниеОповещения, Истина);
	КонецЕсли;
	
КонецПроцедуры


#Область РаботаСПодключаемымОборудованием

Процедура НачатьПодключениеОборудованиеПоИдентификаторуЗавершение(Данные, ДополнительныеПараметры) Экспорт
	
	Оборудование            = ДополнительныеПараметры.Оборудование;
	ТаблицаОборудования     = ДополнительныеПараметры.ТаблицаОборудования;
	УникальныйИдентификатор = ДополнительныеПараметры.УникальныйИдентификатор;
	
	Если Данные.Результат Тогда
		
		НайденныеСтроки = ТаблицаОборудования.НайтиСтроки(Новый Структура("Оборудование", Оборудование));
		
		Для Каждого СтрокаТЧ Из НайденныеСтроки Цикл
			
			Если Не СтрокаТЧ.Подключено Тогда
				
				СтрокаТЧ.Подключено = Истина;
				
				Контекст = Новый Структура;
				Контекст.Вставить("Оборудование",         СтрокаТЧ.Оборудование);
				Контекст.Вставить("ВерсияФФД",            СтрокаТЧ.ВерсияФФД);
				Контекст.Вставить("ОповещениеЗавершения", ДополнительныеПараметры.ОповещениеЗавершения);
				
				МенеджерОборудованияКлиент.НачатьПолучениеПараметровФискальногоУстройства(
					Новый ОписаниеОповещения("ПослеПолученияПараметровУстройства", ЭтотОбъект, Контекст),
					УникальныйИдентификатор, Оборудование, Ложь);
				
			КонецЕсли;
			
		КонецЦикла;
		
	Иначе
		
		ТекстСообщения = НСтр("ru='При подключении устройства %1 произошла ошибка:
|""%2"".'
|;uk='При підключенні пристрою %1 сталася помилка:
|""%2"".'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(СтрШаблон(ТекстСообщения, Оборудование, Данные.ОписаниеОшибки));
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПослеПолученияПараметровУстройства(РезультатВыполнения, ДополнительныеПараметры) Экспорт
	
	Если РезультатВыполнения.Результат Тогда
		
		ПодключаемоеОборудование = Новый Структура;
		ПодключаемоеОборудование.Вставить("Оборудование", ДополнительныеПараметры.Оборудование);
		ПодключаемоеОборудование.Вставить("ВерсияФФД",    ДополнительныеПараметры.ВерсияФФД);
		
		Если Не ЗначениеЗаполнено(ДополнительныеПараметры.ВерсияФФД)
			И ЗначениеЗаполнено(РезультатВыполнения.ВыходныеПараметры.ВерсияФФДККТ) Тогда
			
			ПодключаемоеОборудование.ВерсияФФД = РезультатВыполнения.ВыходныеПараметры.ВерсияФФДККТ;
			
		ИначеЕсли Не ЗначениеЗаполнено(ДополнительныеПараметры.ВерсияФФД) Тогда
			
			ПодключаемоеОборудование.ВерсияФФД = ФормированиеФискальныхЧековВызовСервера.МаксимальнаяВерсияФФД();
			
		КонецЕсли;
		
		ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОповещениеЗавершения, ПодключаемоеОборудование);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура НачатьОтключениеОборудованиеПоИдентификаторуЗавершение(Данные, Оборудование) Экспорт
	
	Если Не Данные.Результат Тогда
		
		ТекстСообщения = НСтр("ru='При отключении устройства %1 произошла ошибка:
|""%2"".'
|;uk='При відключенні пристрою %1 сталася помилка:
|""%2"".'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(СтрШаблон(ТекстСообщения, Оборудование, Данные.ОписаниеОшибки));
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область РаботаСоСканеромШтрихкода

Функция ПреобразоватьДанныеСоСканераВМассив(Параметр) Экспорт
	
	МенеджерОборудованияУТКлиент.ОбработатьСобытие();
	
	Данные = Новый Массив;
	Данные.Добавить(ПреобразоватьДанныеСоСканераВСтруктуру(Параметр));
	
	Возврат Данные;
	
КонецФункции

Функция ПреобразоватьДанныеСоСканераВСтруктуру(Параметр) Экспорт
	
	МенеджерОборудованияУТКлиент.ОбработатьСобытие();
	
	Если Параметр[1] = Неопределено Тогда
		Данные = Новый Структура("Штрихкод, Количество", Параметр[0], 1); 	 // Достаем штрихкод из основных данных
	Иначе
		Данные = Новый Структура("Штрихкод, Количество", Параметр[1][1], 1); // Достаем штрихкод из дополнительных данных
	КонецЕсли;
	
	Возврат Данные;
	
КонецФункции

#КонецОбласти

#КонецОбласти
