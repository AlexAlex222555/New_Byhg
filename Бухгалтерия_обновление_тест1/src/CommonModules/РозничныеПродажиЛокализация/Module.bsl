
#Область ПрограммныйИнтерфейс

Процедура ПроверитьКорректностьЗаполненияАкцизныхМарок(Объект, Отказ) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Т.ШтрихкодАкцизнойМарки,
	|	Т.ИдентификаторСтроки
	|ПОМЕСТИТЬ АкцизныеМарки
	|ИЗ
	|	&АкцизныеМарки КАК Т
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АкцизныеМарки.ШтрихкодАкцизнойМарки,
	|	КОЛИЧЕСТВО(АкцизныеМарки.ИдентификаторСтроки) КАК Количество
	|ПОМЕСТИТЬ ДублиАкцизныхМарок
	|ИЗ
	|	АкцизныеМарки КАК АкцизныеМарки
	|
	|СГРУППИРОВАТЬ ПО
	|	АкцизныеМарки.ШтрихкодАкцизнойМарки
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(АкцизныеМарки.ИдентификаторСтроки) > 1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДублиАкцизныхМарок.ШтрихкодАкцизнойМарки КАК ШтрихкодАкцизнойМарки,
	|	ДублиАкцизныхМарок.Количество       	 КАК Количество,
	|	АкцизныеМарки.ИдентификаторСтроки        КАК ИдентификаторСтроки
	|ИЗ
	|	ДублиАкцизныхМарок КАК ДублиАкцизныхМарок
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ АкцизныеМарки КАК АкцизныеМарки
	|		ПО (АкцизныеМарки.ШтрихкодАкцизнойМарки = ДублиАкцизныхМарок.ШтрихкодАкцизнойМарки)
	|ИТОГИ ПО
	|	ШтрихкодАкцизнойМарки");
	Запрос.УстановитьПараметр("АкцизныеМарки", Объект.АкцизныеМарки.Выгрузить());
	ВыборкаШтрихкодАкцизнойМарки = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаШтрихкодАкцизнойМарки.Следующий() Цикл
		
		НомерСтроки = Неопределено;
		НомераСтрок = Новый Массив;
		ВыборкаИдентификаторыСтрок = ВыборкаШтрихкодАкцизнойМарки.Выбрать();
		Пока ВыборкаИдентификаторыСтрок.Следующий() Цикл
			
			ОтборСтрок = Новый Структура("ИдентификаторСтроки", ВыборкаИдентификаторыСтрок.ИдентификаторСтроки);
			НайденныеСтроки = Объект.Товары.НайтиСтроки(ОтборСтрок);
			Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
				НомерСтроки = НайденнаяСтрока.НомерСтроки;
				НомераСтрок.Добавить(НомерСтроки);
			КонецЦикла;
			
		КонецЦикла;
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтрШаблон(
				НСтр("ru='Акцизная марка %1 дублируется в строках %2 табличной части ""Товары"".';uk='Акцизна марка %1 дублюється у рядках %2 табличної частини ""Товари"".'"),
				ВыборкаШтрихкодАкцизнойМарки.ШтрихкодАкцизнойМарки,
				СтрСоединить(НомераСтрок, ", ")),
			Объект,
			ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", НомерСтроки, "Номенклатура"),
			,
			Отказ);
		
	КонецЦикла;
	
	ТаблицаТоваров = Объект.Товары.Выгрузить();
	ТЧАкцизныеМарки = Объект.АкцизныеМарки.Выгрузить();
	ТЧАкцизныеМарки.Индексы.Добавить("ИдентификаторСтроки");
	
	Для Каждого СтрокаТЧ Из ТаблицаТоваров Цикл
		
		МассивШтрихкодыАкцизныхМарок = Новый Массив;
		НайденныеСтроки = ТЧАкцизныеМарки.НайтиСтроки(Новый Структура("ИдентификаторСтроки", СтрокаТЧ.ИдентификаторСтроки));
		Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл       
			МассивШтрихкодыАкцизныхМарок.Добавить(НайденнаяСтрока.ШтрихкодАкцизнойМарки);
		КонецЦикла;
		
		Если СтрокаТЧ.Номенклатура.УказыватьШтрихкодАкцизнойМаркиПриПечатиЧека 
			И НЕ АкцизныеМаркиКлиентСерверПереопределяемый.КоличествоАкцизныхМарокСоответствуетКоличествуТовара(
				МассивШтрихкодыАкцизныхМарок.Количество(), СтрокаТЧ.Количество) Тогда
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					СтрШаблон(
						НСтр("ru='Не корректно заполнены акцизные марки для %1 в строке %2 списка ""Товары"".';uk='Не коректно заповнені акційні марки для %1 у рядку %2 списку ""Товари"".'"),
						СтрокаТЧ.Номенклатура,
						СтрокаТЧ.НомерСтроки),
					Объект,
					ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", СтрокаТЧ.НомерСтроки, "ИндексАкцизнойМарки"),
					,
					Отказ);

		КонецЕсли;
				
	КонецЦикла;
		
КонецПроцедуры

#Область ФункцииПроверкиСостоянияКассовойСмены

// Получает описание кассовой смены ко кассе ККМ
// 
// Параметры:
// 	ОписаниеКассовойСмены - Структура - Структура данных для кассовой смены
// 	КассаККМ - СправочникСсылка.КассыККМ - Касса ККМ для получения описания 
Процедура ЗаполнитьОписаниеКассовойСменыПоКассеККМ(ОписаниеКассовойСмены, КассаККМ) Экспорт
	//++ Локализация
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ЕСТЬNULL(ДенежныеСредстваВКассахККМОстатки.СуммаОстаток, 0) КАК НаличностьВКассе,
	|	КассыККМ.ВалютаДенежныхСредств                              КАК Валюта,
	|	КассыККМ.ВалютаДенежныхСредств.Представление                КАК ВалютаПредставление,
	|	КассыККМ.Склад                                  КАК Склад,
	|	КассыККМ.Склад.РозничныйВидЦены                 КАК ВидЦены,
	|	КассыККМ.Склад.РозничныйВидЦены.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	КассыККМ.Владелец                               КАК Организация
	|ИЗ
	|	Справочник.КассыККМ КАК КассыККМ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ДенежныеСредстваВКассахККМ.Остатки(, КассаККМ = &КассаККМ) КАК ДенежныеСредстваВКассахККМОстатки
	|		ПО (ДенежныеСредстваВКассахККМОстатки.КассаККМ = КассыККМ.Ссылка)
	|ГДЕ
	|	КассыККМ.Ссылка = &КассаККМ");
		
	Запрос.УстановитьПараметр("КассаККМ", КассаККМ);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	
	ОписаниеКассовойСмены.КассаККМ            = КассаККМ;
	ОписаниеКассовойСмены.Склад               = Выборка.Склад;
	ОписаниеКассовойСмены.ВидЦены             = Выборка.ВидЦены;
	ОписаниеКассовойСмены.ЦенаВключаетНДС     = Выборка.ЦенаВключаетНДС;
	ОписаниеКассовойСмены.Организация         = Выборка.Организация;
	ОписаниеКассовойСмены.НаличностьВКассе    = Выборка.НаличностьВКассе;
	ОписаниеКассовойСмены.Валюта              = Выборка.Валюта;
	ОписаниеКассовойСмены.ВалютаПредставление = Выборка.ВалютаПредставление;
	
	ОписаниеКассовойСмены.НалогообложениеНДС = УчетНДСУП.ПараметрыУчетаПоОрганизации(
		Выборка.Организация,
		ТекущаяДатаСеанса(),
		Выборка.Склад).ОсновноеНалогообложениеНДСПродажи;
		
	ОписаниеКассовойСмены.СведенияООрганизации = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Выборка.Организация, ТекущаяДатаСеанса());
	ОписаниеКассовойСмены.АдресСклада          = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(Выборка.Склад, Справочники.ВидыКонтактнойИнформации.АдресСклада);
	
	//-- Локализация
КонецПроцедуры

#КонецОбласти

#КонецОбласти