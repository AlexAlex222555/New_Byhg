
#Область ПрограммныйИнтерфейс

#Область Проведение

// Формирует параметры для проведения документа по регистрам учетного механизма через общий механизм проведения.
//
// Параметры:
//  Документ - ДокументОбъект - записываемый документ
//  Свойства - ФиксированнаяСтруктура - свойства документа (См. ПроведениеДокументов.СвойстваДокумента).
//
// Возвращаемое значение:
//  Структура - параметры учетного механизма (См. ПроведениеДокументов.ПараметрыУчетногоМеханизма()).
//
Функция ПараметрыДляПроведенияДокумента(Документ, Свойства) Экспорт
	
	Параметры = ПроведениеДокументов.ПараметрыУчетногоМеханизма();
	
	// Проведение
	Если Свойства.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		
		Параметры.ПодчиненныеРегистры.Добавить(Метаданные.РегистрыНакопления.ПринятаяВозвратнаяТара);
		Параметры.ПодчиненныеРегистры.Добавить(Метаданные.РегистрыНакопления.ТоварыКОформлениюОтчетовКомитенту);
		
	КонецЕсли;
	
	// Контроль
	Если Свойства.РежимЗаписи <> РежимЗаписиДокумента.Запись Тогда
		
		ТипДокумента = ТипЗнч(Документ);
		
		Если Свойства.РежимЗаписи = РежимЗаписиДокумента.Проведение
				И (ТипДокумента = Тип("ДокументОбъект.ВозвратТоваровПоставщику")
					Или ТипДокумента = Тип("ДокументОбъект.ВыкупВозвратнойТарыУПоставщика")
					Или ТипДокумента = Тип("ДокументОбъект.КорректировкаПриобретения"))
			Или Не Свойства.ЭтоНовый
				И (ТипДокумента = Тип("ДокументОбъект.ПриобретениеТоваровУслуг")
				) Тогда
			Параметры.КонтрольныеРегистрыИзменений.Добавить(Метаданные.РегистрыНакопления.ПринятаяВозвратнаяТара);
		КонецЕсли;
		
		Параметры.КонтрольныеРегистрыЗаданий.Добавить(Метаданные.РегистрыНакопления.ТоварыКОформлениюОтчетовКомитенту);
		
	КонецЕсли;
	
	Возврат Параметры;
	
КонецФункции

// Процедура формирования движений по подчиненным регистрам приема на ответхранение.
//
// Параметры:
//	ТаблицыДляДвижений - Структура - таблицы данных документа
//	Движения - КоллекцияДвижений - коллекция наборов записей движений документа
//	Отказ - Булево - признак отказа от проведения документа.
//
Процедура ОтразитьДвижения(ТаблицыДляДвижений, Движения, Отказ) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ПроведениеДокументов.ОтразитьДвижения(ТаблицыДляДвижений, Движения, "ПринятаяВозвратнаяТара");
	ПроведениеДокументов.ОтразитьДвижения(ТаблицыДляДвижений, Движения, "ТоварыКОформлениюОтчетовКомитенту");
	
КонецПроцедуры

// Формирует тексты запросов для контроля изменений записанных движений регистров.
//
// Параметры:
//  Запрос - Запрос - запрос, хранящий параметры используемые в списке запросов
//  ТекстыЗапроса - СписокЗначений - список текстов запросов и их имен.
//  Документ - ДокументОбъект - записываемый документ.
//
Процедура ИнициализироватьДанныеКонтроляИзменений(Запрос, ТекстыЗапроса, Документ) Экспорт
	
	#Область ПринятаяВозвратнаяТара
	
	Если ПроведениеДокументов.ЕстьЗаписиВТаблице(Документ, "ДвиженияПринятаяВозвратнаяТараИзменение") Тогда
		
		ТекстЗапроса =
			"ВЫБРАТЬ
			|	ТаблицаОстатков.Партнер                        КАК Партнер,
			|	ТаблицаОстатков.Номенклатура                   КАК Номенклатура,
			|	ТаблицаОстатков.Номенклатура.ЕдиницаИзмерения  КАК ЕдиницаИзмерения,
			|	ТаблицаОстатков.Характеристика                 КАК Характеристика,
			|	ТаблицаОстатков.ДокументПоступления            КАК ДокументПоступления,
			|	ТаблицаОстатков.ПредусмотренЗалог              КАК ПредусмотренЗалог,
			|	ТаблицаОстатков.КоличествоОстаток              КАК Количество,
			|	ТаблицаОстатков.СуммаОстаток                   КАК Сумма
			|ИЗ
			|	РегистрНакопления.ПринятаяВозвратнаяТара.Остатки(,
			|			(Партнер, Номенклатура, Характеристика, ДокументПоступления, ПредусмотренЗалог) В
			|				(ВЫБРАТЬ
			|					Таблица.Партнер,
			|					Таблица.Номенклатура,
			|					Таблица.Характеристика,
			|					Таблица.ДокументПоступления,
			|					Таблица.ПредусмотренЗалог
			|				ИЗ
			|					ДвиженияПринятаяВозвратнаяТараИзменение КАК Таблица)
			|	) КАК ТаблицаОстатков
			|
			|ГДЕ
			|	ТаблицаОстатков.КоличествоОстаток < 0";
		
		ТекстыЗапроса.Добавить(ТекстЗапроса, "ОшибкиПринятаяВозвратнаяТара");
		
	КонецЕсли;
	
	#КонецОбласти
	
КонецПроцедуры

// Выводит сообщения пользователю при наличии ошибок контроля изменений записанных движений регистров.
//
// Параметры:
//  РезультатыКонтроля - Структура - таблицы с результатами контроля изменений
//  Документ - ДокументОбъект - записываемый документ
//  Отказ - Булево - признак отказа от проведения документа.
//
Процедура СообщитьОРезультатахКонтроляИзменений(РезультатыКонтроля, Документ, Отказ) Экспорт
	
	#Область ПринятаяВозвратнаяТара
	
	Если ПроведениеДокументов.ЕстьЗаписиВТаблице(Документ, "ДвиженияПринятаяВозвратнаяТараИзменение") Тогда
		
		ШаблонСообщенияСДокументомСЗалогом = НСтр("ru='Номенклатура %1. Возвращается (выкупается) больше, чем принято по документу %2 под залог на %3 %4';uk='Номенклатура %1. Повертається (викуповується) більше, ніж прийнято по документу %2 під заставу на %3 %4'");
		ШаблонСообщенияСДокументомБезЗалога = НСтр("ru='Номенклатура %1. Возвращается (выкупается) больше, чем принято по документу %2 на %3 %4';uk='Номенклатура %1. Повертається (викуповується) більше, ніж прийнято по документу %2 на %3 %4'");
		
		ШаблонСообщенияБезДокументаСЗалогом = НСтр("ru='Номенклатура %1. Возвращается (выкупается) больше, чем принято под залог на %3 %4';uk='Номенклатура %1. Повертається (викуповується) більше, ніж прийнято під заставу на %3 %4'");
		ШаблонСообщенияБезДокументаБезЗалога = НСтр("ru='Номенклатура %1. Возвращается (выкупается) больше, чем принято на %3 %4';uk='Номенклатура %1. Повертається (викуповується) більше, ніж прийнято на %3 %4'");
		
		Для каждого СтрокаОшибки Из РезультатыКонтроля.ОшибкиПринятаяВозвратнаяТара Цикл
			
			ПредставлениеНоменклатуры = НоменклатураКлиентСервер.ПредставлениеНоменклатуры(СтрокаОшибки.Номенклатура,
				СтрокаОшибки.Характеристика);
			
			Если ЗначениеЗаполнено(СтрокаОшибки.ДокументПоступления) Тогда
				Если СтрокаОшибки.ПредусмотренЗалог Тогда
					ШаблонСообщения = ШаблонСообщенияСДокументомСЗалогом;
				Иначе
					ШаблонСообщения = ШаблонСообщенияСДокументомБезЗалога;
				КонецЕсли;
			Иначе
				Если СтрокаОшибки.ПредусмотренЗалог Тогда
					ШаблонСообщения = ШаблонСообщенияБезДокументаСЗалогом;
				Иначе
					ШаблонСообщения = ШаблонСообщенияБезДокументаБезЗалога;
				КонецЕсли;
			КонецЕсли;
			
			ТекстСообщения = СтрШаблон(ШаблонСообщения, ПредставлениеНоменклатуры,
				СтрокаОшибки.ДокументПоступления, -СтрокаОшибки.Количество ,СтрокаОшибки.ЕдиницаИзмерения);
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Документ,,, Отказ);
			
		КонецЦикла;
		
	КонецЕсли;
	
	#КонецОбласти
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти