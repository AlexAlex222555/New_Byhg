#Область СлужебныеПроцедурыИФункции

#Область ПолучениеНастроекИПараметровУчетаНДС

// Применяемые типы налогообложения НДС
// 
// Параметры:
// 	Продажи - Булево -
// 	Закупки - Булево -
// Возвращаемое значение:
// 	СписокЗначений из ПеречислениеСсылка.ТипыНалогообложенияНДС -
//
Функция ПрименяемыеТипыНалогообложенияНДС(Продажи = Истина, Закупки = Истина) Экспорт
	
	НастройкиУчета = УчетНДСУП.НастройкиУчета();
	
	ТипыНалогообложения = Новый СписокЗначений();
	Если НастройкиУчета.ИспользоватьУчетНДС Тогда
		Если Продажи И Закупки Тогда
            Представление = НСтр("ru='Облагается НДС (20%, 14%, 7%)';uk='Оподатковується ПДВ (20%, 14%, 7%)'");
		ИначеЕсли Продажи Тогда
            Представление = НСтр("ru='Продажа облагается НДС (20%, 14%, 7%)';uk='Продаж оподатковується ПДВ (20%, 14%, 7%)'");
		Иначе
            Представление = НСтр("ru='Закупка облагается НДС (20%, 14%, 7%)';uk='Купівля оподатковується ПДВ (20%, 14%, 7%)'");
		КонецЕсли;
		ТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС, Представление);
	КонецЕсли;
	
	Если Продажи И Закупки Тогда
        Представление = НСтр("ru='Не облагается НДС (Не НДС)';uk='Не оподатковується ПДВ (Не ПДВ)'");
	ИначеЕсли Продажи Тогда
        Представление = НСтр("ru='Продажа не облагается НДС (Не НДС)';uk='Продаж не оподатковується ПДВ (Не ПДВ)'");
	Иначе
        Представление = НСтр("ru='Закупка не облагается НДС (Не НДС)';uk='Купівля не оподатковується ПДВ (Не ПДВ)'");
	КонецЕсли;
	ТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС, Представление);
    
	Если Продажи И Закупки Тогда
		Представление = НСтр("ru='Освобождена от НДС (Без НДС)';uk='Звільнена від ПДВ (Без ПДВ)'");
	ИначеЕсли Продажи Тогда
        Представление = НСтр("ru='Продажа освобождена от НДС (Без НДС)';uk='Продаж звільнений від ПДВ (Без ПДВ)'");
	Иначе
		Представление = НСтр("ru='Закупка освобождена от НДС (Без НДС)';uk='Купівля звільнена від ПДВ (Без ПДВ)'");
	КонецЕсли;
	ТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОсвобожденаОтНДС, Представление);
	
	Если Продажи И НастройкиУчета.ПродажиНаЭкспорт Тогда
        ТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт, НСтр("ru='Продажа на экспорт (0%)';uk='Продаж на експорт (0%)'"));
	КонецЕсли;
	
	УчетНДСЛокализация.ДополнитьПрименяемыеТипыНалогообложенияНДС(ТипыНалогообложения, НастройкиУчета, Продажи, Закупки);
	
	Возврат ТипыНалогообложения;
	
КонецФункции

// Применяемые виды деятельности НДС
// 
// Возвращаемое значение:
// 	СписокЗначений из ПеречислениеСсылка.ТипыНалогообложенияНДС -
Функция ПрименяемыеВидыДеятельностиНДС() Экспорт
	
	НастройкиУчета = УчетНДСУП.НастройкиУчета();
	
	ВидыДеятельностиНДС = Новый СписокЗначений();
	
	ВидыДеятельностиНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.ПустаяСсылка(), НСтр("ru='Без изменений';uk='Без змін'"));
	Если НастройкиУчета.ИспользоватьУчетНДС Тогда
		ВидыДеятельностиНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС, НСтр("ru='Облагаемую НДС';uk='Оподатковувану ПДВ'"));
	КонецЕсли;
	ВидыДеятельностиНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС, НСтр("ru='Не облагаемую НДС';uk='Не оподатковувану ПДВ'"));
	УчетНДСЛокализация.ДополнитьПрименяемыеВидыДеятельностиНДС(ВидыДеятельностиНДС, НастройкиУчета);
	
	Возврат ВидыДеятельностиНДС;
	
КонецФункции

// Применяемые налоговые назначения
// 
// Возвращаемое значение:
// 	СписокЗначений из СправочникСсылка.НалоговыеНазначенияАктивовИЗатрат -
Функция ПрименяемыеНалоговыеНазначения() Экспорт
	
	НастройкиУчета = УчетНДСУП.НастройкиУчета();
	
	НалоговыеНазначения = Новый СписокЗначений();
	
	НалоговыеНазначения.Добавить(Справочники.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка(), НСтр("ru='Без изменений';uk='Без змін'"));
	
    Если НастройкиУчета.ИспользоватьУчетНДС Тогда
		НалоговыеНазначения.Добавить(Справочники.НалоговыеНазначенияАктивовИЗатрат.НДС_Облагаемая);
	КонецЕсли;
    НалоговыеНазначения.Добавить(Справочники.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяХозДеятельность);
    НалоговыеНазначения.Добавить(Справочники.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяНеХозДеятельность);
    НалоговыеНазначения.Добавить(Справочники.НалоговыеНазначенияАктивовИЗатрат.НДС_Пропорционально);
	
	Возврат НалоговыеНазначения;
	
КонецФункции

#КонецОбласти

#Область УчетВходящегоНДС

Процедура УстановитьПараметрТипыНалогообложенияНДСПоступления(Запрос) Экспорт
	
	Если Запрос.Параметры.Свойство("ТипыНалогообложенияНДСПоступления") Тогда
		Возврат;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ТипыНалогообложенияНДСПоступления", УчетНДСУП.ВидыДеятельностиНДСПринимаетсяКВозмещению());
	
КонецПроцедуры

Функция ДоступныеВидыДеятельностиНДС(ПараметрыЗаполнения) Экспорт
	
	// Подготовим массив видов деятельности доступных по операциям
	ВидыДеятельностиНДСДоступныеПоОперации = Новый Структура;
	
	Если ПараметрыЗаполнения.ПриобретениеТоваров Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
		ВидыДеятельностиНДСДоступныеПоОперации.Вставить("ПриобретениеТоваров", МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ПриобретениеРабот Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
		ВидыДеятельностиНДСДоступныеПоОперации.Вставить("ПриобретениеРабот", МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ПриобретениеНаСтатьи Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
		ВидыДеятельностиНДСДоступныеПоОперации.Вставить("ПриобретениеНаСтатьи", МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ДвижениеТоваровНаСкладах Тогда
		МассивДоступных = Новый Массив;
		ВидыДеятельностиНДСДоступныеПоОперации.Вставить("ДвижениеТоваровНаСкладах", МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ДвижениеМеждуФилиалами Тогда
		МассивДоступных = Новый Массив;
		ВидыДеятельностиНДСДоступныеПоОперации.Вставить("ДвижениеМеждуФилиалами", МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ДвижениеТоваровИРаботВПроизводстве Тогда
		МассивДоступных = Новый Массив;
		ВидыДеятельностиНДСДоступныеПоОперации.Вставить("ДвижениеТоваровИРаботВПроизводстве", МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.СписаниеТоваровИРаботНаСтатьи Тогда
		МассивДоступных = Новый Массив;
		ВидыДеятельностиНДСДоступныеПоОперации.Вставить("СписаниеТоваровИРаботНаСтатьи", МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ВыпускПродукцииИРабот Тогда
		МассивДоступных = Новый Массив;
		ВидыДеятельностиНДСДоступныеПоОперации.Вставить("ВыпускПродукцииИРабот", МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.СборкаРазборкаТоваров Тогда
		МассивДоступных = Новый Массив;
		ВидыДеятельностиНДСДоступныеПоОперации.Вставить("СборкаРазборкаТоваров", МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ПередачаВЭксплуатацию Тогда
		МассивДоступных = Новый Массив;
		ВидыДеятельностиНДСДоступныеПоОперации.Вставить("ПередачаВЭксплуатацию", МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ПрочееВыбытиеТоваров Тогда
		МассивДоступных = Новый Массив;
		ВидыДеятельностиНДСДоступныеПоОперации.Вставить("ПрочееВыбытиеТоваров", МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ЛизинговоеИмуществоНаБалансе Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
		ВидыДеятельностиНДСДоступныеПоОперации.Вставить("ЛизинговоеИмуществоНаБалансе", МассивДоступных);
	КонецЕсли;
	
	// Подготовим массив видов деятельности не доступных по настройкам
	НедоступныеВидыДеятельностиНДС = Новый Массив;
	ПараметрыУчетаИБ = УчетНДСУП.НастройкиУчета();
	ПараметрыУчетаОрганизации = УчетНДСУП.ПараметрыУчетаПоОрганизации(ПараметрыЗаполнения.Организация, ПараметрыЗаполнения.Дата);
	
	Если ЗначениеЗаполнено(ПараметрыЗаполнения.Организация) Тогда
		ОсновнойВидДеятельностиНДСЗакупки = ПараметрыУчетаОрганизации.ОсновнойВидДеятельностиНДСЗакупки;
		РаздельныйУчетНДС = ПараметрыУчетаОрганизации.РаздельныйУчетНДС;
	Иначе
		ОсновнойВидДеятельностиНДСЗакупки = ПараметрыУчетаИБ.ОсновнойВидДеятельностиНДСЗакупки;
		РаздельныйУчетНДС = ПараметрыУчетаИБ.РаздельныйУчетНДС;
	КонецЕсли;
	
	Если ОсновнойВидДеятельностиНДСЗакупки = Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС Тогда
		НедоступныеВидыДеятельностиНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
	ИначеЕсли ОсновнойВидДеятельностиНДСЗакупки = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС 
		 И НЕ РаздельныйУчетНДС Тогда
		НедоступныеВидыДеятельностиНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
	КонецЕсли;
	
	УчетНДСЛокализация.ДополнитьДоступныеНедоступныеВидыДеятельностиНДСПоПараметрам(
		ВидыДеятельностиНДСДоступныеПоОперации, НедоступныеВидыДеятельностиНДС, ПараметрыЗаполнения);
	
	// Учтем доступность по операции
	ДоступныеВидыДеятельностиНДС = Новый Массив;
	Если ВидыДеятельностиНДСДоступныеПоОперации.Количество() > 0 Тогда
		ДоступныеВидыДеятельностиНДС = ПрименяемыеВидыДеятельностиНДС().ВыгрузитьЗначения();
		Для каждого КлючИЗначение Из ВидыДеятельностиНДСДоступныеПоОперации Цикл
			ДоступныеВидыДеятельностиНДС = ОбщегоНазначенияУТКлиентСервер.ПересечениеМассивов(ДоступныеВидыДеятельностиНДС, КлючИЗначение.Значение);
		КонецЦикла;
	КонецЕсли;
	
	// Учтем недоступность по настройкам учета организации
	ДоступныеВидыДеятельностиНДС = ОбщегоНазначенияКлиентСервер.РазностьМассивов(ДоступныеВидыДеятельностиНДС, НедоступныеВидыДеятельностиНДС);
	
	Возврат ДоступныеВидыДеятельностиНДС;
	
КонецФункции

Функция ДоступныеНалогообложенияНДСЗакупки(ПараметрыЗаполнения) Экспорт
	
    КонтрагентПлательщикНДС = НДСОбщегоНазначенияСервер.ОрганизацияКонтрагентПлательщикНДС(ПараметрыЗаполнения.Контрагент, ПараметрыЗаполнения.Дата);
    Если НЕ КонтрагентПлательщикНДС Тогда
        ДоступныеНалогообложения = Новый Массив;
        ДоступныеНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
        Возврат ДоступныеНалогообложения;
    КонецЕсли; 
    
    ПрименяемыеТипыНалогообложения = ПрименяемыеТипыНалогообложенияНДС(Ложь, Истина).ВыгрузитьЗначения();
	
	ТипыНалогообложенияНедоступныеПоПараметрам = Новый Массив;
    Если ПараметрыЗаполнения.ИмпортТоваров Тогда
    	ТипыНалогообложенияНедоступныеПоПараметрам.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
        ТипыНалогообложенияНедоступныеПоПараметрам.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОсвобожденаОтНДС);
    КонецЕсли;
	Если ПараметрыЗаполнения.ПоступлениеИзТоваровВПути Тогда
		ТипыНалогообложенияНедоступныеПоПараметрам.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
	КонецЕсли;
	УчетНДСЛокализация.ДополнитьНедоступныеПоОперацииТипыНалогообложенияЗакупки(ТипыНалогообложенияНедоступныеПоПараметрам, ПараметрыЗаполнения);

	Возврат ОбщегоНазначенияКлиентСервер.РазностьМассивов(ПрименяемыеТипыНалогообложения, ТипыНалогообложенияНедоступныеПоПараметрам);
	
КонецФункции

Функция НалогообложенияНДСПродажиНаЭкспорт() Экспорт
	
	Результат = Новый Массив();
	Результат.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт);
	УчетНДСЛокализация.ДополнитьНалогообложенияНДСПродажиНаЭкспорт(Результат);
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область УчетИсходящегоНДС

// Формирует список доступных значений по настройка учета НДС и отражаемой операции.
//
// Параметры:
// 	ПараметрыЗаполнения - Структура - См. УчетНДСУПКлиентСервер.ПараметрыЗаполненияНалогообложенияНДСПродажи().
//
// Возвращаемое значение:
// 	Массив из ПеречислениеСсылка.ТипыНалогообложенияНДС - Доступные значения налогообложения НДС продажи.
// 
Функция ДоступныеНалогообложенияНДСПродажи(ПараметрыЗаполнения) Экспорт
	
	ПараметрыУчетаИБ = УчетНДСУП.НастройкиУчета();
	ПараметрыУчетаОрганизации = УчетНДСУП.ПараметрыУчетаПоОрганизации(
                                    ПараметрыЗаполнения.Организация, ПараметрыЗаполнения.Дата);
									
    Если НЕ ПараметрыУчетаОрганизации.ПлательщикНДС Тогда
        ДоступныеНалогообложения = Новый Массив;
        ДоступныеНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
        Возврат ДоступныеНалогообложения;
    КонецЕсли; 
	
	НалогообложенияНДСДоступныеПоОперации = Новый Структура();
	
	Если ПараметрыЗаполнения.РеализацияТоваров Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
        МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОсвобожденаОтНДС);
		Если Не ПараметрыЗаполнения.ЭтоОперацияМеждуОрганизациями Тогда
			МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт);
		КонецЕсли;
		НалогообложенияНДСДоступныеПоОперации.Вставить("РеализацияТоваров", МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.РеализацияРаботУслуг Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
        МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОсвобожденаОтНДС);
		Если Не ПараметрыЗаполнения.ЭтоОперацияМеждуОрганизациями Тогда
			МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт);
		КонецЕсли;
		НалогообложенияНДСДоступныеПоОперации.Вставить("РеализацияРаботУслуг", МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.РеализацияПрочихАктивов Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
        МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОсвобожденаОтНДС);
		НалогообложенияНДСДоступныеПоОперации.Вставить("РеализацияПрочихАктивов", МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ВыкупВозвратнойТарыКлиентом Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
        МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОсвобожденаОтНДС);
		НалогообложенияНДСДоступныеПоОперации.Вставить("ВыкупВозвратнойТарыКлиентом", МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ВыкупТоваровХранителем Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
        МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОсвобожденаОтНДС);
		НалогообложенияНДСДоступныеПоОперации.Вставить("ВыкупТоваровХранителем", МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ПередачаНаКомиссию Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
        МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОсвобожденаОтНДС);
		НалогообложенияНДСДоступныеПоОперации.Вставить("ПередачаНаКомиссию", МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ОтчетДавальцу Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
        МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОсвобожденаОтНДС);
		НалогообложенияНДСДоступныеПоОперации.Вставить("ОтчетДавальцу", МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ОтчетДавальцу Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
        МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОсвобожденаОтНДС);
		НалогообложенияНДСДоступныеПоОперации.Вставить("ОтчетДавальцу", МассивДоступных);
	КонецЕсли;

	Если ПараметрыЗаполнения.ОтчетКомиссионера Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
        МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОсвобожденаОтНДС);
		НалогообложенияНДСДоступныеПоОперации.Вставить("ОтчетКомиссионера", МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ВозвратТоваровОтКомиссионера Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
        МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОсвобожденаОтНДС);
		НалогообложенияНДСДоступныеПоОперации.Вставить("ВозвратТоваровОтКомиссионера", МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ВозвратТоваровОтКлиента Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
        МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОсвобожденаОтНДС);
		НалогообложенияНДСДоступныеПоОперации.Вставить("ВозвратТоваровОтКлиента", МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.РозничнаяПродажа Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
        МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОсвобожденаОтНДС);
		НалогообложенияНДСДоступныеПоОперации.Вставить("РозничнаяПродажа", МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ОтчетКомитентуОЗакупках Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
        МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОсвобожденаОтНДС);
		НалогообложенияНДСДоступныеПоОперации.Вставить("ОтчетКомитентуОЗакупках", МассивДоступных);
	КонецЕсли;
	
	// Не доступные по настройкам
	НедоступныеНалогообложенияНДС = Новый Массив;
	Если Не ПараметрыУчетаИБ.ПродажиНаЭкспорт Тогда
		НедоступныеНалогообложенияНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт);
	КонецЕсли;
	
	УчетНДСЛокализация.ДополнитьДоступныеНедоступныеНалогообложенияНДСПродажиПоПараметрам(
		НалогообложенияНДСДоступныеПоОперации, НедоступныеНалогообложенияНДС, ПараметрыЗаполнения);
	
	// Учтем доступность по операции
	ДоступныеНалогообложенияНДС = Новый Массив;
	Для каждого КлючИЗначение Из НалогообложенияНДСДоступныеПоОперации Цикл
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ДоступныеНалогообложенияНДС, КлючИЗначение.Значение, Истина);
	КонецЦикла;
	ПрименяемыеТипыНалогообложенияНДС = ПрименяемыеТипыНалогообложенияНДС(Истина, Ложь).ВыгрузитьЗначения();
	ОбщегоНазначенияУТКлиентСервер.ПересечениеМассивов(ДоступныеНалогообложенияНДС, ПрименяемыеТипыНалогообложенияНДС);
	
	// Учтем недоступность по настройкам учета организации
	ДоступныеНалогообложенияНДС = ОбщегоНазначенияКлиентСервер.РазностьМассивов(ДоступныеНалогообложенияНДС, НедоступныеНалогообложенияНДС);
	
	Возврат ДоступныеНалогообложенияНДС;
	
КонецФункции

#КонецОбласти


Функция ДоступныеНалоговыеНазначения(ПараметрыЗаполнения) Экспорт
	
	// Подготовим массив налоговых назначений доступных по операциям
	НалоговыеНазначенияДоступныеПоОперации = Новый Структура;
	
	Если ПараметрыЗаполнения.ПриобретениеТоваров Тогда
		МассивДоступных = Новый Массив;
        МассивДоступных.Добавить(Справочники.НалоговыеНазначенияАктивовИЗатрат.НДС_Облагаемая);
        МассивДоступных.Добавить(Справочники.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяХозДеятельность);
        МассивДоступных.Добавить(Справочники.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяНеХозДеятельность);
        МассивДоступных.Добавить(Справочники.НалоговыеНазначенияАктивовИЗатрат.НДС_Пропорционально);
		НалоговыеНазначенияДоступныеПоОперации.Вставить("ПриобретениеТоваров", МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ПриобретениеРабот Тогда
		МассивДоступных = Новый Массив;
        МассивДоступных.Добавить(Справочники.НалоговыеНазначенияАктивовИЗатрат.НДС_Облагаемая);
        МассивДоступных.Добавить(Справочники.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяХозДеятельность);
        МассивДоступных.Добавить(Справочники.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяНеХозДеятельность);
        МассивДоступных.Добавить(Справочники.НалоговыеНазначенияАктивовИЗатрат.НДС_Пропорционально);
		НалоговыеНазначенияДоступныеПоОперации.Вставить("ПриобретениеРабот", МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ПриобретениеНаСтатьи Тогда
		МассивДоступных = Новый Массив;
        МассивДоступных.Добавить(Справочники.НалоговыеНазначенияАктивовИЗатрат.НДС_Облагаемая);
        МассивДоступных.Добавить(Справочники.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяХозДеятельность);
        МассивДоступных.Добавить(Справочники.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяНеХозДеятельность);
        МассивДоступных.Добавить(Справочники.НалоговыеНазначенияАктивовИЗатрат.НДС_Пропорционально);
		НалоговыеНазначенияДоступныеПоОперации.Вставить("ПриобретениеНаСтатьи", МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ДвижениеТоваровНаСкладах Тогда
		МассивДоступных = Новый Массив;
		НалоговыеНазначенияДоступныеПоОперации.Вставить("ДвижениеТоваровНаСкладах", МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ДвижениеМеждуФилиалами Тогда
		МассивДоступных = Новый Массив;
		НалоговыеНазначенияДоступныеПоОперации.Вставить("ДвижениеМеждуФилиалами", МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ДвижениеТоваровИРаботВПроизводстве Тогда
		МассивДоступных = Новый Массив;
		НалоговыеНазначенияДоступныеПоОперации.Вставить("ДвижениеТоваровИРаботВПроизводстве", МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.СписаниеТоваровИРаботНаСтатьи Тогда
		МассивДоступных = Новый Массив;
		НалоговыеНазначенияДоступныеПоОперации.Вставить("СписаниеТоваровИРаботНаСтатьи", МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ВыпускПродукцииИРабот Тогда
		МассивДоступных = Новый Массив;
		НалоговыеНазначенияДоступныеПоОперации.Вставить("ВыпускПродукцииИРабот", МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.СборкаРазборкаТоваров Тогда
		МассивДоступных = Новый Массив;
		НалоговыеНазначенияДоступныеПоОперации.Вставить("СборкаРазборкаТоваров", МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ПередачаВЭксплуатацию Тогда
		МассивДоступных = Новый Массив;
		НалоговыеНазначенияДоступныеПоОперации.Вставить("ПередачаВЭксплуатацию", МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ПрочееВыбытиеТоваров Тогда
		МассивДоступных = Новый Массив;
		НалоговыеНазначенияДоступныеПоОперации.Вставить("ПрочееВыбытиеТоваров", МассивДоступных);
	КонецЕсли;
	
	// Подготовим массив налоговых назначений не доступных по настройкам
	НедоступныеНалоговыеНазначения = Новый Массив;
	ПараметрыУчетаИБ = УчетНДСУП.НастройкиУчета();
	ПараметрыУчетаОрганизации = УчетНДСУП.ПараметрыУчетаПоОрганизации(ПараметрыЗаполнения.Организация, ПараметрыЗаполнения.Дата);
	
	Если ЗначениеЗаполнено(ПараметрыЗаполнения.Организация) Тогда
		ОсновноеНалоговоеНазначение = ПараметрыУчетаОрганизации.ОсновноеНалоговоеНазначение;
		РаздельныйУчетНДС = ПараметрыУчетаОрганизации.РаздельныйУчетНДС;
	Иначе
		ОсновноеНалоговоеНазначение = ПараметрыУчетаИБ.ОсновноеНалоговоеНазначение;
		РаздельныйУчетНДС = ПараметрыУчетаИБ.РаздельныйУчетНДС;
	КонецЕсли;
	
	Если ОсновноеНалоговоеНазначение = Справочники.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяХозДеятельность Тогда
		НедоступныеНалоговыеНазначения.Добавить(Справочники.НалоговыеНазначенияАктивовИЗатрат.НДС_Облагаемая);
	КонецЕсли;
	
	УчетНДСЛокализация.ДополнитьДоступныеНедоступныеНалоговыеНазначенияПоПараметрам(
		НалоговыеНазначенияДоступныеПоОперации, НедоступныеНалоговыеНазначения, ПараметрыЗаполнения);
	
	// Учтем доступность по операции
	ДоступныеНалоговыеНазначения = Новый Массив;
	Если НалоговыеНазначенияДоступныеПоОперации.Количество() > 0 Тогда
		ДоступныеНалоговыеНазначения = ПрименяемыеНалоговыеНазначения().ВыгрузитьЗначения();
		Для каждого КлючИЗначение Из НалоговыеНазначенияДоступныеПоОперации Цикл
			ДоступныеНалоговыеНазначения = ОбщегоНазначенияУТКлиентСервер.ПересечениеМассивов(ДоступныеНалоговыеНазначения, КлючИЗначение.Значение);
		КонецЦикла;
	КонецЕсли;
	
	// Учтем недоступность по настройкам учета организации
	ДоступныеНалоговыеНазначения = ОбщегоНазначенияКлиентСервер.РазностьМассивов(ДоступныеНалоговыеНазначения, НедоступныеНалоговыеНазначения);
	
	Возврат ДоступныеНалоговыеНазначения;
	
КонецФункции


#Область ЗаданияКЗакрытиюМесяца

Функция СоответствиеЗапросовКонтрольнымРегистрам(Запрос) Экспорт
	//++ НЕ УТ
	Запрос.УстановитьПараметр("ИспользоватьРаздельныйУчетВНАПоНалогообложению",
		ПолучитьФункциональнуюОпцию("ИспользоватьРаздельныйУчетВНАПоНалогообложению"));
	//-- НЕ УТ
	
	СоответствиеЗаданий = Новый Соответствие();
	//++ НЕ УТ
	СоответствиеЗаданий.Вставить("ПорядокУчетаНМАБУИзменение", ТекстЗапросаПорядокУчетаНМАБУ(Запрос));
	СоответствиеЗаданий.Вставить("ПорядокУчетаОСБУИзменение", ТекстЗапросаПорядокУчетаОСБУ(Запрос));
	СоответствиеЗаданий.Вставить("СтоимостьОСИзменение", ТекстЗапросаСтоимостьОС(Запрос));
	СоответствиеЗаданий.Вставить("СтоимостьНМАИзменение", ТекстЗапросаСтоимостьНМА(Запрос));
	//-- НЕ УТ
	//++ НЕ УТ
	СоответствиеЗаданий.Вставить("ТаблицаИзмененийПартииПрочихРасходов", ТекстЗапросаПартииПрочихРасходов(Запрос));
	//-- НЕ УТ
	
	УчетНДСЛокализация.ДополнитьСоответствиеЗапросовКонтрольнымРегистрам(СоответствиеЗаданий, Запрос);
	
	Возврат СоответствиеЗаданий;
	
КонецФункции

//++ НЕ УТ
Функция ТекстЗапросаПорядокУчетаНМАБУ(Запрос)
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(Таблица.Период, МЕСЯЦ) КАК Месяц,
	|	ЗНАЧЕНИЕ(Перечисление.ОперацииЗакрытияМесяца.КорректировкаНалоговогоНазначенияКапитальныхИнвестиций) КАК Операция,
	|	Таблица.Организация КАК Организация,
	|	Таблица.Документ КАК Документ
	|ИЗ
	|	ПорядокУчетаНМАБУИзменение КАК Таблица
	|ГДЕ
	|	&ИспользоватьРаздельныйУчетВНАПоНалогообложению
	|	И ТИПЗНАЧЕНИЯ(Таблица.Документ) <> ТИП(Документ.КорректировкаНалоговогоНазначенияКапитальныхИнвестиций)
	|";
	
	СтруктураТекстовЗапросов = ЗакрытиеМесяцаСервер.ИнициализироватьСтруктуруТекстовЗапросов(ТекстЗапроса);
	
	Возврат СтруктураТекстовЗапросов;
	
КонецФункции

Функция ТекстЗапросаПорядокУчетаОСБУ(Запрос)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(Таблица.Период, МЕСЯЦ) КАК Месяц,
	|	ЗНАЧЕНИЕ(Перечисление.ОперацииЗакрытияМесяца.КорректировкаНалоговогоНазначенияКапитальныхИнвестиций) КАК Операция,
	|	Таблица.Организация КАК Организация,
	|	Таблица.Документ КАК Документ
	|ИЗ
	|	ПорядокУчетаОСБУИзменение КАК Таблица
	|ГДЕ
	|	&ИспользоватьРаздельныйУчетВНАПоНалогообложению
	|	И ТИПЗНАЧЕНИЯ(Таблица.Документ) <> ТИП(Документ.КорректировкаНалоговогоНазначенияКапитальныхИнвестиций)
	|";

	СтруктураТекстовЗапросов = ЗакрытиеМесяцаСервер.ИнициализироватьСтруктуруТекстовЗапросов(ТекстЗапроса);
	
	Возврат СтруктураТекстовЗапросов
	
КонецФункции

Функция ТекстЗапросаСтоимостьОС(Запрос)
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(Таблица.Период, МЕСЯЦ) КАК Месяц,
	|	ЗНАЧЕНИЕ(Перечисление.ОперацииЗакрытияМесяца.КорректировкаНалоговогоНазначенияКапитальныхИнвестиций) КАК Операция,
	|	Таблица.Организация КАК Организация,
	|	Таблица.Документ КАК Документ
	|ИЗ
	|	СтоимостьОСИзменение КАК Таблица
	|ГДЕ
	|	&ИспользоватьРаздельныйУчетВНАПоНалогообложению
	|	И ТИПЗНАЧЕНИЯ(Таблица.Документ) <> ТИП(Документ.КорректировкаНалоговогоНазначенияКапитальныхИнвестиций)
	|";

	СтруктураТекстовЗапросов = ЗакрытиеМесяцаСервер.ИнициализироватьСтруктуруТекстовЗапросов(ТекстЗапроса);
	
	Возврат СтруктураТекстовЗапросов
	
КонецФункции

Функция ТекстЗапросаСтоимостьНМА(Запрос)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(Таблица.Период, МЕСЯЦ) КАК Месяц,
	|	ЗНАЧЕНИЕ(Перечисление.ОперацииЗакрытияМесяца.КорректировкаНалоговогоНазначенияКапитальныхИнвестиций) КАК Операция,
	|	Таблица.Организация КАК Организация,
	|	Таблица.Документ КАК Документ
	|ИЗ
	|	СтоимостьНМАИзменение КАК Таблица
	|ГДЕ
	|	&ИспользоватьРаздельныйУчетВНАПоНалогообложению
	|	И ТИПЗНАЧЕНИЯ(Таблица.Документ) <> ТИП(Документ.КорректировкаНалоговогоНазначенияКапитальныхИнвестиций)
	|";
	
	СтруктураТекстовЗапросов = ЗакрытиеМесяцаСервер.ИнициализироватьСтруктуруТекстовЗапросов(ТекстЗапроса);
	
	Возврат СтруктураТекстовЗапросов
	
КонецФункции
//-- НЕ УТ  


//++ НЕ УТ
Функция ТекстЗапросаПартииПрочихРасходов(Запрос)
	
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КОНЕЦПЕРИОДА(Таблица.Период, МЕСЯЦ) КАК Месяц,
	|	ЗНАЧЕНИЕ(Перечисление.ОперацииЗакрытияМесяца.КорректировкаНалоговогоНазначенияКапитальныхИнвестиций) КАК Операция,
	|	Таблица.Организация КАК Организация,
	|	Таблица.Регистратор КАК Документ
	|ИЗ
	|	ТаблицаИзмененийПартииПрочихРасходов КАК Таблица
	|ГДЕ
	|	ЕСТЬNULL(Таблица.ВариантРаспределенияРасходовРегл, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|";

	СтруктураТекстовЗапросов = ЗакрытиеМесяцаСервер.ИнициализироватьСтруктуруТекстовЗапросов(ТекстЗапроса);
	
	Возврат СтруктураТекстовЗапросов
	
КонецФункции
//-- НЕ УТ


#КонецОбласти


#Область Прочее

Функция ВходящиеДанныеМеханизма() Экспорт
	
	ВходящиеДанные = Новый Массив;
	
	Возврат ВходящиеДанные;
	
КонецФункции

Функция ТипыЗапасовСобственные() Экспорт
	
	ТипыЗапасовСобственные = Перечисления.ТипыЗапасов.ТипыЗапасовСобственные();
	ТипыЗапасовСобственные.Добавить(Перечисления.ТипыЗапасов.ПустаяСсылка());
	
	Возврат ТипыЗапасовСобственные;
	
КонецФункции

Функция ТипыНоменклатурыТовар() Экспорт
	
	ТипыНоменклатуры = Новый Массив();
	ТипыНоменклатуры.Добавить(Перечисления.ТипыНоменклатуры.Товар);
	ТипыНоменклатуры.Добавить(Перечисления.ТипыНоменклатуры.МногооборотнаяТара);
	
	Возврат ТипыНоменклатуры;
	
КонецФункции

Функция ТипыНоменклатурыУслугаРабота() Экспорт
	
	ТипыНоменклатуры = Новый Массив();
	ТипыНоменклатуры.Добавить(Перечисления.ТипыНоменклатуры.Услуга);
	ТипыНоменклатуры.Добавить(Перечисления.ТипыНоменклатуры.Работа);
	
	Возврат ТипыНоменклатуры;
	
КонецФункции

Функция ИзмененныеПараметры(КлючПараметров, ЗначенияПараметров, КэшированныеЗначенияПараметров) Экспорт
	
	Результат = Новый Структура();
	
	Если ТипЗнч(КэшированныеЗначенияПараметров) <> Тип("Структура") Тогда
		Возврат Результат;
	КонецЕсли;
	
	ПрошлыеЗначенияПараметров = Неопределено;
	Если Не КэшированныеЗначенияПараметров.Свойство(КлючПараметров, ПрошлыеЗначенияПараметров) Тогда
		Возврат Результат;
	КонецЕсли;
	
	Если ОбщегоНазначенияУТКлиентСервер.СтруктурыРавны(ЗначенияПараметров, ПрошлыеЗначенияПараметров) Тогда
		Возврат Результат;
	КонецЕсли;
	
	Для каждого КлючИЗначение Из ЗначенияПараметров Цикл
		Если ЗначениеЗаполнено(КлючИЗначение.Значение)
			И КлючИЗначение.Значение <> ПрошлыеЗначенияПараметров[КлючИЗначение.Ключ] Тогда
			Результат.Вставить(КлючИЗначение.Ключ);
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Процедура ОбновитьКэшированныеЗначенияПараметров(КлючПараметров, ЗначенияПараметров, КэшированныеЗначенияПараметров) Экспорт
	
	Если ТипЗнч(КэшированныеЗначенияПараметров) <> Тип("Структура") Тогда
		КэшированныеЗначенияПараметров = Новый Структура();
	КонецЕсли;
	
	Если Не КэшированныеЗначенияПараметров.Свойство(КлючПараметров) Тогда
		КэшированныеЗначенияПараметров.Вставить(КлючПараметров, ЗначенияПараметров);
	Иначе
		ЗаполнитьЗначенияСвойств(КэшированныеЗначенияПараметров[КлючПараметров], ЗначенияПараметров);
	КонецЕсли;
	
КонецПроцедуры

Процедура НастроитьСовместныйВыборКонтрагентовОрганизаций(Элемент, Контрагент = Null) Экспорт

	Если ПолучитьФункциональнуюОпцию("ИспользоватьПередачиТоваровМеждуОрганизациями") Тогда
		Если Контрагент = Неопределено Тогда
			Контрагент = Справочники.Контрагенты.ПустаяСсылка();
		КонецЕсли;
		НовыйМассив = Новый Массив();
		НовыйМассив.Добавить(Новый ПараметрВыбора("ВыборКонтрагентовИОрганизаций", Истина));
		Элемент.ПараметрыВыбора = Новый ФиксированныйМассив(НовыйМассив);
 	Иначе
		Элемент.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.Контрагенты");	
		Элемент.ВыбиратьТип = Ложь;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#КонецОбласти
