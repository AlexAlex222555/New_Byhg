
#Область СлужебныйПрограммныйИнтерфейс

// Создает документ оплаты по одной или нескольким заявкам на расход денежных средств.
//
// Параметры:
//	ОписаниеКоманды - Структура - Описание команды, по которой создаются документы
//	ИмяДокумента - Строка - имя документа в метаданных, который будет создан на основании заявок.
//
Процедура СоздатьДокументОплатыНаОснованииЗаявокНаРасходДС(МассивСсылок, ИмяДокумента) Экспорт
	
	ФормаОплаты = "";
	Если ИмяДокумента = "СписаниеБезналичныхДенежныхСредств" Тогда
		ФормаОплаты = "Безналичная";
	ИначеЕсли ИмяДокумента = "РасходныйКассовыйОрдер" Тогда
		ФормаОплаты = "Наличная";
	КонецЕсли;
	
	ОчиститьСообщения();
	
	РаспределениеОплаты = Неопределено;
	Если ДенежныеСредстваВызовСервера.СформироватьДанныеЗаполненияОплаты(МассивСсылок, ФормаОплаты, РаспределениеОплаты) Тогда
		
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("ДокументОснование",                     МассивСсылок);
		ДополнительныеПараметры.Вставить("НесколькоЗаявокНаРасходованиеСредств",  МассивСсылок.Количество() > 1);
		ДополнительныеПараметры.Вставить("ИмяДокумента",                          ИмяДокумента);
		ДополнительныеПараметры.Вставить("ФормаОплаты",                           ФормаОплаты);
		
		Оповещение = Новый ОписаниеОповещения("ВыполнитьПослеВыбораБанковскогоСчетаКассы", ЭтотОбъект, ДополнительныеПараметры);
		
		Если РаспределениеОплаты.Количество() > 1 Тогда
			ДополнительныеПараметры.Вставить("ЗакрыватьПриВыборе", Истина);
			ОткрытьФорму("Документ.ЗаявкаНаРасходованиеДенежныхСредств.Форма.РаспределениеОплаты", ДополнительныеПараметры,,,,,
				Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		ИначеЕсли РаспределениеОплаты.Количество() = 1 Тогда
			ВыполнитьОбработкуОповещения(Оповещение,
				Новый Структура("БанковскийСчетКасса, Сумма", РаспределениеОплаты[0].БанковскийСчетКасса, РаспределениеОплаты[0].Сумма));
		Иначе
			ВыполнитьОбработкуОповещения(Оповещение, Новый Структура("БанковскийСчетКасса, Сумма", Неопределено, 0));
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыполнитьПослеВыбораБанковскогоСчетаКассы(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		ИмяФормы = "Документ." + ДополнительныеПараметры.ИмяДокумента + ".ФормаОбъекта";
		ДополнительныеПараметры.Вставить("БанковскийСчетКасса", Результат.БанковскийСчетКасса);
		ДополнительныеПараметры.Вставить("Сумма", Результат.Сумма);
		ОткрытьФорму(ИмяФормы, Новый Структура("Основание", ДополнительныеПараметры));
	КонецЕсли;
	
КонецПроцедуры

// Создает платежные документы на основании выделенных строк графика платежей
//
// Параметры:
//    ЭлементФормы - ТаблицаФормы - Элемент с выделенными строками графика оплаты
//    ТипДокумента - Строка - Тип создаваемого документа. Если не задан, определяется автоматически.
//
Процедура ОплатитьСтрокиГрафика(ЭлементФормы, ТипДокумента = "") Экспорт
	
	СтрокиГрафика = ЭлементФормы.ВыделенныеСтроки;
	Если СтрокиГрафика.Количество() Тогда
		Результат = ДенежныеСредстваВызовСервера.ОплатитьСтрокиГрафика(СтрокиГрафика, ТипДокумента);
		ОткрытьРезультатОплатыСтрокГрафика(ЭлементФормы, Результат);
	КонецЕсли;
	
КонецПроцедуры

// Открывает форму помощника создания, если создано несколько документов, либо форму одного документа.
//
// Параметры:
//    ЭлементФормы - ТаблицаФормы - Элемент с выделенными строками графика оплаты
//    Результат - Структура - Результат создания документов оплаты.
//
Процедура ОткрытьРезультатОплатыСтрокГрафика(ЭлементФормы, Результат) Экспорт
	
	Оповещение = Новый ОписаниеОповещения("ОплатаСтрокГрафикаЗавершение", ЭтотОбъект, ЭлементФормы);
	
	Если ДенежныеСредстваКлиентЛокализация.ОткрытьРезультатОплатыСтрокГрафика(ЭлементФормы, Результат, Оповещение) Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.ОткрыватьФормуПомощника Тогда
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("ЭлементФормы", ЭлементФормы);
		ОписаниеОповещения = Новый ОписаниеОповещения("ПриЗавершенииСозданияПлатежныхДокументов", ЭтотОбъект, ДополнительныеПараметры);
		ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Неопределено);
		ПараметрыОжидания.Вставить("ТекстСообщения", НСтр("ru='Создание платежных документов...';uk='Створення платіжних документів ...'"));
		ПараметрыОжидания.Вставить("ВыводитьПрогрессВыполнения", Истина);
		
		ДлительныеОперацииКлиент.ОжидатьЗавершение(Результат.ДлительнаяОперация, ОписаниеОповещения, ПараметрыОжидания);
	Иначе
		СтруктураПараметры = Новый Структура;
		СтруктураПараметры.Вставить("Основание", Результат.ДокументКСозданию.ДанныеЗаполнения);
		
		ОткрытьФорму("Документ." + Результат.ДокументКСозданию.ТипДокумента + ".ФормаОбъекта",
			СтруктураПараметры,
			ЭлементФормы);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗавершенииСозданияПлатежныхДокументов(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.Статус = "Ошибка" Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Результат.КраткоеПредставлениеОшибки);
		Возврат;
	ИначеЕсли Результат.Статус = "Выполнено" Тогда
		ОткрытьФорму("ОбщаяФорма.ПомощникФормированияПлатежныхДокументов",,
			ДополнительныеПараметры.ЭлементФормы,,,,
			Новый ОписаниеОповещения("ОплатаСтрокГрафикаЗавершение", ЭтотОбъект, ДополнительныеПараметры.ЭлементФормы),
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОплатаСтрокГрафикаЗавершение(Результат, ЭлементФормы) Экспорт
	
	Если Результат <> Неопределено И Результат Тогда
		ЭлементФормы.Обновить();
		Оповестить("ОплаченыСтрокиГрафикаПлатежей",, ЭлементФормы);
	КонецЕсли;
	
КонецПроцедуры

// Рассчитывает дату авансового отчета
//
// Параметры:
//    ПериодАвансовогоОтчета - Строка, Дата - Выбранный пользователем способ определения даты
//    Дата - Дата - Дата выдачи аванса
//
// Возвращаемое значение:
//    Дата - Дата авансового отчета
//
Функция ПересчитатьДатуАвансовогоОтчета(ПериодАвансовогоОтчета, Дата) Экспорт
	
	ДатаАвансовогоОтчета = Неопределено;
	
	Если ПериодАвансовогоОтчета = НСтр("ru='Через неделю';uk='Через тиждень'") Тогда
		ДатаАвансовогоОтчета = ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДата()) + 7 * 24 * 3600;
		
	ИначеЕсли ПериодАвансовогоОтчета = НСтр("ru='Через две недели';uk='Через два тижні'") Тогда
		ДатаАвансовогоОтчета = ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДата()) + 14 * 24 * 3600;
		
	ИначеЕсли ПериодАвансовогоОтчета = НСтр("ru='Через месяц';uk='Через місяць'") Тогда
		ДатаАвансовогоОтчета = ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДата()) + 30 * 24 * 3600;
		
	ИначеЕсли ТипЗнч(ПериодАвансовогоОтчета) = Тип("Дата") Тогда
		Если ПериодАвансовогоОтчета < Дата Тогда
			ПериодАвансовогоОтчета = Дата;
		КонецЕсли;
		
		ДатаАвансовогоОтчета = ПериодАвансовогоОтчета;
	КонецЕсли;
	
	Возврат ДатаАвансовогоОтчета;
	
КонецФункции

Процедура ПериодАвансовогоОтчетаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка, Форма, Дата, ОповещениеФормы) Экспорт
	
	Если ВыбранноеЗначение = "ДоДаты" Тогда
		
		СтандартнаяОбработка = Ложь;
		Оповещение = Новый ОписаниеОповещения("ВыполнитьПослеВыбораДаты", ЭтотОбъект,
			Новый Структура("Форма, Дата, ОповещениеФормы", Форма, Дата, ОповещениеФормы));
		ПоясняющийТекст = НСтр("ru='Выберите дату отчета по выдаваемому авансу';uk='Виберіть дату звіту за авансом, що видається'") + " ";
		ОткрытьФорму("ОбщаяФорма.ВыборДаты",
			Новый Структура("ПоясняющийТекст, НачальноеЗначение", ПоясняющийТекст),,,,,
			Оповещение,
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
			
	ИначеЕсли ТипЗнч(ВыбранноеЗначение) <> Тип("Дата") Тогда
		
		Элемент.ОграничениеТипа = Новый ОписаниеТипов("Строка");
		Элемент.КнопкаВыбора = Ложь;
		Элемент.РедактированиеТекста = Ложь;
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыполнитьПослеВыбораДаты(ВыбраннаяДата, Параметры) Экспорт
	
	Форма = Параметры.Форма;
	Объект = Параметры.Форма.Объект;
	Элементы = Параметры.Форма.Элементы;
	Дата = Параметры.Дата;
	
	Если ЗначениеЗаполнено(ВыбраннаяДата) Тогда
		
		Если ВыбраннаяДата < Дата Тогда
			ВыбраннаяДата = Дата;
		КонецЕсли;
		
		Объект.ДатаАвансовогоОтчета = ВыбраннаяДата;
		Форма.ПериодАвансовогоОтчета = ВыбраннаяДата;
		
		Элементы.ПериодАвансовогоОтчета.ОграничениеТипа = Новый ОписаниеТипов("Дата");
		Элементы.ПериодАвансовогоОтчета.КнопкаВыбора = Истина;
		Элементы.ПериодАвансовогоОтчета.РедактированиеТекста = Истина;
	Иначе
		
		Если ТипЗнч(Форма.ПериодАвансовогоОтчета) = Тип("Дата") Тогда
			Возврат;
		КонецЕсли;
		
		Если Объект.ДатаАвансовогоОтчета = ТекущаяДата() + 7 * 24 * 3600 Тогда
			Форма.ПериодАвансовогоОтчета = НСтр("ru='Через неделю';uk='Через тиждень'");
		ИначеЕсли Объект.ДатаАвансовогоОтчета = ТекущаяДата() + 14 * 24 * 3600 Тогда
			Форма.ПериодАвансовогоОтчета = НСтр("ru='Через две недели';uk='Через два тижні'");
		ИначеЕсли Объект.ДатаАвансовогоОтчета = ДобавитьМесяц(ТекущаяДата(), 1) Тогда
			Форма.ПериодАвансовогоОтчета = НСтр("ru='Через месяц';uk='Через місяць'");
		КонецЕсли;
	КонецЕсли;
	
	ВыполнитьОбработкуОповещения(Параметры.ОповещениеФормы);
	
КонецПроцедуры

#КонецОбласти
