
#Область ПрограммныйИнтерфейс

// Возвращает дату передачи выплаты пособий в ФСС.
//
// Параметры:
//  Организация - СправочникСсылка.Организации
// 
// Возвращаемое значение:
//	Дата
//
Функция ДатаПередачиФССВыплатыПособий(Организация) Экспорт

	Возврат Неопределено
	
КонецФункции

// Определяет по статусу является ли объект редактируемым или нет 
//
// Параметры
//  Статус - Перечисления.СтатусыЗаявленийИРеестровНаВыплатуПособий
//
// Возвращаемое значение:
//    Булево - истина, если статус позволяет редактировать документ.
//
Функция СтатусПозволяетРедактироватьДокумент(Статус) Экспорт
	СписокСтатусовПозволяющихРедактироватьДокумент = Новый Массив;
	СписокСтатусовПозволяющихРедактироватьДокумент.Добавить(Перечисления.СтатусыЗаявленийИРеестровНаВыплатуПособий.ПустаяСсылка());
	СписокСтатусовПозволяющихРедактироватьДокумент.Добавить(Перечисления.СтатусыЗаявленийИРеестровНаВыплатуПособий.ВРаботе);
	СписокСтатусовПозволяющихРедактироватьДокумент.Добавить(Перечисления.СтатусыЗаявленийИРеестровНаВыплатуПособий.Подготовлен);
	СписокСтатусовПозволяющихРедактироватьДокумент.Добавить(Перечисления.СтатусыЗаявленийИРеестровНаВыплатуПособий.НеПринятФСС);
	СписокСтатусовПозволяющихРедактироватьДокумент.Добавить(Перечисления.СтатусыЗаявленийИРеестровНаВыплатуПособий.Аннулирован);
	
	Возврат СписокСтатусовПозволяющихРедактироватьДокумент.Найти(Статус) <> Неопределено;	
	
КонецФункции 

// Процедура переопределяет свойства объекта, с которыми он будет отображен в форме Отчетность
// Параметры:
//  СвойстваОбъектов  - ТаблицаЗначений - (см. РегламентированнаяОтчетностьПереопределяемый.ОпределитьСвойстваОбъектовДляОтображенииВФормеОтчетность).
//
Процедура ОпределитьСвойстваОбъектовДляОтображенииВФормеОтчетность(СвойстваОбъектов) Экспорт
	

КонецПроцедуры

// Определяет свойства, касающиеся общих свойств объектов конфигураций-потребителей для отображения в форме Отчетность
// и возможности создания новый объектов из формы Отчетность
//
// Параметры:
//  ТаблицаОписания  - ТаблицаЗначений -  (см. РегламентированнаяОтчетностьПереопределяемый.ОпределитьТаблицуОписанияОбъектовРегламентированнойОтчетности).
//		
Процедура ОпределитьТаблицуОписанияОбъектовРегламентированнойОтчетности(ТаблицаОписания) Экспорт
	
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция КатегорииНачисленийПособийПоПрямымВыплатамФСС() Экспорт
	
	Возврат ПрямыеВыплатыПособийСоциальногоСтрахованияВнутренний.КатегорииНачисленийПособийПоПрямымВыплатамФСС();	
	
КонецФункции

Функция ПособиеПлатитУчастникПилотногоПроекта(Организация, ДатаВыплатыПособия) Экспорт
	
	Возврат Ложь;
	
КонецФункции

#Область БлокФункцийПервоначальногоЗаполненияИОбновленияИБ

// Добавляет в список Обработчики процедуры-обработчики обновления,
// необходимые данной подсистеме.
//
// Параметры:
//   Обработчики - ТаблицаЗначений - см. описание функции НоваяТаблицаОбработчиковОбновления
//                                   общего модуля ОбновлениеИнформационнойБазы.
// 
Процедура ЗарегистрироватьОбработчикиОбновления(Обработчики) Экспорт
	
		
КонецПроцедуры	

#КонецОбласти   

// Определяет есть ли в массиве начислений пособия оплачиваемые за счет ФСС 
//
// Параметры
//  МассивНачислений - массив или список значений содержащий виды расчетов
//
// Возвращаемое значение:
//    Булево - истина, если в массиве начислений есть пособия за счет ФСС.
//
Функция КоллекцияСодержитПособияЗаСчетФСС(МассивНачислений) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Начисления.Ссылка
	|ИЗ
	|	ПланВидовРасчета.Начисления КАК Начисления
	|ГДЕ
	|	Начисления.Ссылка В(&МассивНачислений)
	|	И Начисления.КатегорияНачисленияИлиНеоплаченногоВремени В(&МассивКатегорий)";
	Запрос.УстановитьПараметр("МассивНачислений", МассивНачислений);
	Запрос.УстановитьПараметр("МассивКатегорий", ПрямыеВыплатыПособийСоциальногоСтрахования.КатегорииНачисленийПособийПоПрямымВыплатамФСС());
	Результат = Запрос.Выполнить();
	
	Возврат Не Результат.Пустой();	
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ЗаявлениеРасчетВФСС
Функция ДанныеЗаполненияЗаявленияВФССОВозмещенииВыплатРодителямДетейИнвалидов(Месяц, ФондСоциальногоСтрахования, Организация, СписокСотрудников, Ссылка, ОплатаДнейУходаЗаДетьмиИнвалидами = Неопределено,РежимЗаполнения) Экспорт
	
	Возврат ПрямыеВыплатыПособийСоциальногоСтрахованияВнутренний.ДанныеЗаполненияЗаявленияВФССОВозмещенииВыплатРодителямДетейИнвалидов(Месяц, ФондСоциальногоСтрахования, Организация, СписокСотрудников, Ссылка, ОплатаДнейУходаЗаДетьмиИнвалидами,РежимЗаполнения);
	
КонецФункции 

Функция ОписаниеФиксацииРеквизитовЗаявленияВФССОВозмещенииВыплатРодителямДетейИнвалидов() Экспорт
	
	Возврат ПрямыеВыплатыПособийСоциальногоСтрахованияВнутренний.ОписаниеФиксацииРеквизитовЗаявленияВФССОВозмещенииВыплатРодителямДетейИнвалидов();
	
КонецФункции 

Функция ИспользуетсяЗаполнениеЗаявленияВФССОВозмещенииВыплатРодителямДетейИнвалидов() Экспорт
	
	Возврат ПрямыеВыплатыПособийСоциальногоСтрахованияВнутренний.ИспользуетсяЗаполнениеДокументаЗаявлениеРасчетВФСС();
	
КонецФункции 

#КонецОбласти

Функция ДанныеЗаполненияРасходовНаПогребение(Месяц, ФондСоциальногоСтрахования, Организация, СписокСотрудников = Неопределено, Ссылка, ЕдиновременноеПособие = Неопределено) Экспорт
	
	Возврат ПрямыеВыплатыПособийСоциальногоСтрахованияВнутренний.ДанныеЗаполненияРасходовНаПогребение(Месяц, ФондСоциальногоСтрахования, Организация, СписокСотрудников, Ссылка, ЕдиновременноеПособие);
	
КонецФункции

Функция ЗапросПоСтруктуре(Структура) Экспорт
	
	Запрос = Новый Запрос;  
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	ШаблонПоля = " &#Парам# КАК #Парам#,";
	
	Текст = "ВЫБРАТЬ #Поля#
	|	ПОМЕСТИТЬ ВТВторичныеДанные";
	
	Поля = "";
	
	Для каждого Поле Из Структура Цикл
		Поля = Поля + Символы.ПС + СтрЗаменить(ШаблонПоля, "#Парам#", Поле.Ключ);
		Запрос.Параметры.Вставить(Поле.Ключ);
	КонецЦикла;
	
	СтроковыеФункцииКлиентСервер.УдалитьПоследнийСимволВСтроке(Поля, 1);
	Запрос.Текст = СтрЗаменить(Текст, "#Поля#", Поля);
	
	ЗаполнитьЗначенияСвойств(Запрос.Параметры, Структура); 
	
	Возврат Запрос
	
КонецФункции 

Функция ЗапросПоСтрокеПолей(СтрокаПолей) Экспорт
	
	Запрос = Новый Запрос;  
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	ШаблонПоля = " ЕстьNULL(&#Парам#, """") КАК #Парам#,";
	
	Текст = "ВЫБРАТЬ #Поля#
	|	ПОМЕСТИТЬ ВТВторичныеДанные";
	
	Поля = "";
	
	МассивПолей = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СтрокаПолей);
	Для каждого Поле Из МассивПолей Цикл
		Поля = Поля + Символы.ПС + СтрЗаменить(ШаблонПоля, "#Парам#", Поле);
		Запрос.Параметры.Вставить(Поле);
	КонецЦикла;
	
	СтроковыеФункцииКлиентСервер.УдалитьПоследнийСимволВСтроке(Поля, 1);
	Запрос.Текст = СтрЗаменить(Текст, "#Поля#", Поля);
	
	Возврат Запрос
	
КонецФункции 

#КонецОбласти
