////////////////////////////////////////////////////////////////////////////////
// Процедуры, используемые для локализации документа "Ввод остатков внеоборотных активов".
// 
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

#Область Проведение

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

// Добавляет в текст запроса реквизиты документа ВводОстатковВнеоборотныхАктивов2_4
//
// Параметры:
//  ТекстЗапроса - Строка	 - Исходный текст запроса, в котором должно быть поле "&ВводОстатковВнеоборотныхАктивов_РеквизитыШапки".
//  ИмяТаблицы	 - Строка	 - Имя таблицы документа.
//
Процедура ДобавитьВТекстЗапросаРеквизитыШапки(ТекстЗапроса, ИмяТаблицы) Экспорт

	ПоляЛокализация = "NULL";
	
	//++ Локализация
	//-- Локализация
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВводОстатковВнеоборотныхАктивов_РеквизитыШапки", ПоляЛокализация);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#Область ОбработчикиСобытий

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый документ.
//  Отказ - Булево - Признак проведения документа.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то проведение документа выполнено не будет.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ОбработкаПроведения(Объект, Отказ, РежимПроведения) Экспорт
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
// 
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то будет выполнен отказ от продолжения работы после выполнения проверки заполнения.
//  ПроверяемыеРеквизиты - Массив - Массив путей к реквизитам, для которых будет выполнена проверка заполнения.
//
Процедура ОбработкаПроверкиЗаполнения(Объект, Отказ, ПроверяемыеРеквизиты) Экспорт
	
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект.
//  ДанныеЗаполнения - Произвольный - Значение, которое используется как основание для заполнения.
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения стандартной (системной) обработки события.
//
Процедура ОбработкаЗаполнения(Объект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//
Процедура ОбработкаУдаленияПроведения(Объект, Отказ) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
// 
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//  РежимЗаписи - РежимЗаписиДокумента - В параметр передается текущий режим записи документа. Позволяет определить в теле процедуры режим записи.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ПередЗаписью(Объект, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
// 
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина, то запись выполнена не будет и будет вызвано исключение.
//
Процедура ПриЗаписи(Объект, Отказ) Экспорт
	
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  ОбъектКопирования - ДокументОбъект.<Имя документа> - Исходный документ, который является источником копирования.
//
Процедура ПриКопировании(Объект, ОбъектКопирования) Экспорт
	
	
КонецПроцедуры

#КонецОбласти

#Область ПодключаемыеКоманды

// Определяет список команд создания на основании.
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//  Параметры - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.Параметры
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	
КонецПроцедуры

// Добавляет команду создания документа "Авансовый отчет".
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//
Процедура ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт


КонецПроцедуры

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//   Параметры - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.Параметры
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	
КонецПроцедуры

// Добавляет команды печати.
// 
// Параметры:
// 	КомандыПечати - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	
КонецПроцедуры

#КонецОбласти

#Область Печать

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	
КонецПроцедуры

#КонецОбласти

//++ НЕ УТ
#Область ПроводкиРегУчета

// Функция возвращает текст запроса для отражения документа в регламентированном учете.
//
// Возвращаемое значение:
//	Строка - Текст запроса
//
Функция ТекстОтраженияВРеглУчете() Экспорт
	
	ТекстЗапроса = "";
	
	//++ Локализация
	//-- Локализация
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Функция возвращает текст запроса дополнительных временных таблиц,
// необходимых для отражения в регламентированном учете
//
// Возвращаемое значение:
//   Строка - сформированный текст запроса.
//
Функция ТекстЗапросаВТОтраженияВРеглУчете() Экспорт
	
	//++ Локализация
	//-- Локализация
	
	Возврат "";
	
КонецФункции

#КонецОбласти
//-- НЕ УТ

#Область Проведение

// Процедура дополняет тексты запросов проведения документа.
//
// Параметры:
//  Запрос - Запрос - Общий запрос проведения документа.
//  ТекстыЗапроса - СписокЗначений - Список текстов запроса проведения.
//  Регистры - Строка, Структура - Список регистров проведения документа через запятую или в ключах структуры.
//
Процедура ДополнитьТекстыЗапросовПроведения(Запрос, ТекстыЗапроса, Регистры) Экспорт
	
	//++ Локализация

	ТекстЗапросаТаблицаПорядокУчетаОСБУ(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПараметрыАмортизацииОСБУ(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСобытияОСОрганизаций(ТекстыЗапроса, Регистры);
	
	

	ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(ТекстыЗапроса, Регистры);

	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьЗначенияПараметровПроведения(Реквизиты, ЗначенияПараметровПроведения) Экспорт

	//++ Локализация
	//-- Локализация
	
КонецПроцедуры
 
Функция ТекстЗапросаТаблицаПервоначальныеСведенияОС(ТекстыЗапроса) Экспорт
	
	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтПервоначальныеСведенияОС(ТекстыЗапроса, "Документ.ВводОстатковВнеоборотныхАктивов2_4");

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка                         КАК Регистратор,
	|	&Период                         КАК Период,
	|	ТаблицаОС.ОсновноеСредство      КАК ОсновноеСредство,
	|	&Организация                    КАК Организация,
	|
	|	ВЫБОР 
	|		КОГДА &ОтражатьВРеглУчете 
	|			ТОГДА ТаблицаОС.ДатаПринятияКУчетуБУ 
	|		ИНАЧЕ ЕСТЬNULL(втПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюБУ, ДАТАВРЕМЯ(1, 1, 1))
	|	КОНЕЦ                           КАК ДатаВводаВЭксплуатациюБУ,
	|
	|	ВЫБОР 
	|		КОГДА &ОтражатьВУпрУчете 
	|			ТОГДА ТаблицаОС.ДатаПринятияКУчетуУУ 
	|		ИНАЧЕ ЕСТЬNULL(втПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюУУ, ДАТАВРЕМЯ(1, 1, 1))
	|	КОНЕЦ                           КАК ДатаВводаВЭксплуатациюУУ,
	|
	|	ВЫБОР
	|		КОГДА &ОтражатьВРеглУчете И &Период < &ДатаНачалаУчета
	|			ТОГДА ТаблицаОС.ДокументВводаВЭксплуатациюБУ 
	|		КОГДА &ОтражатьВРеглУчете И &Период >= &ДатаНачалаУчета
	|			ТОГДА &Ссылка 
	|		ИНАЧЕ ЕСТЬNULL(втПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюБУ, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ                           КАК ДокументВводаВЭксплуатациюБУ,
	|
	|	ВЫБОР 
	|		КОГДА &ОтражатьВУпрУчете И &Период < &ДатаНачалаУчета
	|			ТОГДА ТаблицаОС.ДокументВводаВЭксплуатациюУУ 
	|		КОГДА &ОтражатьВУпрУчете И &Период >= &ДатаНачалаУчета
	|			ТОГДА &Ссылка 
	|		ИНАЧЕ ЕСТЬNULL(втПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюУУ, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ                           КАК ДокументВводаВЭксплуатациюУУ,
	|
	|	ВЫБОР
	|		КОГДА &ОтражатьВРеглУчете 
	|			ТОГДА ТаблицаОС.МетодНачисленияАмортизацииБУ 
	|		ИНАЧЕ ЕСТЬNULL(втПервоначальныеСведенияОС.МетодНачисленияАмортизацииБУ, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ                           КАК МетодНачисленияАмортизацииБУ,
	|
	|	ВЫБОР 
	|		КОГДА &ОтражатьВРеглУчете
	|			ТОГДА ТаблицаОС.МетодНачисленияАмортизацииНУ
	|		ИНАЧЕ ЕСТЬNULL(втПервоначальныеСведенияОС.МетодНачисленияАмортизацииНУ, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ                           КАК МетодНачисленияАмортизацииНУ,
	|
	|
	|	ВЫБОР 
	|		КОГДА &ОтражатьВРеглУчете ИЛИ НЕ &ВедетсяРегламентированныйУчетВНА
	|			ТОГДА ТаблицаОС.ПервоначальнаяСтоимостьБУ 
	|		ИНАЧЕ ЕСТЬNULL(втПервоначальныеСведенияОС.ПервоначальнаяСтоимостьБУ, 0)
	|	КОНЕЦ                           КАК ПервоначальнаяСтоимостьБУ,
	|
	|	ВЫБОР 
	|		КОГДА &ОтражатьВРеглУчете 
	|			ТОГДА ТаблицаОС.ПервоначальнаяСтоимостьНУ 
	|		ИНАЧЕ ЕСТЬNULL(втПервоначальныеСведенияОС.ПервоначальнаяСтоимостьНУ, 0)
	|	КОНЕЦ                           КАК ПервоначальнаяСтоимостьНУ,
	|
	|	ВЫБОР 
	|		КОГДА &ОтражатьВУпрУчете 
	|			ТОГДА ТаблицаОС.ПервоначальнаяСтоимостьУУ 
	|		ИНАЧЕ ЕСТЬNULL(втПервоначальныеСведенияОС.ПервоначальнаяСтоимостьУУ, 0)
	|	КОНЕЦ                           КАК ПервоначальнаяСтоимостьУУ
	
	|
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПервоначальныеСведенияОС КАК втПервоначальныеСведенияОС
	|		ПО втПервоначальныеСведенияОС.ОсновноеСредство = ТаблицаОС.ОсновноеСредство
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &ОтражатьВОперативномУчете";
	

	//-- Локализация
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПервоначальныеСведенияНМА(ТекстыЗапроса) Экспорт
	
	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	//-- Локализация
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаСтоимостьОС() Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	//-- Локализация
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаАмортизацияОС() Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	//-- Локализация
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаСтоимостьНМА() Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	//-- Локализация
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаАмортизацияНМА() Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	//-- Локализация
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаМестонахождениеОС() Экспорт
	
	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	//-- Локализация
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПорядокУчетаОС() Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	//-- Локализация
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПорядокУчетаОСУУ() Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	//-- Локализация

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПорядокУчетаНМАУУ() Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	//-- Локализация

	Возврат ТекстЗапроса;
	
КонецФункции
 
Функция АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра, ПереопределениеРасчетаПараметров, СинонимТаблицыДокумента) Экспорт

	ТекстЗапроса = Неопределено;
	ТекстыЗапроса = Новый СписокЗначений;
	
	//++ Локализация
	//-- Локализация
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ОбработатьОСПередЗаписью(Объект) Экспорт

	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

// Дополняет параметры выбора статей и аналитик.
// 
// Параметры:
// 	ПараметрыВыбораСтатьиИАналитики - Массив из см. ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики -
Процедура ДополнитьПараметрыВыбораСтатейИАналитик(ПараметрыВыбораСтатейИАналитик) Экспорт

	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область ФормаОсновныеСредства

Процедура ФормаОсновныеСредства_НастроитьЗависимыеЭлементыФормы(Форма, СтруктураИзмененныхРеквизитов) Экспорт

	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

Процедура ФормаОсновныеСредства_ДополнитьПараметрыВыбораСтатейИАналитик(ПараметрыВыбораСтатейИАналитик) Экспорт

	//++ Локализация

	// СтатьяРасходовБУ
	ПараметрыВыбора = ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики();
	ПараметрыВыбора.ПутьКДанным = "";
	ПараметрыВыбора.Статья = "СтатьяРасходовБУ";
	ПараметрыВыбора.ДоступностьПоОперации = Неопределено;

	ПараметрыВыбора.ВыборСтатьиРасходов = Истина;
	ПараметрыВыбора.АналитикаРасходов = "АналитикаРасходовБУ";

	ПараметрыВыбора.ЭлементыФормы.Статья.Добавить("СтатьяРасходовБУ");
	ПараметрыВыбора.ЭлементыФормы.АналитикаРасходов.Добавить("АналитикаРасходовБУ");

	ПараметрыВыбораСтатейИАналитик.Добавить(ПараметрыВыбора);

	// СтатьяРасходовНУ
	ПараметрыВыбора = ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики();
	ПараметрыВыбора.ПутьКДанным = "";
	ПараметрыВыбора.Статья = "СтатьяРасходовНУ";
	ПараметрыВыбора.ДоступностьПоОперации = Неопределено;

	ПараметрыВыбора.ВыборСтатьиРасходов = Истина;
	ПараметрыВыбора.АналитикаРасходов = "АналитикаРасходовНУ";

	ПараметрыВыбора.ЭлементыФормы.Статья.Добавить("СтатьяРасходовНУ");
	ПараметрыВыбора.ЭлементыФормы.АналитикаРасходов.Добавить("АналитикаРасходовНУ");

	ПараметрыВыбораСтатейИАналитик.Добавить(ПараметрыВыбора);
	
	
	//-- Локализация
	
КонецПроцедуры

Процедура ФормаОсновныеСредства_ПриВыполненииКоманды(ИмяКоманды, Форма) Экспорт
	
	Объект = Форма.Объект;
	
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область ФормаНематериальныеАктивы

Процедура ФормаНематериальныеАктивы_НастроитьЗависимыеЭлементыФормы(Форма, СтруктураИзмененныхРеквизитов) Экспорт

	//++ Локализация
	//-- Локализация
	
КонецПроцедуры
 
Процедура ФормаНематериальныеАктивы_ПриВыполненииКоманды(ИмяКоманды, Форма) Экспорт
	
	Объект = Форма.Объект;
	
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры
 
#КонецОбласти

#Область ФормаПереданныеВАрендуОсновныеСредства

Процедура ФормаПереданныеВАрендуОсновныеСредства_НастроитьЗависимыеЭлементыФормы(Форма, СтруктураИзмененныхРеквизитов) Экспорт

	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

Процедура ФормаПереданныеВАрендуОсновныеСредства_ПриВыполненииКоманды(ИмяКоманды, Форма) Экспорт
	
	Объект = Форма.Объект;
	
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область ФормаАрендованныеОсновныеСредства

Процедура ФормаАрендованныеОсновныеСредства_НастроитьЗависимыеЭлементыФормы(Форма, СтруктураИзмененныхРеквизитов) Экспорт

	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

Процедура ФормаАрендованныеОсновныеСредства_ПриВыполненииКоманды(ИмяКоманды, Форма) Экспорт
	
	Объект = Форма.Объект;
	
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область ФормаПредметыЛизингаЗаБалансом

Процедура ФормаПредметыЛизингаЗаБалансом_НастроитьЗависимыеЭлементыФормы(Форма, СтруктураИзмененныхРеквизитов) Экспорт

	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

Процедура ФормаНематериальныеАктивы_ДополнитьПараметрыВыбораСтатейИАналитик(ПараметрыВыбораСтатейИАналитик) Экспорт

	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

Процедура ФормаПредметыЛизингаЗаБалансом_ПриВыполненииКоманды(ИмяКоманды, Форма) Экспорт
	
	Объект = Форма.Объект;
	
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область ФормаВложенияВоВнеоборотныеАктивы

Процедура ФормаВложенияВоВнеоборотныеАктивы_НастроитьЗависимыеЭлементыФормы(Форма, СтруктураИзмененныхРеквизитов) Экспорт

	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

Процедура ФормаВложенияВоВнеоборотныеАктивы_ПриИзмененииРеквизитов(Форма, СтруктураИзмененныхРеквизитов) Экспорт

	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

Процедура ФормаВложенияВоВнеоборотныеАктивы_ДополнитьВспомогательныеРеквизиты(Форма, ВспомогательныеРеквизиты) Экспорт

	//++ Локализация
	//-- Локализация
	
КонецПроцедуры
 
#КонецОбласти

#Область ФормаРасчетыПоДоговорамЛизинга

Процедура ФормаРасчетыПоДоговорамЛизинга_НастроитьЗависимыеЭлементыФормы(Форма, СтруктураИзмененныхРеквизитов) Экспорт

	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

Процедура ФормаРасчетыПоДоговорамЛизинга_ПриВыполненииКоманды(ИмяКоманды, Форма) Экспорт
	
	Объект = Форма.Объект;
	
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область ФормаРедактированияСтрокиОС

Процедура ФормаРедактированияСтрокиОС_ПриЧтенииСозданииНаСервере(Форма) Экспорт

	//++ Локализация

	Параметры = Форма.Параметры;
	Элементы = Форма.Элементы;

	Если Параметры.Свойство("ЗначенияРеквизитов") Тогда
		
		Форма.РезервПереоценкиСтоимостиРеглСумма = 
			?(Форма.РезервПереоценкиСтоимостиРегл < 0, 
				-Форма.РезервПереоценкиСтоимостиРегл, 
				Форма.РезервПереоценкиСтоимостиРегл);
				
		Форма.РезервПереоценкиАмортизацииРеглСумма = 
			?(Форма.РезервПереоценкиАмортизацииРегл < 0, 
				-Форма.РезервПереоценкиАмортизацииРегл, 
				Форма.РезервПереоценкиАмортизацииРегл);
				
		Форма.РезервПереоценкиРеглЗнак = (Форма.РезервПереоценкиСтоимостиРегл > 0);
		
	КонецЕсли;

	ДатаУчетнойПолитики = КонецМесяца(Форма.Дата) + 1;

	ОбщегоНазначенияБПКлиентСервер.УстановитьПараметрОрганизацияФункциональныхОпцийФормы(
		Форма, Форма.Организация, ДатаУчетнойПолитики);

	Форма.ПлательщикНалогаНаПрибыль = УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Форма.Организация, ДатаУчетнойПолитики);

	Форма.ВалютаРегл = Константы.ВалютаРегламентированногоУчета.Получить();
	Элементы.ДекорацияЗаголовокНУ.Заголовок = СтрШаблон(НСтр("ru='НУ (%1):';uk='ПО (%1):'"), Строка(Форма.ВалютаРегл));

	Форма.УпрУчетПоДаннымБУ = ПолучитьФункциональнуюОпцию("ИспользоватьАмортизациюБухгалтерскогоУчетаВУправленческомУчете");

	Элементы.ГруппаМестоНахождение.Заголовок = НСтр("ru='Местонахождение';uk='Місцезнаходження'");
	Элементы.МОЛ.Подсказка = НСтр("ru='Материально ответственное лицо за основное средство.';uk='Матеріально відповідальна особа за основний засіб.'")
	//-- Локализация
	
КонецПроцедуры

Процедура ФормаРедактированияСтрокиОС_НастроитьЗависимыеЭлементыФормы(Форма, СтруктураИзмененныхРеквизитов) Экспорт

	//++ Локализация

	Элементы = Форма.Элементы;

	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;

	Если ОбновитьВсе Тогда
		
		Элементы.ГруппаАмортизацияУУ.ОтображатьЗаголовок = 
			Форма.ОтражатьВРеглУчете
			И Форма.ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА;
			
		Элементы.ДекорацияЗаголовокНУ.Видимость = 
			Форма.ПлательщикНалогаНаПрибыль 
			И Форма.ОтражатьВРеглУчете 
			И Форма.ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА;
	КонецЕсли;

	Если СтруктураИзмененныхРеквизитов.Свойство("ГруппаФинансовогоУчета")
		ИЛИ ОбновитьВсе Тогда
		
		ТекстСтоимостьЦФ = "";
		ТекстАмортизацияЦФ = "";
		
		Если Форма.ОтражатьВРеглУчете
			И Форма.ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА Тогда
		
			Если ЗначениеЗаполнено(Форма.ГруппаФинансовогоУчета) Тогда
				РеквизитыГФУ = РегистрыСведений.ПорядокОтраженияНаСчетахУчета.СтруктураЗначенийПоАналитикеУчета(Форма.ГруппаФинансовогоУчета, СтрРазделить("СтоимостьВНА,СтоимостьВНА_ЦФ,АмортизацияВНА,АмортизацияВНА_ЦФ", ","));
				ТекстСтоимость     = СтрШаблон(НСтр("ru='Для бухгалтерского и налогового учета определяется как остаток на счете %1';uk='Для бухгалтерського і податкового обліку визначається як залишок на рахунку %1'"), РеквизитыГФУ.СчетУчета_СтоимостьВНА);
				ТекстАмортизация   = СтрШаблон(НСтр("ru='Для бухгалтерского и налогового учета определяется как остаток на счете %1';uk='Для бухгалтерського і податкового обліку визначається як залишок на рахунку %1'"), РеквизитыГФУ.СчетУчета_АмортизацияВНА);
				СписокСпособовАмортизации = ФормаРедактированияСтрокиОС_ПолучитьСписокСпособовАмортизацииБУ(РеквизитыГФУ.СчетУчета_СтоимостьВНА);
				Элементы.МетодНачисленияАмортизацииБУ.СписокВыбора.ЗагрузитьЗначения(СписокСпособовАмортизации);
				Элементы.МетодНачисленияАмортизацииНУ.СписокВыбора.ЗагрузитьЗначения(СписокСпособовАмортизации);
			Иначе
				ТекстСтоимость     = НСтр("ru='Для бухгалтерского и налогового учета определяется как остаток на счете учета.';uk='Для бухгалтерського і податкового обліку визначається як залишок на рахунку обліку.'");
				ТекстАмортизация   = НСтр("ru='Для бухгалтерского и налогового учета определяется как остаток на счете учета накопления амортизации.';uk='Для бухгалтерського і податкового обліку визначається як залишок на рахунку обліку накопичення амортизації.'");
			КонецЕсли; 
			
		Иначе	
			
			ТекстСтоимость = "";
			ТекстАмортизация = "";
			
		КонецЕсли; 
		
		Элементы.ГруппаТекущаяСтоимостьЗаголовок.Подсказка = ТекстСтоимость;
		Элементы.ГруппаТекущаяСтоимостьЗаголовокЦФ.Подсказка = ТекстСтоимостьЦФ;
		Элементы.ГруппаНакопленнаяАмортизацияЗаголовок.Подсказка = ТекстАмортизация;
		Элементы.ГруппаНакопленнаяАмортизацияЗаголовокЦФ.Подсказка = ТекстАмортизацияЦФ;
		
	КонецЕсли; 

	//-- Локализация
	
КонецПроцедуры

Процедура ФормаРедактированияСтрокиОС_ПриИзмененииРеквизита(ИмяЭлемента, Форма, ДополнительныеПараметры) Экспорт

	//++ Локализация

	Элементы = Форма.Элементы;
	
	Если ИмяЭлемента = Элементы.МетодНачисленияАмортизацииБУ.Имя Тогда
		
		ФормаРедактированияСтрокиОС_МетодНачисленияАмортизацииБУПриИзменении(Форма, ДополнительныеПараметры);
	
	ИначеЕсли ИмяЭлемента = Элементы.МетодНачисленияАмортизацииНУ.Имя Тогда
		
		ФормаРедактированияСтрокиОС_МетодНачисленияАмортизацииНУПриИзменении(Форма, ДополнительныеПараметры);
		
	ИначеЕсли ИмяЭлемента = Элементы.ОсновноеСредство.Имя Тогда
		
		ФормаРедактированияСтрокиОС_ОсновноеСредствоПриИзменении(Форма, ДополнительныеПараметры);
		
	КонецЕсли; 

	//-- Локализация
	
КонецПроцедуры

Процедура ФормаРедактированияСтрокиОС_ЗаполнитьСведенияОС(Форма) Экспорт

	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

Функция ФормаРедактированияСтрокиОС_ПолучитьСписокСпособовАмортизацииБУ(СчетУчетаБУ) Экспорт
	
	СпособыНачисленияАмортизации = Новый Массив;
	
	СпособыНачисленияАмортизации.Добавить(Перечисления.СпособыНачисленияАмортизацииОС.Линейный);
	СпособыНачисленияАмортизации.Добавить(Перечисления.СпособыНачисленияАмортизацииОС.ПропорциональноОбъемуПродукции);
	
	Если БухгалтерскийУчетПовтИсп.СчетВИерархии(СчетУчетаБУ,ПланыСчетов.Хозрасчетный.БиблиотечныеФондыИндивидуально)
			ИЛИ  БухгалтерскийУчетПовтИсп.СчетВИерархии(СчетУчетаБУ,ПланыСчетов.Хозрасчетный.МалоценныеНеоборотныеМатериальныеАктивыИндивидуально) Тогда
		
		СпособыНачисленияАмортизации.Добавить(Перечисления.СпособыНачисленияАмортизацииОС._50_50);
		СпособыНачисленияАмортизации.Добавить(Перечисления.СпособыНачисленияАмортизацииОС._100);			
	Иначе	
		СпособыНачисленияАмортизации.Добавить(Перечисления.СпособыНачисленияАмортизацииОС.УменьшаемогоОстатка);
		СпособыНачисленияАмортизации.Добавить(Перечисления.СпособыНачисленияАмортизацииОС.УскоренногоУменьшенияОстатка);
		СпособыНачисленияАмортизации.Добавить(Перечисления.СпособыНачисленияАмортизацииОС.Кумулятивный);		
	КонецЕсли;
	
	Возврат СпособыНачисленияАмортизации;
	
КонецФункции


#КонецОбласти

#Область ФормаРедактированияСтрокиНМА

Процедура ФормаРедактированияСтрокиНМА_ПриИзмененииРеквизита(ИмяЭлемента, Форма, ДополнительныеПараметры) Экспорт

	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

Процедура ФормаРедактированияСтрокиНМА_НастроитьЗависимыеЭлементыФормы(Форма, СтруктураИзмененныхРеквизитов) Экспорт

	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

Процедура ФормаРедактированияСтрокиНМА_ПриЧтенииСозданииНаСервере(Форма) Экспорт

	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

Процедура ФормаРедактированияСтрокиНМА_ЗаполнитьСведенияНМА(Форма) Экспорт

	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

Процедура ФормаРедактированияСтрокиНМА_ЗаполнитьЗначенияПоУмолчанию(Форма) Экспорт

	//++ Локализация
	//-- Локализация
	
КонецПроцедуры
 
#КонецОбласти

#Область Прочее

Процедура ИнициализироватьДокументПередЗаполнением(Объект) Экспорт

	//++ Локализация

	Объект.ОтражатьВРеглУчете = Истина;

	Если ПолучитьФункциональнуюОпцию("ИспользоватьРеглУчет") Тогда
		Объект.ОтражатьВБУиНУ = Истина;
	КонецЕсли; 

	Если ПолучитьФункциональнуюОпцию("ВестиУУНаПланеСчетовХозрасчетный") Тогда
		Объект.ОтражатьВУУ = Истина;
	КонецЕсли;
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьСписокТиповОперацийДокумента(СписокТиповОпераций) Экспорт
	
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

Процедура ОбработкаПолученияФормы(ХозяйственнаяОперация, ВыбраннаяФорма, СтандартнаяОбработка) Экспорт
	
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

Функция ПредставлениеВводаОстатков(ХозяйственнаяОперация) Экспорт
	
	Представление = НСтр("ru='Ввод начальных остатков необоротных активов %1';uk='Введення початкових залишків необоротних активів %1'");
	
	//++ Локализация
	//-- Локализация
	
	Возврат Представление;
	
КонецФункции

Процедура ДополнитьХозяйственныеОперацииИДокументы(ХозяйственныеОперацииИДокументы) Экспорт

	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

Процедура ЗаполнитьРеквизитыВЗависимостиОтСвойств(ОбъектИлиДанныеСтроки, ВспомогательныеРеквизиты, ПараметрыРеквизита, Действие, ИзмененныеРеквизиты) Экспорт

	//++ Локализация

	ЭтоНМА = (ВспомогательныеРеквизиты.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковНМАиРасходовНаНИОКР);

	Если Действие = "Очистить"
		И (ПараметрыРеквизита.ИмяРеквизита = "НакопленнаяАмортизацияНУЦФ"
			ИЛИ ПараметрыРеквизита.ИмяРеквизита = "НакопленнаяАмортизацияБУЦФ"
			
			ИЛИ ПараметрыРеквизита.ИмяРеквизита = "НакопленнаяАмортизацияНУ"
			ИЛИ ПараметрыРеквизита.ИмяРеквизита = "НакопленнаяАмортизацияБУ"
			
			ИЛИ ПараметрыРеквизита.ИмяРеквизита = "ПервоначальнаяСтоимостьБУ"
			ИЛИ ПараметрыРеквизита.ИмяРеквизита = "ПервоначальнаяСтоимостьНУ"
			ИЛИ ПараметрыРеквизита.ИмяРеквизита = "ТекущаяСтоимостьНУ"
			ИЛИ ПараметрыРеквизита.ИмяРеквизита = "ТекущаяСтоимостьБУ") Тогда
		
		ОбъектИлиДанныеСтроки[ПараметрыРеквизита.ИмяРеквизита] = 0;
		ИзмененныеРеквизиты.Добавить(ПараметрыРеквизита.ИмяРеквизита);
		
	КонецЕсли;
	
	Если ПараметрыРеквизита.ИмяРеквизита = "НачислятьАмортизациюБУ" 
	
		ИЛИ ПараметрыРеквизита.ИмяРеквизита = "НачислятьАмортизациюНУ" Тогда
		
		ВнеоборотныеАктивыСлужебный.ЗаполнитьОчиститьРеквизит(
			ОбъектИлиДанныеСтроки,
			ПараметрыРеквизита.ИмяРеквизита, 
			Действие, 
			Истина,
			Ложь,
			ИзмененныеРеквизиты);
			
	ИначеЕсли ПараметрыРеквизита.ИмяРеквизита = "МетодНачисленияАмортизацииБУ" Тогда
		
		ЗначениеРеквизита = ?(ЭтоНМА, Перечисления.СпособыНачисленияАмортизацииНМА.Линейный, 
										Перечисления.СпособыНачисленияАмортизацииОС.Линейный);
		
		ВнеоборотныеАктивыСлужебный.ЗаполнитьОчиститьРеквизит(
			ОбъектИлиДанныеСтроки,
			ПараметрыРеквизита.ИмяРеквизита, 
			Действие, 
			ЗначениеРеквизита,
			Неопределено,
			ИзмененныеРеквизиты);
			
	ИначеЕсли ПараметрыРеквизита.ИмяРеквизита = "МетодНачисленияАмортизацииНУ" Тогда
		
		ЗначениеРеквизита = Перечисления.МетодыНачисленияАмортизации.Линейный;
		
		ВнеоборотныеАктивыСлужебный.ЗаполнитьОчиститьРеквизит(
			ОбъектИлиДанныеСтроки,
			ПараметрыРеквизита.ИмяРеквизита, 
			Действие, 
			ЗначениеРеквизита,
			Неопределено,
			ИзмененныеРеквизиты);
	
	ИначеЕсли ПараметрыРеквизита.ИмяРеквизита = "СрокИспользованияБУ"
		ИЛИ ПараметрыРеквизита.ИмяРеквизита = "СрокИспользованияНУ" Тогда
		
		ВнеоборотныеАктивыСлужебный.ЗаполнитьОчиститьРеквизит(
			ОбъектИлиДанныеСтроки,
			ПараметрыРеквизита.ИмяРеквизита, 
			Действие, 
			ОбъектИлиДанныеСтроки.СрокИспользованияУУ,
			0,
			ИзмененныеРеквизиты);
	ИначеЕсли ПараметрыРеквизита.ИмяРеквизита = "КоэффициентУскоренияУУ" Тогда
			
		ВнеоборотныеАктивыСлужебный.ЗаполнитьОчиститьРеквизит(
			ОбъектИлиДанныеСтроки,
			ПараметрыРеквизита.ИмяРеквизита, 
			Действие, 
			1,
			0,
			ИзмененныеРеквизиты);
	КонецЕсли;

	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьВспомогательныеРеквизиты(Объект, ВспомогательныеРеквизиты) Экспорт

	//++ Локализация

	ДатаНачалаУчета = ВнеоборотныеАктивыЛокализация.ДатаНачалаУчетаВнеоборотныхАктивов2_4();
	ВспомогательныеРеквизиты.Вставить("ДатаНачалаУчета", ДатаНачалаУчета);

	Если Объект.Дата < ДатаНачалаУчета И ЗначениеЗаполнено(Объект.Дата) Тогда
		ДатаУчетнойПолитики = КонецМесяца(Объект.Дата) + 1;
	Иначе
		ДатаУчетнойПолитики = Объект.Дата;
	КонецЕсли;

	ЕстьСвязанныеОрганизации = Справочники.Организации.ОрганизацияВзаимосвязанаСДругимиОрганизациями(Объект.Организация);
	ВспомогательныеРеквизиты.Вставить("ЕстьСвязанныеОрганизации", ЕстьСвязанныеОрганизации);
	

	ПлательщикНалогаНаПрибыль = УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Объект.Организация, ДатаУчетнойПолитики);
	ВспомогательныеРеквизиты.Вставить("ПлательщикНалогаНаПрибыль", ПлательщикНалогаНаПрибыль);
	

	ПараметрыУчетнойПолитикиНастройкиУчетаНалогаНаПрибыль = НастройкиНалоговУчетныхПолитикПовтИсп.ДействующиеПараметрыНалоговУчетныхПолитик(
		"НастройкиУчетаНалогаНаПрибыль", Объект.Организация, ДатаУчетнойПолитики);
		
	ВспомогательныеРеквизиты.Вставить("ПараметрыУчетнойПолитикиНастройкиУчетаНалогаНаПрибыль", 
		ПараметрыУчетнойПолитикиНастройкиУчетаНалогаНаПрибыль);

	ВспомогательныеРеквизиты.Вставить("ИспользоватьУчетВнеоборотныхАктивовПоНаправлениямДеятельности", 
		ПолучитьФункциональнуюОпцию("ИспользоватьУчетВнеоборотныхАктивовПоНаправлениямДеятельности"));
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьВспомогательныеРеквизитыПоДаннымСтроки(Объект, ДанныеСтроки, ВспомогательныеРеквизиты) Экспорт

	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

Процедура ЗаполнитьЗначенияПоУмолчанию(ДанныеСтроки, Объект) Экспорт
	
	//++ Локализация
	Если Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковОсновныхСредств Тогда 
		
		Если НЕ ЗначениеЗаполнено(ДанныеСтроки.ГруппаФинансовогоУчета) Тогда
			ДанныеСтроки.ГруппаФинансовогоУчета = Справочники.ГруппыФинансовогоУчетаВнеоборотныхАктивов.ЗначениеПоУмолчанию(
													Перечисления.ВидыВнеоборотныхАктивов.ОсновноеСредство);
		КонецЕсли;
		
	КонецЕсли; 

	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьКлючевыеПоляПоХозяйственнойОперации(ХозяйственнаяОперация, КлючевыеРеквизиты) Экспорт

	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

Функция ОстаткиПоТипуОперации(Дата, ХозяйственнаяОперация, Организации, ДополнительныйОтбор = Неопределено, ПараметрыЗаполненияОстатков = Неопределено) Экспорт

	//++ Локализация

	ДатаОстатков = Новый Граница(Дата, ВидГраницы.Включая);
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковОсновныхСредств Тогда
		
		Возврат ОстаткиОсновныхСредств(ДатаОстатков, ХозяйственнаяОперация, Организации, ДополнительныйОтбор, ПараметрыЗаполненияОстатков);
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковНМАиРасходовНаНИОКР Тогда
		
		Возврат ОстаткиНМАиРасходовНаНИОКР(ДатаОстатков, Организации, ДополнительныйОтбор, ПараметрыЗаполненияОстатков);

	КонецЕсли;
	//-- Локализация
	
	Возврат Неопределено;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

//++ Локализация

	Процедура ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(ТекстыЗапроса, Регистры)
		
		ИмяРегистра = "ОтражениеДокументовВРеглУчете";
		
		Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
			Возврат;
		КонецЕсли;
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	&Период                       КАК Период,
		|	&Организация                  КАК Организация,
		|	НАЧАЛОПЕРИОДА(&Период, ДЕНЬ)  КАК ДатаОтражения
		|ГДЕ
		|	&Период >= &ДатаНачалаУчета
		//|	И (&ОтражатьВБУиНУ ИЛИ &ОтражатьВУУ)
		//|
		//|ОБЪЕДИНИТЬ
		//|
		//|ВЫБРАТЬ
		//|	&Период                      КАК Период,
		//|	&Контрагент                  КАК Организация,
		//|	НАЧАЛОПЕРИОДА(&Период, ДЕНЬ) КАК ДатаОтражения
		//|ГДЕ
		//|	&Период >= &ДатаНачалаУчета
		//|	И (&ОтражатьВБУиНУ ИЛИ &ОтражатьВУУ)
		//|	И &ХозяйственнаяОперация В (
		//|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС),
		//|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе))
		//|	И &РасчетыМеждуОрганизациямиАрендатор";
		|	И (&ОтражатьВБУиНУ ИЛИ &ОтражатьВУУ)";
		
		ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
		
	КонецПроцедуры

	Функция ТекстЗапросаТаблицаПорядокУчетаОСБУ(ТекстыЗапроса, Регистры)

		ИмяРегистра = "ПорядокУчетаОСБУ";
		
		Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
			Возврат "";
		КонецЕсли;
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	&Период                                          КАК Период,
		|	&Организация                                     КАК Организация,
		|	ТаблицаОС.ОсновноеСредство                       КАК ОсновноеСредство,
		|	ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету) КАК Состояние,
		|	ТаблицаОС.НачислятьАмортизациюБУ 				 КАК НачислятьАмортизациюБУ,
		
		|	ТаблицаОС.НачислятьАмортизациюНУ                 КАК НачислятьАмортизациюНУ,
		|
		|	ТаблицаОС.СтатьяРасходовБУ                       КАК СтатьяРасходовБУ,
		|	ТаблицаОС.АналитикаРасходовБУ                    КАК АналитикаРасходовБУ,
		|
		|	ВЫБОР
		|		КОГДА ТаблицаОС.СтатьяРасходовНУ = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
		|				И ТаблицаОС.НачислятьАмортизациюБУ
		|
		|			ТОГДА ТаблицаОС.СтатьяРасходовБУ
		|
		|		ИНАЧЕ ТаблицаОС.СтатьяРасходовНУ 
		|	КОНЕЦ                                            КАК СтатьяРасходовНУ,
		|
		|	ВЫБОР 
		|		КОГДА ТаблицаОС.СтатьяРасходовНУ = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
		|				И ТаблицаОС.НачислятьАмортизациюБУ
		|
		|			ТОГДА ТаблицаОС.АналитикаРасходовБУ
		|
		|		ИНАЧЕ ТаблицаОС.АналитикаРасходовНУ 
		|	КОНЕЦ                                            КАК АналитикаРасходовНУ,
		|
		|	ТаблицаОС.НалоговоеНазначение КАК НалоговоеНазначение 
		|ИЗ
		|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
		|ГДЕ
		|	ТаблицаОС.Ссылка = &Ссылка
		|	И &ОтражатьВРеглУчете
		|	И &ВедетсяРегламентированныйУчетВНА
		|	И &ОтражатьВОперативномУчете";
		
		ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
		
		Возврат ТекстЗапроса;
		
	КонецФункции

	Процедура ТекстЗапросаТаблицаПараметрыАмортизацииОСБУ(ТекстыЗапроса, Регистры)
		
		ИмяРегистра = "ПараметрыАмортизацииОСБУ";
		
		Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
			Возврат;
		КонецЕсли;
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	&Ссылка                               КАК Регистратор,
		|	&Период                               КАК Период,
		|	&Организация                          КАК Организация,
		|	ТаблицаОС.ОсновноеСредство            КАК ОсновноеСредство,
		|
		|	ТаблицаОС.СрокИспользованияБУ         КАК СрокПолезногоИспользованияБУ,
		|	ТаблицаОС.СрокИспользованияНУ         КАК СрокПолезногоИспользованияНУ,
		|	ТаблицаОС.ГрафикАмортизации           КАК ГрафикАмортизации,
		|
		|	ВЫБОР 
		|		КОГДА ТаблицаОС.ЕстьИзменениеПараметровАмортизацииБУ
		|			ТОГДА ТаблицаОС.ОбъемНаработкиОстаточныйБУ 
		|		ИНАЧЕ ТаблицаОС.ОбъемНаработки 
		|	КОНЕЦ                                 КАК ОбъемПродукцииРаботДляВычисленияАмортизации,
		|
		|	ВЫБОР 
		|		КОГДА ТаблицаОС.ЕстьИзменениеПараметровАмортизацииБУ
		|			ТОГДА ТаблицаОС.СрокИспользованияБУОстаточный
		|		ИНАЧЕ ТаблицаОС.СрокИспользованияБУ 
		|	КОНЕЦ                                 КАК СрокИспользованияДляВычисленияАмортизации,
		|
		|	ВЫБОР 
		|		КОГДА ТаблицаОС.ЕстьИзменениеПараметровАмортизацииБУ
		|			ТОГДА ТаблицаОС.СтоимостьДляВычисленияАмортизацииБУ
		|		ИНАЧЕ ТаблицаОС.ТекущаяСтоимостьБУ + ТаблицаОС.ТекущаяСтоимостьБУЦФ 
		|	КОНЕЦ                                 КАК СтоимостьДляВычисленияАмортизации,
		|
		|	ТаблицаОС.ЛиквидационнаяСтоимостьБУ    КАК ЛиквидационнаяСтоимость,
		|
		|	ВЫБОР 
		|		КОГДА ТаблицаОС.ЕстьИзменениеПараметровАмортизацииБУ
		|			ТОГДА ТаблицаОС.СтоимостьДляВычисленияАмортизацииЦФ
		|		ИНАЧЕ ТаблицаОС.ТекущаяСтоимостьБУЦФ 
		|	КОНЕЦ                                 КАК СтоимостьДляВычисленияАмортизацииЦФ,
		|
		|	ВЫБОР 
		|		КОГДА ТаблицаОС.ЕстьИзменениеПараметровАмортизацииБУ
		|			ТОГДА ТаблицаОС.ДатаИзмененияПараметровБУ
		|		ИНАЧЕ ТаблицаОС.ДатаПринятияКУчетуБУ
		|	КОНЕЦ                                 КАК ДатаПоследнегоИзменения
		|ИЗ
		|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
		|ГДЕ
		|	ТаблицаОС.Ссылка = &Ссылка
		|	И &ОтражатьВРеглУчете
		|	И &ВедетсяРегламентированныйУчетВНА
		|	И &ОтражатьВОперативномУчете";
		
		ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
		
	КонецПроцедуры

	Процедура ТекстЗапросаТаблицаСобытияОСОрганизаций(ТекстыЗапроса, Регистры)
		
		ИмяРегистра = "СобытияОСОрганизаций";
		
		Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
			Возврат;
		КонецЕсли;
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	&Ссылка                        КАК Регистратор,
		|	ТаблицаОС.ДатаПринятияКУчетуБУ КАК Период,
		|	&Организация                   КАК Организация,
		|	ТаблицаОС.ОсновноеСредство     КАК ОсновноеСредство,
		|	&НазваниеДокумента             КАК НазваниеДокумента,
		|	&Номер                         КАК НомерДокумента
		|ИЗ
		|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
		|ГДЕ
		|	ТаблицаОС.Ссылка = &Ссылка
		|	И &Период >= &ДатаНачалаУчета
		|	И &ОтражатьВРеглУчете
		|	И &ВедетсяРегламентированныйУчетВНА
		|	И &ОтражатьВОперативномУчете
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	&Ссылка                        КАК Регистратор,
		|	ТаблицаОС.ДатаПринятияКУчету   КАК Период,
		|	&Организация                   КАК Организация,
		|	ТаблицаОС.ОсновноеСредство     КАК ОсновноеСредство,
		|	&НазваниеДокумента             КАК НазваниеДокумента,
		|	&Номер                         КАК НомерДокумента
		|ИЗ
		|	Документ.ВводОстатковВнеоборотныхАктивов2_4.АрендованныеОС КАК ТаблицаОС
		|ГДЕ
		|	ТаблицаОС.Ссылка = &Ссылка
		|	И &Период >= &ДатаНачалаУчета
		|	И &ОтражатьВРеглУчете
		|	И &ВедетсяРегламентированныйУчетВНА
		|	И &ОтражатьВОперативномУчете";
		
		ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
		
	КонецПроцедуры
//-- Локализация

//++ НЕ УТ
#Область ПроводкиРеглУчета

//++ Локализация
//-- Локализация
#КонецОбласти
//-- НЕ УТ

#КонецОбласти

#Область ПроверкаЗаполнения

// Проверяет табличную часть.
// 
// Параметры:
// 	Объект - ДокументОбъект.ВводОстатковВнеоборотныхАктивов2_4 - 
// 	ИмяТЧ - Строка -
// 	Отказ - Булево -
Процедура ПроверитьЗаполнениеТЧ(Объект, ИмяТЧ, Отказ) Экспорт

	
КонецПроцедуры

Функция ПараметрыУниверсальнойПроверкиТЧ(ИмяТЧ) Экспорт

	ПараметрыУниверсальнойПроверкиТЧ = Неопределено;
	
	//++ Локализация
	//-- Локализация
	
	Возврат ПараметрыУниверсальнойПроверкиТЧ;
	
КонецФункции

Процедура ПроверкаТабличнойЧастиРасчетовПоДоговорамЛизинга(Объект, Отказ)
	
	РеквизитыДоговоров = ОбщегоНазначения.ЗначенияРеквизитовОбъектов(Объект.РасчетыПоДоговорамЛизинга.ВыгрузитьКолонку("ДоговорЛизинга"), "ВалютаВзаиморасчетов");
	
	ВалютаРегУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	Для Каждого Строка Из Объект.РасчетыПоДоговорамЛизинга Цикл
		
		Если РеквизитыДоговоров.Получить(Строка.ДоговорЛизинга).ВалютаВзаиморасчетов <> ВалютаРегУчета
			И Не ЗначениеЗаполнено(Строка.СуммаРегл) Тогда
			
			ТекстОшибки = НСтр("ru='Не заполнено поле ""Сумма (регл.)"" в строке %НомерСтроки% списка ""Расчеты по договорам лизинга""';uk='Не заповнене поле ""Сума (регл.)"" в рядку %НомерСтроки% списку ""Розрахунки по договорах лізингу""'");
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%НомерСтроки%", Строка.НомерСтроки);
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстОшибки,
				Объект,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("РасчетыПоДоговорамЛизинга", Строка.НомерСтроки, "СуммаРегл"),
				,
				Отказ);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ФормаРедактированияСтрокиОС

//++ Локализация
Процедура ФормаРедактированияСтрокиОС_МетодНачисленияАмортизацииБУПриИзменении(Форма, ДополнительныеПараметры)
	
	ИзмененныеРеквизиты = "МетодНачисленияАмортизацииБУ";
	ДополнительныеПараметры.Вставить("Выполнить_НастроитьЗависимыеЭлементыФормы", ИзмененныеРеквизиты);
	
КонецПроцедуры

Процедура ФормаРедактированияСтрокиОС_МетодНачисленияАмортизацииНУПриИзменении(Форма, ДополнительныеПараметры)
	
	ИзмененныеРеквизиты = "МетодНачисленияАмортизацииНУ";
	
	ДополнительныеПараметры.Вставить("Выполнить_НастроитьЗависимыеЭлементыФормы", ИзмененныеРеквизиты);
	
КонецПроцедуры


Процедура ФормаРедактированияСтрокиОС_ОсновноеСредствоПриИзменении(Форма, ДополнительныеПараметры)
	
	Если ЗначениеЗаполнено(Форма.ОсновноеСредство) Тогда
		
	КонецЕсли;
	
КонецПроцедуры


//-- Локализация

#КонецОбласти

#Область ФормаРедактированияСтрокиНМА

//++ Локализация
//-- Локализация

#КонецОбласти

//++ Локализация

#Область ЗаполнениеПоДаннымОперативногоУчета

Процедура ЗаполнитьПоДаннымОУ(Объект, ТабличнаяЧасть)
	
	
КонецПроцедуры

Функция ОстаткиОсновныхСредств(ДатаОстатков, ХозяйственнаяОперация, МассивОрганизаций, ДопОтбор, ПараметрыЗаполненияОстатков)

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПорядокУчетаОСБУ.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ втПринятыеКУчетуОС
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(&Дата, Организация В (&МассивОрганизаций)) КАК ПорядокУчетаОСБУ
	|ГДЕ
	|	ПорядокУчетаОСБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|	И &ОтражатьВБУиНУ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПорядокУчетаОСУУ.ОсновноеСредство КАК ОсновноеСредство
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСУУ.СрезПоследних(&Дата, Организация В (&МассивОрганизаций)) КАК ПорядокУчетаОСУУ
	|ГДЕ
	|	ПорядокУчетаОСУУ.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|	И &ОтражатьВУУ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МестонахождениеОС.ОсновноеСредство КАК ОсновноеСредство,
	|	МестонахождениеОС.Организация КАК Организация,
	|	МестонахождениеОС.Местонахождение КАК Местонахождение
	|
	|ПОМЕСТИТЬ втМестонахождениеОС
	|ИЗ
	|	РегистрСведений.МестонахождениеОС.СрезПоследних(
	|			&Дата,
	|				ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						втПринятыеКУчетуОС.ОсновноеСредство
	|					ИЗ
	|						втПринятыеКУчетуОС КАК втПринятыеКУчетуОС)) КАК МестонахождениеОС
	|ГДЕ
	|	МестонахождениеОС.Организация В (&МассивОрганизаций)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ОсновноеСредство,
	|	Местонахождение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПорядокУчетаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ПорядокУчетаОС.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	ПорядокУчетаОС.НаправлениеДеятельности КАК НаправлениеДеятельности
	|ПОМЕСТИТЬ втПорядокУчетаОС
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОС.СрезПоследних(
	|			&Дата,
	|			ОсновноеСредство В
	|				(ВЫБРАТЬ
	|					втМестонахождениеОС.ОсновноеСредство
	|				ИЗ
	|					втМестонахождениеОС КАК втМестонахождениеОС)) КАК ПорядокУчетаОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПервоначальныеСведенияОС.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ втПервоначальныеСведенияОС
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОС.СрезПоследних(
	|			&Дата,
	|			(ОсновноеСредство, Организация) В
	|				(ВЫБРАТЬ
	|					втМестонахождениеОС.ОсновноеСредство,
	|					втМестонахождениеОС.Организация
	|				ИЗ
	|					втМестонахождениеОС КАК втМестонахождениеОС)) КАК ПервоначальныеСведенияОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтоимостьОС.Организация КАК Организация,
	|	СтоимостьОС.ОсновноеСредство КАК ОсновноеСредство,
	|	СтоимостьОС.Подразделение КАК Подразделение,
	|	ВЫБОР
	|		КОГДА &ОтражатьВУУ
	|			ТОГДА СтоимостьОС.СтоимостьОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ТекущаяСтоимостьУУ,
	|	ВЫБОР
	|		КОГДА &ОтражатьВБУиНУ
	|			ТОГДА СтоимостьОС.СтоимостьРеглОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ТекущаяСтоимостьБУ,
	|	ВЫБОР
	|		КОГДА &ОтражатьВБУиНУ
	|			ТОГДА СтоимостьОС.СтоимостьНУОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ТекущаяСтоимостьНУ,
	|	ВЫБОР
	|		КОГДА &ОтражатьВБУиНУ
	|			ТОГДА СтоимостьОС.СтоимостьЦФОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ТекущаяСтоимостьБУЦФ,
	|	ВЫБОР
	|		КОГДА &ОтражатьВБУиНУ
	|			ТОГДА СтоимостьОС.СтоимостьНУЦФОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ТекущаяСтоимостьНУЦФ,
	|	ВЫБОР
	|		КОГДА &ОтражатьВУУ
	|			ТОГДА СтоимостьОС.РезервПереоценкиСтоимостиОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК РезервПереоценкиСтоимости,
	|	ВЫБОР
	|		КОГДА &ОтражатьВБУиНУ
	|			ТОГДА СтоимостьОС.РезервПереоценкиСтоимостиРеглОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК РезервПереоценкиСтоимостиРегл
	|ПОМЕСТИТЬ втСтоимостьОС
	|ИЗ
	|	РегистрНакопления.СтоимостьОС.Остатки(
	|			&Дата,
	|			Организация В (&МассивОрганизаций)
	|				И (ОсновноеСредство, ГруппаФинансовогоУчета, НаправлениеДеятельности) В
	|					(ВЫБРАТЬ
	|						втПорядокУчетаОС.ОсновноеСредство,
	|						втПорядокУчетаОС.ГруппаФинансовогоУчета,
	|						втПорядокУчетаОС.НаправлениеДеятельности
	|					ИЗ
	|						втПорядокУчетаОС КАК втПорядокУчетаОС)) КАК СтоимостьОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Подразделение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АмортизацияОС.Организация КАК Организация,
	|	АмортизацияОС.ОсновноеСредство КАК ОсновноеСредство,
	|	АмортизацияОС.Подразделение КАК Подразделение,
	|	ВЫБОР
	|		КОГДА &ОтражатьВУУ
	|			ТОГДА -АмортизацияОС.АмортизацияОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НакопленнаяАмортизацияУУ,
	|	ВЫБОР
	|		КОГДА &ОтражатьВБУиНУ
	|			ТОГДА -АмортизацияОС.АмортизацияРеглОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НакопленнаяАмортизацияБУ,
	|	ВЫБОР
	|		КОГДА &ОтражатьВБУиНУ
	|			ТОГДА -АмортизацияОС.АмортизацияНУОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НакопленнаяАмортизацияНУ,
	|	ВЫБОР
	|		КОГДА &ОтражатьВБУиНУ
	|			ТОГДА -АмортизацияОС.АмортизацияПРОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НакопленнаяАмортизацияПР,
	|	ВЫБОР
	|		КОГДА &ОтражатьВБУиНУ
	|			ТОГДА -АмортизацияОС.АмортизацияЦФОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НакопленнаяАмортизацияБУЦФ,
	|	ВЫБОР
	|		КОГДА &ОтражатьВБУиНУ
	|			ТОГДА -АмортизацияОС.АмортизацияНУЦФОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НакопленнаяАмортизацияНУЦФ,
	|	ВЫБОР
	|		КОГДА &ОтражатьВБУиНУ
	|			ТОГДА -АмортизацияОС.АмортизацияПРЦФОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НакопленнаяАмортизацияПРЦФ,
	|	ВЫБОР
	|		КОГДА &ОтражатьВУУ
	|			ТОГДА -АмортизацияОС.РезервПереоценкиАмортизацииОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК РезервПереоценкиАмортизации,
	|	ВЫБОР
	|		КОГДА &ОтражатьВБУиНУ
	|			ТОГДА -АмортизацияОС.РезервПереоценкиАмортизацииРеглОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК РезервПереоценкиАмортизацииРегл
	|ПОМЕСТИТЬ втАмортизацияОС
	|ИЗ
	|	РегистрНакопления.АмортизацияОС.Остатки(
	|			&Дата,
	|			Организация В (&МассивОрганизаций)
	|				И (ОсновноеСредство, ГруппаФинансовогоУчета, НаправлениеДеятельности) В
	|					(ВЫБРАТЬ
	|						втПорядокУчетаОС.ОсновноеСредство,
	|						втПорядокУчетаОС.ГруппаФинансовогоУчета,
	|						втПорядокУчетаОС.НаправлениеДеятельности
	|					ИЗ
	|						втПорядокУчетаОС КАК втПорядокУчетаОС)) КАК АмортизацияОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Подразделение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	""ОС"" КАК ЗаполняемаяТабличнаяЧасть,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&ОтражатьВБУиНУ КАК ОтражатьВРеглУчете,
	|	&ОтражатьВУУ КАК ОтражатьВУпрУчете,
	|	втМестонахождениеОС.Организация КАК Организация,
	|	втМестонахождениеОС.ОсновноеСредство КАК ОсновноеСредство,
	|	втМестонахождениеОС.Местонахождение КАК Местонахождение,
	|	втМестонахождениеОС.Местонахождение КАК Подразделение,
	|	втПорядокУчетаОС.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	втПорядокУчетаОС.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|
	|
	|	ЕСТЬNULL(втСтоимостьОС.ТекущаяСтоимостьУУ, 0) КАК ТекущаяСтоимостьУУ,
	|	ЕСТЬNULL(втСтоимостьОС.ТекущаяСтоимостьБУ, 0) КАК ТекущаяСтоимостьБУ,
	|	ЕСТЬNULL(втСтоимостьОС.ТекущаяСтоимостьБУЦФ, 0) КАК ТекущаяСтоимостьБУЦФ,
	|	ЕСТЬNULL(втСтоимостьОС.ТекущаяСтоимостьНУ, 0) КАК ТекущаяСтоимостьНУ,
	|	ЕСТЬNULL(втСтоимостьОС.ТекущаяСтоимостьНУЦФ, 0) КАК ТекущаяСтоимостьНУЦФ,
	|	ЕСТЬNULL(втСтоимостьОС.РезервПереоценкиСтоимости, 0) КАК РезервПереоценкиСтоимости,
	|	ЕСТЬNULL(втСтоимостьОС.РезервПереоценкиСтоимостиРегл, 0) КАК РезервПереоценкиСтоимостиРегл,
	|
	|	ЕСТЬNULL(втАмортизацияОС.НакопленнаяАмортизацияБУ, 0) КАК НакопленнаяАмортизацияБУ,
	|	ЕСТЬNULL(втАмортизацияОС.НакопленнаяАмортизацияБУЦФ, 0) КАК НакопленнаяАмортизацияБУЦФ,
	|	ЕСТЬNULL(втАмортизацияОС.НакопленнаяАмортизацияНУ, 0) КАК НакопленнаяАмортизацияНУ,
	|	ЕСТЬNULL(втАмортизацияОС.НакопленнаяАмортизацияНУЦФ, 0) КАК НакопленнаяАмортизацияНУЦФ,
	|	ЕСТЬNULL(втАмортизацияОС.НакопленнаяАмортизацияУУ, 0) КАК НакопленнаяАмортизацияУУ,
	|	ЕСТЬNULL(втАмортизацияОС.РезервПереоценкиАмортизации, 0) КАК РезервПереоценкиАмортизации,
	|	ЕСТЬNULL(втАмортизацияОС.РезервПереоценкиАмортизацииРегл, 0) КАК РезервПереоценкиАмортизацииРегл,
	|
	|
	|	ЕСТЬNULL(втСтоимостьОС.РезервПереоценкиСтоимости, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втАмортизацияОС.РезервПереоценкиАмортизации, 0) <> 0 КАК ЕстьРезервПереоценки,
	|
	|	ЕСТЬNULL(втСтоимостьОС.РезервПереоценкиСтоимостиРегл, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втАмортизацияОС.РезервПереоценкиАмортизацииРегл, 0) <> 0 КАК ЕстьРезервПереоценкиРегл,
	|
	|	ЕСТЬNULL(втСтоимостьОС.ТекущаяСтоимостьБУЦФ, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втСтоимостьОС.ТекущаяСтоимостьНУЦФ, 0) <> 0 
	|		ИЛИ ЕСТЬNULL(втАмортизацияОС.НакопленнаяАмортизацияБУЦФ, 0) <> 0 
	|		ИЛИ ЕСТЬNULL(втАмортизацияОС.НакопленнаяАмортизацияНУЦФ, 0) <> 0 
	|
	|ИЗ
	|	втМестонахождениеОС КАК втМестонахождениеОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПорядокУчетаОС КАК втПорядокУчетаОС
	|		ПО (втПорядокУчетаОС.ОсновноеСредство = втМестонахождениеОС.ОсновноеСредство)
	|		ЛЕВОЕ СОЕДИНЕНИЕ втСтоимостьОС КАК втСтоимостьОС
	|		ПО (втСтоимостьОС.ОсновноеСредство = втМестонахождениеОС.ОсновноеСредство)
	|			И (втСтоимостьОС.Подразделение = втМестонахождениеОС.Местонахождение)
	|		ЛЕВОЕ СОЕДИНЕНИЕ втАмортизацияОС КАК втАмортизацияОС
	|		ПО (втАмортизацияОС.ОсновноеСредство = втМестонахождениеОС.ОсновноеСредство)
	|			И (втАмортизацияОС.Подразделение = втМестонахождениеОС.Местонахождение)
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПервоначальныеСведенияОС КАК втПервоначальныеСведенияОС
	|		ПО (втПервоначальныеСведенияОС.ОсновноеСредство = втМестонахождениеОС.ОсновноеСредство)
	|ГДЕ
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковОсновныхСредств) = &ХозяйственнаяОперация
	|
	|	И (ЕСТЬNULL(втСтоимостьОС.ТекущаяСтоимостьУУ, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втСтоимостьОС.ТекущаяСтоимостьБУ, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втСтоимостьОС.ТекущаяСтоимостьБУЦФ, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втСтоимостьОС.ТекущаяСтоимостьНУ, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втСтоимостьОС.ТекущаяСтоимостьНУЦФ, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втСтоимостьОС.ТекущаяСтоимостьУУ, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втСтоимостьОС.РезервПереоценкиСтоимости, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втСтоимостьОС.РезервПереоценкиСтоимостиРегл, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втАмортизацияОС.НакопленнаяАмортизацияБУ, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втАмортизацияОС.НакопленнаяАмортизацияБУЦФ, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втАмортизацияОС.НакопленнаяАмортизацияНУ, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втАмортизацияОС.НакопленнаяАмортизацияНУЦФ, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втАмортизацияОС.НакопленнаяАмортизацияУУ, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втАмортизацияОС.РезервПереоценкиАмортизации, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втАмортизацияОС.РезервПереоценкиАмортизацииРегл, 0) <> 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	втМестонахождениеОС.Организация,
	|	втМестонахождениеОС.Местонахождение,
	|	втМестонахождениеОС.ОсновноеСредство.Представление,
	|	втМестонахождениеОС.ОсновноеСредство.ИнвентарныйНомер";
	
	Запрос = Новый ПостроительЗапроса(ТекстЗапроса);
	Запрос.Параметры.Вставить("МассивОрганизаций", МассивОрганизаций);
	Запрос.Параметры.Вставить("Дата", ДатаОстатков);
	Запрос.Параметры.Вставить("ХозяйственнаяОперация", ХозяйственнаяОперация);
	Запрос.Параметры.Вставить("ОтражатьВБУиНУ", ПараметрыЗаполненияОстатков.ОтражатьВБУиНУ);
	Запрос.Параметры.Вставить("ОтражатьВУУ", ПараметрыЗаполненияОстатков.ОтражатьВУУ);
	

	Если ДопОтбор <> Неопределено Тогда
		Для Каждого УсловиеОтбора Из ДопОтбор Цикл
			ТекущийОтбор = Запрос.Отбор.Добавить(УсловиеОтбора.Ключ);
			ТекущийОтбор.ВидСравнения = ВидСравнения.Равно;
			ТекущийОтбор.Значение = УсловиеОтбора.Значение;
			ТекущийОтбор.Использование = Истина;
		КонецЦикла;
	КонецЕсли;
	
	Запрос.Выполнить();
	
	Возврат Запрос.Результат.Выгрузить();

КонецФункции


Функция ОстаткиНМАиРасходовНаНИОКР(ДатаОстатков, МассивОрганизаций, ДопОтбор, ПараметрыЗаполненияОстатков)

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПорядокУчетаНМАБУ.НематериальныйАктив КАК НематериальныйАктив
	|ПОМЕСТИТЬ втПринятыеКУчетуНМА
	|ИЗ
	|	РегистрСведений.ПорядокУчетаНМАБУ.СрезПоследних(&Дата, Организация В (&МассивОрганизаций)) КАК ПорядокУчетаНМАБУ
	|ГДЕ
	|	ПорядокУчетаНМАБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.ПринятКУчету)
	|	И &ОтражатьВБУиНУ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПорядокУчетаНМАУУ.НематериальныйАктив КАК НематериальныйАктив
	|ИЗ
	|	РегистрСведений.ПорядокУчетаНМАУУ.СрезПоследних(&Дата, Организация В (&МассивОрганизаций)) КАК ПорядокУчетаНМАУУ
	|ГДЕ
	|	ПорядокУчетаНМАУУ.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.ПринятКУчету)
	|	И &ОтражатьВУУ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НематериальныйАктив
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МестоУчетаНМА.НематериальныйАктив КАК НематериальныйАктив,
	|	МестоУчетаНМА.Организация КАК Организация,
	|	МестоУчетаНМА.Подразделение КАК Подразделение
	|ПОМЕСТИТЬ втМестоУчетаНМА
	|ИЗ
	|	РегистрСведений.МестоУчетаНМА.СрезПоследних(
	|			&Дата,
	|			НематериальныйАктив В
	|					(ВЫБРАТЬ
	|						втПринятыеКУчетуНМА.НематериальныйАктив
	|					ИЗ
	|						втПринятыеКУчетуНМА КАК втПринятыеКУчетуНМА)) КАК МестоУчетаНМА
	|ГДЕ
	|	МестоУчетаНМА.Организация В (&МассивОрганизаций)
	|
	|{ГДЕ
	|	МестоУчетаНМА.Подразделение.* КАК Местонахождение}
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	НематериальныйАктив,
	|	Подразделение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПорядокУчетаНМА.НематериальныйАктив КАК НематериальныйАктив,
	|	ПорядокУчетаНМА.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	ПорядокУчетаНМА.НаправлениеДеятельности КАК НаправлениеДеятельности
	|ПОМЕСТИТЬ втПорядокУчетаНМА
	|ИЗ
	|	РегистрСведений.ПорядокУчетаНМА.СрезПоследних(
	|			&Дата,
	|			(НематериальныйАктив, Организация) В
	|				(ВЫБРАТЬ
	|					втМестоУчетаНМА.НематериальныйАктив,
	|					втМестоУчетаНМА.Организация
	|				ИЗ
	|					втМестоУчетаНМА КАК втМестоУчетаНМА)) КАК ПорядокУчетаНМА
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НематериальныйАктив
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтоимостьНМА.Организация КАК Организация,
	|	СтоимостьНМА.НематериальныйАктив КАК НематериальныйАктив,
	|	СтоимостьНМА.Подразделение КАК Подразделение,
	|	ВЫБОР
	|		КОГДА &ОтражатьВУУ
	|			ТОГДА СтоимостьНМА.СтоимостьОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ТекущаяСтоимостьУУ,
	|	ВЫБОР
	|		КОГДА &ОтражатьВБУиНУ
	|			ТОГДА СтоимостьНМА.СтоимостьРеглОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ТекущаяСтоимостьБУ,
	|	ВЫБОР
	|		КОГДА &ОтражатьВБУиНУ
	|			ТОГДА СтоимостьНМА.СтоимостьНУОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ТекущаяСтоимостьНУ,
	|	ВЫБОР
	|		КОГДА &ОтражатьВБУиНУ
	|			ТОГДА СтоимостьНМА.СтоимостьПРОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ТекущаяСтоимостьПР,
	|	ВЫБОР
	|		КОГДА &ОтражатьВБУиНУ
	|			ТОГДА СтоимостьНМА.СтоимостьЦФОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ТекущаяСтоимостьБУЦФ,
	|	ВЫБОР
	|		КОГДА &ОтражатьВБУиНУ
	|			ТОГДА СтоимостьНМА.СтоимостьНУЦФОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ТекущаяСтоимостьНУЦФ,
	|	ВЫБОР
	|		КОГДА &ОтражатьВБУиНУ
	|			ТОГДА СтоимостьНМА.СтоимостьПРЦФОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ТекущаяСтоимостьПРЦФ,
	|	ВЫБОР
	|		КОГДА &ОтражатьВУУ
	|			ТОГДА СтоимостьНМА.РезервПереоценкиСтоимостиОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК РезервПереоценкиСтоимости,
	|	ВЫБОР
	|		КОГДА &ОтражатьВБУиНУ
	|			ТОГДА СтоимостьНМА.РезервПереоценкиСтоимостиРеглОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК РезервПереоценкиСтоимостиРегл
	|ПОМЕСТИТЬ втСтоимостьНМА
	|ИЗ
	|	РегистрНакопления.СтоимостьНМА.Остатки(
	|			&Дата,
	|			Организация В (&МассивОрганизаций)
	|				И (НематериальныйАктив, ГруппаФинансовогоУчета, НаправлениеДеятельности) В
	|					(ВЫБРАТЬ
	|						втПорядокУчетаНМА.НематериальныйАктив,
	|						втПорядокУчетаНМА.ГруппаФинансовогоУчета,
	|						втПорядокУчетаНМА.НаправлениеДеятельности
	|					ИЗ
	|						втПорядокУчетаНМА КАК втПорядокУчетаНМА)) КАК СтоимостьНМА
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НематериальныйАктив,
	|	Подразделение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АмортизацияНМА.Организация КАК Организация,
	|	АмортизацияНМА.НематериальныйАктив КАК НематериальныйАктив,
	|	АмортизацияНМА.Подразделение КАК Подразделение,
	|	ВЫБОР
	|		КОГДА &ОтражатьВУУ
	|			ТОГДА -АмортизацияНМА.АмортизацияОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НакопленнаяАмортизацияУУ,
	|	ВЫБОР
	|		КОГДА &ОтражатьВБУиНУ
	|			ТОГДА -АмортизацияНМА.АмортизацияРеглОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НакопленнаяАмортизацияБУ,
	|	ВЫБОР
	|		КОГДА &ОтражатьВБУиНУ
	|			ТОГДА -АмортизацияНМА.АмортизацияНУОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НакопленнаяАмортизацияНУ,
	|	ВЫБОР
	|		КОГДА &ОтражатьВБУиНУ
	|			ТОГДА -АмортизацияНМА.АмортизацияПРОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НакопленнаяАмортизацияПР,
	|	ВЫБОР
	|		КОГДА &ОтражатьВБУиНУ
	|			ТОГДА -АмортизацияНМА.АмортизацияЦФОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НакопленнаяАмортизацияБУЦФ,
	|	ВЫБОР
	|		КОГДА &ОтражатьВБУиНУ
	|			ТОГДА -АмортизацияНМА.АмортизацияНУЦФОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НакопленнаяАмортизацияНУЦФ,
	|	ВЫБОР
	|		КОГДА &ОтражатьВБУиНУ
	|			ТОГДА -АмортизацияНМА.АмортизацияПРЦФОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НакопленнаяАмортизацияПРЦФ,
	|	ВЫБОР
	|		КОГДА &ОтражатьВУУ
	|			ТОГДА -АмортизацияНМА.РезервПереоценкиАмортизацииОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК РезервПереоценкиАмортизации,
	|	ВЫБОР
	|		КОГДА &ОтражатьВБУиНУ
	|			ТОГДА -АмортизацияНМА.РезервПереоценкиАмортизацииРеглОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК РезервПереоценкиАмортизацииРегл
	|ПОМЕСТИТЬ втАмортизацияНМА
	|ИЗ
	|	РегистрНакопления.АмортизацияНМА.Остатки(
	|			&Дата,
	|			Организация В (&МассивОрганизаций)
	|				И (НематериальныйАктив, ГруппаФинансовогоУчета, НаправлениеДеятельности) В
	|					(ВЫБРАТЬ
	|						втПорядокУчетаНМА.НематериальныйАктив,
	|						втПорядокУчетаНМА.ГруппаФинансовогоУчета,
	|						втПорядокУчетаНМА.НаправлениеДеятельности
	|					ИЗ
	|						втПорядокУчетаНМА КАК втПорядокУчетаНМА)) КАК АмортизацияНМА
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НематериальныйАктив,
	|	Подразделение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	""НМА"" КАК ЗаполняемаяТабличнаяЧасть,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&ОтражатьВБУиНУ КАК ОтражатьВРеглУчете,
	|	&ОтражатьВУУ КАК ОтражатьВУпрУчете,
	|	втМестоУчетаНМА.Организация КАК Организация,
	|	втМестоУчетаНМА.НематериальныйАктив КАК НематериальныйАктив,
	|	втМестоУчетаНМА.Подразделение КАК Местонахождение,
	|	втПорядокУчетаНМА.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	втПорядокУчетаНМА.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|
	|	ЕСТЬNULL(втСтоимостьНМА.ТекущаяСтоимостьУУ, 0) КАК ТекущаяСтоимостьУУ,
	|	ЕСТЬNULL(втСтоимостьНМА.ТекущаяСтоимостьБУ, 0) КАК ТекущаяСтоимостьБУ,
	|	ЕСТЬNULL(втСтоимостьНМА.ТекущаяСтоимостьБУЦФ, 0) КАК ТекущаяСтоимостьБУЦФ,
	|	ЕСТЬNULL(втСтоимостьНМА.ТекущаяСтоимостьНУ, 0) КАК ТекущаяСтоимостьНУ,
	|	ЕСТЬNULL(втСтоимостьНМА.ТекущаяСтоимостьНУЦФ, 0) КАК ТекущаяСтоимостьНУЦФ,
	|	ЕСТЬNULL(втСтоимостьНМА.ТекущаяСтоимостьПР, 0) КАК ТекущаяСтоимостьПР,
	|	ЕСТЬNULL(втСтоимостьНМА.ТекущаяСтоимостьПРЦФ, 0) КАК ТекущаяСтоимостьПРЦФ,
	|	ЕСТЬNULL(втСтоимостьНМА.РезервПереоценкиСтоимости, 0) КАК РезервПереоценкиСтоимости,
	|	ЕСТЬNULL(втСтоимостьНМА.РезервПереоценкиСтоимостиРегл, 0) КАК РезервПереоценкиСтоимостиРегл,
	|
	|	ЕСТЬNULL(втАмортизацияНМА.НакопленнаяАмортизацияБУ, 0) КАК НакопленнаяАмортизацияБУ,
	|	ЕСТЬNULL(втАмортизацияНМА.НакопленнаяАмортизацияБУЦФ, 0) КАК НакопленнаяАмортизацияБУЦФ,
	|	ЕСТЬNULL(втАмортизацияНМА.НакопленнаяАмортизацияНУ, 0) КАК НакопленнаяАмортизацияНУ,
	|	ЕСТЬNULL(втАмортизацияНМА.НакопленнаяАмортизацияНУЦФ, 0) КАК НакопленнаяАмортизацияНУЦФ,
	|	ЕСТЬNULL(втАмортизацияНМА.НакопленнаяАмортизацияПР, 0) КАК НакопленнаяАмортизацияПР,
	|	ЕСТЬNULL(втАмортизацияНМА.НакопленнаяАмортизацияПРЦФ, 0) КАК НакопленнаяАмортизацияПРЦФ,
	|	ЕСТЬNULL(втАмортизацияНМА.НакопленнаяАмортизацияУУ, 0) КАК НакопленнаяАмортизацияУУ,
	|	ЕСТЬNULL(втАмортизацияНМА.РезервПереоценкиАмортизации, 0) КАК РезервПереоценкиАмортизации,
	|	ЕСТЬNULL(втАмортизацияНМА.РезервПереоценкиАмортизацииРегл, 0) КАК РезервПереоценкиАмортизацииРегл,
	|
	|	ЕСТЬNULL(втСтоимостьНМА.РезервПереоценкиСтоимости, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втАмортизацияНМА.РезервПереоценкиАмортизации, 0) <> 0 КАК ЕстьРезервПереоценки,
	|
	|	ЕСТЬNULL(втСтоимостьНМА.РезервПереоценкиСтоимостиРегл, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втАмортизацияНМА.РезервПереоценкиАмортизацииРегл, 0) <> 0 КАК ЕстьРезервПереоценкиРегл,
	|
	|	ЕСТЬNULL(втСтоимостьНМА.ТекущаяСтоимостьБУЦФ, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втСтоимостьНМА.ТекущаяСтоимостьНУЦФ, 0) <> 0 
	|		ИЛИ ЕСТЬNULL(втСтоимостьНМА.ТекущаяСтоимостьПРЦФ, 0) <> 0 
	|		ИЛИ ЕСТЬNULL(втАмортизацияНМА.НакопленнаяАмортизацияБУЦФ, 0) <> 0 
	|		ИЛИ ЕСТЬNULL(втАмортизацияНМА.НакопленнаяАмортизацияНУЦФ, 0) <> 0 
	|		ИЛИ ЕСТЬNULL(втАмортизацияНМА.НакопленнаяАмортизацияПРЦФ, 0) <> 0 КАК ПрименениеЦелевогоФинансирования
	|
	|ИЗ
	|	втМестоУчетаНМА КАК втМестоУчетаНМА
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПорядокУчетаНМА КАК втПорядокУчетаНМА
	|		ПО (втПорядокУчетаНМА.НематериальныйАктив = втМестоУчетаНМА.НематериальныйАктив)
	|		ЛЕВОЕ СОЕДИНЕНИЕ втСтоимостьНМА КАК втСтоимостьНМА
	|		ПО (втСтоимостьНМА.НематериальныйАктив = втМестоУчетаНМА.НематериальныйАктив)
	|			И (втСтоимостьНМА.Подразделение = втМестоУчетаНМА.Подразделение)
	|		ЛЕВОЕ СОЕДИНЕНИЕ втАмортизацияНМА КАК втАмортизацияНМА
	|		ПО (втАмортизацияНМА.НематериальныйАктив = втМестоУчетаНМА.НематериальныйАктив)
	|			И (втАмортизацияНМА.Подразделение = втМестоУчетаНМА.Подразделение)
	|
	|ГДЕ
	|	(ЕСТЬNULL(втСтоимостьНМА.ТекущаяСтоимостьУУ, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втСтоимостьНМА.ТекущаяСтоимостьБУ, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втСтоимостьНМА.ТекущаяСтоимостьБУЦФ, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втСтоимостьНМА.ТекущаяСтоимостьНУ, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втСтоимостьНМА.ТекущаяСтоимостьНУЦФ, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втСтоимостьНМА.ТекущаяСтоимостьПР, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втСтоимостьНМА.ТекущаяСтоимостьПРЦФ, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втСтоимостьНМА.ТекущаяСтоимостьУУ, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втСтоимостьНМА.РезервПереоценкиСтоимости, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втСтоимостьНМА.РезервПереоценкиСтоимостиРегл, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втАмортизацияНМА.НакопленнаяАмортизацияБУ, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втАмортизацияНМА.НакопленнаяАмортизацияБУЦФ, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втАмортизацияНМА.НакопленнаяАмортизацияНУ, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втАмортизацияНМА.НакопленнаяАмортизацияНУЦФ, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втАмортизацияНМА.НакопленнаяАмортизацияПР, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втАмортизацияНМА.НакопленнаяАмортизацияПРЦФ, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втАмортизацияНМА.НакопленнаяАмортизацияУУ, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втАмортизацияНМА.РезервПереоценкиАмортизации, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втАмортизацияНМА.РезервПереоценкиАмортизацииРегл, 0) <> 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	втМестоУчетаНМА.Организация,
	|	втМестоУчетаНМА.Подразделение,
	|	втМестоУчетаНМА.НематериальныйАктив.Представление,
	|	втМестоУчетаНМА.НематериальныйАктив.Код";
	
	Запрос = Новый ПостроительЗапроса(ТекстЗапроса);
	Запрос.Параметры.Вставить("МассивОрганизаций", МассивОрганизаций);
	Запрос.Параметры.Вставить("Дата", ДатаОстатков);
	Запрос.Параметры.Вставить("ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВводОстатковНМАиРасходовНаНИОКР);
	Запрос.Параметры.Вставить("ОтражатьВБУиНУ", ПараметрыЗаполненияОстатков.ОтражатьВБУиНУ);
	Запрос.Параметры.Вставить("ОтражатьВУУ", ПараметрыЗаполненияОстатков.ОтражатьВУУ);
	
	Если ДопОтбор <> Неопределено Тогда
		Для Каждого УсловиеОтбора Из ДопОтбор Цикл
			ТекущийОтбор = Запрос.Отбор.Добавить(УсловиеОтбора.Ключ);
			ТекущийОтбор.ВидСравнения = ВидСравнения.Равно;
			ТекущийОтбор.Значение = УсловиеОтбора.Значение;
			ТекущийОтбор.Использование = Истина;
		КонецЦикла;
	КонецЕсли;
	
	Запрос.Выполнить();
	
	Возврат Запрос.Результат.Выгрузить();

КонецФункции


#КонецОбласти

//-- Локализация

#Область Прочее
	
//++ Локализация
//-- Локализация

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

// Параметры:
// 	Параметры - см. ОбновлениеИнформационнойБазы.ОсновныеПараметрыОтметкиКОбработке
//
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

Процедура ОбработатьСтрокуОСДляПереходаНаНовуюВерсию(ДанныеСтроки, ДопПараметры) Экспорт

	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

Функция ДопПараметрыДляПереходаНаНовуюВерсию(МенеджерВременныхТаблиц) Экспорт

	ДопПараметры = Неопределено;
	
	//++ Локализация
	//-- Локализация

	Возврат ДопПараметры;
	
КонецФункции

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(ДанныеОбъекта) Экспорт
	
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
