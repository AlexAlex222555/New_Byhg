////////////////////////////////////////////////////////////////////////////////
// Модуль содержит процедуры и функции для пересчета итогов документов в формах.
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Проверяет, есть ли в табличной части строки с незаполненной датой отгрузки в неотмененных строках.
//	
// Параметры:
//		Объект - ДанныеФормыСтруктура - проверяемый объект
//		ИмяТЧ - Строка - имя проверяемой ТЧ.
//
// Возвращаемое значение:
//		Булево - признак наличия строк с незаполненной датой отгрузки.
Функция ДатаОтгрузкиПустая(Знач Объект, ИмяТЧ) Экспорт
	
	Если Объект.НеОтгружатьЧастями Тогда
		Если НЕ ЗначениеЗаполнено(Объект.ДатаОтгрузки) Тогда
			
			Возврат Истина;
			
		КонецЕсли;
		
	Иначе
		Для Каждого ТекСтрока Из Объект[ИмяТЧ] Цикл
			
			Если Не ТекСтрока.Отменено
				И Не ЗначениеЗаполнено(ТекСтрока.ДатаОтгрузки) Тогда
				
				Возврат Истина;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	Возврат Ложь;
	
КонецФункции

// Функция возвращает состояние фактической отгрузки по документу
//
// Параметры:
// 		ДокументыОтгрузки - Массив - Ссылки на документы-распоряжения на отгрузку.
//
// Возвращаемое значение:
// 		Структура - Структура с полями "ЕстьОтгруженныеТовары, ЕстьНесобранныеТовары" типа "Булево".
//
Функция ПолучитьСостояниеФактическойОтгрузки(ДокументыОтгрузки) Экспорт
	
	Возврат ПродажиСервер.ПолучитьСостояниеФактическойОтгрузки(ДокументыОтгрузки);
	
КонецФункции

// Формирует структуру для создания реализации по одному или нескольким заказам клиентов.
// Если в переданных заказах отличаются реквизиты шапки, выдается сообщение об ошибке.
//
// Параметры:
//  МассивСсылок   - Массив - заказы поставщикам, по которым необходимо ввести реализацию.
//  ИмяДокумента   - Строка - имя документа создаваемого на основании заказов.
//  РеквизитыШапки - Структура - структура, в которую будут помещены реквизиты шапки из массива заказов.
//
// Возвращаемое значение:
//   Булево - Ложь, если в переданных заказах отличаются реквизиты шапки.
//
Функция СформироватьДанныеЗаполненияРеализации(МассивСсылок, ИмяДокумента, РеквизитыШапки) Экспорт
	
	ТекстЗаказы = "";
	
	Если ПравоДоступа("Чтение", Метаданные.Документы.ЗаказКлиента) Тогда
		ТекстЗаказы = 
		"ВЫБРАТЬ
		|	ЗаказКлиента.Ссылка                                КАК ЗаказКлиента,
		|	ЗаказКлиента.Партнер                               КАК Партнер,
		|	ЗаказКлиента.Контрагент                            КАК Контрагент,
		|	ЗаказКлиента.Договор                               КАК Договор,
		|	ЗаказКлиента.Организация                           КАК Организация,
		|	ЗаказКлиента.Соглашение                            КАК Соглашение,
		|	ЗаказКлиента.Сделка                                КАК Сделка,
		|	ЗаказКлиента.Склад                                 КАК Склад,
		|	ЗаказКлиента.Подразделение                         КАК Подразделение,
		|	ЗаказКлиента.ХозяйственнаяОперация                 КАК ХозяйственнаяОперация,
		|	ЗаказКлиента.Валюта                                КАК ВалютаВзаиморасчетов,
		|	ЗаказКлиента.ЦенаВключаетНДС                       КАК ЦенаВключаетНДС,
		|	ЗаказКлиента.ПорядокРасчетов                       КАК ПорядокРасчетов,
		|	ЗаказКлиента.ОплатаВВалюте                         КАК ОплатаВВалюте,
		|	ЗаказКлиента.ВернутьМногооборотнуюТару             КАК ВернутьМногооборотнуюТару,
		|	ЗаказКлиента.ТребуетсяЗалогЗаТару                  КАК ТребуетсяЗалогЗаТару,
		|	ЗаказКлиента.СрокВозвратаМногооборотнойТары        КАК СрокВозвратаМногооборотнойТары,
		|	ЗаказКлиента.ФормаОплаты                           КАК ФормаОплаты,
		|	ЗаказКлиента.БанковскийСчет                        КАК БанковскийСчет,
		|	ЗаказКлиента.БанковскийСчетКонтрагента             КАК БанковскийСчетКонтрагента,
		|	ЗаказКлиента.Грузоотправитель                      КАК Грузоотправитель,
		|	ЗаказКлиента.Грузополучатель                       КАК Грузополучатель,
		|	ЗаказКлиента.БанковскийСчетГрузоотправителя        КАК БанковскийСчетГрузоотправителя,
		|	ЗаказКлиента.БанковскийСчетГрузополучателя         КАК БанковскийСчетГрузополучателя,
		|	ВЫБОР
		|		КОГДА
		|			ЗаказКлиента.Склад.ЭтоГруппа И ЗаказКлиента.Склад.ВыборГруппы = ЗНАЧЕНИЕ(Перечисление.ВыборГруппыСкладов.РазрешитьВЗаказах)
		|		ТОГДА
		|			ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
		|		ИНАЧЕ
		|			ЗаказКлиента.Склад
		|	КОНЕЦ КАК СкладОтгрузки,
		|	ЗаказКлиента.СпособДоставки                        КАК СпособДоставки,
		|
		|	ЗаказКлиента.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика)
		|		                                               КАК СпособДоставкиСиламиПеревозчика,
		|	ЗаказКлиента.ПеревозчикПартнер                     КАК ПеревозчикПартнер,
		|	ЗаказКлиента.АдресДоставки                         КАК АдресДоставки,
		|	ЗаказКлиента.АдресДоставкиЗначенияПолей            КАК АдресДоставкиЗначенияПолей,
		|	ЗаказКлиента.АдресДоставкиПеревозчика              КАК АдресДоставкиПеревозчика,
		|	ЗаказКлиента.АдресДоставкиПеревозчикаЗначенияПолей КАК АдресДоставкиПеревозчикаЗначенияПолей,
		|	ЗаказКлиента.ЗонаДоставки                          КАК ЗонаДоставки,
		|	ЗаказКлиента.ВремяДоставкиС                        КАК ВремяДоставкиС,
		|	ЗаказКлиента.ВремяДоставкиПо                       КАК ВремяДоставкиПо,
		|	ЗаказКлиента.ДополнительнаяИнформацияПоДоставке    КАК ДополнительнаяИнформацияПоДоставке,
		|	&ИмяДокументаРТУ                                   КАК ИмяДокумента,
		|	ЗаказКлиента.НаправлениеДеятельности               КАК НаправлениеДеятельности,
		|	ЗаказКлиента.КонтактноеЛицо                        КАК КонтактноеЛицо,
		|	ЗаказКлиента.КартаЛояльности                       КАК КартаЛояльности,
		|	НЕ ЗаказКлиента.ХозяйственнаяОперация В(&ДопустимыеОперации) КАК ЕстьНедопустимаяОперация
		|ПОМЕСТИТЬ ВтЗаказыКлиента
		|ИЗ
		|	Документ.ЗаказКлиента КАК ЗаказКлиента
		|ГДЕ
		|	ЗаказКлиента.Ссылка В (&МассивСсылок)";
	КонецЕсли;
	
	Если ПравоДоступа("Чтение", Метаданные.Документы.ЗаявкаНаВозвратТоваровОтКлиента) Тогда
		
		СоздатьВременнуюТаблицу = Истина;
		
		Если ТекстЗаказы <> "" Тогда
			СоздатьВременнуюТаблицу = Ложь;
			
			ТекстЗаказы = ТекстЗаказы + "
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|";
		КонецЕсли; 
		ТекстЗаказы = ТекстЗаказы + "
			|ВЫБРАТЬ
			|	ЗаявкаНаВозврат.Ссылка                         КАК ЗаказКлиента,
			|	ЗаявкаНаВозврат.Партнер                        КАК Партнер,
			|	ЗаявкаНаВозврат.Контрагент                     КАК Контрагент,
			|	ЗаявкаНаВозврат.Договор                        КАК Договор,
			|	ЗаявкаНаВозврат.Организация                    КАК Организация,
			|	ЗаявкаНаВозврат.Соглашение                     КАК Соглашение,
			|	ЗаявкаНаВозврат.Сделка                         КАК Сделка,
			|	ЗаявкаНаВозврат.Склад                          КАК Склад,
			|	ЗаявкаНаВозврат.Подразделение                  КАК Подразделение,
			|	ВЫБОР
			|		КОГДА ЗаявкаНаВозврат.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровОтКлиента)
			|				ИЛИ ЗаявкаНаВозврат.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтРозничногоПокупателя)
			|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиенту)
			|		КОГДА ЗаявкаНаВозврат.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера)
			|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаКомиссию)
			|		ИНАЧЕ
			|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаХранениеСПравомПродажи)
			|	КОНЕЦ                                                 КАК ХозяйственнаяОперация,
			|	ЗаявкаНаВозврат.Валюта                                КАК ВалютаВзаиморасчетов,
			|	ЗаявкаНаВозврат.ЦенаВключаетНДС                       КАК ЦенаВключаетНДС,
			|	ЗаявкаНаВозврат.ПорядокРасчетов                       КАК ПорядокРасчетов,
			|	ЗаявкаНаВозврат.ОплатаВВалюте                         КАК ОплатаВВалюте,
			|	ЗаявкаНаВозврат.ВернутьМногооборотнуюТару             КАК ВернутьМногооборотнуюТару,
			|	ЗаявкаНаВозврат.ТребуетсяЗалогЗаТару                  КАК ТребуетсяЗалогЗаТару,
			|	ЗаявкаНаВозврат.СрокВозвратаМногооборотнойТары        КАК СрокВозвратаМногооборотнойТары,
			|	ЗаявкаНаВозврат.ФормаОплаты                           КАК ФормаОплаты,
			|	ЗаявкаНаВозврат.БанковскийСчет                        КАК БанковскийСчет,
			|	ЗаявкаНаВозврат.БанковскийСчетКонтрагента             КАК БанковскийСчетКонтрагента,
			|	ЗаявкаНаВозврат.Грузоотправитель                      КАК Грузоотправитель,
			|	ЗаявкаНаВозврат.Грузополучатель                       КАК Грузополучатель,
			|	ЗаявкаНаВозврат.БанковскийСчетГрузоотправителя        КАК БанковскийСчетГрузоотправителя,
			|	ЗаявкаНаВозврат.БанковскийСчетГрузополучателя         КАК БанковскийСчетГрузополучателя,
			|	ЗаявкаНаВозврат.Склад                                 КАК СкладОтгрузки,
			|	ЗаявкаНаВозврат.СпособДоставки                        КАК СпособДоставки,
			|
			|	ЗаявкаНаВозврат.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика)
			|		                                              КАК СпособДоставкиСиламиПеревозчика,
			|	ЗаявкаНаВозврат.ПеревозчикПартнер                     КАК ПеревозчикПартнер,
			|	ЗаявкаНаВозврат.АдресДоставки                         КАК АдресДоставки,
			|	ЗаявкаНаВозврат.АдресДоставкиЗначенияПолей            КАК АдресДоставкиЗначенияПолей,
			|	ЗаявкаНаВозврат.АдресДоставкиПеревозчика              КАК АдресДоставкиПеревозчика,
			|	ЗаявкаНаВозврат.АдресДоставкиПеревозчикаЗначенияПолей КАК АдресДоставкиПеревозчикаЗначенияПолей,
			|	ЗаявкаНаВозврат.ЗонаДоставки                          КАК ЗонаДоставки,
			|	ЗаявкаНаВозврат.ВремяДоставкиС                        КАК ВремяДоставкиС,
			|	ЗаявкаНаВозврат.ВремяДоставкиПо                       КАК ВремяДоставкиПо,
			|	ЗаявкаНаВозврат.ДополнительнаяИнформацияПоДоставке    КАК ДополнительнаяИнформацияПоДоставке,
			|	&ИмяДокументаРТУ                                      КАК ИмяДокумента,
			|	ЗаявкаНаВозврат.НаправлениеДеятельности               КАК НаправлениеДеятельности,
			|	ЗаявкаНаВозврат.КонтактноеЛицо                        КАК КонтактноеЛицо,
			|	ЗаявкаНаВозврат.КартаЛояльности                       КАК КартаЛояльности,
			|	НЕ (ВЫБОР
			|		КОГДА ЗаявкаНаВозврат.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровОтКлиента)
			|				ИЛИ ЗаявкаНаВозврат.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтРозничногоПокупателя)
			|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиенту)
			|		КОГДА ЗаявкаНаВозврат.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера)
			|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаКомиссию)
			|		ИНАЧЕ
			|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаХранениеСПравомПродажи)
			|	КОНЕЦ) В(&ДопустимыеОперации)                         КАК ЕстьНедопустимаяОперация
			|//&ИмяВТЗаказыКлиента
			|ИЗ
			|	Документ.ЗаявкаНаВозвратТоваровОтКлиента КАК ЗаявкаНаВозврат
			|ГДЕ
			|	ЗаявкаНаВозврат.Ссылка В(&МассивСсылок)";
		
		ТекстЗаказы = СтрЗаменить(ТекстЗаказы,
						"//&ИмяВТЗаказыКлиента",
						?(СоздатьВременнуюТаблицу, "ПОМЕСТИТЬ ВтЗаказыКлиента", ""));
	КонецЕсли;
	
	ТекстДанныеДокументов = "";
	
	Если ПравоДоступа("Чтение", Метаданные.Документы.ЗаказКлиента) Тогда
		ТекстДанныеДокументов = "
		|ВЫБРАТЬ
		|	ЗаказКлиента.Ссылка КАК ЗаказКлиента,
		|	ЗаказКлиента.Статус КАК Статус,
		|	НЕ ЗаказКлиента.Проведен КАК ЕстьОшибкиПроведен,
		|	ВЫБОР
		|		КОГДА
		|			ЗаказКлиента.Статус В (&МассивСтатусовЗаказКлиента)
		|		ТОГДА
		|			ЛОЖЬ
		|		ИНАЧЕ
		|			ИСТИНА
		|	КОНЕЦ КАК ЕстьОшибкиСтатус
		|	
		|ИЗ
		|	Документ.ЗаказКлиента КАК ЗаказКлиента
		|ГДЕ
		|	ЗаказКлиента.Ссылка В (&МассивСсылок)
		|	И ЗаказКлиента.ХозяйственнаяОперация В(&ДопустимыеОперации)
		|	И (НЕ ЗаказКлиента.Проведен
		|		ИЛИ НЕ ЗаказКлиента.Статус В(&МассивСтатусовЗаказКлиента))";
	КонецЕсли;
	
	Если ПравоДоступа("Чтение", Метаданные.Документы.ЗаявкаНаВозвратТоваровОтКлиента) Тогда
		Если ТекстДанныеДокументов <> "" Тогда
			ТекстДанныеДокументов = ТекстДанныеДокументов + "
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|";
		КонецЕсли; 
		ТекстДанныеДокументов = ТекстДанныеДокументов + "
		|ВЫБРАТЬ
		|	ЗаявкаНаВозврат.Ссылка КАК ЗаказКлиента,
		|	ЗаявкаНаВозврат.Статус КАК Статус,
		|	НЕ ЗаявкаНаВозврат.Проведен КАК ЕстьОшибкиПроведен,
		|	ВЫБОР
		|		КОГДА
		|			ЗаявкаНаВозврат.Статус В (&МассивСтатусовЗаявкаНаВозврат)
		|		ТОГДА
		|			ЛОЖЬ
		|		ИНАЧЕ
		|			ИСТИНА
		|	КОНЕЦ КАК ЕстьОшибкиСтатус
		|ИЗ
		|	Документ.ЗаявкаНаВозвратТоваровОтКлиента КАК ЗаявкаНаВозврат
		|ГДЕ
		|	ЗаявкаНаВозврат.Ссылка В(&МассивСсылок)
		|	И (ВЫБОР
		|		КОГДА ЗаявкаНаВозврат.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровОтКлиента)
		|				ИЛИ ЗаявкаНаВозврат.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтРозничногоПокупателя)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиенту)
		|		КОГДА ЗаявкаНаВозврат.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаКомиссию)
		|		ИНАЧЕ
		|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаХранениеСПравомПродажи)
		|	КОНЕЦ) В(&ДопустимыеОперации)
		|	И (НЕ ЗаявкаНаВозврат.Проведен
		|		ИЛИ НЕ ЗаявкаНаВозврат.Статус В(&МассивСтатусовЗаявкаНаВозврат))";
	КонецЕсли; 
	
	ТекстЗапроса = ТекстЗаказы + 
	";
	|
	|//////////////////////////////////////////////////////////////////////////////// 1
	|ВЫБРАТЬ
	|	ЗаказыКлиентов.ЗаказКлиента          КАК ЗаказКлиента,
	|	ЗаказыКлиентов.ХозяйственнаяОперация КАК ХозяйственнаяОперация
	|ИЗ
	|	ВтЗаказыКлиента КАК ЗаказыКлиентов
	|ГДЕ
	|	ЗаказыКлиентов.ЕстьНедопустимаяОперация
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////// 2
	|ВЫБРАТЬ
	|	МИНИМУМ(ЗаказыКлиента.ИмяДокумента)                   КАК ИмяДокумента,
	|	МИНИМУМ(ЗаказыКлиента.Партнер)                        КАК Партнер,
	|	МИНИМУМ(ЗаказыКлиента.Контрагент)                     КАК Контрагент,
	|	МИНИМУМ(ЗаказыКлиента.Договор)                        КАК Договор,
	|	МИНИМУМ(ЗаказыКлиента.Организация)                    КАК Организация,
	|	МИНИМУМ(ЗаказыКлиента.КартаЛояльности)                КАК КартаЛояльности,
	|	МИНИМУМ(ЗаказыКлиента.Соглашение)                     КАК Соглашение,
	|	МИНИМУМ(ЗаказыКлиента.Сделка)                         КАК Сделка,
	|	МИНИМУМ(ЗаказыКлиента.Склад)                          КАК Склад,
	|	МИНИМУМ(ЗаказыКлиента.ХозяйственнаяОперация)          КАК ХозяйственнаяОперация,
	|	МИНИМУМ(ЗаказыКлиента.ВалютаВзаиморасчетов)           КАК ВалютаВзаиморасчетов,
	|	МИНИМУМ(ЗаказыКлиента.ЦенаВключаетНДС)                КАК ЦенаВключаетНДС,
	|	МИНИМУМ(ЗаказыКлиента.ПорядокРасчетов)                КАК ПорядокРасчетов,
	|	МИНИМУМ(ЗаказыКлиента.ОплатаВВалюте)                  КАК ОплатаВВалюте,
	|	МИНИМУМ(ЗаказыКлиента.ВернутьМногооборотнуюТару)      КАК ВернутьМногооборотнуюТару,
	|	МИНИМУМ(ЗаказыКлиента.ТребуетсяЗалогЗаТару)           КАК ТребуетсяЗалогЗаТару,
	|	МИНИМУМ(ЗаказыКлиента.СрокВозвратаМногооборотнойТары) КАК СрокВозвратаМногооборотнойТары,
	|	МИНИМУМ(ЗаказыКлиента.НаправлениеДеятельности)        КАК НаправлениеДеятельности,
	|	ВЫБОР
	|		КОГДА
	|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказыКлиента.ФормаОплаты) > 1
	|		ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.ПустаяСсылка)
	|		ИНАЧЕ
	|			МИНИМУМ(ЗаказыКлиента.ФормаОплаты)
	|	КОНЕЦ КАК ФормаОплаты,
	|	МИНИМУМ(
	|		ВЫБОР
	|			КОГДА &ИспользоватьСоглашенияСКлиентами
	|				ТОГДА ЗаказыКлиента.Соглашение.РассчитыватьДатуВозвратаТарыПоКалендарю
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК РассчитыватьДатуВозвратаТарыПоКалендарю,
	|	МИНИМУМ(
	|		ВЫБОР
	|			КОГДА &ИспользоватьСоглашенияСКлиентами 
	|				ТОГДА ЗаказыКлиента.Соглашение.КалендарьВозвратаТары
	|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПроизводственныеКалендари.ПустаяСсылка)
	|		КОНЕЦ) КАК КалендарьВозвратаТары,
	|	ВЫБОР
	|		КОГДА
	|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказыКлиента.Подразделение) > 1
	|		ТОГДА
	|			ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|		ИНАЧЕ
	|			МИНИМУМ(ЗаказыКлиента.Подразделение)
	|	КОНЕЦ КАК Подразделение,
	|	ВЫБОР
	|		КОГДА
	|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ
	|				ВЫБОР
	|					КОГДА
	|						ЗаказыКлиента.КонтактноеЛицо <> ЗНАЧЕНИЕ(Справочник.КонтактныеЛицаПартнеров.ПустаяСсылка)
	|					ТОГДА
	|						ЗаказыКлиента.КонтактноеЛицо
	|					ИНАЧЕ
	|						NULL
	|				КОНЕЦ) = 1 И
	|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказыКлиента.КонтактноеЛицо) = 1
	|		ТОГДА
	|			МАКСИМУМ(ЗаказыКлиента.КонтактноеЛицо)
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Справочник.КонтактныеЛицаПартнеров.ПустаяСсылка)
	|	КОНЕЦ КАК КонтактноеЛицо,
	|	ВЫБОР
	|		КОГДА
	|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказыКлиента.Партнер) > 1
	|		ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ КАК ЕстьОтличияПартнер,
	|	ВЫБОР
	|		КОГДА
	|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказыКлиента.Контрагент) > 1
	|		ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ КАК ЕстьОтличияКонтрагент,
	|	ВЫБОР
	|		КОГДА
	|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказыКлиента.Договор) > 1
	|		ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ КАК ЕстьОтличияДоговор,
	|	ВЫБОР
	|		КОГДА
	|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказыКлиента.Организация) > 1
	|		ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ КАК ЕстьОтличияОрганизация,
	|	ВЫБОР
	|		КОГДА
	|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказыКлиента.Соглашение) > 1
	|		ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ КАК ЕстьОтличияСоглашение,
	|	ВЫБОР
	|		КОГДА
	|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказыКлиента.Сделка) > 1
	|		ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ КАК ЕстьОтличияСделка,
	|	ВЫБОР
	|		КОГДА
	|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказыКлиента.СкладОтгрузки) > 1
	|		ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ КАК ЕстьОтличияСклад,
	|	ВЫБОР
	|		КОГДА
	|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказыКлиента.ХозяйственнаяОперация) > 1
	|		ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ КАК ЕстьОтличияХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА
	|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказыКлиента.ВалютаВзаиморасчетов) > 1
	|		ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ КАК ЕстьОтличияВалютаВзаиморасчетов,
	|	ВЫБОР
	|		КОГДА
	|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказыКлиента.ЦенаВключаетНДС) > 1
	|		ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ КАК ЕстьОтличияЦенаВключаетНДС,
	|	ВЫБОР
	|		КОГДА
	|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказыКлиента.ВернутьМногооборотнуюТару) > 1
	|		ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ КАК ЕстьОтличияВернутьМногооборотнуюТару,
	|	ВЫБОР
	|		КОГДА
	|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказыКлиента.ТребуетсяЗалогЗаТару) > 1
	|		ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ КАК ЕстьОтличияТребуетсяЗалогЗаТару,
	|	ВЫБОР
	|		КОГДА
	|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказыКлиента.СрокВозвратаМногооборотнойТары) > 1
	|		ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ КАК ЕстьОтличияСрокВозвратаМногооборотнойТары,
	|	ВЫБОР
	|		КОГДА
	|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказыКлиента.ПорядокРасчетов) > 1
	|		ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ КАК ЕстьОтличияПорядокРасчетов,
	|	ВЫБОР
	|		КОГДА
	|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ
	|				ВЫБОР
	|					КОГДА
	|						ЗаказыКлиента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаОрганизаций.ПустаяСсылка)
	|					ТОГДА
	|						ЗаказыКлиента.БанковскийСчет
	|					ИНАЧЕ
	|						NULL
	|				КОНЕЦ) = 1 И
	|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказыКлиента.Организация) = 1
	|		ТОГДА
	|			МАКСИМУМ(ЗаказыКлиента.БанковскийСчет)
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаОрганизаций.ПустаяСсылка)
	|	КОНЕЦ КАК БанковскийСчет,
	|	ВЫБОР
	|		КОГДА
	|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ
	|				ВЫБОР
	|					КОГДА
	|						ЗаказыКлиента.БанковскийСчетКонтрагента <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаКонтрагентов.ПустаяСсылка)
	|					ТОГДА
	|						ЗаказыКлиента.БанковскийСчетКонтрагента
	|					ИНАЧЕ
	|						NULL
	|				КОНЕЦ) = 1 И
	|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказыКлиента.Контрагент) = 1
	|		ТОГДА
	|			МАКСИМУМ(ЗаказыКлиента.БанковскийСчетКонтрагента)
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаКонтрагентов.ПустаяСсылка)
	|	КОНЕЦ КАК БанковскийСчетКонтрагента,
	|	ВЫБОР
	|		КОГДА
	|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ
	|				ВЫБОР
	|					КОГДА
	|						ЗаказыКлиента.Грузоотправитель <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|					ТОГДА
	|						ЗаказыКлиента.Грузоотправитель
	|					ИНАЧЕ
	|						NULL
	|				КОНЕЦ) = 1
	|		ТОГДА
	|			МАКСИМУМ(ЗаказыКлиента.Грузоотправитель)
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|	КОНЕЦ КАК Грузоотправитель,
	|	ВЫБОР
	|		КОГДА
	|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ
	|				ВЫБОР
	|					КОГДА
	|						ЗаказыКлиента.Грузополучатель <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|					ТОГДА
	|						ЗаказыКлиента.Грузополучатель
	|					ИНАЧЕ
	|						NULL
	|				КОНЕЦ) = 1
	|		ТОГДА
	|			МАКСИМУМ(ЗаказыКлиента.Грузополучатель)
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|	КОНЕЦ КАК Грузополучатель,
	|	ВЫБОР
	|		КОГДА
	|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ
	|				ВЫБОР
	|					КОГДА
	|						ЗаказыКлиента.БанковскийСчетГрузоотправителя <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаКонтрагентов.ПустаяСсылка)
	|					ТОГДА
	|						ЗаказыКлиента.БанковскийСчетГрузоотправителя
	|					ИНАЧЕ
	|						NULL
	|				КОНЕЦ) = 1 И
	|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ
	|				ВЫБОР
	|					КОГДА
	|						ЗаказыКлиента.Грузоотправитель <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|					ТОГДА
	|						ЗаказыКлиента.Грузоотправитель
	|					ИНАЧЕ
	|						NULL
	|				КОНЕЦ) = 1
	|		ТОГДА
	|			МАКСИМУМ(ЗаказыКлиента.БанковскийСчетГрузоотправителя)
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаКонтрагентов.ПустаяСсылка)
	|	КОНЕЦ КАК БанковскийСчетГрузоотправителя,
	|	ВЫБОР
	|		КОГДА
	|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ
	|				ВЫБОР
	|					КОГДА
	|						ЗаказыКлиента.БанковскийСчетГрузополучателя <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаКонтрагентов.ПустаяСсылка)
	|					ТОГДА
	|						ЗаказыКлиента.БанковскийСчетГрузополучателя
	|					ИНАЧЕ
	|						NULL
	|				КОНЕЦ) = 1 И
	|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ
	|				ВЫБОР
	|					КОГДА
	|						ЗаказыКлиента.Грузополучатель <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|					ТОГДА
	|						ЗаказыКлиента.Грузополучатель
	|					ИНАЧЕ
	|						NULL
	|				КОНЕЦ) = 1
	|		ТОГДА
	|			МАКСИМУМ(ЗаказыКлиента.БанковскийСчетГрузополучателя)
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаКонтрагентов.ПустаяСсылка)
	|	КОНЕЦ КАК БанковскийСчетГрузополучателя,
	|	МИНИМУМ(ЗаказыКлиента.СкладОтгрузки) КАК СкладОтгрузки,
	|	ВЫБОР
	|		КОГДА
	|			МИНИМУМ(ЗаказыКлиента.Склад.ЭтоГруппа) = ИСТИНА И МИНИМУМ(ЗаказыКлиента.Склад.ВыборГруппы) = ЗНАЧЕНИЕ(Перечисление.ВыборГруппыСкладов.РазрешитьВЗаказах)
	|		ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ КАК ЗапрещеноВыбиратьГруппуСкладов,
	|	ВЫБОР
	|		КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказыКлиента.СпособДоставки) = 1
	|			ТОГДА МИНИМУМ(ЗаказыКлиента.СпособДоставки)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.Самовывоз)
	|	КОНЕЦ КАК СпособДоставки,
	|	ВЫБОР
	|		КОГДА МИНИМУМ(ЗаказыКлиента.СпособДоставки) = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика)
	|			И КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказыКлиента.ПеревозчикПартнер) = 1
	|		ТОГДА МИНИМУМ(ЗаказыКлиента.ПеревозчикПартнер)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
	|	КОНЕЦ КАК ПеревозчикПартнер,
	|	ВЫБОР
	|		КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказыКлиента.АдресДоставки) = 1
	|		ТОГДА МИНИМУМ(ЗаказыКлиента.АдресДоставки)
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК АдресДоставки,
	|	ВЫБОР
	|		КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказыКлиента.АдресДоставки) = 1
	|		ТОГДА МИНИМУМ(ВЫРАЗИТЬ(ЗаказыКлиента.АдресДоставкиЗначенияПолей КАК СТРОКА(10))) = """"
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК АдресДоставкиЗначенияПолейПустой,
	|	ВЫБОР
	|		КОГДА НЕ &ИспользоватьЗаданияНаПеревозкуДляУчетаДоставкиПеревозчиками
	|			И МИНИМУМ(ЗаказыКлиента.СпособДоставки) = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика)
	|			И КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВЫРАЗИТЬ(ЗаказыКлиента.ДополнительнаяИнформацияПоДоставке КАК СТРОКА(10))) = 1
	|		ТОГДА МИНИМУМ(ВЫРАЗИТЬ(ЗаказыКлиента.ДополнительнаяИнформацияПоДоставке КАК СТРОКА(10))) = """"
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ДополнительнаяИнформацияПоДоставкеПустой,
	|	НЕОПРЕДЕЛЕНО КАК АдресДоставкиПеревозчика,
	|	НЕОПРЕДЕЛЕНО КАК АдресДоставкиПеревозчикаЗначенияПолей,
	|	НЕОПРЕДЕЛЕНО КАК ЗонаДоставки,
	|	НЕОПРЕДЕЛЕНО КАК ВремяДоставкиС,
	|	НЕОПРЕДЕЛЕНО КАК ВремяДоставкиПо,
	|
	|	НЕ &ИспользоватьЗаданияНаПеревозкуДляУчетаДоставкиПеревозчиками
	|		И КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказыКлиента.СпособДоставки) > 1
	|		И МАКСИМУМ(ЗаказыКлиента.СпособДоставкиСиламиПеревозчика) = ИСТИНА
	|		КАК ЕстьНесовместимыеСпособыДоставки,
	|
	|	ВЫБОР
	|		КОГДА
	|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказыКлиента.НаправлениеДеятельности) > 1
	|		ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ КАК ЕстьОтличияНаправлениеДеятельности
	|ПОМЕСТИТЬ ВТРеквизитыШапки
	|ИЗ
	|	ВтЗаказыКлиента КАК ЗаказыКлиента
	|ГДЕ
	|	ЗаказыКлиента.ХозяйственнаяОперация В(&ДопустимыеОперации)
	|
	|;
	|//////////////////////////////////////////////////////////////////////////////// 3
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ШапкаДокумента.ИмяДокумента                   КАК ИмяДокумента,
	|	ШапкаДокумента.Партнер                        КАК Партнер,
	|	ШапкаДокумента.Контрагент                     КАК Контрагент,
	|	ШапкаДокумента.Договор                        КАК Договор,
	|	ШапкаДокумента.Организация                    КАК Организация,
	|	ШапкаДокумента.КартаЛояльности                КАК КартаЛояльности,
	|	ШапкаДокумента.Соглашение                     КАК Соглашение,
	|	ШапкаДокумента.Сделка                         КАК Сделка,
	|	ШапкаДокумента.Склад                          КАК Склад,
	|	ШапкаДокумента.ХозяйственнаяОперация          КАК ХозяйственнаяОперация,
	|	ШапкаДокумента.ВалютаВзаиморасчетов           КАК ВалютаВзаиморасчетов,
	|	ШапкаДокумента.ЦенаВключаетНДС                КАК ЦенаВключаетНДС,
	|	ШапкаДокумента.ПорядокРасчетов                КАК ПорядокРасчетов,
	|	ШапкаДокумента.ФормаОплаты                    КАК ФормаОплаты,
	|	ШапкаДокумента.ОплатаВВалюте                  КАК ОплатаВВалюте,
	|	ШапкаДокумента.ВернутьМногооборотнуюТару      КАК ВернутьМногооборотнуюТару,
	|	ШапкаДокумента.ТребуетсяЗалогЗаТару           КАК ТребуетсяЗалогЗаТару,
	|	ШапкаДокумента.СрокВозвратаМногооборотнойТары КАК СрокВозвратаМногооборотнойТары,
	|	ШапкаДокумента.НаправлениеДеятельности        КАК НаправлениеДеятельности,
	|	ШапкаДокумента.РассчитыватьДатуВозвратаТарыПоКалендарю КАК РассчитыватьДатуВозвратаТарыПоКалендарю,
	|	ШапкаДокумента.КалендарьВозвратаТары          КАК КалендарьВозвратаТары,
	|	ШапкаДокумента.Подразделение                  КАК Подразделение,
	|	ШапкаДокумента.КонтактноеЛицо                 КАК КонтактноеЛицо,
	|	ШапкаДокумента.ЕстьОтличияПартнер             КАК ЕстьОтличияПартнер,
	|	ШапкаДокумента.ЕстьОтличияКонтрагент          КАК ЕстьОтличияКонтрагент,
	|	ШапкаДокумента.ЕстьОтличияДоговор             КАК ЕстьОтличияДоговор,
	|	ШапкаДокумента.ЕстьОтличияОрганизация         КАК ЕстьОтличияОрганизация,
	|	ШапкаДокумента.ЕстьОтличияСоглашение          КАК ЕстьОтличияСоглашение,
	|	ШапкаДокумента.ЕстьОтличияСделка              КАК ЕстьОтличияСделка,
	|	ШапкаДокумента.ЕстьОтличияСклад               КАК ЕстьОтличияСклад,
	|	ШапкаДокумента.ЕстьОтличияХозяйственнаяОперация КАК ЕстьОтличияХозяйственнаяОперация,
	|	ШапкаДокумента.ЕстьОтличияВалютаВзаиморасчетов  КАК ЕстьОтличияВалютаВзаиморасчетов,
	|	ШапкаДокумента.ЕстьОтличияЦенаВключаетНДС     КАК ЕстьОтличияЦенаВключаетНДС,
	|	ШапкаДокумента.ЕстьОтличияВернутьМногооборотнуюТару КАК ЕстьОтличияВернутьМногооборотнуюТару,
	|	ШапкаДокумента.ЕстьОтличияТребуетсяЗалогЗаТару КАК ЕстьОтличияТребуетсяЗалогЗаТару,
	|	ШапкаДокумента.ЕстьОтличияСрокВозвратаМногооборотнойТары КАК ЕстьОтличияСрокВозвратаМногооборотнойТары,
	|	ШапкаДокумента.ЕстьОтличияПорядокРасчетов     КАК ЕстьОтличияПорядокРасчетов,
	|	ШапкаДокумента.БанковскийСчет                 КАК БанковскийСчет,
	|	ШапкаДокумента.БанковскийСчетКонтрагента      КАК БанковскийСчетКонтрагента,
	|	ШапкаДокумента.Грузоотправитель               КАК Грузоотправитель,
	|	ШапкаДокумента.Грузополучатель                КАК Грузополучатель,
	|	ШапкаДокумента.БанковскийСчетГрузоотправителя КАК БанковскийСчетГрузоотправителя,
	|	ШапкаДокумента.БанковскийСчетГрузополучателя  КАК БанковскийСчетГрузополучателя,
	|	ШапкаДокумента.СкладОтгрузки                  КАК СкладОтгрузки,
	|	ШапкаДокумента.ЗапрещеноВыбиратьГруппуСкладов КАК ЗапрещеноВыбиратьГруппуСкладов,
	|	ШапкаДокумента.СпособДоставки                 КАК СпособДоставки,
	|	ШапкаДокумента.ПеревозчикПартнер              КАК ПеревозчикПартнер,
	|	ШапкаДокумента.АдресДоставки                  КАК АдресДоставки,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.АдресДоставкиЗначенияПолейПустой
	|		ТОГДА """" 
	|		ИНАЧЕ ЕСТЬNULL(ШапкаЗаказа.АдресДоставкиЗначенияПолей, """")
	|	КОНЕЦ КАК АдресДоставкиЗначенияПолей,
	|	ВЫБОР
	|		КОГДА ШапкаДокумента.ДополнительнаяИнформацияПоДоставкеПустой
	|		ТОГДА """" 
	|		ИНАЧЕ ЕСТЬNULL(ШапкаЗаказа.ДополнительнаяИнформацияПоДоставке, """")
	|	КОНЕЦ КАК ДополнительнаяИнформацияПоДоставке,
	|	ШапкаДокумента.АдресДоставкиПеревозчика                 КАК АдресДоставкиПеревозчика,
	|	ШапкаДокумента.АдресДоставкиПеревозчикаЗначенияПолей    КАК АдресДоставкиПеревозчикаЗначенияПолей,
	|	ШапкаДокумента.ЗонаДоставки                             КАК ЗонаДоставки,
	|	ШапкаДокумента.ВремяДоставкиС                           КАК ВремяДоставкиС,
	|	ШапкаДокумента.ВремяДоставкиПо                          КАК ВремяДоставкиПо,
	|	ШапкаДокумента.ЕстьНесовместимыеСпособыДоставки         КАК ЕстьНесовместимыеСпособыДоставки,
	|	ШапкаДокумента.ЕстьОтличияНаправлениеДеятельности       КАК ЕстьОтличияНаправлениеДеятельности
	|ИЗ
	|	ВТРеквизитыШапки КАК ШапкаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтЗаказыКлиента КАК ШапкаЗаказа
	|		ПО ИСТИНА
	|;
	|//////////////////////////////////////////////////////////////////////////////// 4
	|" + ТекстДанныеДокументов;
	
	ИмяДокументаРТУ    = ?(ИмяДокумента = Метаданные.Документы.ПередачаТоваровХранителю.Имя,
				НСтр("ru='передачи товаров хранителю';uk='передачі товарів зберігачу'"),
				НСтр("ru='реализации товаров и услуг';uk='реалізації товарів і послуг'"));
	ДопустимыеОперации = ОбщегоНазначенияУТ.ДопустимыеХозяйственныеОперацииДокумента(ИмяДокумента);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	Запрос.УстановитьПараметр("ДопустимыеОперации", ДопустимыеОперации);
	Запрос.УстановитьПараметр("ИмяДокументаРТУ", ИмяДокументаРТУ);
	
	Запрос.УстановитьПараметр("ИспользоватьСоглашенияСКлиентами", ПолучитьФункциональнуюОпцию("ИспользоватьСоглашенияСКлиентами"));
	Запрос.УстановитьПараметр("ИспользоватьЗаданияНаПеревозкуДляУчетаДоставкиПеревозчиками", ПолучитьФункциональнуюОпцию("ИспользоватьЗаданияНаПеревозкуДляУчетаДоставкиПеревозчиками"));
	
	СоответствиеСтатусов = Новый Соответствие;
	МассивДопустимыхСтатусов = Документы.ЗаказКлиента.ДопустимыеСтатусыВводаНаОсновании();
	СоответствиеСтатусов.Вставить(Тип("ПеречислениеСсылка.СтатусыЗаказовКлиентов"), МассивДопустимыхСтатусов);
	Запрос.УстановитьПараметр("МассивСтатусовЗаказКлиента", МассивДопустимыхСтатусов);
	МассивДопустимыхСтатусов = Документы.ЗаявкаНаВозвратТоваровОтКлиента.ДопустимыеСтатусыВводаНаОсновании();
	СоответствиеСтатусов.Вставить(Тип("ПеречислениеСсылка.СтатусыЗаявокНаВозвратТоваровОтКлиентов"), МассивДопустимыхСтатусов);
	Запрос.УстановитьПараметр("МассивСтатусовЗаявкаНаВозврат", МассивДопустимыхСтатусов);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ВыборкаРеквизитыШапки = РезультатЗапроса[3].Выбрать();
	ВыборкаРеквизитыШапки.Следующий();
	
	ИсключаемыеЗаказы = Новый Массив;
	ЗаказыСНедопустимойОперацией = РезультатЗапроса[1].Выбрать();
	
	Пока ЗаказыСНедопустимойОперацией.Следующий() Цикл
		
		Если МассивСсылок.Количество() > 1 Тогда
			ТекстСообщения = НСтр("ru='Распоряжение %Распоряжение% пропущено, т.к. невозможно оформить документ ""%ИмяДокумента%"" на основании распоряжения с операцией ""%ХозяйственнаяОперация%"".';uk='Розпорядження %Распоряжение% пропущено, тому що неможливо оформити документ ""%ИмяДокумента%"" на підставі розпорядження з операцією ""%ХозяйственнаяОперация%"".'");
		Иначе
			ТекстСообщения = НСтр("ru='Невозможно оформить документ ""%ИмяДокумента%"" на основании распоряжения с операцией ""%ХозяйственнаяОперация%"".';uk='Неможливо оформити документ ""%ИмяДокумента%"" на підставі розпорядження з операцією ""%ХозяйственнаяОперация%"".'");
		КонецЕсли;
		
		ТекстСообщения = СтрЗаменить(ТекстСообщения,
									"%ИмяДокумента%",
									Метаданные.Документы[ИмяДокумента].Синоним);
		ТекстСообщения = СтрЗаменить(ТекстСообщения,
									"%ХозяйственнаяОперация%",
									ЗаказыСНедопустимойОперацией.ХозяйственнаяОперация);
		ТекстСообщения = СтрЗаменить(ТекстСообщения,
									"%Распоряжение%",
									ЗаказыСНедопустимойОперацией.ЗаказКлиента);
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЗаказыСНедопустимойОперацией.ЗаказКлиента);
		
		ИсключаемыеЗаказы.Добавить(ЗаказыСНедопустимойОперацией.ЗаказКлиента);
	КонецЦикла;
	
	Если ЗаказыСНедопустимойОперацией.Количество() = МассивСсылок.Количество() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	МассивСсылок = ОбщегоНазначенияКлиентСервер.РазностьМассивов(МассивСсылок, ИсключаемыеЗаказы);
	
	Отказ = Ложь;
	
	Если ПродажиСервер.СообщитьОбОшибкахФормированияДанныхЗаполненияРеализации(ВыборкаРеквизитыШапки) Тогда
		
		ТекстОшибки = НСтр("ru='Ввод одной %Документ% на основании выделенных распоряжений невозможен';uk='Введення одного %Документ% на підставі виділених розпоряджень неможливе'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", ВыборкаРеквизитыШапки.ИмяДокумента);
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстОшибки,
			,
			,
			,
			Отказ);
		
	Иначе
		
		Если Не РезультатЗапроса[4].Пустой() > 0 Тогда

			ВыборкаЗаказы = РезультатЗапроса[4].Выбрать();
			
			Пока ВыборкаЗаказы.Следующий() Цикл
				
				Документы.ЗаказКлиента.ПроверитьВозможностьВводаНаОсновании(
					ВыборкаЗаказы.ЗаказКлиента,
					ВыборкаЗаказы.Статус,
					ВыборкаЗаказы.ЕстьОшибкиПроведен);
				
			КонецЦикла;
			
		КонецЕсли;
		
		РеквизитыШапки.Вставить("Партнер",                               ВыборкаРеквизитыШапки.Партнер);
		РеквизитыШапки.Вставить("Контрагент",                            ВыборкаРеквизитыШапки.Контрагент);
		РеквизитыШапки.Вставить("Договор",                               ВыборкаРеквизитыШапки.Договор);
		РеквизитыШапки.Вставить("Организация",                           ВыборкаРеквизитыШапки.Организация);
		РеквизитыШапки.Вставить("Склад",                                 ВыборкаРеквизитыШапки.Склад);
		РеквизитыШапки.Вставить("Подразделение",                         ВыборкаРеквизитыШапки.Подразделение);
		РеквизитыШапки.Вставить("Соглашение",                            ВыборкаРеквизитыШапки.Соглашение);
		РеквизитыШапки.Вставить("ХозяйственнаяОперация",                 ВыборкаРеквизитыШапки.ХозяйственнаяОперация);
		РеквизитыШапки.Вставить("ВалютаВзаиморасчетов",                  ВыборкаРеквизитыШапки.ВалютаВзаиморасчетов);
		РеквизитыШапки.Вставить("ЦенаВключаетНДС",                       ВыборкаРеквизитыШапки.ЦенаВключаетНДС);
		РеквизитыШапки.Вставить("ПорядокРасчетов",                       ВыборкаРеквизитыШапки.ПорядокРасчетов);
		РеквизитыШапки.Вставить("ФормаОплаты",                           ВыборкаРеквизитыШапки.ФормаОплаты);
		РеквизитыШапки.Вставить("ОплатаВВалюте",                         ВыборкаРеквизитыШапки.ОплатаВВалюте);
		РеквизитыШапки.Вставить("ВернутьМногооборотнуюТару",             ВыборкаРеквизитыШапки.ВернутьМногооборотнуюТару);
		РеквизитыШапки.Вставить("ТребуетсяЗалогЗаТару",                  ВыборкаРеквизитыШапки.ТребуетсяЗалогЗаТару);
		РеквизитыШапки.Вставить("РассчитыватьДатуВозвратаТарыПоКалендарю", ВыборкаРеквизитыШапки.РассчитыватьДатуВозвратаТарыПоКалендарю);
		РеквизитыШапки.Вставить("КалендарьВозвратаТары",                 ВыборкаРеквизитыШапки.КалендарьВозвратаТары);
		РеквизитыШапки.Вставить("СрокВозвратаМногооборотнойТары",        ВыборкаРеквизитыШапки.СрокВозвратаМногооборотнойТары);
		РеквизитыШапки.Вставить("СкладОтгрузки",                         ВыборкаРеквизитыШапки.СкладОтгрузки);
		РеквизитыШапки.Вставить("ЗапрещеноВыбиратьГруппуСкладов",        ВыборкаРеквизитыШапки.ЗапрещеноВыбиратьГруппуСкладов);
		РеквизитыШапки.Вставить("Сделка",                                ВыборкаРеквизитыШапки.Сделка);
		РеквизитыШапки.Вставить("Грузоотправитель",                      ВыборкаРеквизитыШапки.Грузоотправитель);
		РеквизитыШапки.Вставить("Грузополучатель",                       ВыборкаРеквизитыШапки.Грузополучатель);
		РеквизитыШапки.Вставить("БанковскийСчетГрузоотправителя",        ВыборкаРеквизитыШапки.БанковскийСчетГрузоотправителя);
		РеквизитыШапки.Вставить("БанковскийСчетГрузополучателя",         ВыборкаРеквизитыШапки.БанковскийСчетГрузополучателя);
		РеквизитыШапки.Вставить("БанковскийСчет",                        ВыборкаРеквизитыШапки.БанковскийСчет);
		РеквизитыШапки.Вставить("БанковскийСчетКонтрагента",             ВыборкаРеквизитыШапки.БанковскийСчетКонтрагента);
		РеквизитыШапки.Вставить("НаправлениеДеятельности",               ВыборкаРеквизитыШапки.НаправлениеДеятельности);
		РеквизитыШапки.Вставить("КонтактноеЛицо",                        ВыборкаРеквизитыШапки.КонтактноеЛицо);
		РеквизитыШапки.Вставить("КартаЛояльности",                       ВыборкаРеквизитыШапки.КартаЛояльности);
		ДоставкаТоваров.ДополнитьРеквизитамиДоставкиДанныеЗаполнения(РеквизитыШапки,ВыборкаРеквизитыШапки);
		
	КонецЕсли;
	
	Возврат Не Отказ;
	
КонецФункции

// Формирует структуру для создания выполнения работ по одному или нескольким заказам клиентов
// Если в переданных заказах отличаются реквизиты шапки, выдается сообщение об ошибке.
//
// Параметры:
//  МассивСсылок   - Массив - заказы поставщикам, по которым необходимо ввести реализацию.
//  РеквизитыШапки - Структура - структура, в которую будут помещены реквизиты шапки из массива заказов.
//
// Возвращаемое значение:
//   Булево - Ложь, если в переданных заказах отличаются реквизиты шапки.
//
Функция СформироватьДанныеЗаполненияАктовВыполненныхРабот(МассивСсылок, РеквизитыШапки) Экспорт
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	МИНИМУМ(ЗаказКлиента.Партнер)                 КАК Партнер,
		|	МИНИМУМ(ЗаказКлиента.Контрагент)              КАК Контрагент,
		|	МИНИМУМ(ЗаказКлиента.Договор)                 КАК Договор,
		|	МИНИМУМ(ЗаказКлиента.Организация)             КАК Организация,
		|	МИНИМУМ(ЗаказКлиента.Соглашение)              КАК Соглашение,
		|	МИНИМУМ(ЗаказКлиента.Сделка)                  КАК Сделка,
		|	МИНИМУМ(ЗаказКлиента.ВалютаВзаиморасчетов)    КАК ВалютаВзаиморасчетов,
		|	МИНИМУМ(ЗаказКлиента.ЦенаВключаетНДС)         КАК ЦенаВключаетНДС,
		|	МИНИМУМ(ЗаказКлиента.ПорядокРасчетов)         КАК ПорядокРасчетов,
		|	МИНИМУМ(ЗаказКлиента.НаправлениеДеятельности) КАК НаправлениеДеятельности,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ
		|				ВЫБОР
		|					КОГДА
		|						ЗаказКлиента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаОрганизаций.ПустаяСсылка)
		|					ТОГДА
		|						ЗаказКлиента.БанковскийСчет
		|					ИНАЧЕ
		|						NULL
		|				КОНЕЦ) = 1 И
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.Организация) = 1
		|		ТОГДА
		|			МАКСИМУМ(ЗаказКлиента.БанковскийСчет)
		|		ИНАЧЕ
		|			ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаОрганизаций.ПустаяСсылка)
		|	КОНЕЦ КАК БанковскийСчет,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ
		|				ВЫБОР
		|					КОГДА
		|						ЗаказКлиента.БанковскийСчетКонтрагента <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаКонтрагентов.ПустаяСсылка)
		|					ТОГДА
		|						ЗаказКлиента.БанковскийСчетКонтрагента
		|					ИНАЧЕ
		|						NULL
		|				КОНЕЦ) = 1 И
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.Контрагент) = 1
		|		ТОГДА
		|			МАКСИМУМ(ЗаказКлиента.БанковскийСчетКонтрагента)
		|		ИНАЧЕ
		|			ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаКонтрагентов.ПустаяСсылка)
		|	КОНЕЦ КАК БанковскийСчетКонтрагента,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ
		|				ВЫБОР
		|					КОГДА
		|						ЗаказКлиента.КонтактноеЛицо <> ЗНАЧЕНИЕ(Справочник.КонтактныеЛицаПартнеров.ПустаяСсылка)
		|					ТОГДА
		|						ЗаказКлиента.КонтактноеЛицо
		|					ИНАЧЕ
		|						NULL
		|				КОНЕЦ) = 1 И
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.КонтактноеЛицо) = 1
		|		ТОГДА
		|			МАКСИМУМ(ЗаказКлиента.КонтактноеЛицо)
		|		ИНАЧЕ
		|			ЗНАЧЕНИЕ(Справочник.КонтактныеЛицаПартнеров.ПустаяСсылка)
		|	КОНЕЦ КАК КонтактноеЛицо,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.Партнер) > 1
		|		ТОГДА
		|			ИСТИНА
		|		ИНАЧЕ
		|			ЛОЖЬ
		|	КОНЕЦ КАК ЕстьОтличияПартнер,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.Контрагент) > 1
		|		ТОГДА
		|			ИСТИНА
		|		ИНАЧЕ
		|			ЛОЖЬ
		|	КОНЕЦ КАК ЕстьОтличияКонтрагент,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.Договор) > 1
		|		ТОГДА
		|			ИСТИНА
		|		ИНАЧЕ
		|			ЛОЖЬ
		|	КОНЕЦ КАК ЕстьОтличияДоговор,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.Организация) > 1
		|		ТОГДА
		|			ИСТИНА
		|		ИНАЧЕ
		|			ЛОЖЬ
		|	КОНЕЦ КАК ЕстьОтличияОрганизация,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.Соглашение) > 1
		|		ТОГДА
		|			ИСТИНА
		|		ИНАЧЕ
		|			ЛОЖЬ
		|	КОНЕЦ КАК ЕстьОтличияСоглашение,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.Сделка) > 1
		|		ТОГДА
		|			ИСТИНА
		|		ИНАЧЕ
		|			ЛОЖЬ
		|	КОНЕЦ КАК ЕстьОтличияСделка,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.ВалютаВзаиморасчетов) > 1
		|		ТОГДА
		|			ИСТИНА
		|		ИНАЧЕ
		|			ЛОЖЬ
		|	КОНЕЦ КАК ЕстьОтличияВалютаВзаиморасчетов,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.ЦенаВключаетНДС) > 1
		|		ТОГДА
		|			ИСТИНА
		|		ИНАЧЕ
		|			ЛОЖЬ
		|	КОНЕЦ КАК ЕстьОтличияЦенаВключаетНДС,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.ПорядокРасчетов) > 1
		|		ТОГДА
		|			ИСТИНА
		|		ИНАЧЕ
		|			ЛОЖЬ
		|	КОНЕЦ КАК ЕстьОтличияПорядокРасчетов,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.НаправлениеДеятельности) > 1
		|		ТОГДА
		|			ИСТИНА
		|		ИНАЧЕ
		|			ЛОЖЬ
		|	КОНЕЦ КАК ЕстьОтличияНаправлениеДеятельности
		|ИЗ
		|	(ВЫБРАТЬ
		|		ЗаказКлиента.Партнер КАК Партнер,
		|		ЗаказКлиента.Контрагент КАК Контрагент,
		|		ЗаказКлиента.Договор КАК Договор,
		|		ЗаказКлиента.Организация КАК Организация,
		|		ЗаказКлиента.Соглашение КАК Соглашение,
		|		ЗаказКлиента.Сделка КАК Сделка,
		|		ЗаказКлиента.Валюта КАК ВалютаВзаиморасчетов,
		|		ЗаказКлиента.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
		|		ЗаказКлиента.ПорядокРасчетов КАК ПорядокРасчетов,
		|		ЗаказКлиента.БанковскийСчет,
		|		ЗаказКлиента.БанковскийСчетКонтрагента,
		|		ЗаказКлиента.НаправлениеДеятельности,
		|		ЗаказКлиента.КонтактноеЛицо
		|	ИЗ
		|		Документ.ЗаказКлиента КАК ЗаказКлиента
		|	ГДЕ
		|		ЗаказКлиента.Ссылка В(&МассивСсылок)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ЗаявкаНаВозврат.Партнер,
		|		ЗаявкаНаВозврат.Контрагент,
		|		ЗаявкаНаВозврат.Договор,
		|		ЗаявкаНаВозврат.Организация,
		|		ЗаявкаНаВозврат.Соглашение,
		|		ЗаявкаНаВозврат.Сделка,
		|		ЗаявкаНаВозврат.Валюта,
		|		ЗаявкаНаВозврат.ЦенаВключаетНДС,
		|		ЗаявкаНаВозврат.ПорядокРасчетов,
		|		ЗаявкаНаВозврат.БанковскийСчет,
		|		ЗаявкаНаВозврат.БанковскийСчетКонтрагента,
		|		ЗаявкаНаВозврат.НаправлениеДеятельности,
		|		ЗаявкаНаВозврат.КонтактноеЛицо
		|	ИЗ
		|		Документ.ЗаявкаНаВозвратТоваровОтКлиента КАК ЗаявкаНаВозврат
		|	ГДЕ
		|		ЗаявкаНаВозврат.Ссылка В(&МассивСсылок)) КАК ЗаказКлиента
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗаказКлиента.Ссылка КАК ЗаказКлиента,
		|	ЗаказКлиента.Статус КАК Статус,
		|	ВЫБОР
		|		КОГДА ЗаказКлиента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиенту)
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЕстьОшибкиХозяйственнаяОперация,
		|	(НЕ ЗаказКлиента.Проведен) КАК ЕстьОшибкиПроведен,
		|	ВЫБОР
		|		КОГДА ЗаказКлиента.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.КОтгрузке)
		|				ИЛИ ЗаказКлиента.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.Закрыт)
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЕстьОшибкиСтатус,
		|	ИСТИНА КАК РаспоряжениеЗаказ,
		|	ЗаказКлиента.ХозяйственнаяОперация КАК ХозяйственнаяОперация
		|ИЗ
		|	Документ.ЗаказКлиента КАК ЗаказКлиента
		|ГДЕ
		|	ЗаказКлиента.Ссылка В(&МассивСсылок)
		|	И ((НЕ ЗаказКлиента.Проведен)
		|			ИЛИ (НЕ ЗаказКлиента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиенту))
		|			ИЛИ ЗаказКлиента.Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.КОтгрузке)
		|				И ЗаказКлиента.Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.Закрыт))
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗаявкаНаВозврат.Ссылка,
		|	ЗаявкаНаВозврат.Статус,
		|	ВЫБОР
		|		КОГДА ЗаявкаНаВозврат.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровОтКлиента)
		|				ИЛИ ЗаявкаНаВозврат.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтРозничногоПокупателя)
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ,
		|	(НЕ ЗаявкаНаВозврат.Проведен),
		|	ВЫБОР
		|		КОГДА ЗаявкаНаВозврат.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаВозвратТоваровОтКлиентов.КОтгрузке)
		|				ИЛИ ЗаявкаНаВозврат.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаВозвратТоваровОтКлиентов.Выполнена)
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ,
		|	ЛОЖЬ,
		|	ЗаявкаНаВозврат.ХозяйственнаяОперация
		|ИЗ
		|	Документ.ЗаявкаНаВозвратТоваровОтКлиента КАК ЗаявкаНаВозврат
		|ГДЕ
		|	ЗаявкаНаВозврат.Ссылка В(&МассивСсылок)
		|	И ((НЕ ЗаявкаНаВозврат.Проведен)
		|			ИЛИ (НЕ(ЗаявкаНаВозврат.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровОтКлиента)
		|					ИЛИ ЗаявкаНаВозврат.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтРозничногоПокупателя)))
		|			ИЛИ ЗаявкаНаВозврат.Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаВозвратТоваровОтКлиентов.КОтгрузке)
		|				И ЗаявкаНаВозврат.Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаВозвратТоваровОтКлиентов.Выполнена))");
	
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ВыборкаРеквизитыШапки = РезультатЗапроса[0].Выбрать();
	ВыборкаРеквизитыШапки.Следующий();
	
	Отказ = Ложь;
	
	ТекстСообщения = НСтр("ru='У выделенных распоряжений отличается поле ""%ПредставлениеПоля%""';uk='У виділених розпоряджень відрізняється поле ""%ПредставлениеПоля%""'");
	
	Если ВыборкаРеквизитыШапки.ЕстьОтличияПартнер Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтрЗаменить(ТекстСообщения, "%ПредставлениеПоля%", НСтр("ru='Партнер';uk='Партнер'")),
			,
			,
			,
			Отказ);
		
	КонецЕсли;
	
	Если ВыборкаРеквизитыШапки.ЕстьОтличияКонтрагент Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтрЗаменить(ТекстСообщения, "%ПредставлениеПоля%", НСтр("ru='Контрагент';uk='Контрагент'")),
			,
			,
			,
			Отказ);
		
	КонецЕсли;
	
	Если ВыборкаРеквизитыШапки.ЕстьОтличияОрганизация Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтрЗаменить(ТекстСообщения, "%ПредставлениеПоля%", НСтр("ru='Организация';uk='Організація'")),
			,
			,
			,
			Отказ);
		
	КонецЕсли;
	
	Если ВыборкаРеквизитыШапки.ЕстьОтличияСоглашение Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтрЗаменить(ТекстСообщения, "%ПредставлениеПоля%", НСтр("ru='Соглашение';uk='Оферта'")),
			,
			,
			,
			Отказ);
		
	КонецЕсли;
	
	Если ВыборкаРеквизитыШапки.ЕстьОтличияДоговор Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтрЗаменить(ТекстСообщения, "%ПредставлениеПоля%", НСтр("ru='Договор';uk='Договір'")),
			,
			,
			,
			Отказ);
		
	КонецЕсли;
	
	Если ВыборкаРеквизитыШапки.ЕстьОтличияСделка Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтрЗаменить(ТекстСообщения, "%ПредставлениеПоля%", НСтр("ru='Сделка';uk='Угода'")),
			,
			,
			,
			Отказ);
		
	КонецЕсли;
	
	Если ВыборкаРеквизитыШапки.ЕстьОтличияВалютаВзаиморасчетов Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтрЗаменить(ТекстСообщения, "%ПредставлениеПоля%", НСтр("ru='Валюта взаиморасчетов';uk='Валюта взаєморозрахунків'")),
			,
			,
			,
			Отказ);
		
	КонецЕсли;
	
	
	Если ВыборкаРеквизитыШапки.ЕстьОтличияЦенаВключаетНДС Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтрЗаменить(ТекстСообщения, "%ПредставлениеПоля%", НСтр("ru='Цена включает НДС';uk='Ціна включає ПДВ'")),
			,
			,
			,
			Отказ);
		
	КонецЕсли;
	
	Если ВыборкаРеквизитыШапки.ЕстьОтличияПорядокРасчетов Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтрЗаменить(ТекстСообщения, "%ПредставлениеПоля%", НСтр("ru='Порядок расчетов';uk='Порядок розрахунків'")),
			,
			,
			,
			Отказ);
		
		КонецЕсли;
		
	Если ВыборкаРеквизитыШапки.ЕстьОтличияНаправлениеДеятельности Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтрЗаменить(ТекстСообщения, "%ПредставлениеПоля%", НСтр("ru='Направление деятельности';uk='Напрям діяльності'")),
			,
			,
			,
			Отказ);
		
	КонецЕсли;
	
	Если ВыборкаРеквизитыШапки.ЕстьОтличияПартнер Или
		ВыборкаРеквизитыШапки.ЕстьОтличияКонтрагент Или
		ВыборкаРеквизитыШапки.ЕстьОтличияОрганизация Или
		ВыборкаРеквизитыШапки.ЕстьОтличияСоглашение Или
		ВыборкаРеквизитыШапки.ЕстьОтличияДоговор Или
		ВыборкаРеквизитыШапки.ЕстьОтличияСделка Или
		ВыборкаРеквизитыШапки.ЕстьОтличияВалютаВзаиморасчетов Или
		ВыборкаРеквизитыШапки.ЕстьОтличияЦенаВключаетНДС Или
		ВыборкаРеквизитыШапки.ЕстьОтличияПорядокРасчетов Или
		ВыборкаРеквизитыШапки.ЕстьОтличияНаправлениеДеятельности Тогда
		
		ТекстОшибки = НСтр("ru='Ввод одного акта выполненных работ на основании выделенных распоряжений невозможен';uk='Введення одного акта виконаних робіт на підставі виділених розпоряджень неможливе'");
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстОшибки,
			,
			,
			,
			Отказ);
		
	Иначе
		
		Если Не РезультатЗапроса[1].Пустой() > 0 Тогда
			
			ВыборкаЗаказы = РезультатЗапроса[1].Выбрать();
			
			Пока ВыборкаЗаказы.Следующий() Цикл
				
				Если ВыборкаЗаказы.РаспоряжениеЗаказ Тогда
					Документы.ЗаказКлиента.ПроверитьВозможностьВводаНаОсновании(
						ВыборкаЗаказы.ЗаказКлиента,
						ВыборкаЗаказы.Статус,
						ВыборкаЗаказы.ЕстьОшибкиПроведен);
				Иначе
					Документы.ЗаявкаНаВозвратТоваровОтКлиента.ПроверитьВозможностьВводаНаОсновании(
						ВыборкаЗаказы.ЗаказКлиента,
						ВыборкаЗаказы.Статус,
						ВыборкаЗаказы.ЕстьОшибкиПроведен);
				КонецЕсли;
				
				Если ВыборкаЗаказы.ЕстьОшибкиПроведен Тогда
					
					ТекстОшибки = НСтр("ru='Документ %Документ% не проведен. Ввод на основании непроведенного документа запрещен.';uk='Документ %Документ% не проведено. Введення на підставі непроведенного документа заборонене.'");
					ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", ВыборкаЗаказы.ЗаказКлиента);
					
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
						ТекстОшибки,
						,
						,
						,
						Отказ);
					
				ИначеЕсли ВыборкаЗаказы.ЕстьОшибкиХозяйственнаяОперация Тогда
					
					ТекстОшибки = НСтр("ru='Ввод на основании документа с хозяйственной операцией %ХозяйственнаяОперация% невозможен.';uk='Введення на підставі документа з господарською операцією %ХозяйственнаяОперация% неможливе.'");
					ТекстОшибки = СтрЗаменить(ТекстОшибки, "%ХозяйственнаяОперация%", ВыборкаЗаказы.ХозяйственнаяОперация);
					
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
						ТекстОшибки,
						,
						,
						,
						Отказ);
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
		РеквизитыШапки.Вставить("Партнер",                        ВыборкаРеквизитыШапки.Партнер);
		РеквизитыШапки.Вставить("Контрагент",                     ВыборкаРеквизитыШапки.Контрагент);
		РеквизитыШапки.Вставить("Договор",                        ВыборкаРеквизитыШапки.Договор);
		РеквизитыШапки.Вставить("Организация",                    ВыборкаРеквизитыШапки.Организация);
		РеквизитыШапки.Вставить("Соглашение",                     ВыборкаРеквизитыШапки.Соглашение);
		РеквизитыШапки.Вставить("ВалютаВзаиморасчетов",           ВыборкаРеквизитыШапки.ВалютаВзаиморасчетов);
		РеквизитыШапки.Вставить("ЦенаВключаетНДС",                ВыборкаРеквизитыШапки.ЦенаВключаетНДС);
		РеквизитыШапки.Вставить("ПорядокРасчетов",                ВыборкаРеквизитыШапки.ПорядокРасчетов);
		РеквизитыШапки.Вставить("Сделка",                         ВыборкаРеквизитыШапки.Сделка);
		РеквизитыШапки.Вставить("БанковскийСчетКонтрагента",      ВыборкаРеквизитыШапки.БанковскийСчетКонтрагента);
		РеквизитыШапки.Вставить("БанковскийСчет",                 ВыборкаРеквизитыШапки.БанковскийСчет);
		РеквизитыШапки.Вставить("КонтактноеЛицо",                 ВыборкаРеквизитыШапки.КонтактноеЛицо);
		РеквизитыШапки.Вставить("НаправлениеДеятельности",        ВыборкаРеквизитыШапки.НаправлениеДеятельности);

	КонецЕсли;
	
	Возврат Не Отказ;
	
КонецФункции


// Функция проверки наличия графика оплаты в соглашении
//
// Параметры:
// 		Соглашение - СправочникСсылка.Соглашение.
//
// Возвращаемое значение:
// 		Булево - "Истина", если в графике есть хотя бы один этап.
//
Функция ГрафикСоглашенияЗаполнен(Соглашение) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если Не ЗначениеЗаполнено(Соглашение) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	СоглашенияСКлиентамиЭтапыГрафикаОплаты.Ссылка
	|ИЗ
	|	Справочник.СоглашенияСКлиентами.ЭтапыГрафикаОплаты КАК СоглашенияСКлиентамиЭтапыГрафикаОплаты
	|ГДЕ
	|	СоглашенияСКлиентамиЭтапыГрафикаОплаты.Ссылка = &Соглашение");
	Запрос.УстановитьПараметр("Соглашение", Соглашение);
	
	Возврат НЕ Запрос.Выполнить().Пустой();
	
КонецФункции

// Перезаполняет данные формы накладной по ордерам
//
// Параметры:
// 		ДанныеФормы - ДанныеФормыСтруктура - перезаполняемая накладная.
//
// Возвращаемое значение:
// 		Булево - "Истина", если накладная перезаполнена.
//
Функция ПерезаполнитьНакладнуюПоОрдерам(ДанныеФормы,НалогообложениеНДС=Неопределено) Экспорт
	
 	СтруктураЗаполнения = ПродажиСервер.ПерезаполнитьНакладнуюПоОрдерам(ДанныеФормы,НалогообложениеНДС);
	Возврат СтруктураЗаполнения;
	
КонецФункции

// Получает основание для счета на оплату
//
// Параметры:
//  ДокументОснование	 - ДокументСсылка.* - Документ основание счета.
// 
// Возвращаемое значение:
//  ДокументСсылка.*, СправочникСсылка.ДоговорыКонтрагентов  - основание.
//
Функция ПолучитьОснованиеДляСчетаНаОплату(ДокументОснование) Экспорт
	
	ПорядокРасчетов = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОснование, "ПорядокРасчетов");
	Если ПорядокРасчетов = Перечисления.ПорядокРасчетов.ПоДоговорамКонтрагентов Тогда
		Основание =ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОснование, "Договор");
	Иначе
		Основание = ДокументОснование;
	КонецЕсли;
	
	Возврат Основание
	
КонецФункции

// Формирует структуру списка документов для установки статуса
//
// Параметры:
//  МассивРеализаций - Массив - массив документов.
// 
// Возвращаемое значение:
//  Структура - структура возвращаемых параметров.
//
Функция СформироватьСтруктуруСпискаДокументов(МассивРеализаций) Экспорт
	
	СтруктураВозврата = Новый Структура();
	СтруктураВозврата.Вставить("ВыделенныеСтрокиСодержатОтгрузку", Ложь);
	СтруктураВозврата.Вставить("ВыделенныеСтрокиСодержатНеТолькоОтгрузку", Ложь);
	
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьОтгрузкуБезПереходаПраваСобственности") Тогда
		Возврат СтруктураВозврата
	КонецЕсли;
	
	ЗначенияХозОпераций = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(МассивРеализаций, "ХозяйственнаяОперация");
	
	Для Каждого ТекСтрока Из МассивРеализаций Цикл
		
		Если ЗначенияХозОпераций[ТекСтрока] = Перечисления.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности
			ИЛИ ЗначенияХозОпераций[ТекСтрока] = Перечисления.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав Тогда
			СтруктураВозврата.Вставить("ВыделенныеСтрокиСодержатОтгрузку", Истина);
		ИначеЕсли ЗначенияХозОпераций[ТекСтрока] <> Перечисления.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности Тогда
			СтруктураВозврата.Вставить("ВыделенныеСтрокиСодержатНеТолькоОтгрузку", Истина);
		КонецЕсли;
		
		Если СтруктураВозврата.ВыделенныеСтрокиСодержатОтгрузку
			 И СтруктураВозврата.ВыделенныеСтрокиСодержатНеТолькоОтгрузку Тогда
			 Прервать;
		 КонецЕсли;
		 
	КонецЦикла;
	
	Возврат СтруктураВозврата;
	
КонецФункции

#Область ПроцедурыИФункцииДляУстановкиСтатусовСоглашений

// Устанавливает статус "Не согласовано" у выделенных в списке соглашений.
//
// Параметры:
//  Соглашения - Массив - массив соглашений с клиентами.
//
// Возвращаемое значение:
//   Число - Количество успешно обработанных соглашений.
//
Функция УстановитьСтатусСоглашенийСКлиентамиНеСогласовано (Знач Соглашения) Экспорт
	
	Возврат Справочники.СоглашенияСКлиентами.УстановитьСтатус(Соглашения, Перечисления.СтатусыСоглашенийСКлиентами.НеСогласовано);

КонецФункции

// Устанавливает статус "Действует" у выделенных в списке соглашений.
//
// Параметры:
//   Число - Количество успешно обработанных соглашений.
//
// Возвращаемое значение:
//   Число - количество соглашений, для которых установлен статус "Действует".
//
Функция УстановитьСтатусСоглашенийСКлиентамиДействует(Знач Соглашения) Экспорт
	
	Возврат Справочники.СоглашенияСКлиентами.УстановитьСтатус(Соглашения, Перечисления.СтатусыСоглашенийСКлиентами.Действует);

КонецФункции

// Устанавливает статус "Закрыто" у выделенных в списке соглашений
//
// Параметры:
//  Соглашения - Массив - массив соглашений с клиентами.
//
// Возвращаемое значение:
//   Число - Количество успешно обработанных соглашений.
//
Функция УстановитьСтатусСоглашенийСКлиентамиЗакрыто(Знач Соглашения) Экспорт
	
	Возврат Справочники.СоглашенияСКлиентами.УстановитьСтатус(Соглашения, Перечисления.СтатусыСоглашенийСКлиентами.Закрыто);

КонецФункции

#КонецОбласти

// Заполняет данные выбора во время автоподбора аналитики по введенному тексту.
//
// Параметры:
//  ДанныеВыбора - СписокЗначений - Список значений для заполнения.
//  Текст - Строка - Текст, введенный в поле.
//
Процедура ЗаполнитьДанныеВыбораАналитикиРасходов(ДанныеВыбора, Текст) Экспорт
	
	ПродажиСервер.ЗаполнитьДанныеВыбораАналитикиРасходов(ДанныеВыбора, Текст);
	
КонецПроцедуры

#КонецОбласти
