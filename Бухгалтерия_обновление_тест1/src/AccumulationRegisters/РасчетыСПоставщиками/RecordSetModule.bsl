#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, Замещение)
	
	Если Не ОбменДанными.Загрузка Тогда
		СФормироватьТаблицуОбъектовОплаты();
		РегистрыСведений.ГрафикПлатежей.УстановитьБлокировкиДанныхДляРасчетаГрафика(
			ДополнительныеСвойства.ТаблицаОбъектовОплаты, "РегистрНакопления.РасчетыСПоставщиками", "ОбъектРасчетов", "ОбъектРасчетов");
	КонецЕсли;
	
	// Проверка ОбменДанными.Загрузка не требуется, т.к. данный объект в РИБ при записи должен создавать задания.
	
	Если Не ПроведениеДокументов.КонтролироватьИзменения(ДополнительныеСвойства) Тогда
		Возврат;
	КонецЕсли;
	
	БлокироватьДляИзменения = Истина;
	
	// Текущее состояние набора помещается во временную таблицу,
	// чтобы при записи получить изменение нового набора относительно текущего.
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	Таблица.Регистратор                  КАК Регистратор,
	|	Таблица.ОбъектРасчетов               КАК ОбъектРасчетов,
	|	Таблица.Валюта                       КАК Валюта,
	|	ВЫБОР КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА
	|			ВЫБОР КОГДА Таблица.Сумма < 0 ТОГДА
	|					0
	|				ИНАЧЕ -Таблица.Сумма
	|			КОНЕЦ
	|		ИНАЧЕ Таблица.Сумма
	|	КОНЕЦ                                КАК СуммаПередЗаписью
	|
	|ПОМЕСТИТЬ РасчетыСПоставщикамиПередЗаписью
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщиками КАК Таблица
	|ГДЕ
	|	Таблица.Регистратор = &Регистратор
	|	И НЕ &ЭтоНовый
	|	И Таблица.ОбъектРасчетов.Объект <> НЕОПРЕДЕЛЕНО
	|	И НЕ &ОбменДанными
	|;
	|/////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Расчеты.Период                        КАК Период,
	|	Расчеты.Регистратор                   КАК Регистратор,
	|	Расчеты.ВидДвижения                   КАК ВидДвижения,
	|	Расчеты.АналитикаУчетаПоПартнерам     КАК АналитикаУчетаПоПартнерам,
	|	Расчеты.ОбъектРасчетов                КАК ОбъектРасчетов,
	|	Расчеты.Валюта                        КАК Валюта,
	|	Расчеты.ХозяйственнаяОперация         КАК ХозяйственнаяОперация,
	|	Расчеты.Сумма                         КАК Сумма,
	|	Расчеты.Оплачивается                  КАК Оплачивается,
	|	Расчеты.СуммаРегл                     КАК СуммаРегл,
	|	Расчеты.СуммаУпр                      КАК СуммаУпр,
	|	Расчеты.КОплате                       КАК КОплате,
	|	Расчеты.КПоступлению                  КАК КПоступлению,
	|	Расчеты.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	Расчеты.ПорядокОперации               КАК ПорядокОперации,
	|	Расчеты.ПорядокЗачетаПоДатеПлатежа    КАК ПорядокЗачетаПоДатеПлатежа,
	|	Расчеты.РасчетныйДокумент             КАК РасчетныйДокумент,
	|	Расчеты.КорОбъектРасчетов             КАК КорОбъектРасчетов,
	|	Расчеты.ВалютаДокумента               КАК ВалютаДокумента,
	|	Расчеты.ВариантОплаты                 КАК ВариантОплаты,
	|	Расчеты.ДатаПлатежа                   КАК ДатаПлатежа,
	|	Расчеты.ЗакупкаПоЗаказу               КАК ЗакупкаПоЗаказу
	|ПОМЕСТИТЬ РасчетыСПоставщикамиИсходныеДвижения
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщиками КАК Расчеты
	|ГДЕ
	|	Расчеты.Регистратор = &Регистратор
	|");
	
	Запрос.УстановитьПараметр("Регистратор",  Отбор.Регистратор.Значение);
	Запрос.УстановитьПараметр("ЭтоНовый",     ДополнительныеСвойства.СвойстваДокумента.ЭтоНовый);
	Запрос.УстановитьПараметр("ОбменДанными", ОбменДанными.Загрузка);
	Запрос.МенеджерВременныхТаблиц = ДополнительныеСвойства.МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ, Замещение)
	
	Если Не ОбменДанными.Загрузка Тогда
		РегистрыСведений.ГрафикПлатежей.РассчитатьГрафикПлатежейПоРасчетамСПоставщиками(
			ДополнительныеСвойства.ТаблицаОбъектовОплаты);
	КонецЕсли;
	
	// Проверка ОбменДанными.Загрузка не требуется, т.к. данный объект в РИБ при записи должен создавать задания.
	
	Если Не ПроведениеДокументов.КонтролироватьИзменения(ДополнительныеСвойства) Тогда
		Возврат;
	КонецЕсли;

	Запрос = Новый Запрос;
	
	МассивТекстовЗапроса = Новый Массив;
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(Таблица.Период, МЕСЯЦ) КАК Месяц,
	|	Таблица.Период                       КАК Период,
	|	Таблица.ПорядокОперации              КАК ПорядокОперации,
	|	Таблица.ПорядокЗачетаПоДатеПлатежа   КАК ПорядокЗачетаПоДатеПлатежа,
	|	Таблица.АналитикаУчетаПоПартнерам    КАК АналитикаУчетаПоПартнерам,
	|	Таблица.ОбъектРасчетов               КАК ОбъектРасчетов,
	|	Таблица.Валюта                       КАК ВалютаРасчетов,
	|	&Регистратор                         КАК Документ,
	|	СУММА(Таблица.Сумма)                 КАК Сумма,
	|	СУММА(Таблица.КОплате)               КАК КОплате,
	|	СУММА(Таблица.КПоступлению)          КАК КПоступлению,
	|	СУММА(Таблица.СуммаРегл)             КАК СуммаРегл,
	|	СУММА(Таблица.СуммаУпр)              КАК СуммаУпр,
	|	Ключи.Организация                    КАК Организация,
	|	Таблица.КорОбъектРасчетов            КАК КорОбъектРасчетов,
	|	Таблица.Заказ                        КАК Заказ
	|ПОМЕСТИТЬ РасчетыСПоставщикамиИзменения
	|ИЗ
	|	(ВЫБРАТЬ
	|		Расчеты.Период                        КАК Период,
	|		Расчеты.АналитикаУчетаПоПартнерам     КАК АналитикаУчетаПоПартнерам,
	|		Расчеты.ОбъектРасчетов                КАК ОбъектРасчетов,
	|		Расчеты.Валюта                        КАК Валюта,
	|		Расчеты.Сумма                         КАК Сумма,
	|		Расчеты.Оплачивается                  КАК Оплачивается,
	|		Расчеты.ХозяйственнаяОперация         КАК ХозяйственнаяОперация,
	|		Расчеты.СуммаРегл                     КАК СуммаРегл,
	|		Расчеты.СуммаУпр                      КАК СуммаУпр,
	|		Расчеты.КОплате                       КАК КОплате,
	|		Расчеты.КПоступлению                  КАК КПоступлению,
	|		Расчеты.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|		Расчеты.ПорядокОперации               КАК ПорядокОперации,
	|		Расчеты.ПорядокЗачетаПоДатеПлатежа    КАК ПорядокЗачетаПоДатеПлатежа,
	|		Расчеты.РасчетныйДокумент             КАК РасчетныйДокумент,
	|		Расчеты.КорОбъектРасчетов             КАК КорОбъектРасчетов,
	|		Расчеты.ВалютаДокумента               КАК ВалютаДокумента,
	|		Расчеты.ВариантОплаты                 КАК ВариантОплаты,
	|		Расчеты.ДатаПлатежа                   КАК ДатаПлатежа,
	|		Расчеты.ЗакупкаПоЗаказу               КАК Заказ,
	|		ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(Расчеты.Регистратор) = ТИП(Документ.ВзаимозачетЗадолженности)
	|				И Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) И Расчеты.Сумма > 0
	|			ТОГДА 0
	|			КОГДА ТИПЗНАЧЕНИЯ(Расчеты.Регистратор) = ТИП(Документ.ВзаимозачетЗадолженности)
	|				И Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) И Расчеты.Сумма < 0
	|			ТОГДА -1
	|			ИНАЧЕ 1
	|		КОНЕЦ КАК ИндексДвиженияВзаимозачета
	|	ИЗ
	|		РасчетыСПоставщикамиИсходныеДвижения КАК Расчеты
	|		
	|	ОБЪЕДИНИТЬ ВСЕ
	|		
	|	ВЫБРАТЬ
	|		Расчеты.Период                        КАК Период,
	|		Расчеты.АналитикаУчетаПоПартнерам     КАК АналитикаУчетаПоПартнерам,
	|		Расчеты.ОбъектРасчетов                КАК ОбъектРасчетов,
	|		Расчеты.Валюта                        КАК Валюта,
	|		-Расчеты.Сумма                        КАК Сумма,
	|		-Расчеты.Оплачивается                 КАК Оплачивается,
	|		Расчеты.ХозяйственнаяОперация         КАК ХозяйственнаяОперация,
	|		-Расчеты.СуммаРегл                    КАК СуммаРегл,
	|		-Расчеты.СуммаУпр                     КАК СуммаУпр,
	|		-Расчеты.КОплате                      КАК КОплате,
	|		-Расчеты.КПоступлению                 КАК КПоступлению,
	|		Расчеты.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|		Расчеты.ПорядокОперации               КАК ПорядокОперации,
	|		Расчеты.ПорядокЗачетаПоДатеПлатежа    КАК ПорядокЗачетаПоДатеПлатежа,
	|		Расчеты.РасчетныйДокумент             КАК РасчетныйДокумент,
	|		Расчеты.КорОбъектРасчетов             КАК КорОбъектРасчетов,
	|		Расчеты.ВалютаДокумента               КАК ВалютаДокумента,
	|		Расчеты.ВариантОплаты                 КАК ВариантОплаты,
	|		Расчеты.ДатаПлатежа                   КАК ДатаПлатежа,
	|		Расчеты.ЗакупкаПоЗаказу               КАК Заказ,
	|		ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(Расчеты.Регистратор) = ТИП(Документ.ВзаимозачетЗадолженности)
	|				И Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) И Расчеты.Сумма > 0
	|			ТОГДА 0
	|			КОГДА ТИПЗНАЧЕНИЯ(Расчеты.Регистратор) = ТИП(Документ.ВзаимозачетЗадолженности)
	|				И Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) И Расчеты.Сумма < 0
	|			ТОГДА -1
	|			ИНАЧЕ 1
	|		КОНЕЦ КАК ИндексДвиженияВзаимозачета
	|	ИЗ РегистрНакопления.РасчетыСПоставщиками КАК Расчеты
	|	ГДЕ Расчеты.Регистратор = &Регистратор
	|) КАК Таблица
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаПоПартнерам КАК Ключи
	|	ПО Ключи.Ссылка = Таблица.АналитикаУчетаПоПартнерам
	|СГРУППИРОВАТЬ ПО
	|	Таблица.Период,
	|	Таблица.АналитикаУчетаПоПартнерам,
	|	Таблица.ОбъектРасчетов,
	|	Таблица.Валюта,
	|	Таблица.ХозяйственнаяОперация,
	|	Таблица.СтатьяДвиженияДенежныхСредств,
	|	Таблица.РасчетныйДокумент,
	|	Таблица.КорОбъектРасчетов,
	|	Таблица.ВалютаДокумента,
	|	Таблица.ВариантОплаты,
	|	Таблица.ДатаПлатежа,
	|	Таблица.ИндексДвиженияВзаимозачета,
	|	Ключи.Организация,
	|	Таблица.КорОбъектРасчетов,
	|	Таблица.ПорядокОперации,
	|	Таблица.ПорядокЗачетаПоДатеПлатежа,
	|	Таблица.Заказ
	|ИМЕЮЩИЕ
	|	СУММА(Таблица.Сумма) <> 0
	|	ИЛИ СУММА(Таблица.СуммаРегл) <> 0
	|	ИЛИ СУММА(Таблица.СуммаУпр) <> 0
	|	ИЛИ СУММА(Таблица.КОплате) <> 0
	|	ИЛИ СУММА(Таблица.КПоступлению) <> 0";
	МассивТекстовЗапроса.Добавить(ТекстЗапроса);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаИзменений.ОбъектРасчетов         КАК ОбъектРасчетов,
	|	ТаблицаИзменений.Валюта                 КАК Валюта,
	|	СУММА(ТаблицаИзменений.СуммаКИзменению) КАК СуммаКИзменению
	|	
	|ПОМЕСТИТЬ ДвиженияРасчетыСПоставщикамиИзменениеАвансыПоНакладным
	|ИЗ
	|	(ВЫБРАТЬ
	|		Таблица.ОбъектРасчетов             КАК ОбъектРасчетов,
	|		Таблица.Валюта                     КАК Валюта,
	|		Таблица.СуммаПередЗаписью          КАК СуммаКИзменению
	|	ИЗ
	|		РасчетыСПоставщикамиПередЗаписью КАК Таблица
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Таблица.ОбъектРасчетов   КАК ОбъектРасчетов,
	|		Таблица.Валюта           КАК Валюта,
	|		-Таблица.Сумма           КАК СуммаКИзменению
	|	ИЗ
	|		РегистрНакопления.РасчетыСПоставщиками КАК Таблица
	|	ГДЕ
	|		Таблица.Регистратор = &Регистратор
	|		И ТИПЗНАЧЕНИЯ(Таблица.ОбъектРасчетов.Объект)В (ТИП(Документ.ПоступлениеБезналичныхДенежныхСредств),
	|													ТИП(Документ.СписаниеБезналичныхДенежныхСредств),
	|													ТИП(Документ.ПриходныйКассовыйОрдер),
	|													ТИП(Документ.РасходныйКассовыйОрдер),
	|													ТИП(Документ.ОперацияПоПлатежнойКарте))
	|
	|) КАК ТаблицаИзменений
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаИзменений.ОбъектРасчетов,
	|	ТаблицаИзменений.Валюта
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТаблицаИзменений.СуммаКИзменению) <> 0";
	МассивТекстовЗапроса.Добавить(ТекстЗапроса);
	
	МассивТекстовЗапроса.Добавить("УНИЧТОЖИТЬ РасчетыСПоставщикамиПередЗаписью");
	МассивТекстовЗапроса.Добавить("УНИЧТОЖИТЬ РасчетыСПоставщикамиИсходныеДвижения");
	
	Запрос.Текст = СтрСоединить(МассивТекстовЗапроса, ОбщегоНазначения.РазделительПакетаЗапросов());
	Запрос.УстановитьПараметр("Регистратор", Отбор.Регистратор.Значение);
	Запрос.УстановитьПараметр("НовыеРасчеты", ПолучитьФункциональнуюОпцию("НоваяАрхитектураВзаиморасчетов"));
	Запрос.МенеджерВременныхТаблиц = ДополнительныеСвойства.МенеджерВременныхТаблиц;
	
	Результат = Запрос.ВыполнитьПакет();
	
	Если НЕ ПолучитьФункциональнуюОпцию("ОтложенноеОбновлениеЗавершеноУспешно") Тогда
		
		Если ПолучитьФункциональнуюОпцию("НоваяАрхитектураВзаиморасчетов") Тогда
			ФинансовыйРегистрВзаиморасчетовОбработан = ОбновлениеИнформационнойБазы.ОбъектОбработан("РасчетыСПоставщикамиПоСрокам").Обработан
				И ОбновлениеИнформационнойБазы.ОбъектОбработан("РасчетыСПоставщикамиПланОплат").Обработан
				И ОбновлениеИнформационнойБазы.ОбъектОбработан("РасчетыСПоставщикамиПланПоставок").Обработан;
		Иначе
			ФинансовыйРегистрВзаиморасчетовОбработан = ОбновлениеИнформационнойБазы.ОбъектОбработан("РасчетыСПоставщикамиПоДокументам").Обработан
		КонецЕсли;
		
		Если НЕ ФинансовыйРегистрВзаиморасчетовОбработан
			ИЛИ НЕ ОбновлениеИнформационнойБазы.ОбъектОбработан("РасчетыСПоставщиками").Обработан Тогда
			Отказ = Истина;
			ОбщегоНазначения.СообщитьПользователю(НСтр("ru='Для проведения документа дождитесь окончания обновления регистров взаиморасчетов.';uk='Для проведення документа дочекайтеся закінчення оновлення регістрів взаєморозрахунків.'"));
		КонецЕсли;
		
	КонецЕсли;
	
	
	Выборка = Результат[1].Выбрать();
	ПроведениеДокументов.ЗарегистрироватьТаблицуКонтроля(ДополнительныеСвойства,
		"ДвиженияРасчетыСПоставщикамиИзменениеАвансыПоНакладным", Выборка.Следующий() И Выборка.Количество > 0);
	
	Если ОбменДанными.Загрузка Тогда
		ОперативныеВзаиморасчетыСервер.ЗарегистрироватьИзмененияКОтложенномуРаспределению(Ложь, Запрос.МенеджерВременныхТаблиц, Отбор.Регистратор.Значение);
		Возврат;
	КонецЕсли;
	
	Если Константы.НачатПереходНаНовуюАрхитектуруВзаиморасчетов.Получить() Тогда
		ОперативныеВзаиморасчетыСервер.ОтметитьКПереносу(ЭтотОбъект);
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("НоваяАрхитектураВзаиморасчетов") Тогда
		ОперативныеВзаиморасчетыСервер.РассчитатьПоИзменениям(Запрос.МенеджерВременныхТаблиц, Ложь, Отбор.Регистратор.Значение, ДополнительныеСвойства);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Формирует таблицу заказов, которые были раньше в движениях и которые сейчас будут записаны.
//
Процедура СФормироватьТаблицуОбъектовОплаты()

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Регистратор", Отбор.Регистратор.Значение);
	Запрос.УстановитьПараметр("ТаблицаНовыхОбъектовРасчетов", Выгрузить(, "ОбъектРасчетов"));
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(Таблица.ОбъектРасчетов КАК Справочник.ОбъектыРасчетов) КАК ОбъектРасчетов
	|ПОМЕСТИТЬ ОбъектыРасчетов
	|ИЗ
	|	&ТаблицаНовыхОбъектовРасчетов КАК Таблица
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Таблица.ОбъектРасчетов.Объект КАК ОбъектОплаты,
	|	Таблица.ОбъектРасчетов КАК ОбъектРасчетов
	|ПОМЕСТИТЬ ОбъектыРасчетовПоРегистратору
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщиками КАК Таблица
	|ГДЕ
	|	Таблица.Регистратор = &Регистратор
	|	И Таблица.ОбъектРасчетов <> ЗНАЧЕНИЕ(Справочник.ОбъектыРасчетов.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОбъектыРасчетов.ОбъектРасчетов.Объект,
	|	ОбъектыРасчетов.ОбъектРасчетов
	|ИЗ
	|	ОбъектыРасчетов КАК ОбъектыРасчетов
	|ГДЕ
	|	ОбъектыРасчетов.ОбъектРасчетов.Объект <> НЕОПРЕДЕЛЕНО
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОбъектыРасчетовПоРегистратору.ОбъектОплаты КАК ОбъектОплаты,
	|	ОбъектыРасчетовПоРегистратору.ОбъектРасчетов КАК ОбъектРасчетов
	|ИЗ
	|	ОбъектыРасчетовПоРегистратору КАК ОбъектыРасчетовПоРегистратору
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОбъектыРасчетовПоРегистратору.ОбъектОплаты,
	|	ОбъектыРасчетов.Ссылка
	|ИЗ
	|	ОбъектыРасчетовПоРегистратору КАК ОбъектыРасчетовПоРегистратору
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ОбъектыРасчетов КАК ОбъектыРасчетов
	|		ПО ОбъектыРасчетовПоРегистратору.ОбъектОплаты = ОбъектыРасчетов.Объект";

	ДополнительныеСвойства.Вставить("ТаблицаОбъектовОплаты", Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

Процедура ЗагрузитьСОбработкой(ТаблицаРасчетов) Экспорт
	
	ВзаиморасчетыСервер.ДобавитьЗаполнитьПорядокРасчетовСПоставщиками(ТаблицаРасчетов, ТипЗнч(ЭтотОбъект.Отбор.Регистратор.Значение));
	ЭтотОбъект.Загрузить(ТаблицаРасчетов);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли