#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, Замещение)
	
	ОбщегоНазначенияУТ.СвернутьНаборЗаписей(ЭтотОбъект);
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	Если Не ВнутреннееТовародвижение.ЗаписыватьПодчиненныеДанные(ДополнительныеСвойства, "СостоянияЗаказов") Тогда
		ВнутреннееТовародвижение.ДобавитьСтруктуруЗаписиПодчиненныхДанных(ДополнительныеСвойства, "СостоянияЗаказов");
	КонецЕсли;
	
	ДополнитьМассивЗаказовДляРасчетаСостояний(ДополнительныеСвойства);
	
	СоотвествиеОпераций = СкладыКлиентСервер.СоответствиеХозяйственныхОперацийСкладскихОперацийПриемки();
	
	Для Каждого СтрНабора Из ЭтотОбъект Цикл
		Операция = СоотвествиеОпераций.Получить(СтрНабора.ХозяйственнаяОперация);
		Если Операция = Неопределено Тогда
			ТекстСообщения = НСтр("ru='Отражение хозяйственной операции ""%ХозяйственнаяОперация%"" в регистр ТоварыКПоступлению не поддерживается. Обратитесь к разработчикам.';uk='Відображення господарської операції ""%ХозяйственнаяОперация%"" в регістр ТоварыКПоступлению не підтримується. Зверніться до розробників.'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения,"%ХозяйственнаяОперация%", СтрНабора.ХозяйственнаяОперация);  
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,,,Отказ);
		ИначеЕсли Операция <> Перечисления.СкладскиеОперации.ПриемкаПоПрочемуОприходованию
			И Не ЗначениеЗаполнено(СтрНабора.Отправитель) Тогда
			ТекстСообщения = НСтр("ru='Запись пустого отправителя в регистр ТоварыКПоступлению поддерживается только для складской операции %СкладскаяОперация%. Обратитесь к разработчикам.';uk='Запис порожнього відправника в регістр ТоварыКПоступлению підтримується тільки для складської операції %СкладскаяОперация%. Зверніться до розробників.'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения,"%СкладскаяОперация%", Перечисления.СкладскиеОперации.ПриемкаПоПрочемуОприходованию);  
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,,,Отказ);
		КонецЕсли
	КонецЦикла;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ВнутреннееТовародвижение.ЗаписыватьПодчиненныеДанные(ДополнительныеСвойства, "СостоянияЗаказов") Тогда
		ВнутреннееТовародвижение.ДобавитьСтруктуруЗаписиПодчиненныхДанных(ДополнительныеСвойства, "СостоянияЗаказов");
	КонецЕсли;
	
	ДополнитьМассивЗаказовДляРасчетаСостояний(ДополнительныеСвойства);
	
КонецПроцедуры

Процедура ДополнитьМассивЗаказовДляРасчетаСостояний(ДополнительныеСвойства)
	
	СтруктураДляРасчетаСостояний = ДополнительныеСвойства.ДляЗаписиПодчиненныхДанных.СтруктураДляРасчетаСостояний;
	// Заказы из текущего состояния набора добавляем к общему массиву заказов.
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Регистратор", Отбор.Регистратор.Значение);
	Запрос.УстановитьПараметр("МассивЗаказов", СтруктураДляРасчетаСостояний.МассивЗаказов);
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Таблица.ДокументПоступления КАК Заказ
		|ИЗ
		|	РегистрНакопления.ТоварыКПоступлению КАК Таблица
		|ГДЕ
		|	Таблица.Регистратор = &Регистратор
		|	И НЕ Таблица.ДокументПоступления В (&МассивЗаказов)";
	МассивЗаказов = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Заказ");
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(СтруктураДляРасчетаСостояний.МассивЗаказов, МассивЗаказов);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли