#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

//++ НЕ УТ
#Область ПрограммныйИнтерфейс

// Определяет показатели регистра.
// Подробнее см. ОбщийМодуль.МеждународныйУчетСерверПовтИсп.Показатели().
//
// Параметры:
//  Свойства - Структура - содержащая ключи СвойстваПоказателей, СвойстваРесурсов.
//
// Возвращаемое значение:
//  Соответствие - Ключ - имя показателя.
//                 Значение - структура свойств показателя.
//
Функция Показатели(Свойства) Экспорт

	Показатели = Новый Соответствие;
	
	СвойстваПоказателей = Свойства.СвойстваПоказателей;
	СвойстваРесурсов = Свойства.СвойстваРесурсов;
	
	МассивРесурсов = Новый Массив;
	МассивРесурсов.Добавить(Новый Структура(СвойстваРесурсов, "СуммаУпр", "ВалютаУпр"));
    МассивРесурсов.Добавить(Новый Структура(СвойстваРесурсов, "СуммаРегл", "ВалютаРегл"));
	МассивРесурсов.Добавить(Новый Структура(СвойстваРесурсов, "СуммаВВалюте", "Валюта"));
	Показатели.Вставить(Перечисления.ПоказателиАналитическихРегистров.Сумма, Новый Структура(СвойстваПоказателей, МассивРесурсов));

	МассивРесурсов = Новый Массив;
	МассивРесурсов.Добавить(Новый Структура(СвойстваРесурсов, "СуммаУпрСНДС", "ВалютаУпр"));
	Показатели.Вставить(Перечисления.ПоказателиАналитическихРегистров.СуммаУпрСНДС, Новый Структура(СвойстваПоказателей, МассивРесурсов));
	
	Возврат Показатели;
	
КонецФункции

#КонецОбласти
//-- НЕ УТ

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)
	|	И ЗначениеРазрешено(Подразделение)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти


#Область ОбновлениеИнформационнойБазы

// Добавляет в список процедуры-обработчики обновления данных ИБ
// для всех поддерживаемых версий библиотеки или конфигурации.
// Вызывается перед началом обновления данных ИБ для построения плана обновления.
//
//  Обработчики - ТаблицаЗначений - описание полей, см. в процедуре
//                ОбновлениеИнформационнойБазы.НоваяТаблицаОбработчиковОбновления.
//
// Пример добавления процедуры-обработчика в список:
//  Обработчик = Обработчики.Добавить();
//  Обработчик.Версия              = "1.1.0.0";
//  Обработчик.Процедура           = "ОбновлениеИБ.ПерейтиНаВерсию_1_1_0_0";
//  Обработчик.МонопольныйРежим    = Ложь;
//
// Параметры:
// 	Обработчики - см. ОбновлениеИнформационнойБазы.НоваяТаблицаОбработчиковОбновления
//
Процедура ОписаниеОбработчиковОбновления(Обработчики) Экспорт

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.5.4.400";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("a8d88cdd-ebd0-44f8-9d15-968544e8ed22");
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы.ЗарегистироватьДанныеКОбработкеДляПереходаНаНовуюВерсию";
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.Комментарий = НСтр("ru='Формирует записи по акцизному налогу в регистре ""Движения Доходы/Расходы - Прочие активы/пассивы"" для документов ""Списание недостач товаров"".';uk='Формує записи по акцизному податку в регістрі ""Рухи Доходи/Витрати - Інші активи/пасиви"" для документів ""Списання нестач товарів"".'");
	
	Обработчик.ЧитаемыеОбъекты = ""
	//++ НЕ УТ
		+ "Документ.ОтражениеЗарплатыВФинансовомУчете,"
	//-- НЕ УТ
		+ "РегистрНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы,"
		+ "Документ.РаспределениеДоходовИРасходовПоНаправлениямДеятельности,"
		+ "Документ.ДвижениеПрочихАктивовПассивов";
	Обработчик.ИзменяемыеОбъекты = "РегистрНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Формирует движения по новым типам регистратора регистра накопления ""Движения Доходы/Расходы - Прочие активы/пассивы"" и корректирует движения по документам ""ОтражениеЗарплатыВФинансовомУчете"".';uk='Формує рухи за новими типами реєстратора регістру накопичення ""Рухи Доходи/Витрати - Інші активи/пасиви"" та коригує рухи за документами ""ОтражениеЗарплатыВФинансовомУчете"".'");
	Обработчик.ПриоритетыВыполнения = ОбновлениеИнформационнойБазы.ПриоритетыВыполненияОбработчика();
	
	//++ НЕ УТ
	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "Документы.ОтражениеЗарплатыВФинансовомУчете.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "После";
	//-- НЕ УТ
	
	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "Документы.ДвижениеПрочихАктивовПассивов.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "После"; 
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.5.10.10";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы.ОбработатьДанныеДляПереходаНаНовуюВерсию2";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("ba7f2a51-9ebc-49eb-8ec8-a73806a22835");
	Обработчик.Многопоточный = Истина;
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы.ЗарегистироватьДанныеКОбработкеДляПереходаНаНовуюВерсию2";
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.Комментарий = НСтр("ru='Формирует движения регистру накопления ""Движения Доходы/Расходы - Прочие активы/пассивы"":
                                    |'
                                    |;uk='Формує рухи регістру накопичення ""Рухи Доходи/Витрати - Інші активи/пасиви"":
                                    |'");
	//++ НЕ УТ
	Обработчик.Комментарий = Обработчик.Комментарий 
						     + НСтр("ru='- по корректировке НДС по документам ""Перерасчет пропорционального НДС по товарам и ОС"";
                                     |- по корректировке НДС по документам ""Налоговая накладная"";
                                     |- по корректировке НДС по документам ""Приложение 2 к налоговой накладной"";
                                     |- по корректировке НДС по документам ""Регистрация входящего налогового документа"";
                                     |- по сдельной зарплате по документам ""Отражение зарплаты в финансовом учете"";
                                     |'
                                     |;uk='- по коригуванню ПДВ по документам ""Перерахунок пропорційного ПДВ за товарами та ОЗ"";
                                     |- по коригуванню ПДВ по документам ""Податкова накладна"";
                                     |- по коригуванню ПДВ по документам ""Додаток 2 до податкової накладної"";
                                     |- по коригуванню ПДВ по документам ""Реєстрація вхідного податкового документа"";
                                     |- по відрядній зарплаті по документам ""Відображення зарплати у фінансовому обліку"";
                                     |'");
	//-- НЕ УТ
	Обработчик.Комментарий = Обработчик.Комментарий 
						     + НСтр("ru='
                                     |- по акцизу по документам ""Списание недостач товаров"".'
                                     |;uk='
                                     |- по акцизу за документами ""Списання нестач товарів"".'");
	
	Читаемые = Новый Массив;
	Читаемые.Добавить(Метаданные.РегистрыНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.СписаниеНедостачТоваров.ПолноеИмя());
	//++ НЕ УТ
	Читаемые.Добавить(Метаданные.Документы.ПерерасчетПропорциональногоНДСпоТоварамИОС.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.НалоговаяНакладная.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.Приложение2КНалоговойНакладной.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.РегистрацияВходящегоНалоговогоДокумента.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.ОтражениеЗарплатыВФинансовомУчете.ПолноеИмя());
	//-- НЕ УТ
	Обработчик.ЧитаемыеОбъекты = СтрСоединить(Читаемые, ",");
	
	Изменяемые = Новый Массив;
	Изменяемые.Добавить(Метаданные.РегистрыНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы.ПолноеИмя());
	Обработчик.ИзменяемыеОбъекты = СтрСоединить(Изменяемые, ",");
	
	Обработчик.ПриоритетыВыполнения = ОбновлениеИнформационнойБазы.ПриоритетыВыполненияОбработчика();
	
	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "РегистрыНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "После";
	
	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "Документы.СписаниеНедостачТоваров.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "После"; 

	//++ НЕ УТ
	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "Документы.ПерерасчетПропорциональногоНДСпоТоварамИОС.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "После"; 

	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "Документы.НалоговаяНакладная.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "После"; 

	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "Документы.Приложение2КНалоговойНакладной.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "После"; 

	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "Документы.РегистрацияВходящегоНалоговогоДокумента.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "После"; 

	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "Документы.ОтражениеЗарплатыВФинансовомУчете.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "После"; 
	//-- НЕ УТ
	
	//++ НЕ УТ
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.5.12.1";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы.ОбработатьДанныеДляПереходаНаНовуюВерсию3";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("a9b76b54-66f6-405d-b0fd-317cc1ac45b1");
	Обработчик.Многопоточный = Истина;
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы.ЗарегистироватьДанныеКОбработкеДляПереходаНаНовуюВерсию3";
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.Комментарий = НСтр("ru='Обновляет движения регистру накопления ""Движения Доходы/Расходы - Прочие активы/пассивы"":
                                    |'
                                    |;uk='Обновляє рухи регістру накопичення ""Рухи Доходи/Витрати - Інші активи/пасиви"":
                                    |'");
	Обработчик.Комментарий = Обработчик.Комментарий 
						     + НСтр("ru='
                                     |- по документам ""Ремонт ОС"".'
                                     |;uk='
                                     |- за документами ""Ремонт ОЗ"".'");
	Обработчик.Комментарий = Обработчик.Комментарий 
						     + НСтр("ru='- по документам ""Налоговая накладная"";
                                     |- по документам ""Приложение 2 к налоговой накладной"";
                                     |';uk= '- по документам ""Податкова накладна"";
                                     |- по документам ""Додаток 2 до податкової накладної"";
                                     |'");
	
	Читаемые = Новый Массив;
	Читаемые.Добавить(Метаданные.РегистрыНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.РемонтОС.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.НалоговаяНакладная.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.Приложение2КНалоговойНакладной.ПолноеИмя());
	
	Обработчик.ЧитаемыеОбъекты = СтрСоединить(Читаемые, ",");
	
	Изменяемые = Новый Массив;
	Изменяемые.Добавить(Метаданные.РегистрыНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы.ПолноеИмя());
	Обработчик.ИзменяемыеОбъекты = СтрСоединить(Изменяемые, ",");
	
	Обработчик.ПриоритетыВыполнения = ОбновлениеИнформационнойБазы.ПриоритетыВыполненияОбработчика();
	
	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "РегистрыНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "После";
	
	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "РегистрыНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы.ОбработатьДанныеДляПереходаНаНовуюВерсию2";
	НоваяСтрока.Порядок = "После";  
	
	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "Документы.НалоговаяНакладная.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "После"; 

	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "Документы.Приложение2КНалоговойНакладной.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "После"; 
	//-- НЕ УТ
	
КонецПроцедуры

Процедура ЗарегистироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяОбъекта = "РегистрНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы";
	МассивАналитик = Новый Массив;
	МассивАналитик.Добавить(Неопределено);
	МассивАналитик.Добавить(Перечисления.ТипыНалогов.ПустаяСсылка());
	
	Запрос = Новый Запрос(
	"// Сформировать новые движения
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДД.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ДокументыКОбработке
	|ИЗ
	|	Документ.ДвижениеПрочихАктивовПассивов КАК ДД
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы КАК Движения
	|		ПО ДД.Ссылка = Движения.Регистратор
	|ГДЕ
	|	ДД.Проведен
	|	И Движения.Регистратор ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Сформировать новые движения
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДД.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.РаспределениеДоходовПоНаправлениямДеятельности КАК ДД
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы КАК Движения
	|		ПО ДД.Ссылка = Движения.Регистратор
	|ГДЕ
	|	ДД.Проведен
	|	И Движения.Регистратор ЕСТЬ NULL
	//++ НЕ УТ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Исправить существующие движения - поменять местами АП - ДР
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Движения.Регистратор КАК Ссылка
	|ИЗ
	|	РегистрНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы КАК Движения
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(Движения.Регистратор) = ТИП(Документ.ОтражениеЗарплатыВФинансовомУчете)
	|	И Движения.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.УдержаниеИзЗарплатыСотрудника),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.НачисленияПоЗаймамВыданным)
	|	)
	|	И ТИПЗНАЧЕНИЯ(Движения.Статья) = ТИП(ПланВидовХарактеристик.СтатьиАктивовПассивов)
	|	И ТИПЗНАЧЕНИЯ(Движения.Статья) <> ТИПЗНАЧЕНИЯ(Движения.КорСтатья)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Исправить существующие движения - поменять местами ДР - АП
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Движения.Регистратор КАК Ссылка
	|ИЗ
	|	РегистрНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы КАК Движения
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(Движения.Регистратор) = ТИП(Документ.ОтражениеЗарплатыВФинансовомУчете)
	|	И Движения.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтражениеЗаработнойПлаты),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтражениеНалоговВзносовСЗаработнойПлаты)
	|	)
	|	И ТИПЗНАЧЕНИЯ(Движения.КорСтатья) = ТИП(ПланВидовХарактеристик.СтатьиАктивовПассивов)
	|	И ТИПЗНАЧЕНИЯ(Движения.Статья) <> ТИПЗНАЧЕНИЯ(Движения.КорСтатья)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДвиженияДоходыРасходыПрочиеАктивыПассивы.Регистратор
	|ИЗ
	|	РегистрНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы КАК ДвиженияДоходыРасходыПрочиеАктивыПассивы
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ДвиженияДоходыРасходыПрочиеАктивыПассивы.Регистратор) = ТИП(Документ.ОтражениеЗарплатыВФинансовомУчете)
	|	И ((ВЫРАЗИТЬ(ДвиженияДоходыРасходыПрочиеАктивыПассивы.Статья КАК ПланВидовХарактеристик.СтатьиАктивовПассивов)) = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ОплатаТруда)
	|				И НЕ ДвиженияДоходыРасходыПрочиеАктивыПассивы.АналитикаАктивовПассивов = НЕОПРЕДЕЛЕНО
	|			ИЛИ (ВЫРАЗИТЬ(ДвиженияДоходыРасходыПрочиеАктивыПассивы.КорСтатья КАК ПланВидовХарактеристик.СтатьиАктивовПассивов)) = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ОплатаТруда)
	|				И НЕ ДвиженияДоходыРасходыПрочиеАктивыПассивы.КорАналитикаАктивовПассивов = НЕОПРЕДЕЛЕНО
	|			ИЛИ (ВЫРАЗИТЬ(ДвиженияДоходыРасходыПрочиеАктивыПассивы.Статья КАК ПланВидовХарактеристик.СтатьиАктивовПассивов)) = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.Налоги)
	|				И ДвиженияДоходыРасходыПрочиеАктивыПассивы.АналитикаАктивовПассивов В (&Аналитики))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДвиженияДоходыРасходыПрочиеАктивыПассивы.Регистратор
	|ИЗ
	|	РегистрНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы КАК ДвиженияДоходыРасходыПрочиеАктивыПассивы
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ДвиженияДоходыРасходыПрочиеАктивыПассивы.Регистратор) = ТИП(Документ.НачислениеОценочныхОбязательствПоОтпускам)
	|	И ((ВЫРАЗИТЬ(ДвиженияДоходыРасходыПрочиеАктивыПассивы.Статья КАК ПланВидовХарактеристик.СтатьиАктивовПассивов)) = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ОплатаТруда)
	|				И НЕ ДвиженияДоходыРасходыПрочиеАктивыПассивы.АналитикаАктивовПассивов = НЕОПРЕДЕЛЕНО
	|			ИЛИ (ВЫРАЗИТЬ(ДвиженияДоходыРасходыПрочиеАктивыПассивы.КорСтатья КАК ПланВидовХарактеристик.СтатьиАктивовПассивов)) = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ОплатаТруда)
	|				И НЕ ДвиженияДоходыРасходыПрочиеАктивыПассивы.КорАналитикаАктивовПассивов = НЕОПРЕДЕЛЕНО
	|			ИЛИ (ВЫРАЗИТЬ(ДвиженияДоходыРасходыПрочиеАктивыПассивы.Статья КАК ПланВидовХарактеристик.СтатьиАктивовПассивов)) = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.Налоги)
	|				И НЕ ДвиженияДоходыРасходыПрочиеАктивыПассивы.АналитикаАктивовПассивов = ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.ПустаяСсылка)
	|			ИЛИ (ВЫРАЗИТЬ(ДвиженияДоходыРасходыПрочиеАктивыПассивы.КорСтатья КАК ПланВидовХарактеристик.СтатьиАктивовПассивов)) = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.Налоги)
	|				И НЕ ДвиженияДоходыРасходыПрочиеАктивыПассивы.КорАналитикаАктивовПассивов = ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.ПустаяСсылка))
	|
	//-- НЕ УТ
	|;
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДокументыКОбработке.Ссылка
	|ИЗ
	|	ДокументыКОбработке КАК ДокументыКОбработке");
	
	Запрос.УстановитьПараметр("Аналитики", МассивАналитик);
	
	СписокРегистраторов = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	ДополнительныеПараметрыОтметки = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметрыОтметки.ЭтоДвижения = Истина;
	ДополнительныеПараметрыОтметки.ПолноеИмяРегистра = ПолноеИмяОбъекта;
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, СписокРегистраторов, ДополнительныеПараметрыОтметки);
		
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяРегистра = "РегистрНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы";
	
	Регистраторы = Новый Массив;
	Регистраторы.Добавить("Документ.ДвижениеПрочихАктивовПассивов");
	//++ НЕ УТ
	Регистраторы.Добавить("Документ.ОтражениеЗарплатыВФинансовомУчете");
	Регистраторы.Добавить("Документ.НачислениеОценочныхОбязательствПоОтпускам");
	//-- НЕ УТ
	Регистраторы.Добавить("Документ.РаспределениеДоходовПоНаправлениямДеятельности");
	
	ОбработкаЗавершена = ОбновлениеИнформационнойБазыУТ.ПерезаписатьДвиженияИзОчереди(
		Регистраторы,
		ПолноеИмяРегистра,
		Параметры.Очередь);
		
	Параметры.ОбработкаЗавершена = ОбработкаЗавершена;
		
КонецПроцедуры

Функция ДокументыКОбновлению2()
	СписокДокументов = Новый Массив;
	СписокДокументов.Добавить("Документ.СписаниеНедостачТоваров");
	//++ НЕ УТ
	СписокДокументов.Добавить("Документ.ПерерасчетПропорциональногоНДСпоТоварамИОС");
	СписокДокументов.Добавить("Документ.НалоговаяНакладная");
	СписокДокументов.Добавить("Документ.Приложение2КНалоговойНакладной");
	СписокДокументов.Добавить("Документ.РегистрацияВходящегоНалоговогоДокумента");
	СписокДокументов.Добавить("Документ.ОтражениеЗарплатыВФинансовомУчете");
	//-- НЕ УТ
	Возврат СписокДокументов;
КонецФункции

Процедура ЗарегистироватьДанныеКОбработкеДляПереходаНаНовуюВерсию2(Параметры) Экспорт
	
	ПолноеИмяРегистра = "РегистрНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы";
	ИмяРегистра = СтрРазделить(ПолноеИмяРегистра, ".")[1];
	
	ПараметрыВыборки = Параметры.ПараметрыВыборки;
	ПараметрыВыборки.ПолныеИменаОбъектов = СтрСоединить(ДокументыКОбновлению2(), ",");
	ПараметрыВыборки.ПолныеИменаРегистров = ПолноеИмяРегистра;
	ПараметрыВыборки.ПоляУпорядочиванияПриРаботеПользователей.Добавить("Регистратор.Дата УБЫВ");
	ПараметрыВыборки.ПоляУпорядочиванияПриОбработкеДанных.Добавить("Регистратор");
	ПараметрыВыборки.СпособВыборки = ОбновлениеИнформационнойБазы.СпособВыборкиРегистраторыРегистра();

	СписокЗапросов = Новый Массив;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТоваров.Ссылка КАК Регистратор
	|ИЗ
	|	Документ.СписаниеНедостачТоваров.Товары КАК ТаблицаТоваров
	|   ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы КАК ДвиженияДоходыРасходыПрочиеАктивыПассивы
	|	ПО ТаблицаТоваров.Ссылка = ДвиженияДоходыРасходыПрочиеАктивыПассивы.Регистратор
	|   И ДвиженияДоходыРасходыПрочиеАктивыПассивы.КорСтатья = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.Налоги)
	|   И ДвиженияДоходыРасходыПрочиеАктивыПассивы.КорАналитикаАктивовПассивов = ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.Акциз)
	|ГДЕ               
	|   ТаблицаТоваров.Ссылка.Проведен 
	|	И ТаблицаТоваров.Ссылка.СтатьяДекларацииПоАкцизномуНалогу <> ЗНАЧЕНИЕ(Справочник.СтатьиНалоговыхДеклараций.ПустаяСсылка)
	|	И ТаблицаТоваров.СуммаАкцизногоНалога <> 0
	|   И ДвиженияДоходыРасходыПрочиеАктивыПассивы.Регистратор ЕСТЬ NULL 
	|";
    СписокЗапросов.Добавить(ТекстЗапроса);
	
	//++ НЕ УТ   
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Ссылка КАК Регистратор
	|ИЗ
	|	Документ.ПерерасчетПропорциональногоНДСпоТоварамИОС КАК ДанныеДокумента
	|   ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы КАК ДвиженияДоходыРасходыПрочиеАктивыПассивы
	|	ПО ДанныеДокумента.Ссылка = ДвиженияДоходыРасходыПрочиеАктивыПассивы.Регистратор
	|   И ДвиженияДоходыРасходыПрочиеАктивыПассивы.КорСтатья = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.Налоги)
	|   И ДвиженияДоходыРасходыПрочиеАктивыПассивы.КорАналитикаАктивовПассивов = ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.НДС)
	|ГДЕ
	|   ДанныеДокумента.Проведен 
	|	И ДанныеДокумента.Ссылка.СуммаКорректировкиБУ <> 0
	|   И ДвиженияДоходыРасходыПрочиеАктивыПассивы.Регистратор ЕСТЬ NULL 
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПараметрыПерерасчетаОС.Ссылка КАК Регистратор
	|ИЗ
	|	Документ.ПерерасчетПропорциональногоНДСпоТоварамИОС.ПараметрыПерерасчетаОС КАК ПараметрыПерерасчетаОС
	|   ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы КАК ДвиженияДоходыРасходыПрочиеАктивыПассивы
	|	ПО ПараметрыПерерасчетаОС.Ссылка = ДвиженияДоходыРасходыПрочиеАктивыПассивы.Регистратор
	|   И ДвиженияДоходыРасходыПрочиеАктивыПассивы.КорСтатья = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.Налоги)
	|   И ДвиженияДоходыРасходыПрочиеАктивыПассивы.КорАналитикаАктивовПассивов = ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.НДС)
	|ГДЕ
	|   ПараметрыПерерасчетаОС.Ссылка.Проведен 
	|	И ПараметрыПерерасчетаОС.СуммаКорректировкиНДС <> 0
	|   И ДвиженияДоходыРасходыПрочиеАктивыПассивы.Регистратор ЕСТЬ NULL 
	|";
    СписокЗапросов.Добавить(ТекстЗапроса);
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Ссылка КАК Регистратор
	|ИЗ
	|	Документ.НалоговаяНакладная.ТоварыПоДаннымПользователя КАК ДанныеДокумента
	|   ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы КАК ДвиженияДоходыРасходыПрочиеАктивыПассивы
	|	ПО ДанныеДокумента.Ссылка = ДвиженияДоходыРасходыПрочиеАктивыПассивы.Регистратор
	|   И ДвиженияДоходыРасходыПрочиеАктивыПассивы.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.НалоговыеОбязательстваУсловнаяПродажа)
	|   И ДвиженияДоходыРасходыПрочиеАктивыПассивы.КорСтатья = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.Налоги)
	|   И ДвиженияДоходыРасходыПрочиеАктивыПассивы.КорАналитикаАктивовПассивов = ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.НДС)
	|ГДЕ
	|   ДанныеДокумента.Ссылка.Проведен 
	|	И НЕ (ДанныеДокумента.СуммаНДСРегл - ДанныеДокумента.СуммаНДСРеглПоРегиструУсловнаяПродажа = 0)
	|	И (
	|		ДанныеДокумента.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.УсловнаяПродажа)
	|		ИЛИ ДанныеДокумента.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.СводнаяУсловнаяПродажа)
	|		ИЛИ ДанныеДокумента.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.УсловнаяПродажаСписаниеОС)
	|		ИЛИ ДанныеДокумента.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.УсловнаяПродажаНеоборотныхАктивов)
	|	)
	|   И ДвиженияДоходыРасходыПрочиеАктивыПассивы.Регистратор ЕСТЬ NULL 
	|";
    СписокЗапросов.Добавить(ТекстЗапроса);
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Ссылка КАК Регистратор
	|ИЗ
	|	Документ.Приложение2КНалоговойНакладной.ТоварыПоДаннымПользователя КАК ДанныеДокумента
	|   ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы КАК ДвиженияДоходыРасходыПрочиеАктивыПассивы
	|	ПО ДанныеДокумента.Ссылка = ДвиженияДоходыРасходыПрочиеАктивыПассивы.Регистратор
	|   И ДвиженияДоходыРасходыПрочиеАктивыПассивы.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.НалоговыеОбязательстваУсловнаяПродажа)
	|   И ДвиженияДоходыРасходыПрочиеАктивыПассивы.КорСтатья = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.Налоги)
	|   И ДвиженияДоходыРасходыПрочиеАктивыПассивы.КорАналитикаАктивовПассивов = ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.НДС)
	|ГДЕ
	|   ДанныеДокумента.Ссылка.Проведен 
	|	И НЕ (ДанныеДокумента.СуммаНДСРегл - ДанныеДокумента.СуммаНДСРеглПоРегиструУсловнаяПродажа = 0)
	|	И (
	|		ДанныеДокумента.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.УсловнаяПродажа)
	|	)
	|   И ДвиженияДоходыРасходыПрочиеАктивыПассивы.Регистратор ЕСТЬ NULL 
	|";
    СписокЗапросов.Добавить(ТекстЗапроса);
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Ссылка КАК Регистратор
	|ИЗ
	|	Документ.РегистрацияВходящегоНалоговогоДокумента.Поставка КАК ДанныеДокумента
	|   ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы КАК ДвиженияДоходыРасходыПрочиеАктивыПассивы
	|	ПО ДанныеДокумента.Ссылка = ДвиженияДоходыРасходыПрочиеАктивыПассивы.Регистратор
	|   И ДвиженияДоходыРасходыПрочиеАктивыПассивы.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеНДСНаРасходы)
	|   И ДвиженияДоходыРасходыПрочиеАктивыПассивы.КорСтатья = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.Налоги)
	|   И ДвиженияДоходыРасходыПрочиеАктивыПассивы.КорАналитикаАктивовПассивов = ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.НДС)
	|ГДЕ
	|   ДанныеДокумента.Ссылка.Проведен 
	|	И ДанныеДокумента.ДокументПоставки <> НЕОПРЕДЕЛЕНО
	|	И ДанныеДокумента.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРегистрацияВходящегоНалоговогоДокумента.СписаниеНалоговогоКредита)
	|	И НЕ ДанныеДокумента.НалоговоеНазначение.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиНДС.Необлагаемая)
	|	И НЕ (ДанныеДокумента.СуммаНДС - ДанныеДокумента.СуммаНДСПропорционально = 0)
	|   И ДвиженияДоходыРасходыПрочиеАктивыПассивы.Регистратор ЕСТЬ NULL 
	|";
    СписокЗапросов.Добавить(ТекстЗапроса);
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Ссылка КАК Регистратор
	|ИЗ
	|	Документ.ОтражениеЗарплатыВФинансовомУчете.НачисленнаяЗарплатаИВзносы КАК ДанныеДокумента
	|   ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы КАК ДвиженияДоходыРасходыПрочиеАктивыПассивы
	|	ПО ДанныеДокумента.Ссылка = ДвиженияДоходыРасходыПрочиеАктивыПассивы.Регистратор
	|   И ДвиженияДоходыРасходыПрочиеАктивыПассивы.ВидОперацииПоЗарплате = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.НачисленоСдельноДоход)
	|ГДЕ
	|   ДанныеДокумента.Ссылка.Проведен 
	|	И ДанныеДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.НачисленоСдельноДоход)
	|   И ДвиженияДоходыРасходыПрочиеАктивыПассивы.Регистратор ЕСТЬ NULL 
	|";
    СписокЗапросов.Добавить(ТекстЗапроса);
	//-- НЕ УТ
	
	Если СписокЗапросов.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = СтрСоединить(СписокЗапросов, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Регистраторы = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Регистратор");
	ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(
		Параметры, 
		Регистраторы, 
		ПолноеИмяРегистра
	);                  
    
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию2(Параметры) Экспорт
	
	ПолноеИмяРегистра = "РегистрНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы";
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазыУТ.ДополнительныеПараметрыПерезаписиДвиженийИзОчереди();
	ДополнительныеПараметры.ОбновляемыеДанные = Параметры.ОбновляемыеДанные;
	
	СписокДокументов = ДокументыКОбновлению2();
	
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазыУТ.ПерезаписатьДвиженияИзОчереди(
		СписокДокументов,
		ПолноеИмяРегистра,
		Параметры.Очередь,
		ДополнительныеПараметры
	);
	
КонецПроцедуры    

//++ НЕ УТ
Функция ДокументыКОбновлению3()
	СписокДокументов = Новый Массив;
	СписокДокументов.Добавить("Документ.РемонтОС");
	СписокДокументов.Добавить("Документ.НалоговаяНакладная");
	СписокДокументов.Добавить("Документ.Приложение2КНалоговойНакладной");
	Возврат СписокДокументов;
КонецФункции

Процедура ЗарегистироватьДанныеКОбработкеДляПереходаНаНовуюВерсию3(Параметры) Экспорт
	
	ПолноеИмяРегистра = "РегистрНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы";
	ИмяРегистра = СтрРазделить(ПолноеИмяРегистра, ".")[1];
	
	ПараметрыВыборки = Параметры.ПараметрыВыборки;
	ПараметрыВыборки.ПолныеИменаОбъектов = СтрСоединить(ДокументыКОбновлению3(), ",");
	ПараметрыВыборки.ПолныеИменаРегистров = ПолноеИмяРегистра;
	ПараметрыВыборки.ПоляУпорядочиванияПриРаботеПользователей.Добавить("Регистратор.Дата УБЫВ");
	ПараметрыВыборки.ПоляУпорядочиванияПриОбработкеДанных.Добавить("Регистратор");
	ПараметрыВыборки.СпособВыборки = ОбновлениеИнформационнойБазы.СпособВыборкиРегистраторыРегистра();

	СписокЗапросов = Новый Массив;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДвиженияДоходыРасходыПрочиеАктивыПассивы.Регистратор КАК Регистратор
	|ИЗ
	|	РегистрНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы КАК ДвиженияДоходыРасходыПрочиеАктивыПассивы
	|ГДЕ               
	|   ДвиженияДоходыРасходыПрочиеАктивыПассивы.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗавершениеТекущегоРемонта)
	|";
    СписокЗапросов.Добавить(ТекстЗапроса);
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДвиженияДоходыРасходыПрочиеАктивыПассивы.Регистратор КАК Регистратор
	|ИЗ
	|	РегистрНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы КАК ДвиженияДоходыРасходыПрочиеАктивыПассивы
	|ГДЕ               
	|   ДвиженияДоходыРасходыПрочиеАктивыПассивы.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.НалоговыеОбязательстваУсловнаяПродажа)
	|   И (ДвиженияДоходыРасходыПрочиеАктивыПассивы.Регистратор ССЫЛКА Документ.НалоговаяНакладная
	|	  ИЛИ ДвиженияДоходыРасходыПрочиеАктивыПассивы.Регистратор ССЫЛКА Документ.Приложение2КНалоговойНакладной)
	|";
    СписокЗапросов.Добавить(ТекстЗапроса);
	
	Если СписокЗапросов.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = СтрСоединить(СписокЗапросов, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Регистраторы = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Регистратор");
	ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(
		Параметры, 
		Регистраторы, 
		ПолноеИмяРегистра
	);                  
    
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию3(Параметры) Экспорт
	
	ПолноеИмяРегистра = "РегистрНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы";
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазыУТ.ДополнительныеПараметрыПерезаписиДвиженийИзОчереди();
	ДополнительныеПараметры.ОбновляемыеДанные = Параметры.ОбновляемыеДанные;
	
	СписокДокументов = ДокументыКОбновлению3();
	
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазыУТ.ПерезаписатьДвиженияИзОчереди(
		СписокДокументов,
		ПолноеИмяРегистра,
		Параметры.Очередь,
		ДополнительныеПараметры
	);
	
КонецПроцедуры 
//-- НЕ УТ

#КонецОбласти


#КонецЕсли