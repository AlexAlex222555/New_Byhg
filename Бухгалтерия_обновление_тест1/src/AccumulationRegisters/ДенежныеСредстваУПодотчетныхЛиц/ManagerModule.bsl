#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область Проведение

// Формирует параметры для проведения документа по регистрам учетного механизма через общий механизм проведения.
//
// Параметры:
//  Документ - ДокументОбъект - записываемый документ
//  Свойства - ФиксированнаяСтруктура - свойства документа (См. ПроведениеДокументов.СвойстваДокумента).
//
// Возвращаемое значение:
//  Структура - параметры учетного механизма (См. ПроведениеДокументов.ПараметрыУчетногоМеханизма()).
//
Функция ПараметрыДляПроведенияДокумента(Документ, Свойства) Экспорт
	
	Параметры = ПроведениеДокументов.ПараметрыУчетногоМеханизма();
	
	// Проведение
	Если Свойства.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		
		Параметры.ПодчиненныеРегистры.Добавить(Метаданные.РегистрыНакопления.ДенежныеСредстваУПодотчетныхЛиц);
		
	КонецЕсли;
	
	// Контроль
	Если Свойства.РежимЗаписи <> РежимЗаписиДокумента.Запись Тогда
		
		Параметры.КонтрольныеРегистрыЗаданий.Добавить(Метаданные.РегистрыНакопления.ДенежныеСредстваУПодотчетныхЛиц);
		
	КонецЕсли;
	
	Возврат Параметры;
	
КонецФункции

// Процедура формирования движений по регистру.
//
// Параметры:
//	ТаблицыДляДвижений - Структура - таблицы данных документа
//	Движения - КоллекцияДвижений - коллекция наборов записей движений документа
//	Отказ - Булево - признак отказа от проведения документа.
//
Процедура ОтразитьДвижения(ТаблицыДляДвижений, Движения, Отказ) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ПроведениеДокументов.ОтразитьДвижения(ТаблицыДляДвижений, Движения, "ДенежныеСредстваУПодотчетныхЛиц");
	
КонецПроцедуры

#КонецОбласти

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(ПодотчетноеЛицо)
	|	И ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

#Область ОбработчикиОбновления

// Добавляет в список процедуры-обработчики обновления данных ИБ
// для всех поддерживаемых версий библиотеки или конфигурации.
// Вызывается перед началом обновления данных ИБ для построения плана обновления.
//
//  Обработчики - ТаблицаЗначений - описание полей, см. в процедуре
//                ОбновлениеИнформационнойБазы.НоваяТаблицаОбработчиковОбновления.
//
// Пример добавления процедуры-обработчика в список:
//  Обработчик = Обработчики.Добавить();
//  Обработчик.Версия              = "1.1.0.0";
//  Обработчик.Процедура           = "ОбновлениеИБ.ПерейтиНаВерсию_1_1_0_0";
//  Обработчик.МонопольныйРежим    = Ложь;
//
// Параметры:
// 	Обработчики - см. ОбновлениеИнформационнойБазы.НоваяТаблицаОбработчиковОбновления
//
Процедура ОписаниеОбработчиковОбновления(Обработчики) Экспорт

	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.5.4.400";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.ДенежныеСредстваУПодотчетныхЛиц.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.ДенежныеСредстваУПодотчетныхЛиц.ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("8bce5115-6134-487b-96ce-b1c307d1d93f");
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.ЧитаемыеОбъекты = ""
	//++ НЕ УТ
		+ "Документ.ПоступлениеДенежныхДокументов,"
	//-- НЕ УТ
		+ "Документ.ПоступлениеБезналичныхДенежныхСредств,"
		+ "Справочник.КлючиАналитикиУчетаПоПартнерам,"
		+ "Документ.РасчетКурсовыхРазниц,"
		+ "Документ.СписаниеБезналичныхДенежныхСредств,"
	//++ НЕ УТ
		+ "Документ.ВыбытиеДенежныхДокументов,"
	//-- НЕ УТ
		+ "РегистрСведений.АналитикаУчетаПоПартнерам,"
		+ "Документ.ПриобретениеУслугПрочихАктивов,"
		+ "Документ.ПриходныйКассовыйОрдер,"
	//++ НЕ УТ
		+ "Документ.ОтражениеЗарплатыВФинансовомУчете,"
	//-- НЕ УТ
		+ "Документ.АвансовыйОтчет,"
		+ "Документ.ВводОстатков,"
		+ "Документ.ПриобретениеТоваровУслуг,"
		+ "Документ.РасходныйКассовыйОрдер";
	Обработчик.ИзменяемыеОбъекты = "РегистрНакопления.ДенежныеСредстваУПодотчетныхЛиц";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Заполняет поле ""Подразделение"" в регистре ""Денежные средства у подотчетных лиц"". До заершения обработки сведения о подразделениях в регистре некорректны.';uk='Заповнює поле ""Підрозділ"" у регістрі ""Кошти у підзвітних осіб"". До завершення обробки відомості про підрозділи у регістрі некоректні.'");
	Обработчик.ПриоритетыВыполнения = ОбновлениеИнформационнойБазы.ПриоритетыВыполненияОбработчика();

	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "Документы.ПриходныйКассовыйОрдер.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "После";
    
    //++ НЕ УТ
	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "Документы.ПоступлениеДенежныхДокументов.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "После";
	//-- НЕ УТ

	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "Справочники.КлючиАналитикиУчетаПоПартнерам.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "После";

	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "Документы.АвансовыйОтчет.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "После";

	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "РегистрыНакопления.ПрочиеАктивыПассивы.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "До";

	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "Документы.РасходныйКассовыйОрдер.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "После";

	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "Документы.ПоступлениеБезналичныхДенежныхСредств.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "После";

	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "Документы.ВводОстатков.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "После";

	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "Документы.ПриобретениеУслугПрочихАктивов.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "После";

	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "РегистрыСведений.АналитикаУчетаПоПартнерам.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "После";
    
    //++ НЕ УТ
	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "Документы.ОтражениеЗарплатыВФинансовомУчете.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "После";
	//-- НЕ УТ
    
    //++ НЕ УТ
	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "Документы.ВыбытиеДенежныхДокументов.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "После";
	//-- НЕ УТ

	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "Документы.ПриобретениеТоваровУслуг.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "После";

	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "Документы.СписаниеБезналичныхДенежныхСредств.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "После";

КонецПроцедуры

Функция ПолноеИмяРегистра()
	
	Возврат "РегистрНакопления.ДенежныеСредстваУПодотчетныхЛиц";
	
КонецФункции

Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	#Область ТекстЗапроса
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Ссылка КАК Регистратор
	|ИЗ
	|	Документ.АвансовыйОтчет КАК ДанныеДокумента
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.ДенежныеСредстваУПодотчетныхЛиц КАК ДанныеРегистра
	|	ПО
	|		ДанныеРегистра.Регистратор = ДанныеДокумента.Ссылка
	|		И ДанныеРегистра.Подразделение = ДанныеДокумента.Подразделение
	|ГДЕ
	|	ДанныеРегистра.Регистратор ЕСТЬ NULL
	|	И ДанныеДокумента.Подразделение <> ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|	И ДанныеДокумента.Проведен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Ссылка
	|ИЗ
	|	Документ.ВводОстатков КАК ДанныеДокумента
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.ДенежныеСредстваУПодотчетныхЛиц КАК ДанныеРегистра
	|	ПО
	|		ДанныеРегистра.Регистратор = ДанныеДокумента.Ссылка
	|		И ДанныеРегистра.Подразделение = ДанныеДокумента.Подразделение
	|ГДЕ
	|	ДанныеРегистра.Регистратор ЕСТЬ NULL
	|	И ДанныеДокумента.Подразделение <> ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|	И (ДанныеДокумента.УдалитьТипОперации = ЗНАЧЕНИЕ(Перечисление.УдалитьТипыОперацийВводаОстатков.ОстаткиЗадолженностиПодотчетников)
	|			ИЛИ ДанныеДокумента.УдалитьТипОперации = ЗНАЧЕНИЕ(Перечисление.УдалитьТипыОперацийВводаОстатков.ПерерасходыПодотчетныхСредств))
	|	И ДанныеДокумента.Проведен
	|
	//++ НЕ УТ
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Ссылка
	|ИЗ
	|	Документ.ВыбытиеДенежныхДокументов КАК ДанныеДокумента
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.ДенежныеСредстваУПодотчетныхЛиц КАК ДанныеРегистра
	|	ПО
	|		ДанныеРегистра.Регистратор = ДанныеДокумента.Ссылка
	|		И ДанныеРегистра.Подразделение = ДанныеДокумента.Подразделение
	|ГДЕ
	|	ДанныеРегистра.Регистратор ЕСТЬ NULL
	|	И ДанныеДокумента.Подразделение <> ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|	И ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхДокументовПодотчетнику)
	|	И ДанныеДокумента.Проведен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Ссылка
	|ИЗ
	|	Документ.ОтражениеЗарплатыВФинансовомУчете.УдержаннаяЗарплата КАК ДанныеДокумента
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.ДенежныеСредстваУПодотчетныхЛиц КАК ДанныеРегистра
	|	ПО
	|		ДанныеРегистра.Регистратор = ДанныеДокумента.Ссылка
	|		И ДанныеРегистра.Подразделение = ДанныеДокумента.ПодразделениеПредприятия
	|ГДЕ
	|	ДанныеРегистра.Регистратор ЕСТЬ NULL
	|	И ДанныеДокумента.ПодразделениеПредприятия <> ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|	И ДанныеДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.УдержаниеНеизрасходованныхПодотчетныхСумм)
	|	И ДанныеДокумента.Ссылка.Проведен
	//-- НЕ УТ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Ссылка
	|ИЗ
	|	Документ.ПоступлениеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.ДенежныеСредстваУПодотчетныхЛиц КАК ДанныеРегистра
	|	ПО
	|		ДанныеРегистра.Регистратор = ДанныеДокумента.Ссылка
	|		И ДанныеРегистра.Подразделение = ДанныеДокумента.Подразделение
	|ГДЕ
	|	ДанныеРегистра.Регистратор ЕСТЬ NULL
	|	И ДанныеДокумента.Подразделение <> ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|	И ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствОтПодотчетника)
	|	И ДанныеДокумента.Проведен
	|
	//++ НЕ УТ
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Ссылка
	|ИЗ
	|	Документ.ПоступлениеДенежныхДокументов КАК ДанныеДокумента
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.ДенежныеСредстваУПодотчетныхЛиц КАК ДанныеРегистра
	|	ПО
	|		ДанныеРегистра.Регистратор = ДанныеДокумента.Ссылка
	|		И ДанныеРегистра.Подразделение = ДанныеДокумента.Подразделение
	|ГДЕ
	|	ДанныеРегистра.Регистратор ЕСТЬ NULL
	|	И ДанныеДокумента.Подразделение <> ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|	И ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхДокументовОтПодотчетника)
	|	И ДанныеДокумента.Проведен
	//-- НЕ УТ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Ссылка
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг КАК ДанныеДокумента
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.ДенежныеСредстваУПодотчетныхЛиц КАК ДанныеРегистра
	|	ПО
	|		ДанныеРегистра.Регистратор = ДанныеДокумента.Ссылка
	|		И ДанныеРегистра.Подразделение = ДанныеДокумента.Подразделение
	|ГДЕ
	|	ДанныеРегистра.Регистратор ЕСТЬ NULL
	|	И ДанныеДокумента.Подразделение <> ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|	И ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо)
	|	И ДанныеДокумента.Проведен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Ссылка
	|ИЗ
	|	Документ.ПриобретениеУслугПрочихАктивов КАК ДанныеДокумента
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.ДенежныеСредстваУПодотчетныхЛиц КАК ДанныеРегистра
	|	ПО
	|		ДанныеРегистра.Регистратор = ДанныеДокумента.Ссылка
	|		И ДанныеРегистра.Подразделение = ДанныеДокумента.Подразделение
	|ГДЕ
	|	ДанныеРегистра.Регистратор ЕСТЬ NULL
	|	И ДанныеДокумента.Подразделение <> ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|	И ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо)
	|	И ДанныеДокумента.Проведен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Ссылка
	|ИЗ
	|	Документ.ПриходныйКассовыйОрдер КАК ДанныеДокумента
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.ДенежныеСредстваУПодотчетныхЛиц КАК ДанныеРегистра
	|	ПО
	|		ДанныеРегистра.Регистратор = ДанныеДокумента.Ссылка
	|		И ДанныеРегистра.Подразделение = ДанныеДокумента.Подразделение
	|ГДЕ
	|	ДанныеРегистра.Регистратор ЕСТЬ NULL
	|	И ДанныеДокумента.Подразделение <> ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|	И ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствОтПодотчетника)
	|	И ДанныеДокумента.Проведен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Ссылка
	|ИЗ
	|	Документ.РасходныйКассовыйОрдер КАК ДанныеДокумента
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.ДенежныеСредстваУПодотчетныхЛиц КАК ДанныеРегистра
	|	ПО
	|		ДанныеРегистра.Регистратор = ДанныеДокумента.Ссылка
	|		И ДанныеРегистра.Подразделение = ДанныеДокумента.Подразделение
	|ГДЕ
	|	ДанныеРегистра.Регистратор ЕСТЬ NULL
	|	И ДанныеДокумента.Подразделение <> ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|	И ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику)
	|	И ДанныеДокумента.Проведен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Ссылка
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.ДенежныеСредстваУПодотчетныхЛиц КАК ДанныеРегистра
	|	ПО
	|		ДанныеРегистра.Регистратор = ДанныеДокумента.Ссылка
	|		И ДанныеРегистра.Подразделение = ДанныеДокумента.Подразделение
	|ГДЕ
	|	ДанныеРегистра.Регистратор ЕСТЬ NULL
	|	И ДанныеДокумента.Подразделение <> ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|	И ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику)
	|	И ДанныеДокумента.Проведен
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.Регистратор КАК Регистратор
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваУПодотчетныхЛиц КАК ДанныеРегистра
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ДанныеРегистра.Регистратор) = ТИП(Документ.РасчетКурсовыхРазниц)
	|	И ДанныеРегистра.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПереоценкаДенежныхСредств)
	//++ НЕ УТ
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.Регистратор КАК Регистратор
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваУПодотчетныхЛиц КАК ДанныеРегистра
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВыбытиеДенежныхДокументов КАК ВыбытиеДенежныхДокументов
	|	ПО
	|		ВыбытиеДенежныхДокументов.Ссылка = ДанныеРегистра.Регистратор
	|ГДЕ
	|	ДанныеРегистра.Подразделение <> ВыбытиеДенежныхДокументов.ПодразделениеПолучатель
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.Регистратор КАК Регистратор
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваУПодотчетныхЛиц КАК ДанныеРегистра
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ПоступлениеДенежныхДокументов КАК ПоступлениеДенежныхДокументов
	|	ПО
	|		ПоступлениеДенежныхДокументов.Ссылка = ДанныеРегистра.Регистратор
	|ГДЕ
	|	ДанныеРегистра.Подразделение <> ПоступлениеДенежныхДокументов.ПодразделениеОтправитель
	//-- НЕ УТ
	|";
	#КонецОбласти
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Регистраторы = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Регистратор");
	ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(Параметры, Регистраторы, ПолноеИмяРегистра());
	РегистрыНакопления.ПрочиеАктивыПассивы.ЗарегистироватьКОбновлениюУправленческогоБаланса(Параметры, Регистраторы, ПолноеИмяРегистра());
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	Регистраторы = Новый Массив;
	Регистраторы.Добавить("Документ.АвансовыйОтчет");
	Регистраторы.Добавить("Документ.ВводОстатков");
	//++ НЕ УТ
	Регистраторы.Добавить("Документ.ВыбытиеДенежныхДокументов");
	Регистраторы.Добавить("Документ.ПоступлениеДенежныхДокументов");
	Регистраторы.Добавить("Документ.ОтражениеЗарплатыВФинансовомУчете");
	//-- НЕ УТ
	Регистраторы.Добавить("Документ.ПоступлениеБезналичныхДенежныхСредств");
	Регистраторы.Добавить("Документ.ПриобретениеТоваровУслуг");
	Регистраторы.Добавить("Документ.ПриобретениеУслугПрочихАктивов");
	Регистраторы.Добавить("Документ.ПриходныйКассовыйОрдер");
	Регистраторы.Добавить("Документ.РасходныйКассовыйОрдер");
	Регистраторы.Добавить("Документ.СписаниеБезналичныхДенежныхСредств");
	
	ОбновлениеИнформационнойБазыУТ.ПерезаписатьДвиженияИзОчереди(
		Регистраторы,
		ПолноеИмяРегистра(),
		Параметры.Очередь
    );
		
	// Заменить хоз.операции в переоценке валютных средств
	Документы.РасчетКурсовыхРазниц.ЗаполнитьХозОперациюИСтатьюДДС(Параметры, ПолноеИмяРегистра(), Истина);
	
	Параметры.ОбработкаЗавершена = НЕ ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяРегистра());
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти


#КонецЕсли
