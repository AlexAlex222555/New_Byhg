#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

//++ НЕ УТ
#Область ПрограммныйИнтерфейс

// Определяет показатели регистра.
// Подробнее см. ОбщийМодуль.МеждународныйУчетСерверПовтИсп.Показатели().
//
// Параметры:
//  Свойства - Структура - содержащая ключи СвойстваПоказателей, СвойстваРесурсов.
//
// Возвращаемое значение:
//  Соответствие - Ключ - имя показателя.
//                 Значение - структура свойств показателя.
//
Функция Показатели(Свойства) Экспорт

	Показатели = Новый Соответствие;
	
	СвойстваПоказателей = Свойства.СвойстваПоказателей;
	СвойстваРесурсов = Свойства.СвойстваРесурсов;
	
	// Массив содержит не только ресурсы регистров, но и производные от них поля в запросах.
	МассивРесурсов = Новый Массив;
	МассивРесурсов.Добавить(Новый Структура(СвойстваРесурсов, "Сумма", "ВалютаУпр"));
	МассивРесурсов.Добавить(Новый Структура(СвойстваРесурсов, "СуммаРегл", "ВалютаРегл"));
	МассивРесурсов.Добавить(Новый Структура(СвойстваРесурсов, "СуммаВВалюте", "Валюта"));
	Показатели.Вставить(Перечисления.ПоказателиАналитическихРегистров.Сумма, Новый Структура(СвойстваПоказателей, МассивРесурсов));
	
	МассивРесурсов = Новый Массив;
	МассивРесурсов.Добавить(Новый Структура(СвойстваРесурсов, "СуммаНДС", "ВалютаУпр"));
	МассивРесурсов.Добавить(Новый Структура(СвойстваРесурсов, "СуммаНДСРегл", "ВалютаРегл"));
	МассивРесурсов.Добавить(Новый Структура(СвойстваРесурсов, "СуммаНДСВВалютеПлатежа", "Валюта"));
	Показатели.Вставить(Перечисления.ПоказателиАналитическихРегистров.СуммаНДС, Новый Структура(СвойстваПоказателей, МассивРесурсов));
	
	МассивРесурсов = Новый Массив;
	МассивРесурсов.Добавить(Новый Структура(СвойстваРесурсов, "СуммаБезНДС", "ВалютаУпр"));
	МассивРесурсов.Добавить(Новый Структура(СвойстваРесурсов, "СуммаРеглБезНДС", "ВалютаРегл"));
	МассивРесурсов.Добавить(Новый Структура(СвойстваРесурсов, "СуммаБезНДСВВалютеПлатежа", "Валюта"));
	Показатели.Вставить(Перечисления.ПоказателиАналитическихРегистров.СуммаБезНДС, Новый Структура(СвойстваПоказателей, МассивРесурсов));
	
	МассивРесурсов = Новый Массив;
	МассивРесурсов.Добавить(Новый Структура(СвойстваРесурсов, "СуммаКВыплатеВРамкахЛимита", "Валюта"));
	Показатели.Вставить(Перечисления.ПоказателиАналитическихРегистров.СуммаКВыплатеВРамкахЛимита, Новый Структура(СвойстваПоказателей, МассивРесурсов));
	
	МассивРесурсов = Новый Массив;
	МассивРесурсов.Добавить(Новый Структура(СвойстваРесурсов, "СуммаКВыплатеСверхЛимита", "Валюта"));
	Показатели.Вставить(Перечисления.ПоказателиАналитическихРегистров.СуммаКВыплатеСверхЛимита, Новый Структура(СвойстваПоказателей, МассивРесурсов));
	
	МассивРесурсов = Новый Массив;
	МассивРесурсов.Добавить(Новый Структура(СвойстваРесурсов, "СуммаКВыплате", "Валюта"));
	Показатели.Вставить(Перечисления.ПоказателиАналитическихРегистров.СуммаКВыплате, Новый Структура(СвойстваПоказателей, МассивРесурсов));

	Возврат Показатели;
	
КонецФункции

#КонецОбласти
//-- НЕ УТ

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)
	|	И ЗначениеРазрешено(ПодразделениеДоходовРасходов)
	|	И( ВЫБОР КОГДА ТипЗначения(ДенежныеСредства) = Тип(Справочник.Кассы) ТОГДА ЗначениеРазрешено(ДенежныеСредства)
	|	КОГДА ТипЗначения(ДенежныеСредства) = Тип(Справочник.КассыККМ) ТОГДА ЗначениеРазрешено(ДенежныеСредства)
	|	КОГДА ТипЗначения(ДенежныеСредства) = Тип(Справочник.ФизическиеЛица) ТОГДА ЗначениеРазрешено(ДенежныеСредства)
	|	ИНАЧЕ ИСТИНА КОНЕЦ) ";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

// Добавляет в список процедуры-обработчики обновления данных ИБ
// для всех поддерживаемых версий библиотеки или конфигурации.
// Вызывается перед началом обновления данных ИБ для построения плана обновления.
//
//  Обработчики - ТаблицаЗначений - описание полей, см. в процедуре
//                ОбновлениеИнформационнойБазы.НоваяТаблицаОбработчиковОбновления.
//
// Пример добавления процедуры-обработчика в список:
//  Обработчик = Обработчики.Добавить();
//  Обработчик.Версия              = "1.1.0.0";
//  Обработчик.Процедура           = "ОбновлениеИБ.ПерейтиНаВерсию_1_1_0_0";
//  Обработчик.МонопольныйРежим    = Ложь;
//
// Параметры:
// 	Обработчики - см. ОбновлениеИнформационнойБазы.НоваяТаблицаОбработчиковОбновления
//
Процедура ОписаниеОбработчиковОбновления(Обработчики) Экспорт

	Обработчик = Обработчики.Добавить();
	Обработчик.Процедура = "РегистрыНакопления.ДвиженияДенежныеСредстваДоходыРасходы.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	Обработчик.Версия = "3.5.4.400";     
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("ae567344-91d4-49d2-b88a-fc32ca1321f1");
	Обработчик.Многопоточный = Истина;
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.ДвиженияДенежныеСредстваДоходыРасходы.ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию";
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.Комментарий = НСтр("ru='Заполняет суммы и ставки НДС в регистре ""ДвиженияДенежныеСредстваДоходыРасходы"".
                                   |Заполняет измерение ""Подразделение доходов и расходов"" для документов ""Выбытие денежных средств"".
                                   |Перезаполняет поле период движений в регистре ""ДвиженияДенежныеСредстваДоходыРасходы"" по документам ""ЗаявкаНаРасходованиеДенежныхСредств"", только по движениям, у которых заполнены ресурсы ""СуммаКВыплатеВРамкахЛимита"" или ""СуммаКВыплатеСверхЛимита"".
                                   |Перезаполняет суммы движений в регистре ""ДвиженияДенежныеСредстваДоходыРасходы"" по документам ""ЗаявкаНаРасходованиеДенежныхСредств"" с хоз. операциями ""Выдача займа сотруднику"" и ""Оплата лизингодателю"", у которых количество строк в расшифровке платежа > 1.'
                                   |;uk='Заповнює суми та ставки ПДВ у регістрі ""ДвиженияДенежныеСредстваДоходыРасходы"".
                                   |Заповнює вимір ""Підрозділ доходів та витрат"" для документів ""Вибуття грошових коштів"".
                                   |Перезаповнює поле період рухів у регістрі ""ДвиженияДенежныеСредстваДоходыРасходы"" за документами ""ЗаявкаНаРасходованиеДенежныхСредств"", тільки за рухами, у яких заповнені ресурси ""СуммаКВыплатеВРамкахЛимита"" або ""СуммаКВыплатеСверхЛимита"".
                                   |Перезаповнює суми рухів у регістрі ""ДвиженияДенежныеСредстваДоходыРасходы"" за документами ""ЗаявкаНаРасходованиеДенежныхСредств"" з госп. операціями ""Видача позики співробітнику"" та ""Оплата лізингодавцю"", у яких кількість рядків у розшифровці платежу > 1.'");
	
	Читаемые = Новый Массив;
	Читаемые.Добавить(Метаданные.РегистрыНакопления.ДвиженияДенежныеСредстваДоходыРасходы.ПолноеИмя());
	Читаемые.Добавить(Метаданные.РегистрыСведений.АналитикаУчетаПоПартнерам.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Справочники.СтавкиНДС.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Справочники.КлючиАналитикиУчетаПоПартнерам.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.ПоступлениеБезналичныхДенежныхСредств.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.СписаниеБезналичныхДенежныхСредств.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.ЗаявкаНаРасходованиеДенежныхСредств.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.ПриходныйКассовыйОрдер.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.ПриобретениеТоваровУслуг.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.РасходныйКассовыйОрдер.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.ОтчетБанкаПоОперациямЭквайринга.ПолноеИмя());
	//++ НЕ УТ
	Читаемые.Добавить(Метаданные.Документы.ВыбытиеДенежныхДокументов.ПолноеИмя());
	//-- НЕ УТ
	Обработчик.ЧитаемыеОбъекты = СтрСоединить(Читаемые, ",");
	
	Изменяемые = Новый Массив;
	Изменяемые.Добавить(Метаданные.РегистрыНакопления.ДвиженияДенежныеСредстваДоходыРасходы.ПолноеИмя());
	Обработчик.ИзменяемыеОбъекты = СтрСоединить(Изменяемые, ",");
	
	Обработчик.ПриоритетыВыполнения = ОбновлениеИнформационнойБазы.ПриоритетыВыполненияОбработчика();

	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "Документы.ПриходныйКассовыйОрдер.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "После";

	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "Справочники.КлючиАналитикиУчетаПоПартнерам.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "После";

	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "Документы.РасходныйКассовыйОрдер.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "После";

	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "Документы.ПоступлениеБезналичныхДенежныхСредств.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "После";

	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "РегистрыСведений.АналитикаУчетаПоПартнерам.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "После";
	//++ НЕ УТ

	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "Документы.ВыбытиеДенежныхДокументов.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "После";
	//-- НЕ УТ

	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "Документы.ПоступлениеТоваровУслуг.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "После";

	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "Документы.СписаниеБезналичныхДенежныхСредств.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "После";

	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "Документы.ЗаявкаНаРасходованиеДенежныхСредств.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "До";

КонецПроцедуры

// Параметры:
// 	Параметры - см. ОбновлениеИнформационнойБазы.ОсновныеПараметрыОтметкиКОбработке
//
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры = Неопределено) Экспорт
	
	ПолноеИмяРегистра = "РегистрНакопления.ДвиженияДенежныеСредстваДоходыРасходы";
	
	ПараметрыВыборки = Параметры.ПараметрыВыборки;
	ПараметрыВыборки.ПолныеИменаРегистров = ПолноеИмяРегистра;
	ПараметрыВыборки.ПоляУпорядочиванияПриРаботеПользователей.Добавить("Регистратор.Дата УБЫВ");
	ПараметрыВыборки.ПоляУпорядочиванияПриОбработкеДанных.Добавить("Регистратор");
	ПараметрыВыборки.СпособВыборки = ОбновлениеИнформационнойБазы.СпособВыборкиРегистраторыРегистра();
	
	МетаданныеРегистра = Метаданные.РегистрыНакопления.ДвиженияДенежныеСредстваДоходыРасходы;

	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.ЭтоДвижения = Истина;
	ДополнительныеПараметры.ПолноеИмяРегистра = МетаданныеРегистра.ПолноеИмя();
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДанныеРегистра.Регистратор КАК Регистратор
	|ИЗ
	|	РегистрНакопления.ДвиженияДенежныеСредстваДоходыРасходы КАК ДанныеРегистра
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ЗаявкаНаРасходованиеДенежныхСредств.РасшифровкаПлатежа КАК ДанныеЗаявки
	|	ПО
	|		ДанныеЗаявки.Ссылка = ДанныеРегистра.Регистратор
	|
	|ГДЕ
	|	ДанныеЗаявки.Ссылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеВБюджет)
	|	И ДанныеЗаявки.СтатьяДвиженияДенежныхСредств = ДанныеРегистра.СтатьяДвиженияДенежныхСредств
	|	И ДанныеЗаявки.СтатьяРасходов = ДанныеРегистра.СтатьяДоходовРасходов
	|	И ДанныеЗаявки.АналитикаАктивовПассивов = ДанныеРегистра.АналитикаАктивовПассивов
	|	И НЕ (ДанныеЗаявки.Сумма = ДанныеРегистра.СуммаКВыплатеВРамкахЛимита
	|		ИЛИ ДанныеЗаявки.Сумма = ДанныеРегистра.СуммаКВыплатеСверхЛимита)
	|	И (ДанныеРегистра.СуммаКВыплатеВРамкахЛимита <> 0
	|		ИЛИ ДанныеРегистра.СуммаКВыплатеСверхЛимита <> 0)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеРегистра.Регистратор
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.Регистратор КАК Регистратор
	|ИЗ
	|	РегистрНакопления.ДвиженияДенежныеСредстваДоходыРасходы КАК ДанныеРегистра
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СписаниеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК ДанныеДокумента
	|	ПО
	|		ДанныеДокумента.Ссылка = ДанныеРегистра.Регистратор
	|
	|ГДЕ
	|	ДанныеДокумента.Ссылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеВБюджет)
	|	И ДанныеДокумента.СтатьяДвиженияДенежныхСредств = ДанныеРегистра.СтатьяДвиженияДенежныхСредств
	|	И ДанныеДокумента.СтатьяРасходов <> ДанныеРегистра.СтатьяДоходовРасходов
	|";
	
	Регистраторы = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Регистратор");
	ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(Параметры, Регистраторы, ПолноеИмяРегистра);
	
	//++ НЕ УТ
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДанныеРегистра.Регистратор
	|ИЗ
	|	РегистрНакопления.ДвиженияДенежныеСредстваДоходыРасходы КАК ДанныеРегистра
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ДанныеРегистра.Регистратор) = ТИП(Документ.ВыбытиеДенежныхДокументов)
	|	И НЕ ДанныеРегистра.Регистратор.ПодразделениеДоходовРасходов = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|	И ДанныеРегистра.ПодразделениеДоходовРасходов = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)";
	
	Регистраторы = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Регистратор");
	ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(Параметры, Регистраторы, ПолноеИмяРегистра);
	//-- НЕ УТ
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.Регистратор
	|ИЗ
	|	РегистрНакопления.ДвиженияДенежныеСредстваДоходыРасходы КАК ДанныеРегистра
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ДанныеРегистра.Регистратор) = ТИП(Документ.ОтчетБанкаПоОперациямЭквайринга)
	|	И ТИПЗНАЧЕНИЯ(ДанныеРегистра.ДенежныеСредства) <> ТИП(Справочник.Контрагенты)";
	
	Регистраторы = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Регистратор");
	ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(Параметры, Регистраторы, ПолноеИмяРегистра);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Заявки.Ссылка КАК Ссылка,
	|	ВЫБОР
	|		КОГДА Заявки.ДатаПлатежа <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА Заявки.ДатаПлатежа
	|		КОГДА Заявки.ЖелательнаяДатаПлатежа <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА Заявки.ЖелательнаяДатаПлатежа
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(Заявки.Дата, ДЕНЬ)
	|	КОНЕЦ КАК Период
	|ПОМЕСТИТЬ Регистраторы
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств КАК Заявки
	|ГДЕ
	|	Заявки.Проведен
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период,
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДвиженияДенежныеСредстваДоходыРасходы.Регистратор КАК Ссылка
	|ИЗ
	|	РегистрНакопления.ДвиженияДенежныеСредстваДоходыРасходы КАК ДвиженияДенежныеСредстваДоходыРасходы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Регистраторы КАК Регистраторы
	|		ПО ДвиженияДенежныеСредстваДоходыРасходы.Период = Регистраторы.Период
	|			И ДвиженияДенежныеСредстваДоходыРасходы.Регистратор = Регистраторы.Ссылка
	|ГДЕ
	|	ДвиженияДенежныеСредстваДоходыРасходы.Регистратор ССЫЛКА Документ.ЗаявкаНаРасходованиеДенежныхСредств
	|	И Регистраторы.Ссылка ЕСТЬ NULL
	|	И (ДвиженияДенежныеСредстваДоходыРасходы.СуммаКВыплатеВРамкахЛимита <> 0
	|			ИЛИ ДвиженияДенежныеСредстваДоходыРасходы.СуммаКВыплатеСверхЛимита <> 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаявкаНаРасходованиеДенежныхСредств.РасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|		ПО ДанныеДокумента.Ссылка = ТаблицаРасшифровкаПлатежа.Ссылка
	|ГДЕ
	|	ДанныеДокумента.ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймаСотруднику), ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаЛизингодателю))
	|	И ДанныеДокумента.Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.НеСогласована), ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.Согласована), ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.КОплате))
	|	И ДанныеДокумента.Проведен
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокумента.Ссылка
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(ТаблицаРасшифровкаПлатежа.Ссылка) > 1
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДвиженияДенежныеСредстваДоходыРасходы.Регистратор КАК Ссылка
	|ИЗ
	|	РегистрНакопления.ДвиженияДенежныеСредстваДоходыРасходы КАК ДвиженияДенежныеСредстваДоходыРасходы
	|ГДЕ
	|	ДвиженияДенежныеСредстваДоходыРасходы.Регистратор ССЫЛКА Документ.РасчетКурсовыхРазниц
	|	И ДвиженияДенежныеСредстваДоходыРасходы.ТипДенежныхСредств = ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.ДенежныеСредстваВпути)
	|	И ДвиженияДенежныеСредстваДоходыРасходы.ДенежныеСредства В (
	|		ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаОрганизаций.ПустаяСсылка),
	//++ НЕ УТ
	|		ЗНАЧЕНИЕ(Справочник.ДенежныеДокументы.ПустаяСсылка),
	//-- НЕ УТ
	|		ЗНАЧЕНИЕ(Справочник.ДоговорыКредитовИДепозитов.ПустаяСсылка),
	|		ЗНАЧЕНИЕ(Справочник.Кассы.ПустаяСсылка),
	|		ЗНАЧЕНИЕ(Справочник.КассыККМ.ПустаяСсылка),
	|		ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка),
	|		ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка),
	|		ЗНАЧЕНИЕ(Справочник.ЭквайринговыеТерминалы.ПустаяСсылка),
	|		НЕОПРЕДЕЛЕНО
	|	)";
	
	Регистраторы = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Регистраторы, ДополнительныеПараметры);
	
		
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	МетаданныеРегистра = Метаданные.РегистрыНакопления.ДвиженияДенежныеСредстваДоходыРасходы;
	ПолноеИмяРегистра = МетаданныеРегистра.ПолноеИмя();
	
	РегистраторыПерепроведение = Новый Массив;
	
	РегистраторыПерепроведение.Добавить("Документ.ПриходныйКассовыйОрдер");
	РегистраторыПерепроведение.Добавить("Документ.РасходныйКассовыйОрдер");
	РегистраторыПерепроведение.Добавить("Документ.СписаниеБезналичныхДенежныхСредств");
	РегистраторыПерепроведение.Добавить("Документ.ПоступлениеБезналичныхДенежныхСредств");
	РегистраторыПерепроведение.Добавить("Документ.ПриобретениеТоваровУслуг");
	РегистраторыПерепроведение.Добавить("Документ.ЗаявкаНаРасходованиеДенежныхСредств");
	//++ НЕ УТ
	РегистраторыПерепроведение.Добавить("Документ.ВыбытиеДенежныхДокументов");
	//-- НЕ УТ
	РегистраторыПерепроведение.Добавить("Документ.ОтчетБанкаПоОперациямЭквайринга");
	РегистраторыПерепроведение.Добавить("Документ.РасчетКурсовыхРазниц");
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазыУТ.ДополнительныеПараметрыПерезаписиДвиженийИзОчереди();
	ДополнительныеПараметры.ОбновляемыеДанные = Параметры.ОбновляемыеДанные;
	
	ОбработкаЗавершена = ОбновлениеИнформационнойБазыУТ.ПерезаписатьДвиженияИзОчереди(
		РегистраторыПерепроведение,
		ПолноеИмяРегистра,
		Параметры.Очередь,
		ДополнительныеПараметры
	);
	
	Параметры.ОбработкаЗавершена = ОбработкаЗавершена;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
