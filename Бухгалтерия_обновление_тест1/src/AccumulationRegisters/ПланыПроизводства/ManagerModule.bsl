#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает текст запроса динамического списка полуфабрикатов, используется в форме документа "План производства"
//
// Параметры:
//  СписокОтборов	 - Структура	 - список предопределенных отборов динамического списка
// 
// Возвращаемое значение:
//  Строка - текст запроса
//
Функция ТекстЗапросаДинамическогоСписокПолуфабрикатов(СписокОтборов) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПланыПроизводства.Регистратор КАК Регистратор,
	|	ПланыПроизводства.НомерСтроки КАК НомерСтроки,
	|
	|	ПланыПроизводства.ПланПроизводства КАК ПланПроизводства,
	|	ПланыПроизводства.Период           КАК Период,
	|	ПланыПроизводства.Номенклатура     КАК Номенклатура,
	|	ПланыПроизводства.Характеристика   КАК Характеристика,
	|	ПланыПроизводства.Назначение       КАК Назначение,
	|	ПланыПроизводства.Спецификация     КАК Спецификация,
	|
	|	ПланыПроизводства.ДатаВыпускаПолуфабриката КАК ДатаВыпускаПолуфабриката,
	|	ПланыПроизводства.ДатаЗапускаВыпуска КАК ДатаЗапускаВыпуска,
	|
	|	ПланыПроизводства.Количество КАК Количество,
	|	ПланыПроизводства.КЗаказу КАК КЗаказу,
	|
	|	ПланыПроизводства.Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры,
	|	ВЫБОР
	|		КОГДА ПланыПроизводства.Номенклатура.ИспользованиеХарактеристик В (
	|												ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеДляВидаНоменклатуры),
	|												ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеСДругимВидомНоменклатуры),
	|												ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ИндивидуальныеДляНоменклатуры))
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                                          КАК ХарактеристикиИспользуются,
	|
	|	ПланыПроизводства.РучнаяКорректировка КАК РучнаяКорректировка,
	|	ПланыПроизводства.ДатаКорректировки   КАК ДатаКорректировки,
	|	ПланыПроизводства.АвторКорректировки  КАК АвторКорректировки,
	|	ПланыПроизводства.Комментарий         КАК Комментарий
	|ИЗ
	|	РегистрНакопления.ПланыПроизводства КАК ПланыПроизводства
	|ГДЕ
	|	ПланыПроизводства.ПланПроизводства = &ПланПроизводства И ПланыПроизводства.ЭтоПолуфабрикат
	|	И &ЕстьОтборПоВхождениямПолуфабриката";
	
	Если СписокОтборов.Свойство("ЕстьОтборПоВхождениямПолуфабриката") И СписокОтборов.ЕстьОтборПоВхождениямПолуфабриката Тогда
		ТекстЗапроса =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПланыПроизводства.Регистратор КАК Регистратор,
		|	ПланыПроизводства.НомерСтроки КАК НомерСтроки
		|ПОМЕСТИТЬ ВтОтборПоВхождениямПолуфабриката
		|ИЗ
		|	РегистрНакопления.ПланыПроизводства КАК ПланыПроизводства
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПланыПотребленияМатериалов КАК ПланыПотребленияМатериалов
		|		ПО ПланыПроизводства.ПланПроизводства = ПланыПотребленияМатериалов.ПланПроизводства
		|		 И ПланыПроизводства.Период           = ПланыПотребленияМатериалов.ДатаПроизводства
		|		 И ПланыПроизводства.Спецификация     = ПланыПотребленияМатериалов.СпецификацияПродукции
		|		 И ПланыПроизводства.Назначение       = ПланыПотребленияМатериалов.НазначениеПродукции
		|		 И ПланыПроизводства.Характеристика   = ПланыПотребленияМатериалов.ХарактеристикаПродукции
		|ГДЕ
		|	ПланыПотребленияМатериалов.ПланПроизводства = &ПланПроизводства
		|	И ПланыПотребленияМатериалов.Период         = &ДатаВыпускаПолуфабриката
		|	И ПланыПотребленияМатериалов.Назначение     = &Назначение
		|	И ПланыПотребленияМатериалов.Номенклатура   = &Номенклатура
		|	И ПланыПотребленияМатериалов.Характеристика = &Характеристика
		|" + "
		|;
		|" + ТекстЗапроса;
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ЕстьОтборПоВхождениямПолуфабриката", "
			|(ПланыПроизводства.Регистратор, ПланыПроизводства.НомерСтроки) 
			|В 
			|(ВЫБРАТЬ
			|		ТаблицаОтбора.Регистратор КАК Регистратор,
			|		ТаблицаОтбора.НомерСтроки КАК НомерСтроки
			|	ИЗ
			|		ВтОтборПоВхождениямПолуфабриката КАК ТаблицаОтбора
			|)");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ЕстьОтборПоВхождениямПолуфабриката", "ИСТИНА");
	КонецЕсли;
	
	Возврат ТекстЗапроса
	
КонецФункции

// Рассчитывает количество полуфабрикатов, используется при отображении количества строк в динамическом списке полуфабрикатов
//
// Параметры:
//  ПланПроизводства - ДокументСсылка.ПланПроизводства - ссылка на документ план производства
// 
// Возвращаемое значение:
//  Число - количество строк 
//
Функция РассчитатьКоличествоПолуфабрикатов(ПланПроизводства) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	КОЛИЧЕСТВО(*) КАК КоличествоСтрок
	|ИЗ
	|	РегистрНакопления.ПланыПроизводства КАК ПланыПроизводства
	|ГДЕ
	|	ПланыПроизводства.ПланПроизводства = &ПланПроизводства
	|	И ПланыПроизводства.ЭтоПолуфабрикат
	|");
	Запрос.УстановитьПараметр("ПланПроизводства", ПланПроизводства);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	Возврат Выборка.КоличествоСтрок;
	
КонецФункции

// Возвращает данные регистра по заданному плану.
//
// Параметры:
//  Ссылка					 - ДокументСсылка.ПланПроизводства - план, данные которого необходимо прочитать.
//  ПолучитьПродукцию		 - Булево - Истина, если требуется получить план выпуска готовой продукции.
//  ПолучитьПолуфабрикаты	 - Булево - Истина, если требуется получить план выпуска производимых полуфабрикатов.
// 
// Возвращаемое значение:
//  ТаблицаЗначений - данные регистра.
//
Функция ПрочитатьПланПроизводства(Ссылка, ПолучитьПродукцию = Истина, ПолучитьПолуфабрикаты = Истина) Экспорт
	
	Если НЕ ПолучитьПродукцию И НЕ ПолучитьПолуфабрикаты Тогда
		ТекстИсключения = НСтр("ru='Ошибка чтения данных плана производства. В процедуру переданы некорректные параметры.';uk='Помилка читання даних плану виробництва. В процедуру передані некоректні параметри.'");
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ПланыПроизводства.*
		|ИЗ
		|	РегистрНакопления.ПланыПроизводства КАК ПланыПроизводства
		|ГДЕ
		|	ПланыПроизводства.Регистратор = &Ссылка
		|	И &ПродукцияПолуфабрикат";
		
	Если ПолучитьПродукцию И ПолучитьПолуфабрикаты Тогда
		ТекстУсловия = "ИСТИНА";
	ИначеЕсли ПолучитьПродукцию Тогда
		ТекстУсловия = "ПланыПроизводства.ЭтоПолуфабрикат = ЛОЖЬ";
	ИначеЕсли ПолучитьПолуфабрикаты Тогда
		ТекстУсловия = "ПланыПроизводства.ЭтоПолуфабрикат = ИСТИНА";
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПродукцияПолуфабрикат", ТекстУсловия);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

// Возвращает список продукции, потребляющей заданный полуфабрикат.
//
// Параметры:
//  ПланПроизводства - ДокументСсылка.ПланПроизводства			 - план производства
//  ДатаПотребности	 - Дата										 - дата потребности (дата производства, дата выпуска полуфабриката)
//  Назначение		 - СправочникСсылка.Назначения				 - назначение
//  Номенклатура	 - СправочникСсылка.Номенклатура			 - номенклатура
//  Характеристика	 - СправочникСсылка.ХарактеристикиНоменклатуры	 - характеристика
// 
// Возвращаемое значение:
//  ТаблицаЗначений - данные о потребителях полуфабриката.
//
Функция ПолуфабрикатВходитВПродукцию(ПланПроизводства, ДатаПотребности, Назначение, Номенклатура, Характеристика) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПланыПроизводства.Номенклатура КАК Номенклатура,
	|	ПланыПроизводства.Характеристика КАК Характеристика,
	|	ПланыПроизводства.Назначение КАК Назначение,
	|	ПланыПроизводства.Спецификация КАК Спецификация
	|ИЗ
	|	РегистрНакопления.ПланыПроизводства КАК ПланыПроизводства
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПланыПотребленияМатериалов КАК ПланыПотребленияМатериалов
	|		ПО ПланыПроизводства.ПланПроизводства = ПланыПотребленияМатериалов.ПланПроизводства
	|		 И ПланыПроизводства.Период           = ПланыПотребленияМатериалов.ДатаПроизводства
	|		 И ПланыПроизводства.Спецификация     = ПланыПотребленияМатериалов.СпецификацияПродукции
	|		 И ПланыПроизводства.Назначение       = ПланыПотребленияМатериалов.НазначениеПродукции
	|		 И ПланыПроизводства.Характеристика   = ПланыПотребленияМатериалов.ХарактеристикаПродукции
	|ГДЕ
	|	ПланыПотребленияМатериалов.ПланПроизводства = &ПланПроизводства
	|	И ПланыПотребленияМатериалов.Период         = &ДатаПотребности
	|	И ПланыПотребленияМатериалов.Назначение     = &Назначение
	|	И ПланыПотребленияМатериалов.Номенклатура   = &Номенклатура
	|	И ПланыПотребленияМатериалов.Характеристика = &Характеристика
	|	И ( ПланыПотребленияМатериалов.ЭтоПолуфабрикат
	|		И НЕ ПланыПроизводства.ЭтоПолуфабрикат )
	|");
	Запрос.УстановитьПараметр("ПланПроизводства", ПланПроизводства);
	Запрос.УстановитьПараметр("ДатаПотребности",  ДатаПотребности);
	Запрос.УстановитьПараметр("Назначение",       Назначение);
	Запрос.УстановитьПараметр("Номенклатура",     Номенклатура);
	Запрос.УстановитьПараметр("Характеристика",   Характеристика);
	
	Результат = Запрос.Выполнить().Выгрузить();
	Возврат Результат;
	
КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Подразделение)
	|	И ЗначениеРазрешено(Сценарий)
	|	И ЗначениеРазрешено(ВидПлана)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции


#Область ОбновлениеИнформационнойБазы

// Добавляет в список процедуры-обработчики обновления данных ИБ
// для всех поддерживаемых версий библиотеки или конфигурации.
// Вызывается перед началом обновления данных ИБ для построения плана обновления.
//
//  Обработчики - ТаблицаЗначений - описание полей, см. в процедуре
//                ОбновлениеИнформационнойБазы.НоваяТаблицаОбработчиковОбновления.
//
// Пример добавления процедуры-обработчика в список:
//  Обработчик = Обработчики.Добавить();
//  Обработчик.Версия              = "1.1.0.0";
//  Обработчик.Процедура           = "ОбновлениеИБ.ПерейтиНаВерсию_1_1_0_0";
//  Обработчик.МонопольныйРежим    = Ложь;
//
// Параметры:
// 	Обработчики - см. ОбновлениеИнформационнойБазы.НоваяТаблицаОбработчиковОбновления
//
Процедура ОписаниеОбработчиковОбновления(Обработчики) Экспорт

	Обработчик = Обработчики.Добавить();
	Обработчик.Процедура = "РегистрыНакопления.ПланыПроизводства.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	Обработчик.Версия = "2.5.4.400";   
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("53b1f59f-6cef-4472-96fd-9e9056bfd4ee");
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.ПланыПроизводства.ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию";
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.Комментарий = НСтр("ru='Перезаполняет движения замещенных планов производства.
                                   |Заполняет измерения ""Дата запуска"", ""Это полуфабрикат"" и ""Тип производственного процесса"".
                                   |Очищает измерение ""Подразделение"" в КА.
                                   |Изменяет регистратор движений - вместо документа ""План производства"" устанавливается ""Регистратор плана производства"".
                                   |Заполняет реквизит ""Исходная потребность"".
                                   |Заполняет реквизит ""Вид плана"".
                                   |Заполняет ресурс ""К заказу"".
                                   |Отмечает к пересчету планы с измененным состоянием замещения.'
                                   |;uk='Перезаповнює рухи заміщених планів виробництва.
                                   |Заповнює вимірювання ""Дата запуску"", ""Це напівфабрикат"" та ""Тип виробничого процесу"".
                                   |Очищає вимір ""Підрозділ"" у КУП.
                                   |Змінює реєстратор рухів – замість документа ""План виробництва"" встановлюється ""Реєстратор плану виробництва"".
                                   |Заповнює реквізит ""Вихідна потреба"".
                                   |Заповнює реквізит ""Вид плану"".
                                   |Заповнює ресурс ""До замовлення"".
                                   |Відмічає до перерахунку плани із зміненим станом заміщення.'");
	
	Читаемые = Новый Массив;
	Читаемые.Добавить(Метаданные.Документы.ПланПроизводства.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.РегистраторПланаПроизводства.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Справочники.РесурсныеСпецификации.ПолноеИмя());
	Читаемые.Добавить(Метаданные.РегистрыНакопления.ПланыПотребленияМатериалов.ПолноеИмя());
	Читаемые.Добавить(Метаданные.РегистрыНакопления.ПланыПроизводства.ПолноеИмя());
	Обработчик.ЧитаемыеОбъекты = СтрСоединить(Читаемые, ",");
	
	Изменяемые = Новый Массив;
	Изменяемые.Добавить(Метаданные.РегистрыНакопления.ПланыПроизводства.ПолноеИмя());
	Изменяемые.Добавить(Метаданные.РегистрыНакопления.ПланыПотребленияМатериалов.ПолноеИмя());
	Изменяемые.Добавить(Метаданные.РегистрыНакопления.ОборотыБюджетов.ПолноеИмя());
	Обработчик.ИзменяемыеОбъекты = СтрСоединить(Изменяемые, ",");
	
	Обработчик.ПриоритетыВыполнения = ОбновлениеИнформационнойБазы.ПриоритетыВыполненияОбработчика();

	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "Документы.ПланПроизводства.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "После";           
	
	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "РегистрыНакопления.ОборотыБюджетов.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "До";
	
	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "РегистрыНакопления.ПланыВыпускаИзделий.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "До";
	
	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "РегистрыНакопления.ПланыПотребленияМатериалов.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "После";
	
	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "Справочники.РесурсныеСпецификации.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "Любой";

КонецПроцедуры

// Параметры:
// 	Параметры - см. ОбновлениеИнформационнойБазы.ОсновныеПараметрыОтметкиКОбработке
//
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяРегистра = "РегистрНакопления.ПланыПроизводства";
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Планы.Регистратор КАК Ссылка
	|ИЗ
	|	РегистрНакопления.ПланыПроизводства КАК Планы
	|ГДЕ
	|	Планы.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПланов.ПустаяСсылка)";
	
	Регистраторы = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Регистраторы);
	
	ТекстЗапроса = Документы.ПланПроизводства.ТекстЗапросаДанныеКОбработке();
	
	ТекстЗапроса = ТекстЗапроса + 
	"
	|
	|ОБЪЕДИНИТЬ
	|
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПланыПроизводства.Регистратор КАК Ссылка
	|ИЗ
	|	РегистрНакопления.ПланыПроизводства КАК ПланыПроизводства
	|ГДЕ
	|	ПланыПроизводства.Регистратор ССЫЛКА Документ.ПланПроизводства
	|	И ПланыПроизводства.Спецификация <> ЗНАЧЕНИЕ(Справочник.РесурсныеСпецификации.ПустаяСсылка)
	|	И ПланыПроизводства.ДатаЗапускаВыпуска = ДАТАВРЕМЯ(1, 1, 1)
	|
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПланыПроизводства.Регистратор
	|ИЗ
	|	РегистрНакопления.ПланыПроизводства КАК ПланыПроизводства
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗамещениеПланов КАК ЗамещениеПланов
	|		ПО ПланыПроизводства.Регистратор = ЗамещениеПланов.ЗамещенныйПлан
	|ГДЕ
	|	ПланыПроизводства.Регистратор ССЫЛКА Документ.ПланПроизводства
	|	И ПланыПроизводства.Регистратор.Замещающий
	|	И ВЫБОР ПланыПроизводства.Регистратор.Сценарий.Периодичность
	|			КОГДА ЗНАЧЕНИЕ(Перечисление.Периодичность.Неделя)
	|				ТОГДА НАЧАЛОПЕРИОДА(ПланыПроизводства.Период, НЕДЕЛЯ)
	|			КОГДА ЗНАЧЕНИЕ(Перечисление.Периодичность.Декада)
	|				ТОГДА НАЧАЛОПЕРИОДА(ПланыПроизводства.Период, ДЕКАДА)
	|			КОГДА ЗНАЧЕНИЕ(Перечисление.Периодичность.Месяц)
	|				ТОГДА НАЧАЛОПЕРИОДА(ПланыПроизводства.Период, МЕСЯЦ)
	|			КОГДА ЗНАЧЕНИЕ(Перечисление.Периодичность.Квартал)
	|				ТОГДА НАЧАЛОПЕРИОДА(ПланыПроизводства.Период, КВАРТАЛ)
	|			КОГДА ЗНАЧЕНИЕ(Перечисление.Периодичность.Полугодие)
	|				ТОГДА НАЧАЛОПЕРИОДА(ПланыПроизводства.Период, ПОЛУГОДИЕ)
	|			КОГДА ЗНАЧЕНИЕ(Перечисление.Периодичность.Год)
	|				ТОГДА НАЧАЛОПЕРИОДА(ПланыПроизводства.Период, ГОД)
	|			ИНАЧЕ ПланыПроизводства.Период
	|		КОНЕЦ = ЗамещениеПланов.ЗамещенныйПериод
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПланыПроизводства.Регистратор
	|ИЗ
	|	РегистрНакопления.ПланыПроизводства КАК ПланыПроизводства
	|ГДЕ
	|	ПланыПроизводства.ТипПроизводственногоПроцесса = ЗНАЧЕНИЕ(Перечисление.ТипыПроизводственныхПроцессов.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПланыПроизводства.Регистратор
	|ИЗ
	|	РегистрНакопления.ПланыПроизводства КАК ПланыПроизводства,
	|	Константа.КомплекснаяАвтоматизация КАК КомплекснаяАвтоматизация
	|ГДЕ
	|	КомплекснаяАвтоматизация.Значение И 
	|	ПланыПроизводства.Подразделение <> ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|";
	
	ТекстЗапроса = ТекстЗапроса + "
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПланыПроизводства.ПланПроизводства КАК Ссылка
	|ИЗ
	|	РегистрНакопления.ПланыПроизводства КАК ПланыПроизводства
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЗамещающиеИЗамещенныеПланыПроизводства КАК ЗамещающиеИЗамещенныеПланыПроизводства
	|		ПО ПланыПроизводства.ПланПроизводства = ЗамещающиеИЗамещенныеПланыПроизводства.ЗамещенныйПлан
	|ГДЕ
	|	(ПланыПроизводства.Регистратор ССЫЛКА Документ.ПланПроизводства
	|	И ПланыПроизводства.Сценарий.ИспользоватьДляПланированияМатериалов)
	|	ИЛИ ПланыПроизводства.ВидПлана = ЗНАЧЕНИЕ(Справочник.ВидыПланов.ПустаяСсылка)
	|	ИЛИ (ПланыПроизводства.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПланов.Отменен))
	|	ИЛИ (ЗамещающиеИЗамещенныеПланыПроизводства.ЗамещенныйПлан ЕСТЬ NULL
	|	И ПланыПроизводства.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПланов.Утвержден)
	|	И ПланыПроизводства.Количество <> 0
	|	И ПланыПроизводства.КЗаказу = 0)
	|";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Данные = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Данные);
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяРегистра = "РегистрНакопления.ПланыПроизводства";
	ПолноеИмяДокумента = "Документ.ПланПроизводства";
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Результат = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуСсылокДляОбработки(
		Параметры.Очередь, 
		"Документ.ПланПроизводства", 
		МенеджерВременныхТаблиц
	);
	
	Если НЕ Результат.ЕстьДанныеДляОбработки Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	Если НЕ Результат.ЕстьЗаписиВоВременнойТаблице Тогда
		Параметры.ОбработкаЗавершена = Ложь;
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	ТекстЗапроса = "    
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СсылкиДляОбработки.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ СсылкиДляОбработки
	|ИЗ
	|	&ВТДляОбработкиСсылка КАК СсылкиДляОбработки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПланыПроизводства.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ВТПланыДляЗамещения24
	|ИЗ
	|	РегистрНакопления.ПланыПроизводства КАК ПланыПроизводства
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗамещениеПланов КАК ЗамещениеПланов
	|		ПО ПланыПроизводства.Регистратор = ЗамещениеПланов.ЗамещенныйПлан
	|ГДЕ
	|	ПланыПроизводства.Регистратор В
	|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				СсылкиДляОбработки.Ссылка
	|			ИЗ
	|				СсылкиДляОбработки КАК СсылкиДляОбработки)
	|	И ПланыПроизводства.Регистратор.Замещающий
	|	И ВЫБОР ПланыПроизводства.Регистратор.Сценарий.Периодичность
	|			КОГДА ЗНАЧЕНИЕ(Перечисление.Периодичность.Неделя)
	|				ТОГДА НАЧАЛОПЕРИОДА(ПланыПроизводства.Период, НЕДЕЛЯ)
	|			КОГДА ЗНАЧЕНИЕ(Перечисление.Периодичность.Декада)
	|				ТОГДА НАЧАЛОПЕРИОДА(ПланыПроизводства.Период, ДЕКАДА)
	|			КОГДА ЗНАЧЕНИЕ(Перечисление.Периодичность.Месяц)
	|				ТОГДА НАЧАЛОПЕРИОДА(ПланыПроизводства.Период, МЕСЯЦ)
	|			КОГДА ЗНАЧЕНИЕ(Перечисление.Периодичность.Квартал)
	|				ТОГДА НАЧАЛОПЕРИОДА(ПланыПроизводства.Период, КВАРТАЛ)
	|			КОГДА ЗНАЧЕНИЕ(Перечисление.Периодичность.Полугодие)
	|				ТОГДА НАЧАЛОПЕРИОДА(ПланыПроизводства.Период, ПОЛУГОДИЕ)
	|			КОГДА ЗНАЧЕНИЕ(Перечисление.Периодичность.Год)
	|				ТОГДА НАЧАЛОПЕРИОДА(ПланыПроизводства.Период, ГОД)
	|			ИНАЧЕ ПланыПроизводства.Период
	|		КОНЕЦ = ЗамещениеПланов.ЗамещенныйПериод
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СсылкиДляОбработки.Ссылка КАК Ссылка,
	|	Документ.ВерсияДанных КАК ВерсияДанных,
	|	Документ.Проведен КАК Проведен,
	|	Документ.ВидПлана КАК ВидПлана,
	|	Документ.Статус КАК Статус,
	|	Документ.Сценарий КАК Сценарий,
	|	Документ.Сценарий.ИспользоватьДляПланированияМатериалов КАК ИспользоватьДляПланированияМатериалов,
	|	Документ.Сценарий.Периодичность КАК Периодичность
	|ПОМЕСТИТЬ ПланыПроизводстваДляОбработки
	|ИЗ
	|	СсылкиДляОбработки КАК СсылкиДляОбработки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПланПроизводства КАК Документ
	|		ПО СсылкиДляОбработки.Ссылка = Документ.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПланыПроизводства.ПланПроизводства КАК Ссылка,
	|	ПланыПроизводства.Регистратор ССЫЛКА Документ.ПланПроизводства
	|		И ПланыПроизводства.Сценарий.ИспользоватьДляПланированияМатериалов КАК ЗаменитьРегистратор,
	|	ПланыПроизводства.ПланПроизводства.Замещающий
	|		И ПланыПроизводства.Сценарий.ИспользоватьДляПланированияМатериалов
	|		И НЕ ПланыПроизводства.ЭтоПолуфабрикат
	|		И ВЫБОР ПланыПроизводства.Сценарий.Периодичность
	|			КОГДА ЗНАЧЕНИЕ(Перечисление.Периодичность.Неделя)
	|				ТОГДА НАЧАЛОПЕРИОДА(ПланыПроизводства.Период, НЕДЕЛЯ)
	|			КОГДА ЗНАЧЕНИЕ(Перечисление.Периодичность.Декада)
	|				ТОГДА НАЧАЛОПЕРИОДА(ПланыПроизводства.Период, ДЕКАДА)
	|			КОГДА ЗНАЧЕНИЕ(Перечисление.Периодичность.Месяц)
	|				ТОГДА НАЧАЛОПЕРИОДА(ПланыПроизводства.Период, МЕСЯЦ)
	|			КОГДА ЗНАЧЕНИЕ(Перечисление.Периодичность.Квартал)
	|				ТОГДА НАЧАЛОПЕРИОДА(ПланыПроизводства.Период, КВАРТАЛ)
	|			КОГДА ЗНАЧЕНИЕ(Перечисление.Периодичность.Полугодие)
	|				ТОГДА НАЧАЛОПЕРИОДА(ПланыПроизводства.Период, ПОЛУГОДИЕ)
	|			КОГДА ЗНАЧЕНИЕ(Перечисление.Периодичность.Год)
	|				ТОГДА НАЧАЛОПЕРИОДА(ПланыПроизводства.Период, ГОД)
	|			ИНАЧЕ ПланыПроизводства.Период
	|		КОНЕЦ = ЗамещениеПланов.ЗамещенныйПериод
	|		И ПланыПроизводства.Количество <> 0 КАК Заместить
	|ПОМЕСТИТЬ ВТПланыДляОбработки
	|ИЗ
	|	РегистрНакопления.ПланыПроизводства КАК ПланыПроизводства
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗамещениеПланов КАК ЗамещениеПланов
	|		ПО ПланыПроизводства.ПланПроизводства = ЗамещениеПланов.ЗамещенныйПлан
	|ГДЕ
	|	(ПланыПроизводства.ПланПроизводства В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						СсылкиДляОбработки.Ссылка
	|					ИЗ
	|						СсылкиДляОбработки КАК СсылкиДляОбработки)
	|				И (ПланыПроизводства.ПланПроизводства.Замещающий
	|					И ПланыПроизводства.Сценарий.ИспользоватьДляПланированияМатериалов
	|					И НЕ ПланыПроизводства.ЭтоПолуфабрикат
	|					И ВЫБОР ПланыПроизводства.Сценарий.Периодичность
	|						КОГДА ЗНАЧЕНИЕ(Перечисление.Периодичность.Неделя)
	|							ТОГДА НАЧАЛОПЕРИОДА(ПланыПроизводства.Период, НЕДЕЛЯ)
	|						КОГДА ЗНАЧЕНИЕ(Перечисление.Периодичность.Декада)
	|							ТОГДА НАЧАЛОПЕРИОДА(ПланыПроизводства.Период, ДЕКАДА)
	|						КОГДА ЗНАЧЕНИЕ(Перечисление.Периодичность.Месяц)
	|							ТОГДА НАЧАЛОПЕРИОДА(ПланыПроизводства.Период, МЕСЯЦ)
	|						КОГДА ЗНАЧЕНИЕ(Перечисление.Периодичность.Квартал)
	|							ТОГДА НАЧАЛОПЕРИОДА(ПланыПроизводства.Период, КВАРТАЛ)
	|						КОГДА ЗНАЧЕНИЕ(Перечисление.Периодичность.Полугодие)
	|							ТОГДА НАЧАЛОПЕРИОДА(ПланыПроизводства.Период, ПОЛУГОДИЕ)
	|						КОГДА ЗНАЧЕНИЕ(Перечисление.Периодичность.Год)
	|							ТОГДА НАЧАЛОПЕРИОДА(ПланыПроизводства.Период, ГОД)
	|						ИНАЧЕ ПланыПроизводства.Период
	|					КОНЕЦ = ЗамещениеПланов.ЗамещенныйПериод
	|					И ПланыПроизводства.Количество <> 0)
	|			ИЛИ ПланыПроизводства.Регистратор ССЫЛКА Документ.ПланПроизводства
	|				И ПланыПроизводства.Сценарий.ИспользоватьДляПланированияМатериалов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПланыПроизводстваДляОбработки.Ссылка КАК Ссылка,
	|	ПланыПроизводстваДляОбработки.Статус КАК Статус,
	|	ПланыПроизводстваДляОбработки.ВидПлана КАК ВидПлана,
	|	ПланыПроизводстваДляОбработки.Сценарий КАК Сценарий,
	|	ПланыПроизводстваДляОбработки.Периодичность КАК Периодичность,
	|	ВЫБОР                        
	|		КОГДА ПланыДляЗамещения24.Регистратор ЕСТЬ НЕ NULL 
	|			ТОГДА ИСТИНА
	|		КОГДА ВТПланыДляОбработки.Ссылка ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ВТПланыДляОбработки.Заместить
	|	КОНЕЦ КАК ПолныйПересчет,
	|	ВЫБОР
	|		КОГДА ВТПланыДляОбработки.Ссылка ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ВТПланыДляОбработки.ЗаменитьРегистратор
	|	КОНЕЦ КАК ЗаменитьРегистратор
	|ИЗ
	|	ПланыПроизводстваДляОбработки КАК ПланыПроизводстваДляОбработки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПланыДляОбработки КАК ВТПланыДляОбработки
	|		ПО (ВТПланыДляОбработки.Ссылка = ПланыПроизводстваДляОбработки.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПланыДляЗамещения24 КАК ПланыДляЗамещения24
	|		ПО (ПланыДляЗамещения24.Регистратор = ПланыПроизводстваДляОбработки.Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПланыПроизводстваДляОбработки.Ссылка КАК Ссылка,
	|	ЕСТЬNULL(РегистраторПланаПроизводства.Ссылка, ПланыПроизводстваДляОбработки.Ссылка) КАК Регистратор
	|ИЗ
	|	ПланыПроизводстваДляОбработки КАК ПланыПроизводстваДляОбработки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РегистраторПланаПроизводства КАК РегистраторПланаПроизводства
	|		ПО ПланыПроизводстваДляОбработки.Ссылка = РегистраторПланаПроизводства.ПланПроизводства
	|			И (РегистраторПланаПроизводства.Проведен)
	|";
	
	ТекстЗапросаЗаменыДвижений = "
	|ВЫБРАТЬ
	|	Документ.Ссылка КАК Ссылка,
	|	Документ.Статус КАК Статус,
	|	Документ.ТипПроизводственногоПроцесса КАК ТипПроизводственногоПроцесса
	|ПОМЕСТИТЬ РеквизитыДокументаПланПроизводства
	|ИЗ
	|	Документ.ПланПроизводства КАК Документ
	|ГДЕ
	|	Документ.Ссылка = &Регистратор
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПланыПроизводства.Период КАК Период,
	|	ВЫБОР &Периодичность
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.Периодичность.Неделя)
	|			ТОГДА НАЧАЛОПЕРИОДА(ПланыПроизводства.Период, НЕДЕЛЯ)
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.Периодичность.Декада)
	|			ТОГДА НАЧАЛОПЕРИОДА(ПланыПроизводства.Период, ДЕКАДА)
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.Периодичность.Месяц)
	|			ТОГДА НАЧАЛОПЕРИОДА(ПланыПроизводства.Период, МЕСЯЦ)
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.Периодичность.Квартал)
	|			ТОГДА НАЧАЛОПЕРИОДА(ПланыПроизводства.Период, КВАРТАЛ)
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.Периодичность.Полугодие)
	|			ТОГДА НАЧАЛОПЕРИОДА(ПланыПроизводства.Период, ПОЛУГОДИЕ)
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.Периодичность.Год)
	|			ТОГДА НАЧАЛОПЕРИОДА(ПланыПроизводства.Период, ГОД)
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(ПланыПроизводства.Период, ДЕНЬ)
	|	КОНЕЦ КАК НачалоПериода,
	|	ПланыПроизводства.Регистратор КАК Регистратор,
	|	ПланыПроизводства.НомерСтроки КАК НомерСтроки,
	|	ПланыПроизводства.Активность КАК Активность,
	|	ПланыПроизводства.Сценарий КАК Сценарий,
	|	&ВидПлана КАК ВидПлана,
	|	ВЫБОР 
	|		КОГДА ПланыПроизводства.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПланов.ПустаяСсылка) 
	|			ТОГДА РеквизитыДокументаПланПроизводства.Статус 
	|		ИНАЧЕ ПланыПроизводства.Статус 
	|	КОНЕЦ КАК Статус,
	|	ПланыПроизводства.Номенклатура КАК Номенклатура,
	|	ПланыПроизводства.Характеристика КАК Характеристика,
	|	ВЫБОР КОГДА &КомплекснаяАвтоматизация ТОГДА ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) ИНАЧЕ ПланыПроизводства.Подразделение КОНЕЦ КАК Подразделение,
	|	ПланыПроизводства.ПланПроизводства КАК ПланПроизводства,
	|	ПланыПроизводства.Спецификация КАК Спецификация,
	|	ПланыПроизводства.Назначение КАК Назначение,
	|	ПланыПроизводства.ДатаВыпускаПолуфабриката КАК ДатаВыпускаПолуфабриката,
	|	ПланыПроизводства.ДатаЗапускаВыпуска КАК ДатаЗапускаВыпуска,
	|	ПланыПроизводства.ЭтоПолуфабрикат КАК ЭтоПолуфабрикат,
	|	ВЫБОР 
	|		КОГДА ПланыПроизводства.ТипПроизводственногоПроцесса = ЗНАЧЕНИЕ(Перечисление.ТипыПроизводственныхПроцессов.ПустаяСсылка) 
	|			ТОГДА РеквизитыДокументаПланПроизводства.ТипПроизводственногоПроцесса 
	|		ИНАЧЕ ПланыПроизводства.ТипПроизводственногоПроцесса 
	|	КОНЕЦ КАК ТипПроизводственногоПроцесса,
	|	ПланыПроизводства.РазделительРасчета КАК РазделительРасчета,
	|	ПланыПроизводства.Количество КАК Количество,
	|	ПланыПроизводства.КЗаказу КАК КЗаказу,
	|	ИСТИНА КАК ПовторноеРазузлование,
	|	ПланыПроизводства.РучнаяКорректировка КАК РучнаяКорректировка,
	|	ПланыПроизводства.ДатаКорректировки КАК ДатаКорректировки,
	|	ПланыПроизводства.АвторКорректировки КАК АвторКорректировки,
	|	ПланыПроизводства.ИсходнаяПотребность КАК ИсходнаяПотребность,
	|	ПланыПроизводства.ИсходнаяПотребностьКЗаказу КАК ИсходнаяПотребностьКЗаказу,
	|	ПланыПроизводства.Комментарий КАК Комментарий
	|ПОМЕСТИТЬ ПланыПроизводства
	|ИЗ
	|	РегистрНакопления.ПланыПроизводства КАК ПланыПроизводства
	|		ЛЕВОЕ СОЕДИНЕНИЕ РеквизитыДокументаПланПроизводства КАК РеквизитыДокументаПланПроизводства
	|			ПО ПланыПроизводства.Регистратор = РеквизитыДокументаПланПроизводства.Ссылка
	|ГДЕ
	|	ПланыПроизводства.Регистратор = &Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗамещениеПланов.ЗамещенныйПлан КАК ЗамещенныйПлан,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ЗамещениеПланов.СтатусЗамещения = ЗНАЧЕНИЕ(Перечисление.СтатусыПланов.Утвержден)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ЗамещатьКЗаказу,
	|	ЗамещениеПланов.ЗамещенныйПериод КАК ЗамещенныйПериод
	|ПОМЕСТИТЬ ЗамещениеПланов
	|ИЗ
	|	РегистрСведений.ЗамещениеПланов КАК ЗамещениеПланов
	|ГДЕ
	|	ЗамещениеПланов.ЗамещенныйПлан = &ПланПроизводства
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗамещениеПланов.ЗамещенныйПлан,
	|	ЗамещениеПланов.ЗамещенныйПериод
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПланыПроизводства.Период КАК Период,
	|	ПланыПроизводства.НачалоПериода КАК НачалоПериода,
	|	ПланыПроизводства.Регистратор КАК Регистратор,
	|	ПланыПроизводства.НомерСтроки КАК НомерСтроки,
	|	ПланыПроизводства.Активность КАК Активность,
	|	ПланыПроизводства.Сценарий КАК Сценарий,
	|	ПланыПроизводства.ВидПлана КАК ВидПлана,
	|	ПланыПроизводства.Статус КАК Статус,
	|	ПланыПроизводства.Номенклатура КАК Номенклатура,
	|	ПланыПроизводства.Характеристика КАК Характеристика,
	|	ПланыПроизводства.Подразделение КАК Подразделение,
	|	ПланыПроизводства.ПланПроизводства КАК ПланПроизводства,
	|	ПланыПроизводства.Спецификация КАК Спецификация,
	|	ПланыПроизводства.Назначение КАК Назначение,
	|	ПланыПроизводства.ДатаВыпускаПолуфабриката КАК ДатаВыпускаПолуфабриката,
	|	ПланыПроизводства.ДатаЗапускаВыпуска КАК ДатаЗапускаВыпуска,
	|	ПланыПроизводства.ЭтоПолуфабрикат КАК ЭтоПолуфабрикат,
	|	ПланыПроизводства.ТипПроизводственногоПроцесса КАК ТипПроизводственногоПроцесса,
	|	ПланыПроизводства.РазделительРасчета КАК РазделительРасчета,
	|	ПланыПроизводства.Количество КАК Количество,
	|	ВЫБОР
	|		КОГДА ПланыПроизводства.КЗаказу <> 0
	|			ТОГДА ПланыПроизводства.КЗаказу
	|		КОГДА ПланыПроизводства.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПланов.Утвержден)
	|			ТОГДА ПланыПроизводства.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КЗаказу,
	|	ПланыПроизводства.ПовторноеРазузлование КАК ПовторноеРазузлование,
	|	ПланыПроизводства.РучнаяКорректировка КАК РучнаяКорректировка,
	|	ПланыПроизводства.ДатаКорректировки КАК ДатаКорректировки,
	|	ПланыПроизводства.АвторКорректировки КАК АвторКорректировки,
	|	ПланыПроизводства.ИсходнаяПотребность КАК ИсходнаяПотребность,
	|	ПланыПроизводства.ИсходнаяПотребностьКЗаказу КАК ИсходнаяПотребностьКЗаказу,
	|	ПланыПроизводства.Комментарий КАК Комментарий
	|ИЗ
	|	ПланыПроизводства КАК ПланыПроизводства
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЗамещениеПланов КАК ЗамещениеПланов
	|		ПО ПланыПроизводства.НачалоПериода = ЗамещениеПланов.ЗамещенныйПериод";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВТДляОбработкиСсылка", Результат.ИмяВременнойТаблицы);
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	ВыборкаПоДокументам = МассивРезультатов[МассивРезультатов.ВГраница()-1].Выбрать();
	ТаблицаПоРегистраторам = МассивРезультатов[МассивРезультатов.ВГраница()].Выгрузить();
	
	ЗапросЗаменыДвижений = Новый Запрос();
	ЗапросЗаменыДвижений.Текст = ТекстЗапросаЗаменыДвижений;
	ЗапросЗаменыДвижений.УстановитьПараметр("КомплекснаяАвтоматизация", ПолучитьФункциональнуюОпцию("КомплекснаяАвтоматизация"));
	
	Пока ВыборкаПоДокументам.Следующий() Цикл
		
		НачатьТранзакцию();
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяРегистра + ".НаборЗаписей");
			ЭлементБлокировки.УстановитьЗначение("Регистратор", ВыборкаПоДокументам.Ссылка);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			
			ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ПланыПотребленияМатериалов");
			ЭлементБлокировки.УстановитьЗначение("ПланПроизводства", ВыборкаПоДокументам.Ссылка);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
			
			ЭлементБлокировки = Блокировка.Добавить("Документ.РегистраторПланаПроизводства");
			ЭлементБлокировки.УстановитьЗначение("ПланПроизводства", ВыборкаПоДокументам.Ссылка);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
			
			Блокировка.Заблокировать();
			
			СтрокиРегистраторы = ТаблицаПоРегистраторам.НайтиСтроки(Новый Структура("Ссылка", ВыборкаПоДокументам.Ссылка));
			
			Для Каждого СтрокаРегистратор Из СтрокиРегистраторы Цикл
				
				Если ВыборкаПоДокументам.Статус = Перечисления.СтатусыПланов.Отменен Тогда
					
					НаборЗаписейСтарый = РегистрыНакопления.ПланыПроизводства.СоздатьНаборЗаписей();
					Если ВыборкаПоДокументам.ЗаменитьРегистратор Тогда
						НаборЗаписейСтарый.Отбор.Регистратор.Установить(ВыборкаПоДокументам.Ссылка);
					Иначе
						НаборЗаписейСтарый.Отбор.Регистратор.Установить(СтрокаРегистратор.Регистратор);
					КонецЕсли;
					ОбновлениеИнформационнойБазы.ЗаписатьДанные(НаборЗаписейСтарый);
					
				Иначе
					Если ВыборкаПоДокументам.ЗаменитьРегистратор Тогда
						ЗапросЗаменыДвижений.УстановитьПараметр("Регистратор", ВыборкаПоДокументам.Ссылка);
					Иначе
						ЗапросЗаменыДвижений.УстановитьПараметр("Регистратор", СтрокаРегистратор.Регистратор);
					КонецЕсли;
					ЗапросЗаменыДвижений.УстановитьПараметр("ВидПлана", ВыборкаПоДокументам.ВидПлана);
					ЗапросЗаменыДвижений.УстановитьПараметр("ПолныйПересчет", ВыборкаПоДокументам.ПолныйПересчет);
					ЗапросЗаменыДвижений.УстановитьПараметр("Периодичность", ВыборкаПоДокументам.Периодичность);
					ЗапросЗаменыДвижений.УстановитьПараметр("ПланПроизводства", ВыборкаПоДокументам.Ссылка);
					
					РезультатДвижения = ЗапросЗаменыДвижений.Выполнить();
					Движения = РезультатДвижения.Выгрузить();
					
					Если НЕ ВыборкаПоДокументам.ПолныйПересчет Тогда
						ЗаполнитьДатуЗапускаВыпускаВПланахПроизводства24(ВыборкаПоДокументам.Ссылка, Движения);
					КонецЕсли;
					
					Если Не РезультатДвижения.Пустой() 
						И ВыборкаПоДокументам.ЗаменитьРегистратор Тогда
						
						НаборЗаписейНовый = РегистрыНакопления.ПланыПроизводства.СоздатьНаборЗаписей();
						НаборЗаписейНовый.Отбор.Регистратор.Установить(СтрокаРегистратор.Регистратор);
						НаборЗаписейНовый.Загрузить(Движения);
						ОбновлениеИнформационнойБазы.ЗаписатьДанные(НаборЗаписейНовый);
						
						НаборЗаписейСтарый = РегистрыНакопления.ПланыПроизводства.СоздатьНаборЗаписей();
						НаборЗаписейСтарый.Отбор.Регистратор.Установить(ВыборкаПоДокументам.Ссылка);
						ОбновлениеИнформационнойБазы.ЗаписатьДанные(НаборЗаписейСтарый);
						
					ИначеЕсли Не РезультатДвижения.Пустой() Тогда
						
						НаборЗаписейНовый = РегистрыНакопления.ПланыПроизводства.СоздатьНаборЗаписей();
						НаборЗаписейНовый.Отбор.Регистратор.Установить(СтрокаРегистратор.Регистратор);
						НаборЗаписейНовый.Загрузить(Движения);
						ОбновлениеИнформационнойБазы.ЗаписатьДанные(НаборЗаписейНовый);
						
					КонецЕсли;
				КонецЕсли;
				
			КонецЦикла;
			
			Если ВыборкаПоДокументам.ПолныйПересчет Тогда
				РегистрыСведений.ОчередьРасчетаПланаПроизводства.ДобавитьЗадание(ВыборкаПоДокументам.Сценарий, ВыборкаПоДокументам.Ссылка, Истина);
			КонецЕсли;
			
			ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(ВыборкаПоДокументам.Ссылка);
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			ОбновлениеИнформационнойБазыУТ.СообщитьОНеудачнойОбработке(ИнформацияОбОшибке(), ВыборкаПоДокументам.Ссылка);
			
		КонецПопытки;
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяДокумента);
	
КонецПроцедуры


Процедура ЗаполнитьДатуЗапускаВыпускаВПланахПроизводства24(ПланПроизводства, Таблица)
	
	СтрокиИскатьНазад = Новый Массив;
	СтрокиИскатьВперед = Новый Массив;
	
	СтруктураПоиска = Новый Структура("ДатаЗапускаВыпуска", '00010101');
	Для каждого Строка Из Таблица.НайтиСтроки(СтруктураПоиска) Цикл
		
		Если Строка.ТипПроизводственногоПроцесса = Перечисления.ТипыПроизводственныхПроцессов.Сборка
			ИЛИ Строка.ТипПроизводственногоПроцесса = Перечисления.ТипыПроизводственныхПроцессов.Ремонт Тогда
			СтрокиИскатьНазад.Добавить(Строка);
		ИначеЕсли Строка.ТипПроизводственногоПроцесса = Перечисления.ТипыПроизводственныхПроцессов.Разборка Тогда
			СтрокиИскатьВперед.Добавить(Строка);
		КонецЕсли;
		
	КонецЦикла;
	
	Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
		ПланПроизводства,
		"Сценарий, СпособРасчетаПотребностейВМатериалах"
	);
	
	Если СтрокиИскатьНазад.Количество() > 0 Тогда
		Планирование.ПолучитьДлительностьСпецификацийИЗаполнитьДатыПоГрафику(
			СтрокиИскатьНазад,
			"Период",
			"ДатаЗапускаВыпуска",
			Реквизиты.Сценарий,
			Ложь,
			Реквизиты.СпособРасчетаПотребностейВМатериалах
		);
	КонецЕсли;
	
	Если СтрокиИскатьВперед.Количество() > 0 Тогда
		Планирование.ПолучитьДлительностьСпецификацийИЗаполнитьДатыПоГрафику(
			СтрокиИскатьВперед,
			"Период",
			"ДатаЗапускаВыпуска",
			Реквизиты.Сценарий,
			Истина,
			Реквизиты.СпособРасчетаПотребностейВМатериалах
		);
	КонецЕсли;
	
КонецПроцедуры


#КонецОбласти

#КонецОбласти

#КонецЕсли
