#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает таблицу используемых аналитик
//  
// Возвращаемое значение:
//  ТаблицаЗначений - таблица используемых аналитик:
//		* Ссылка - ПланВидовХарактеристикСсылка.АналитикиСтатейБюджетов - Ссылка на аналитику.
//      * Представление - Строка - Представление аналитики.
//		* УчитыватьПоКоличеству - Булево- Признак учета по количеству.
//
Функция ВидыАналитики()Экспорт
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	АналитикиСтатейБюджетов.Ссылка                КАК Ссылка,
	|	АналитикиСтатейБюджетов.Представление         КАК Представление,
	|	АналитикиСтатейБюджетов.УчитыватьПоКоличеству КАК УчитыватьПоКоличеству
	|ИЗ
	|	ПланВидовХарактеристик.АналитикиСтатейБюджетов КАК АналитикиСтатейБюджетов";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

// Возвращает признак использования аналитики в статьях бюджетов
//
// Параметры
//  АналитикаСтатейБюджетов - ПланВидовХарактеристикСсылка.АналитикиСтатейБюджетов - Аналитика для проверки.
//  
// Возвращаемое значение:
//  Булево - признак использования.
//
Функция ИспользуетсяВСтатьяхБюджетов(АналитикаСтатейБюджетов) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	СтатьиБюджетов.Ссылка
	|ИЗ
	|	Справочник.СтатьиБюджетов КАК СтатьиБюджетов
	|ГДЕ
	|	&ТекстПоискаПоВидамАналитики";
	
	МаксимальноеКоличествоАналитик = БюджетированиеКлиентСервер.МаксимальноеКоличествоАналитик();
	ТекстПоискаПоВидамАналитики = "";
	Для НомерАналитики = 1 По МаксимальноеКоличествоАналитик Цикл
		ТекстПоискаПоВидамАналитики = ТекстПоискаПоВидамАналитики + ?(ТекстПоискаПоВидамАналитики = "", "", "
		|	ИЛИ ") + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			"СтатьиБюджетов.ВидАналитики%1 = &АналитикаСтатейБюджетов", 
			НомерАналитики);
	КонецЦикла;
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстПоискаПоВидамАналитики", ТекстПоискаПоВидамАналитики);
	Запрос.УстановитьПараметр("АналитикаСтатейБюджетов", АналитикаСтатейБюджетов);
	
	Результат = НЕ Запрос.Выполнить().Пустой();
	
	Возврат Результат;
	
КонецФункции

// Возвращает типы значений аналитики
//
// Параметры
//  АналитикаСтатейБюджетов - ПланВидовХарактеристикСсылка.АналитикиСтатейБюджетов  - Значение аналитики.
//  
// Возвращаемое значение:
//  ДоступныеТипы - Соответствие
//         Ключ - Тип -  Тип значения аналитики.
//         Значение - Полное имя объекта метаданных.
//        
Функция ДоступныеТипыАналитикиСтатейБюджетов(АналитикаСтатейБюджетов) Экспорт
	
	ДоступныеТипы = Новый Соответствие;
	
	Для каждого Тип Из АналитикаСтатейБюджетов.ТипЗначения.Типы() Цикл
		ДоступныеТипы.Вставить(Тип, Метаданные.НайтиПоТипу(Тип).ПолноеИмя());
	КонецЦикла;
	
	Возврат ДоступныеТипы;
	
КонецФункции

// Возвращает имена блокируемых реквизитов для механизма блокирования реквизитов БСП.
// 
// Возвращаемое значание:
// 	Массив - Имена блокируемых реквизитов.
//
Функция ПолучитьБлокируемыеРеквизитыОбъекта() Экспорт
	
	Результат = Новый Массив;
	
	Результат.Добавить("ТипЗначения");
	Результат.Добавить("Идентификатор");
	Результат.Добавить("ПредставлениеВалюты");
	Результат.Добавить("ПредставлениеЕдиницыИзмерения");
	Результат.Добавить("УчитыватьПоВалюте");
	Результат.Добавить("УчитыватьПоКоличеству");
	
	Возврат Результат;
	
КонецФункции

// Вызывается при начальном заполнении предопределенных элементов
// Подробнее см. в СтандартныеПодсистемыСервер.НастройкиПредопределенныхЭлементов
//
// Параметры:
//  Настройки - Структура - Настройки начального заполнения.
//
Процедура ПриНастройкеНачальногоЗаполненияЭлементов(Настройки) Экспорт
	
	Настройки.ПриНачальномЗаполненииЭлемента = Истина;
	
КонецПроцедуры

// Вызывается при начальном заполнении справочника.
//
// Параметры:
//  КодыЯзыков - Массив - список языков конфигурации. Актуально для мультиязычных конфигураций.
//  Элементы   - ТаблицаЗначений - данные заполнения. Состав колонок соответствует набору реквизитов
//                                 плана видов характеристик.
//  ТабличныеЧасти - Структура - Ключ - Имя табличной части объекта.
//                               Значение - Выгрузка в таблицу значений пустой табличной части.
//
Процедура ПриНачальномЗаполненииЭлементов(КодыЯзыков, Элементы, ТабличныеЧасти) Экспорт

	КодОсновногоЯзыка = ОбщегоНазначения.КодОсновногоЯзыка();

	#Область ВидыНоменклатуры
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ВидыНоменклатуры";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("СправочникСсылка.ВидыНоменклатуры"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Виды номенклатуры';uk='Види номенклатури'",КодОсновногоЯзыка);
	Элемент.Код = "000000016";
	Элемент.ЗаполнениеЕдиницыИзмерения = НСтр("ru='ЕдиницаИзмерения';uk='ЕдиницаИзмерения'",КодОсновногоЯзыка);
	Элемент.ПредставлениеЕдиницыИзмерения = НСтр("ru='[Единица хранения]';uk='[Одиниця зберігання]'",КодОсновногоЯзыка);
	Элемент.УчитыватьПоВалюте = Ложь;
	Элемент.УчитыватьПоКоличеству = Истина;
	Элемент.ПредставлениеТипаЗначения = НСтр("ru='Вид номенклатуры';uk='Вид номенклатури'",КодОсновногоЯзыка);
	#КонецОбласти

	#Область ГруппыАналитическогоУчетаНоменклатуры
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ГруппыАналитическогоУчетаНоменклатуры";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("СправочникСсылка.ГруппыАналитическогоУчетаНоменклатуры"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Группы аналитического учета номенклатуры';uk='Групи аналітичного обліку номенклатури'",КодОсновногоЯзыка);
	Элемент.Код = "000000034";
	Элемент.УчитыватьПоВалюте = Ложь;
	Элемент.УчитыватьПоКоличеству = Ложь;
	Элемент.ПредставлениеТипаЗначения = НСтр("ru='Группа аналитического учета номенклатуры';uk='Група аналітичного обліку номенклатури'",КодОсновногоЯзыка);
	#КонецОбласти

	#Область ДенежныеСредстваБюджетирования
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ДенежныеСредстваБюджетирования";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("СправочникСсылка.КассыККМ"));
	МассивТипов.Добавить(Тип("СправочникСсылка.БанковскиеСчетаОрганизаций"));
	МассивТипов.Добавить(Тип("СправочникСсылка.Кассы"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Денежные средства';uk='Грошові кошти'",КодОсновногоЯзыка);
	Элемент.Код = "000000011";
	Элемент.ЗаполнениеВалюты = НСтр("ru='ВалютаДенежныхСредств';uk='Валюта грошових коштів'",КодОсновногоЯзыка);
	Элемент.ПредставлениеВалюты = НСтр("ru='[Валюта денежных средств]';uk='[Валюта грошових коштів]'",КодОсновногоЯзыка);
	Элемент.УчитыватьПоВалюте = Истина;
	Элемент.УчитыватьПоКоличеству = Ложь;
	Элемент.ПредставлениеТипаЗначения = НСтр("ru='Кассы ККМ, Банковский счет организации, Касса';uk='Каси ККМ, Банківський рахунок організації, Каса'",КодОсновногоЯзыка);
	#КонецОбласти

	#Область Договоры
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "Договоры";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("СправочникСсылка.ДоговорыМеждуОрганизациями"));
	МассивТипов.Добавить(Тип("СправочникСсылка.ДоговорыКонтрагентов"));
	МассивТипов.Добавить(Тип("СправочникСсылка.ДоговорыКредитовИДепозитов"));
	МассивТипов.Добавить(Тип("СправочникСсылка.ДоговорыЛизинга"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Договоры';uk='Договори'",КодОсновногоЯзыка);
	Элемент.Код = "000000001";
	Элемент.ЗаполнениеВалюты = НСтр("ru='ВалютаВзаиморасчетов';uk='Валюта взаєморозрахунків'",КодОсновногоЯзыка);
	Элемент.ПредставлениеВалюты = НСтр("ru='[Валюта взаиморасчетов]';uk='[Валюта взаєморозрахунків]'",КодОсновногоЯзыка);
	Элемент.УчитыватьПоВалюте = Истина;
	Элемент.УчитыватьПоКоличеству = Ложь;
	Элемент.ПредставлениеТипаЗначения = НСтр("ru='Договор между организациями, Договор с контрагентом, Договор кредита (депозита), Договор лизинга';uk='Договір між організаціями, Договір з контрагентом, Договір кредиту (депозиту), Договір лізингу'",КодОсновногоЯзыка);
	#КонецОбласти

	#Область Заказы
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "Заказы";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ДокументСсылка.ЗаказПоставщику"));
	МассивТипов.Добавить(Тип("ДокументСсылка.ЗаказПереработчику"));
	МассивТипов.Добавить(Тип("ДокументСсылка.ЗаказНаСборку"));
	МассивТипов.Добавить(Тип("ДокументСсылка.ЗаказКлиента"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Заказы';uk='Замовлення'",КодОсновногоЯзыка);
	Элемент.Код = "000000036";
	Элемент.УчитыватьПоВалюте = Ложь;
	Элемент.УчитыватьПоКоличеству = Ложь;
	Элемент.ПредставлениеТипаЗначения = НСтр("ru='Заказ поставщику, Заказ на производство (2.1), Заказ переработчику, Заказ на сборку (разборку), Заказ на ремонт, Заказ клиента, Заказ давальца, Заказ на производство';uk='Замовлення постачальнику, Замовлення на виробництво (2.1), Замовлення переробнику, Замовлення на збирання (розбирання), Замовлення на ремонт, Замовлення клієнта, Замовлення давальця, Замовлення на виробництво'",КодОсновногоЯзыка);
	#КонецОбласти

	#Область КоллекцииНоменклатуры
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "КоллекцииНоменклатуры";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("СправочникСсылка.КоллекцииНоменклатуры"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Коллекции';uk='Колекції'",КодОсновногоЯзыка);
	Элемент.Код = "000000033";
	Элемент.УчитыватьПоВалюте = Ложь;
	Элемент.УчитыватьПоКоличеству = Ложь;
	Элемент.ПредставлениеТипаЗначения = НСтр("ru='Коллекция (сезон)';uk='Колекція (сезон)'",КодОсновногоЯзыка);
	#КонецОбласти

	#Область Контрагенты
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "Контрагенты";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("СправочникСсылка.Контрагенты"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Контрагенты';uk='Контрагенти'",КодОсновногоЯзыка);
	Элемент.Код = "000000002";
	Элемент.УчитыватьПоВалюте = Ложь;
	Элемент.УчитыватьПоКоличеству = Ложь;
	Элемент.ПредставлениеТипаЗначения = НСтр("ru='Контрагент';uk='Контрагент'",КодОсновногоЯзыка);
	#КонецОбласти

	#Область Марки
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "Марки";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("СправочникСсылка.Марки"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Марки (бренды)';uk='Марки (бренди)'",КодОсновногоЯзыка);
	Элемент.Код = "000000028";
	Элемент.УчитыватьПоВалюте = Ложь;
	Элемент.УчитыватьПоКоличеству = Ложь;
	Элемент.ПредставлениеТипаЗначения = НСтр("ru='Марка (бренд)';uk='Марка (бренд)'",КодОсновногоЯзыка);
	#КонецОбласти

	#Область НаправленияДеятельности
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "НаправленияДеятельности";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("СправочникСсылка.НаправленияДеятельности"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Направления деятельности';uk='Напрями діяльності'",КодОсновногоЯзыка);
	Элемент.Код = "000000015";
	Элемент.УчитыватьПоВалюте = Ложь;
	Элемент.УчитыватьПоКоличеству = Ложь;
	Элемент.ПредставлениеТипаЗначения = НСтр("ru='Направление деятельности';uk='Напрям діяльності'",КодОсновногоЯзыка);
	#КонецОбласти

	#Область НематериальныеАктивы
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "НематериальныеАктивы";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("СправочникСсылка.НематериальныеАктивы"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Нематериальные активы';uk='Нематеріальні активи'",КодОсновногоЯзыка);
	Элемент.Код = "000000018";
	Элемент.УчитыватьПоВалюте = Ложь;
	Элемент.УчитыватьПоКоличеству = Ложь;
	Элемент.ПредставлениеТипаЗначения = НСтр("ru='Нематериальные активы';uk='Нематеріальні активи'",КодОсновногоЯзыка);
	#КонецОбласти

	#Область НоменклатураБюджетирования
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "НоменклатураБюджетирования";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("СправочникСсылка.Номенклатура"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Номенклатура';uk='Номенклатура'",КодОсновногоЯзыка);
	Элемент.Код = "000000003";
	Элемент.ЗаполнениеЕдиницыИзмерения = НСтр("ru='ЕдиницаИзмерения';uk='ЕдиницаИзмерения'",КодОсновногоЯзыка);
	Элемент.ПредставлениеЕдиницыИзмерения = НСтр("ru='[Единица хранения]';uk='[Одиниця зберігання]'",КодОсновногоЯзыка);
	Элемент.УчитыватьПоВалюте = Ложь;
	Элемент.УчитыватьПоКоличеству = Истина;
	Элемент.ПредставлениеТипаЗначения = НСтр("ru='Номенклатура';uk='Номенклатура'",КодОсновногоЯзыка);
	#КонецОбласти

	#Область ОбъектыСтроительства
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ОбъектыСтроительства";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("СправочникСсылка.ОбъектыСтроительства"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Объекты строительства';uk='Об''єкти будівництва'",КодОсновногоЯзыка);
	Элемент.Код = "000000035";
	Элемент.УчитыватьПоВалюте = Ложь;
	Элемент.УчитыватьПоКоличеству = Ложь;
	Элемент.ПредставлениеТипаЗначения = НСтр("ru='Объект строительства';uk='Об''єкт будівництва'",КодОсновногоЯзыка);
	#КонецОбласти

	#Область ОбъектыЭксплуатации
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ОбъектыЭксплуатации";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("СправочникСсылка.ОбъектыЭксплуатации"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Объекты эксплуатации';uk='Об''єкти експлуатації'",КодОсновногоЯзыка);
	Элемент.Код = "000000017";
	Элемент.УчитыватьПоВалюте = Ложь;
	Элемент.УчитыватьПоКоличеству = Ложь;
	Элемент.ПредставлениеТипаЗначения = НСтр("ru='Объект эксплуатации';uk='Об''єкт експлуатації'",КодОсновногоЯзыка);
	#КонецОбласти

	#Область Организации
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "Организации";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("СправочникСсылка.Организации"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Организации';uk='Організації'",КодОсновногоЯзыка);
	Элемент.Код = "000000023";
	Элемент.УчитыватьПоВалюте = Ложь;
	Элемент.УчитыватьПоКоличеству = Ложь;
	Элемент.ПредставлениеТипаЗначения = НСтр("ru='Организация';uk='Організація'",КодОсновногоЯзыка);
	#КонецОбласти

	#Область Партнеры
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "Партнеры";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("СправочникСсылка.Партнеры"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Партнеры';uk='Партнери'",КодОсновногоЯзыка);
	Элемент.Код = "000000024";
	Элемент.УчитыватьПоВалюте = Ложь;
	Элемент.УчитыватьПоКоличеству = Ложь;
	Элемент.ПредставлениеТипаЗначения = НСтр("ru='Партнер';uk='Партнер'",КодОсновногоЯзыка);
	#КонецОбласти

	#Область Подразделения
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "Подразделения";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("СправочникСсылка.СтруктураПредприятия"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Подразделения';uk='Підрозділи'",КодОсновногоЯзыка);
	Элемент.Код = "000000014";
	Элемент.УчитыватьПоВалюте = Ложь;
	Элемент.УчитыватьПоКоличеству = Ложь;
	Элемент.ПредставлениеТипаЗначения = НСтр("ru='Подразделение';uk='Підрозділ'",КодОсновногоЯзыка);
	#КонецОбласти

	#Область Проекты
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "Проекты";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("СправочникСсылка.Проекты"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Проекты';uk='Проєкти'",КодОсновногоЯзыка);
	Элемент.Код = "000000004";
	Элемент.УчитыватьПоВалюте = Ложь;
	Элемент.УчитыватьПоКоличеству = Ложь;
	Элемент.ПредставлениеТипаЗначения = НСтр("ru='Проект';uk='Проєкт'",КодОсновногоЯзыка);
	#КонецОбласти

	#Область Производители
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "Производители";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("СправочникСсылка.Производители"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Производители';uk='Виробники'",КодОсновногоЯзыка);
	Элемент.Код = "000000027";
	Элемент.УчитыватьПоВалюте = Ложь;
	Элемент.УчитыватьПоКоличеству = Ложь;
	Элемент.ПредставлениеТипаЗначения = НСтр("ru='Производитель';uk='Виробник'",КодОсновногоЯзыка);
	#КонецОбласти

	#Область ПрочиеРасходы
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ПрочиеРасходы";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("СправочникСсылка.ПрочиеРасходы"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Прочие расходы';uk='Інші витрати'",КодОсновногоЯзыка);
	Элемент.Код = "000000020";
	Элемент.УчитыватьПоВалюте = Ложь;
	Элемент.УчитыватьПоКоличеству = Ложь;
	Элемент.ПредставлениеТипаЗначения = НСтр("ru='Прочие расходы';uk='Інші витрати'",КодОсновногоЯзыка);
	#КонецОбласти

	#Область СезонныеГруппы
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "СезонныеГруппы";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("СправочникСсылка.СезонныеГруппы"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Сезонные группы';uk='Сезонні групи'",КодОсновногоЯзыка);
	Элемент.Код = "000000031";
	Элемент.УчитыватьПоВалюте = Ложь;
	Элемент.УчитыватьПоКоличеству = Ложь;
	Элемент.ПредставлениеТипаЗначения = НСтр("ru='Сезонные группы номенклатуры';uk='Сезонні групи номенклатури'",КодОсновногоЯзыка);
	#КонецОбласти

	#Область Склады
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "Склады";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("СправочникСсылка.Склады"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Склады';uk='Склади'",КодОсновногоЯзыка);
	Элемент.Код = "000000005";
	Элемент.УчитыватьПоВалюте = Ложь;
	Элемент.УчитыватьПоКоличеству = Ложь;
	Элемент.ПредставлениеТипаЗначения = НСтр("ru='Склад (складская территория)';uk='Склад (складська територія)'",КодОсновногоЯзыка);
	#КонецОбласти

	#Область Сотрудники
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "Сотрудники";
	МассивТипов = Новый Массив;
	//++ Локализация
	МассивТипов.Добавить(Тип("СправочникСсылка.Сотрудники"));
	//-- Локализация
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Сотрудники';uk='Співробітники'",КодОсновногоЯзыка);
	Элемент.Код = "000000006";
	Элемент.УчитыватьПоВалюте = Ложь;
	Элемент.УчитыватьПоКоличеству = Ложь;
	Элемент.ПредставлениеТипаЗначения = НСтр("ru='Сотрудник';uk='Співробітник'",КодОсновногоЯзыка);
	#КонецОбласти

	#Область СтатьиАктивовИПассивов
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "СтатьиАктивовИПассивов";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ПланВидовХарактеристикСсылка.СтатьиАктивовПассивов"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Прочие активы и пассивы';uk='Інші активи та пасиви'",КодОсновногоЯзыка);
	Элемент.Код = "000000019";
	Элемент.УчитыватьПоВалюте = Ложь;
	Элемент.УчитыватьПоКоличеству = Ложь;
	Элемент.ПредставлениеТипаЗначения = НСтр("ru='Статья актива/пассива';uk='Стаття активу пасиву'",КодОсновногоЯзыка);
	#КонецОбласти

	#Область СтатьиАктивовПассивов
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "СтатьиАктивовПассивов";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ПланВидовХарактеристикСсылка.СтатьиАктивовПассивов"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Статьи активов и пассивов';uk='Статті активів і пасивів'",КодОсновногоЯзыка);
	Элемент.Код = "000000022";
	Элемент.УчитыватьПоВалюте = Ложь;
	Элемент.УчитыватьПоКоличеству = Ложь;
	Элемент.ПредставлениеТипаЗначения = НСтр("ru='Статья актива/пассива';uk='Стаття активу пасиву'",КодОсновногоЯзыка);
	#КонецОбласти

	#Область СтатьиДвиженияДенежныхСредств
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "СтатьиДвиженияДенежныхСредств";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("СправочникСсылка.СтатьиДвиженияДенежныхСредств"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Статьи ДДС';uk='Статті РГК'",КодОсновногоЯзыка);
	Элемент.Код = "000000007";
	Элемент.УчитыватьПоВалюте = Ложь;
	Элемент.УчитыватьПоКоличеству = Ложь;
	Элемент.ПредставлениеТипаЗначения = НСтр("ru='Статья движения денежных средств';uk='Стаття руху грошових коштів'",КодОсновногоЯзыка);
	#КонецОбласти

	#Область СтатьиДоходов
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "СтатьиДоходов";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ПланВидовХарактеристикСсылка.СтатьиДоходов"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Статьи доходов';uk='Статті доходів'",КодОсновногоЯзыка);
	Элемент.Код = "000000009";
	Элемент.УчитыватьПоВалюте = Ложь;
	Элемент.УчитыватьПоКоличеству = Ложь;
	Элемент.ПредставлениеТипаЗначения = НСтр("ru='Статьи доходов';uk='Статті доходів'",КодОсновногоЯзыка);
	#КонецОбласти

	#Область СтатьиКалькуляции
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "СтатьиКалькуляции";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("СправочникСсылка.СтатьиКалькуляции"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Статьи калькуляции';uk='Статті калькуляції'",КодОсновногоЯзыка);
	Элемент.Код = "000000008";
	Элемент.УчитыватьПоВалюте = Ложь;
	Элемент.УчитыватьПоКоличеству = Ложь;
	Элемент.ПредставлениеТипаЗначения = НСтр("ru='Статьи калькуляции';uk='Статті калькуляції'",КодОсновногоЯзыка);
	#КонецОбласти

	#Область СтатьиРасходов
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "СтатьиРасходов";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ПланВидовХарактеристикСсылка.СтатьиРасходов"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Статьи расходов';uk='Статті витрат'",КодОсновногоЯзыка);
	Элемент.Код = "000000010";
	Элемент.УчитыватьПоВалюте = Ложь;
	Элемент.УчитыватьПоКоличеству = Ложь;
	Элемент.ПредставлениеТипаЗначения = НСтр("ru='Статья расходов';uk='Стаття витрат'",КодОсновногоЯзыка);
	#КонецОбласти

	#Область ТипыДенежныхСредств
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ТипыДенежныхСредств";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ПеречислениеСсылка.ТипыДенежныхСредств"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Типы денежных средств';uk='Типи грошових коштів'",КодОсновногоЯзыка);
	Элемент.Код = "000000012";
	Элемент.УчитыватьПоВалюте = Ложь;
	Элемент.УчитыватьПоКоличеству = Ложь;
	Элемент.ПредставлениеТипаЗначения = НСтр("ru='Типы денежных средств';uk='Типи грошових коштів'",КодОсновногоЯзыка);
	#КонецОбласти

	#Область ТипыНоменклатуры
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ТипыНоменклатуры";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ПеречислениеСсылка.ТипыНоменклатуры"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Типы номенклатуры';uk='Типи номенклатури'",КодОсновногоЯзыка);
	Элемент.Код = "000000013";
	Элемент.УчитыватьПоВалюте = Ложь;
	Элемент.УчитыватьПоКоличеству = Ложь;
	Элемент.ПредставлениеТипаЗначения = НСтр("ru='Типы номенклатуры';uk='Типи номенклатури'",КодОсновногоЯзыка);
	#КонецОбласти

	#Область ТоварныеКатегории
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ТоварныеКатегории";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("СправочникСсылка.ТоварныеКатегории"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Товарные категории';uk='Товарні категорії'",КодОсновногоЯзыка);
	Элемент.Код = "000000030";
	Элемент.УчитыватьПоВалюте = Ложь;
	Элемент.УчитыватьПоКоличеству = Ложь;
	Элемент.ПредставлениеТипаЗначения = НСтр("ru='Товарные категории';uk='Товарні категорії'",КодОсновногоЯзыка);
	#КонецОбласти

	#Область ФизическиеЛица
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ФизическиеЛица";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("СправочникСсылка.ФизическиеЛица"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Физические лица';uk='Фізичні особи'",КодОсновногоЯзыка);
	Элемент.Код = "000000021";
	Элемент.УчитыватьПоВалюте = Ложь;
	Элемент.УчитыватьПоКоличеству = Ложь;
	Элемент.ПредставлениеТипаЗначения = НСтр("ru='Физическое лицо';uk='Фізична особа'",КодОсновногоЯзыка);
	#КонецОбласти

	#Область ФорматыМагазинов
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ФорматыМагазинов";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("СправочникСсылка.ФорматыМагазинов"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Форматы магазинов';uk='Формати магазинів'",КодОсновногоЯзыка);
	Элемент.Код = "000000032";
	Элемент.УчитыватьПоВалюте = Ложь;
	Элемент.УчитыватьПоКоличеству = Ложь;
	Элемент.ПредставлениеТипаЗначения = НСтр("ru='Форматы магазинов';uk='Формати магазинів'",КодОсновногоЯзыка);
	#КонецОбласти

	#Область ЦеновыеГруппы
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ЦеновыеГруппы";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("СправочникСсылка.ЦеновыеГруппы"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Ценовые группы';uk='Цінові групи'",КодОсновногоЯзыка);
	Элемент.Код = "000000029";
	Элемент.УчитыватьПоВалюте = Ложь;
	Элемент.УчитыватьПоКоличеству = Ложь;
	Элемент.ПредставлениеТипаЗначения = НСтр("ru='Ценовая группа';uk='Цінова група'",КодОсновногоЯзыка);
	#КонецОбласти

КонецПроцедуры

// Вызывается при начальном заполнении создаваемого элемента.
//
// Параметры:
//  Объект                  - ПланВидовХарактеристикОбъект.АналитикиСтатейБюджетов - заполняемый объект.
//  Данные                  - СтрокаТаблицыЗначений - данные заполнения.
//  ДополнительныеПараметры - Структура - Дополнительные параметры.
//
Процедура ПриНачальномЗаполненииЭлемента(Объект, Данные, ДополнительныеПараметры) Экспорт
	
	
	
КонецПроцедуры

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Заполняет предопределенные элементы
//
Процедура ЗаполнитьПредопределенныеАналитикиСтатейБюджетов() Экспорт
	
	ПВХОбъект = ПланыВидовХарактеристик.АналитикиСтатейБюджетов.НоменклатураБюджетирования.ПолучитьОбъект();
	ПВХОбъект.УчитыватьПоКоличеству = Истина;
	ПВХОбъект.ЗаполнениеЕдиницыИзмерения = "ЕдиницаИзмерения";
	ПВХОбъект.ПредставлениеЕдиницыИзмерения = НСтр("ru='[Единица хранения]';uk='[Одиниця зберігання]'");
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(ПВХОбъект);
	
	ПВХОбъект = ПланыВидовХарактеристик.АналитикиСтатейБюджетов.ВидыНоменклатуры.ПолучитьОбъект();
	ПВХОбъект.УчитыватьПоКоличеству = Истина;
	ПВХОбъект.ЗаполнениеЕдиницыИзмерения = "ЕдиницаИзмерения";
	ПВХОбъект.ПредставлениеЕдиницыИзмерения = НСтр("ru='[Единица хранения]';uk='[Одиниця зберігання]'");
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(ПВХОбъект);
	
	ПВХОбъект = ПланыВидовХарактеристик.АналитикиСтатейБюджетов.ДенежныеСредстваБюджетирования.ПолучитьОбъект();
	ПВХОбъект.УчитыватьПоВалюте = Истина;
	ПВХОбъект.ЗаполнениеВалюты = "ВалютаДенежныхСредств";
	ПВХОбъект.ПредставлениеВалюты = НСтр("ru='[Валюта денежных средств]';uk='[Валюта грошових коштів]'");
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(ПВХОбъект);
	
	ПВХОбъект = ПланыВидовХарактеристик.АналитикиСтатейБюджетов.Договоры.ПолучитьОбъект();
	ПВХОбъект.УчитыватьПоВалюте = Истина;
	ПВХОбъект.ЗаполнениеВалюты = "ВалютаВзаиморасчетов";
	ПВХОбъект.ПредставлениеВалюты = НСтр("ru='[Валюта взаиморасчетов]';uk='[Валюта взаєморозрахунків]'");
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(ПВХОбъект);
	
	Выборка = ПланыВидовХарактеристик.АналитикиСтатейБюджетов.Выбрать();
	Пока Выборка.Следующий() Цикл
		ПВХОбъект = Выборка.ПолучитьОбъект();
		ПВХОбъект.ПредставлениеТипаЗначения = Строка(ПВХОбъект.ТипЗначения);
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(ПВХОбъект);
	КонецЦикла;
	
КонецПроцедуры

#Область ОбновлениеИнформационнойБазы

// Добавляет в список процедуры-обработчики обновления данных ИБ
// для всех поддерживаемых версий библиотеки или конфигурации.
// Вызывается перед началом обновления данных ИБ для построения плана обновления.
//
//  Обработчики - ТаблицаЗначений - описание полей, см. в процедуре
//                ОбновлениеИнформационнойБазы.НоваяТаблицаОбработчиковОбновления.
//
// Пример добавления процедуры-обработчика в список:
//  Обработчик = Обработчики.Добавить();
//  Обработчик.Версия              = "1.1.0.0";
//  Обработчик.Процедура           = "ОбновлениеИБ.ПерейтиНаВерсию_1_1_0_0";
//  Обработчик.МонопольныйРежим    = Ложь;
//
// Параметры:
// 	Обработчики - см. ОбновлениеИнформационнойБазы.НоваяТаблицаОбработчиковОбновления
//
Процедура ОписаниеОбработчиковОбновления(Обработчики) Экспорт

	Обработчик = Обработчики.Добавить();
	Обработчик.Процедура = "ПланыВидовХарактеристик.АналитикиСтатейБюджетов.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	Обработчик.Версия = "2.5.4.400";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("297484a0-26b9-4241-af60-a14379462df0");
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "ПланыВидовХарактеристик.АналитикиСтатейБюджетов.ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию";
	Обработчик.ПроцедураПроверки = "БюджетированиеСервер.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.Комментарий = НСтр("ru='Устанавливает идентификатор для видов аналитик бюджетирования';uk='Встановлює ідентифікатор для видів аналітик бюджетування'");
	
	Читаемые = Новый Массив;
	Читаемые.Добавить(Метаданные.ПланыВидовХарактеристик.АналитикиСтатейБюджетов.ПолноеИмя());
	Обработчик.ЧитаемыеОбъекты = СтрСоединить(Читаемые, ",");
	
	Изменяемые = Новый Массив;
	Изменяемые.Добавить(Метаданные.ПланыВидовХарактеристик.АналитикиСтатейБюджетов.ПолноеИмя());
	Обработчик.ИзменяемыеОбъекты = СтрСоединить(Изменяемые, ",");
	
	Блокируемые = Новый Массив;
	Блокируемые.Добавить(Метаданные.Документы.ЭкземплярБюджета.ПолноеИмя());
	Блокируемые.Добавить(Метаданные.Отчеты.БюджетныйОтчет.ПолноеИмя());
	Блокируемые.Добавить(Метаданные.ПланыВидовХарактеристик.АналитикиСтатейБюджетов.ПолноеИмя());
	Блокируемые.Добавить(Метаданные.Справочники.ВидыБюджетов.ПолноеИмя());
	Блокируемые.Добавить(Метаданные.Справочники.ЭлементыФинансовыхОтчетов.ПолноеИмя());
	Обработчик.БлокируемыеОбъекты = СтрСоединить(Блокируемые, ",");
	
	Обработчик.ПриоритетыВыполнения = ОбновлениеИнформационнойБазы.ПриоритетыВыполненияОбработчика();

	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "ОбновлениеИнформационнойБазыУТ.ОбновитьПредставленияПредопределенныхЭлементов";
	НоваяСтрока.Порядок = "Любой";

КонецПроцедуры

// Обработчик обновления.
// 
// Параметры:
//  Параметры - Структура - параметры.
//
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	АналитикиСтатейБюджетов.Ссылка КАК Ссылка
	|ИЗ
	|	ПланВидовХарактеристик.АналитикиСтатейБюджетов КАК АналитикиСтатейБюджетов
	|ГДЕ
	|	АналитикиСтатейБюджетов.Ссылка В (ЗНАЧЕНИЕ(ПланВидовХарактеристик.АналитикиСтатейБюджетов.Заказы), ЗНАЧЕНИЕ(ПланВидовХарактеристик.АналитикиСтатейБюджетов.ОбъектыСтроительства))
	|	И (ВЫРАЗИТЬ(АналитикиСтатейБюджетов.ПредставлениеТипаЗначения КАК СТРОКА(1))) = &ПустаяСтрока";
	Запрос.УстановитьПараметр("ПустаяСтрока", "");
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	АналитикиСтатейБюджетов.Ссылка
	|ИЗ
	|	ПланВидовХарактеристик.АналитикиСтатейБюджетов КАК АналитикиСтатейБюджетов
	|ГДЕ
	|	АналитикиСтатейБюджетов.Идентификатор = """"";
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
КонецПроцедуры

// Обработчик обновления.
// 
// Параметры:
//  Параметры - Структура - параметры.
//
Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяОбъекта = "ПланВидовХарактеристик.АналитикиСтатейБюджетов";
	
	// Указание идентификаторов для видов аналитик с учетом уникальности идентификаторов.
	// Идентификаторы не должны совпадать с зарезервированными параметрами для подстановки в текстовые поля бюджетных
	// отчетов.
	// В случае, если 2 характеристики имеют различие в наименовании, которое не отражается в идентификаторе,
	// к идентификатору будет добавлен порядковый номер.
	ЗарезервированныеПеременные = БюджетнаяОтчетностьКлиентСервер.УпорядоченныеПеременныеБюджетныхОтчетов();
	ТаблицаЗарезервированныхИмен = Новый ТаблицаЗначений();
	ТаблицаЗарезервированныхИмен.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100, ДопустимаяДлина.Переменная)));
	Для Каждого ИмяПараметраИПредставление Из ЗарезервированныеПеременные Цикл
		СтрокаПараметра = ТаблицаЗарезервированныхИмен.Добавить();
		СтрокаПараметра.Идентификатор = ИмяПараметраИПредставление.Имя;
	КонецЦикла;
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	АналитикиСтатейБюджетов.Идентификатор КАК Идентификатор
	|ИЗ
	|	ПланВидовХарактеристик.АналитикиСтатейБюджетов КАК АналитикиСтатейБюджетов
	|ГДЕ
	|	АналитикиСтатейБюджетов.Идентификатор <> """"";
	ВыборкаРанееОбработанных = Запрос.Выполнить().Выбрать();
	Пока ВыборкаРанееОбработанных.Следующий() Цикл
		СтрокаПараметра = ТаблицаЗарезервированныхИмен.Добавить();
		СтрокаПараметра.Идентификатор = ВыборкаРанееОбработанных.Идентификатор;
	КонецЦикла;
	ТаблицаЗарезервированныхИмен.Индексы.Добавить("Идентификатор");
	
	Выборка = ОбновлениеИнформационнойБазы.ВыбратьСсылкиДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта);
	
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		Попытка
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяОбъекта);
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
			Блокировка.Заблокировать();
			
			ПланВидовХарактеристикОбъект = Выборка.Ссылка.ПолучитьОбъект();
			
			Если ПланВидовХарактеристикОбъект = Неопределено Тогда
				
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выборка.Ссылка);
				
			Иначе
				
				Если ПустаяСтрока(ПланВидовХарактеристикОбъект.ПредставлениеТипаЗначения) Тогда
					ПланВидовХарактеристикОбъект.ПредставлениеТипаЗначения = БюджетированиеКлиентСервер.ПредставлениеТипаЗначения(ПланВидовХарактеристикОбъект);
				КонецЕсли;
				
				Идентификатор = ОбщегоНазначенияУТКлиентСервер.ПолучитьИдентификатор(ПланВидовХарактеристикОбъект.Наименование);
				ПроверяемыйИдентификатор = Идентификатор;
				ЗначениеУникально = Ложь;
				Счетчик = 1;
				Пока НЕ ЗначениеУникально Цикл
					Если ТаблицаЗарезервированныхИмен.Найти(ПроверяемыйИдентификатор) = Неопределено Тогда
						ЗначениеУникально = Истина;
						Идентификатор = ПроверяемыйИдентификатор;
						Прервать;
					Иначе
						ПроверяемыйИдентификатор = Идентификатор + Формат(Счетчик, "ЧГ=0;");
						Счетчик = Счетчик + 1;
					КонецЕсли;
				КонецЦикла;
				
				ПланВидовХарактеристикОбъект.Идентификатор = Идентификатор;
				
				ОбновлениеИнформационнойБазы.ЗаписатьДанные(ПланВидовХарактеристикОбъект);
				
				СтрокаПараметра = ТаблицаЗарезервированныхИмен.Добавить();
				СтрокаПараметра.Идентификатор = Идентификатор;
				
			КонецЕсли;
			
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			ОбновлениеИнформационнойБазыУТ.СообщитьОНеудачнойОбработке(ИнформацияОбОшибке(), Выборка.Ссылка);
		КонецПопытки;
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(Параметры.Очередь, ПолноеИмяОбъекта);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
