#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает имена блокруемых реквизитов для механизма блокирования реквизитов БСП.
//
// Возвращаемое значение:
//	Массив - имена блокируемых реквизитов.
//
Функция ПолучитьБлокируемыеРеквизитыОбъекта() Экспорт
	
	Результат = Новый Массив;
	Результат.Добавить("АктивПассив; АктивПассив");
	Результат.Добавить("ТипЗначения; ТипЗначения");
	
	Возврат Результат;
	
КонецФункции

// Функция определяет аналитику активов и пассивов для подстановки в документ по статье активов и пассивов.
//
// Параметры:
//  СтатьяАктивовПассивов - ПланВидовХарактеристикСсылка.СтатьиАктивовПассивов - Ссылка на статью активов и пассивов
//	Объект - ДанныеФормыСтруктура - Текущий объект.
//
// Возвращаемое значение:
//	СправочникСсылка - значение аналитики по умолчанию для активов и пассивов.
//
Функция ПолучитьАналитикуАктивовПассивовПоУмолчанию(СтатьяАктивовПассивов, Объект) Экспорт
	
	ОписаниеТипов = Новый ОписаниеТипов(СтатьяАктивовПассивов.ТипЗначения);
	АналитикаАктивовПассивов = ОписаниеТипов.ПривестиЗначение();
	
	Если СтатьяАктивовПассивов.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.Склады")
		И Объект.Свойство("Склад") Тогда
	
		АналитикаАктивовПассивов = Объект.Склад;
	
	ИначеЕсли СтатьяАктивовПассивов.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.Партнеры")
		И Объект.Свойство("Партнер") Тогда
		
		АналитикаАктивовПассивов = Объект.Партнер;
		
	ИначеЕсли СтатьяАктивовПассивов.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.Контрагенты")
		И Объект.Свойство("Контрагент") Тогда
		
		АналитикаАктивовПассивов = Объект.Контрагент;
		
	ИначеЕсли СтатьяАктивовПассивов.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.СтруктураПредприятия")
		И Объект.Свойство("Подразделение") Тогда
		
		АналитикаАктивовПассивов = Объект.Подразделение;
		
	ИначеЕсли СтатьяАктивовПассивов.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.СтруктураПредприятия")
		И Объект.Свойство("ПодразделениеПредприятия") Тогда
		
		АналитикаАктивовПассивов = Объект.ПодразделениеПредприятия;
		
	ИначеЕсли СтатьяАктивовПассивов.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.Организации")
		И Объект.Свойство("Организация") Тогда
	
		АналитикаАктивовПассивов = Объект.Организация;
		
	ИначеЕсли СтатьяАктивовПассивов.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица")
		И Объект.Свойство("ФизическоеЛицо") Тогда
	
		АналитикаАктивовПассивов = Объект.ФизическоеЛицо;
		
	КонецЕсли;
	
	Возврат АналитикаАктивовПассивов;
	
КонецФункции

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//   Параметры - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.Параметры
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	КомандаОтчет = Отчеты.ОборотноСальдоваяВедомостьАктивовПассивов.ДобавитьКомандуКарточкаАктиваПассива(КомандыОтчетов);
	Если КомандаОтчет <> Неопределено Тогда
		КомандаОтчет.ВидимостьВФормах = "ФормаЭлемента,ФормаСписка";
	КонецЕсли;
	
КонецПроцедуры

// Возвращает статьи активов/пассивов, использование которых запрещено
//
// Возвращаемое значение:
// 	ЗаблокированныеСтатьи - СписокЗначений - Список заблокированных статей активов/пассивов.
//
Функция ЗаблокированныеСтатьиАктивовПассивов() Экспорт
	
	ЗаблокированныеСтатьи = Новый СписокЗначений;
	
	Возврат ЗаблокированныеСтатьи;
	
КонецФункции

// Вызывается при начальном заполнении предопределенных элементов
Процедура ПриНастройкеНачальногоЗаполненияЭлементов(Настройки) Экспорт
	
	Настройки.ПриНачальномЗаполненииЭлемента = Истина;
	
КонецПроцедуры

// Вызывается при начальном заполнении справочника.
//
// Параметры:
//  КодыЯзыков - Массив - список языков конфигурации. Актуально для мультиязычных конфигураций.
//  Элементы   - ТаблицаЗначений - данные заполнения. Состав колонок соответствует набору реквизитов
//                                 справочника.
//
Процедура ПриНачальномЗаполненииЭлементов(КодыЯзыков, Элементы, ТабличныеЧасти) Экспорт
    
	КодОсновногоЯзыка = ОбщегоНазначения.КодОсновногоЯзыка();

//++ НЕ УТ
	#Область ВнеоборотныеАктивы
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ВнеоборотныеАктивы";
	МассивТипов = Новый Массив;
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Необоротные активы';uk='Необоротні активи'",КодОсновногоЯзыка);
	Элемент.Код = "00000000039";
	Элемент.РеквизитДопУпорядочивания = 39;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Ложь;
	#КонецОбласти

//-- НЕ УТ
	#Область ГруппаПрочиеАктивы
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ГруппаПрочиеАктивы";
	МассивТипов = Новый Массив;
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Прочие активы';uk='Інші активи'",КодОсновногоЯзыка);
	Элемент.Код = "00000000047";
	Элемент.РеквизитДопУпорядочивания = 45;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Ложь;
	#КонецОбласти

	#Область ГруппаПрочиеПассивы
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ГруппаПрочиеПассивы";
	МассивТипов = Новый Массив;
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Прочие пассивы';uk='Інші пасиви'",КодОсновногоЯзыка);
	Элемент.Код = "00000000048";
	Элемент.РеквизитДопУпорядочивания = 47;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Ложь;
	#КонецОбласти

	#Область ДебиторскаяЗадолженность
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ДебиторскаяЗадолженность";
	МассивТипов = Новый Массив;
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Дебиторская задолженность';uk='Дебіторська заборгованість'",КодОсновногоЯзыка);
	Элемент.Код = "00000000023";
	Элемент.РеквизитДопУпорядочивания = 21;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Ложь;
	#КонецОбласти

	#Область ДенежныеСредства
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ДенежныеСредства";
	МассивТипов = Новый Массив;
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Денежные средства';uk='Грошові кошти'",КодОсновногоЯзыка);
	Элемент.Код = "00000000020";
	Элемент.РеквизитДопУпорядочивания = 13;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Ложь;
	#КонецОбласти

	#Область ДоходыТекущегоПериода
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ДоходыТекущегоПериода";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ПеречислениеСсылка.СтатьиБезАналитики"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Доходы текущего периода';uk='Доходи поточного періоду'",КодОсновногоЯзыка);
	Элемент.Код = "00000000042";
	Элемент.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.Пассив;
	Элемент.РеквизитДопУпорядочивания = 37;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Истина;
	#КонецОбласти

	#Область ИсточникиФинансирования
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ИсточникиФинансирования";
	МассивТипов = Новый Массив;
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Источники финансирования';uk='Джерела фінансування'",КодОсновногоЯзыка);
	Элемент.Код = "00000000038";
	Элемент.РеквизитДопУпорядочивания = 1;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Ложь;
	#КонецОбласти

	#Область КредиторскаяЗадолженность
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "КредиторскаяЗадолженность";
	МассивТипов = Новый Массив;
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Кредиторская задолженность';uk='Кредиторська заборгованість'",КодОсновногоЯзыка);
	Элемент.Код = "00000000024";
	Элемент.РеквизитДопУпорядочивания = 8;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Ложь;
	#КонецОбласти

	#Область НезавершенноеПроизводство
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "НезавершенноеПроизводство";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ПеречислениеСсылка.СтатьиБезАналитики"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Незавершенное производство';uk='Незавершене виробництво'",КодОсновногоЯзыка);
	Элемент.Код = "00000000029";
	Элемент.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.Актив;
	Элемент.РеквизитДопУпорядочивания = 34;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Истина;
	#КонецОбласти

	#Область ПрибылиИУбытки
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ПрибылиИУбытки";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ПеречислениеСсылка.СтатьиБезАналитики"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Прибыли и убытки';uk='Прибутки і збитки'",КодОсновногоЯзыка);
	Элемент.Код = "00000000016";
	Элемент.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.Пассив;
	Элемент.РеквизитДопУпорядочивания = 38;
	Элемент.ВыводитьОборот = Истина;
	Элемент.ПредставлениеДебетаСтатьи = НСтр("ru='Себестоимость и прочие расходы';uk='Собівартість та інші витрати'",КодОсновногоЯзыка);
	Элемент.ПредставлениеКредитаСтатьи = НСтр("ru='Выручка и прочие доходы';uk='Виторг і інші доходи'",КодОсновногоЯзыка);
	Элемент.БезАналитики = Истина;
	#КонецОбласти

	#Область РасходыБудущихПериодов
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "РасходыБудущихПериодов";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ПеречислениеСсылка.СтатьиБезАналитики"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Расходы будущих периодов';uk='Витрати майбутніх періодів'",КодОсновногоЯзыка);
	Элемент.Код = "00000000015";
	Элемент.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.Актив;
	Элемент.РеквизитДопУпорядочивания = 35;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Истина;
	#КонецОбласти

	#Область РасходыТекущегоПериода
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "РасходыТекущегоПериода";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ПеречислениеСсылка.СтатьиБезАналитики"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Расходы текущего периода';uk='Витрати поточного періоду'",КодОсновногоЯзыка);
	Элемент.Код = "00000000014";
	Элемент.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.Актив;
	Элемент.РеквизитДопУпорядочивания = 36;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Истина;
	#КонецОбласти

	#Область Товары
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "Товары";
	МассивТипов = Новый Массив;
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Товары';uk='Товари'",КодОсновногоЯзыка);
	Элемент.Код = "00000000027";
	Элемент.РеквизитДопУпорядочивания = 26;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Ложь;
	#КонецОбласти
//++ НЕ УТ

	#Область ТоварыКОформлениюОтчетовКомитенту
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ТоварыКОформлениюОтчетовКомитенту";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ПеречислениеСсылка.СтатьиБезАналитики"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Товары к оформлению отчетов комитенту (продажи)';uk='Товари до оформлення звітів комітенту (продажі)'",КодОсновногоЯзыка);
	Элемент.Код = "00000000043";
	Элемент.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.Пассив;
	Элемент.РеквизитДопУпорядочивания = 32;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Истина;
	#КонецОбласти
//-- НЕ УТ

	
	#Область ТоварыРаботыКОформлениюОтчетовКомитенту
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ТоварыРаботыКОформлениюОтчетовКомитенту";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ПеречислениеСсылка.СтатьиБезАналитики"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Товары и работы к оформлению отчетов комитенту (закупки)';uk='Товари та роботи до оформлення звітів комітенту (купівлі)'",КодОсновногоЯзыка);
	Элемент.Код = "00000000057";
	Элемент.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.Актив;
	Элемент.РеквизитДопУпорядочивания = 53;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Истина;
	#КонецОбласти
//++ НЕ УТ

	#Область КапитализацияНМАиНИОКР
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "КапитализацияНМАиНИОКР";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("СправочникСсылка.НематериальныеАктивы"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Капитализация НМА';uk='Капіталізація НМА'",КодОсновногоЯзыка);
	Элемент.Код = "00000000051";
	Элемент.Родитель = ПланыВидовХарактеристик.СтатьиАктивовПассивов.ВнеоборотныеАктивы;
	Элемент.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.Актив;
	Элемент.РеквизитДопУпорядочивания = 44;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Ложь;
	#КонецОбласти

	#Область КапитализацияОбъектовСтроительства
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "КапитализацияОбъектовСтроительства";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("СправочникСсылка.ОбъектыСтроительства"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Капитализация объектов строительства';uk='Капіталізація об''єктів будівництва'",КодОсновногоЯзыка);
	Элемент.Код = "00000000052";
	Элемент.Родитель = ПланыВидовХарактеристик.СтатьиАктивовПассивов.ВнеоборотныеАктивы;
	Элемент.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.Актив;
	Элемент.РеквизитДопУпорядочивания = 43;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Ложь;
	#КонецОбласти

	#Область КапитализацияОС
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "КапитализацияОС";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("СправочникСсылка.ОбъектыЭксплуатации"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Капитализация ОС';uk='Капіталізація ОЗ'",КодОсновногоЯзыка);
	Элемент.Код = "00000000050";
	Элемент.Родитель = ПланыВидовХарактеристик.СтатьиАктивовПассивов.ВнеоборотныеАктивы;
	Элемент.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.Актив;
	Элемент.РеквизитДопУпорядочивания = 42;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Ложь;
	#КонецОбласти

	#Область НематериальныеАктивы
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "НематериальныеАктивы";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("СправочникСсылка.НематериальныеАктивы"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Нематериальные активы';uk='Нематеріальні активи'",КодОсновногоЯзыка);
	Элемент.Код = "00000000046";
	Элемент.Родитель = ПланыВидовХарактеристик.СтатьиАктивовПассивов.ВнеоборотныеАктивы;
	Элемент.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.Актив;
	Элемент.РеквизитДопУпорядочивания = 41;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Ложь;
	#КонецОбласти

	#Область ОсновныеСредства
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ОсновныеСредства";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("СправочникСсылка.ОбъектыЭксплуатации"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Основные средства';uk='Основні засоби'",КодОсновногоЯзыка);
	Элемент.Код = "00000000045";
	Элемент.Родитель = ПланыВидовХарактеристик.СтатьиАктивовПассивов.ВнеоборотныеАктивы;
	Элемент.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.Актив;
	Элемент.РеквизитДопУпорядочивания = 40;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Ложь;
	#КонецОбласти
//-- НЕ УТ

	#Область ВыданныеАвансы
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ВыданныеАвансы";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ПеречислениеСсылка.СтатьиБезАналитики"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Выданные авансы';uk='Видані аванси'",КодОсновногоЯзыка);
	Элемент.Код = "00000000001";
	Элемент.Родитель = ПланыВидовХарактеристик.СтатьиАктивовПассивов.ДебиторскаяЗадолженность;
	Элемент.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.Актив;
	Элемент.РеквизитДопУпорядочивания = 23;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Истина;
	#КонецОбласти

	#Область ЗадолженностьКлиентов
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ЗадолженностьКлиентов";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ПеречислениеСсылка.СтатьиБезАналитики"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Задолженность клиентов';uk='Заборгованість клієнтів'",КодОсновногоЯзыка);
	Элемент.Код = "00000000002";
	Элемент.Родитель = ПланыВидовХарактеристик.СтатьиАктивовПассивов.ДебиторскаяЗадолженность;
	Элемент.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.Актив;
	Элемент.РеквизитДопУпорядочивания = 22;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Истина;
	#КонецОбласти

	#Область ЗадолженностьСобственныхОрганизаций
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ЗадолженностьСобственныхОрганизаций";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ПеречислениеСсылка.СтатьиБезАналитики"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Задолженность собственных организаций';uk='Заборгованість власних організацій'",КодОсновногоЯзыка);
	Элемент.Код = "00000000006";
	Элемент.Родитель = ПланыВидовХарактеристик.СтатьиАктивовПассивов.ДебиторскаяЗадолженность;
	Элемент.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.Актив;
	Элемент.РеквизитДопУпорядочивания = 25;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Истина;
	#КонецОбласти

	#Область ЗаймыВыданные
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ЗаймыВыданные";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ПеречислениеСсылка.СтатьиБезАналитики"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Займы выданные';uk='Позики видані'",КодОсновногоЯзыка);
	Элемент.Код = "00000000019";
	Элемент.Родитель = ПланыВидовХарактеристик.СтатьиАктивовПассивов.ДебиторскаяЗадолженность;
	Элемент.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.Актив;
	Элемент.РеквизитДопУпорядочивания = 24;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Истина;
	#КонецОбласти

	#Область ДенежныеДокументы
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ДенежныеДокументы";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ПеречислениеСсылка.СтатьиБезАналитики"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Денежные документы';uk='Грошові документи'",КодОсновногоЯзыка);
	Элемент.Код = "00000000049";
	Элемент.Родитель = ПланыВидовХарактеристик.СтатьиАктивовПассивов.ДенежныеСредства;
	Элемент.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.Актив;
	Элемент.РеквизитДопУпорядочивания = 18;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Истина;
	#КонецОбласти

	#Область ДенежныеСредстваБезналичные
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ДенежныеСредстваБезналичные";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ПеречислениеСсылка.СтатьиБезАналитики"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Денежные средства (безналичные)';uk='Кошти (безготівкові)'",КодОсновногоЯзыка);
	Элемент.Код = "00000000003";
	Элемент.Родитель = ПланыВидовХарактеристик.СтатьиАктивовПассивов.ДенежныеСредства;
	Элемент.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.Актив;
	Элемент.РеквизитДопУпорядочивания = 14;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Истина;
	#КонецОбласти

	#Область ДенежныеСредстваВПути
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ДенежныеСредстваВПути";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ПеречислениеСсылка.СтатьиБезАналитики"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Денежные средства в пути';uk='Грошові кошти в дорозі'",КодОсновногоЯзыка);
	Элемент.Код = "00000000028";
	Элемент.Родитель = ПланыВидовХарактеристик.СтатьиАктивовПассивов.ДенежныеСредства;
	Элемент.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.Актив;
	Элемент.РеквизитДопУпорядочивания = 20;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Истина;
	#КонецОбласти

	#Область ДенежныеСредстваНаличные
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ДенежныеСредстваНаличные";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ПеречислениеСсылка.СтатьиБезАналитики"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Денежные средства (наличные)';uk='Кошти (готівка)'",КодОсновногоЯзыка);
	Элемент.Код = "00000000004";
	Элемент.Родитель = ПланыВидовХарактеристик.СтатьиАктивовПассивов.ДенежныеСредства;
	Элемент.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.Актив;
	Элемент.РеквизитДопУпорядочивания = 15;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Истина;
	#КонецОбласти

	#Область ДенежныеСредстваНаправления
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ДенежныеСредстваНаправления";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ПеречислениеСсылка.СтатьиБезАналитики"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Денежные средства (в направлениях)';uk='Грошові кошти (в напрямах)'",КодОсновногоЯзыка);
	Элемент.Код = "00000000044";
	Элемент.Родитель = ПланыВидовХарактеристик.СтатьиАктивовПассивов.ДенежныеСредства;
	Элемент.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.Актив;
	Элемент.РеквизитДопУпорядочивания = 16;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Истина;
	#КонецОбласти

	#Область ДенежныеСредстваУПодотчетныхЛиц
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ДенежныеСредстваУПодотчетныхЛиц";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ПеречислениеСсылка.СтатьиБезАналитики"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Денежные средства (у подотчетных лиц)';uk='Грошові кошти (у підзвітних осіб)'",КодОсновногоЯзыка);
	Элемент.Код = "00000000005";
	Элемент.Родитель = ПланыВидовХарактеристик.СтатьиАктивовПассивов.ДенежныеСредства;
	Элемент.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.Актив;
	Элемент.РеквизитДопУпорядочивания = 17;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Истина;
	#КонецОбласти

	#Область ДепозитыВБанках
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ДепозитыВБанках";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ПеречислениеСсылка.СтатьиБезАналитики"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Депозиты в банках';uk='Депозити в банках'",КодОсновногоЯзыка);
	Элемент.Код = "00000000018";
	Элемент.Родитель = ПланыВидовХарактеристик.СтатьиАктивовПассивов.ДенежныеСредства;
	Элемент.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.Актив;
	Элемент.РеквизитДопУпорядочивания = 19;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Истина;
	#КонецОбласти

	#Область ЗадолженностьПоКредитам
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ЗадолженностьПоКредитам";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ПеречислениеСсылка.СтатьиБезАналитики"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Финансирование за счет кредитов и займов';uk='Фінансування за рахунок кредитів і позик'",КодОсновногоЯзыка);
	Элемент.Код = "00000000017";
	Элемент.Родитель = ПланыВидовХарактеристик.СтатьиАктивовПассивов.ИсточникиФинансирования;
	Элемент.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.Пассив;
	Элемент.РеквизитДопУпорядочивания = 3;
	Элемент.ВыводитьОборот = Истина;
	Элемент.ПредставлениеДебетаСтатьи = НСтр("ru='Возврат кредита и процентов';uk='Повернення кредиту і відсотків'",КодОсновногоЯзыка);
	Элемент.ПредставлениеКредитаСтатьи = НСтр("ru='Кредит и начисления процентов';uk='Кредит і нарахування відсотків'",КодОсновногоЯзыка);
	Элемент.БезАналитики = Истина;
	#КонецОбласти
//++ НЕ УТ

	#Область Лизинг
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "Лизинг";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("СправочникСсылка.ДоговорыЛизинга"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Лизинг';uk='Лізинг'",КодОсновногоЯзыка);
	Элемент.Код = "00000000033";
	Элемент.Родитель = ПланыВидовХарактеристик.СтатьиАктивовПассивов.ИсточникиФинансирования;
	Элемент.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.АктивПассив;
	Элемент.РеквизитДопУпорядочивания = 4;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Ложь;
	#КонецОбласти
//-- НЕ УТ

	#Область СобственныеСредства
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "СобственныеСредства";
	МассивТипов = Новый Массив;
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Собственные средства';uk='Власні кошти'",КодОсновногоЯзыка);
	Элемент.Код = "00000000037";
	Элемент.Родитель = ПланыВидовХарактеристик.СтатьиАктивовПассивов.ИсточникиФинансирования;
	Элемент.РеквизитДопУпорядочивания = 5;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Ложь;
	#КонецОбласти

	#Область ЦелевоеФинансирование
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ЦелевоеФинансирование";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ПеречислениеСсылка.СтатьиБезАналитики"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Целевое финансирование';uk='Цільове фінансування'",КодОсновногоЯзыка);
	Элемент.Код = "00000000036";
	Элемент.Родитель = ПланыВидовХарактеристик.СтатьиАктивовПассивов.ИсточникиФинансирования;
	Элемент.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.Пассив;
	Элемент.РеквизитДопУпорядочивания = 2;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Истина;
	#КонецОбласти

	#Область ЗадолженностьПередПоставщиками
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ЗадолженностьПередПоставщиками";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ПеречислениеСсылка.СтатьиБезАналитики"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Задолженность перед поставщиками';uk='Заборгованість перед постачальниками'",КодОсновногоЯзыка);
	Элемент.Код = "00000000009";
	Элемент.Родитель = ПланыВидовХарактеристик.СтатьиАктивовПассивов.КредиторскаяЗадолженность;
	Элемент.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.Пассив;
	Элемент.РеквизитДопУпорядочивания = 10;
	Элемент.ВыводитьОборот = Истина;
	Элемент.ПредставлениеДебетаСтатьи = НСтр("ru='Оплата и прочие взаиморасчеты';uk='Оплата і інші взаєморозрахунки'",КодОсновногоЯзыка);
	Элемент.ПредставлениеКредитаСтатьи = НСтр("ru='Кредит';uk='Кредит'",КодОсновногоЯзыка);
	Элемент.БезАналитики = Истина;
	#КонецОбласти

	#Область НеотфактурованныеПоставки
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "НеотфактурованныеПоставки";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ПеречислениеСсылка.СтатьиБезАналитики"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Неотфактурованные поставки';uk='Невідфактуровані поставки'",КодОсновногоЯзыка);
	Элемент.Код = "00000000053";
	Элемент.Родитель = ПланыВидовХарактеристик.СтатьиАктивовПассивов.КредиторскаяЗадолженность;
	Элемент.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.Пассив;
	Элемент.РеквизитДопУпорядочивания = 0;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Истина;
	#КонецОбласти

	#Область ОбязательстваПередСобственнымиОрганизациями
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ОбязательстваПередСобственнымиОрганизациями";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ПеречислениеСсылка.СтатьиБезАналитики"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Обязательства перед собственными организациями';uk='Зобов''язання перед власними організаціями'",КодОсновногоЯзыка);
	Элемент.Код = "00000000011";
	Элемент.Родитель = ПланыВидовХарактеристик.СтатьиАктивовПассивов.КредиторскаяЗадолженность;
	Элемент.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.Пассив;
	Элемент.РеквизитДопУпорядочивания = 11;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Истина;
	#КонецОбласти

	#Область ПолученныеАвансы
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ПолученныеАвансы";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ПеречислениеСсылка.СтатьиБезАналитики"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Полученные авансы';uk='Отримані аванси'",КодОсновногоЯзыка);
	Элемент.Код = "00000000010";
	Элемент.Родитель = ПланыВидовХарактеристик.СтатьиАктивовПассивов.КредиторскаяЗадолженность;
	Элемент.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.Пассив;
	Элемент.РеквизитДопУпорядочивания = 9;
	Элемент.ВыводитьОборот = Истина;
	Элемент.ПредставлениеДебетаСтатьи = НСтр("ru='Зачет авансов';uk='Залік авансів'",КодОсновногоЯзыка);
	Элемент.ПредставлениеКредитаСтатьи = НСтр("ru='Авансы';uk='Аванси'",КодОсновногоЯзыка);
	Элемент.БезАналитики = Истина;
	#КонецОбласти

	#Область ПрочиеАктивы
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ПрочиеАктивы";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("СправочникСсылка.ПрочиеАктивыПассивы"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Прочие активы';uk='Інші активи'",КодОсновногоЯзыка);
	Элемент.Код = "00000000012";
	Элемент.Родитель = ПланыВидовХарактеристик.СтатьиАктивовПассивов.ГруппаПрочиеАктивы;
	Элемент.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.Актив;
	Элемент.РеквизитДопУпорядочивания = 46;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Ложь;
	#КонецОбласти

	#Область ДепонированнаяЗарплата
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ДепонированнаяЗарплата";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("СправочникСсылка.ФизическиеЛица"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Депонированная зарплата';uk='Депонована зарплата'",КодОсновногоЯзыка);
	Элемент.Код = "00000000032";
	Элемент.Родитель = ПланыВидовХарактеристик.СтатьиАктивовПассивов.ГруппаПрочиеПассивы;
	Элемент.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.Пассив;
	Элемент.РеквизитДопУпорядочивания = 50;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Ложь;
	#КонецОбласти

	#Область Налоги
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "Налоги";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ПеречислениеСсылка.ТипыНалогов"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Налоги';uk='Податки'",КодОсновногоЯзыка);
	Элемент.Код = "00000000035";
	Элемент.Родитель = ПланыВидовХарактеристик.СтатьиАктивовПассивов.ГруппаПрочиеПассивы;
	Элемент.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.АктивПассив;
	Элемент.РеквизитДопУпорядочивания = 49;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Ложь;
	#КонецОбласти

	#Область ОплатаТруда
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ОплатаТруда";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ПеречислениеСсылка.СтатьиБезАналитики"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Оплата труда';uk='Оплата праці'",КодОсновногоЯзыка);
	Элемент.Код = "00000000030";
	Элемент.Родитель = ПланыВидовХарактеристик.СтатьиАктивовПассивов.ГруппаПрочиеПассивы;
	Элемент.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.Пассив;
	Элемент.РеквизитДопУпорядочивания = 51;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Истина;
	#КонецОбласти

	#Область ПрочиеПассивы
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ПрочиеПассивы";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("СправочникСсылка.ПрочиеАктивыПассивы"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Прочие пассивы';uk='Інші пасиви'",КодОсновногоЯзыка);
	Элемент.Код = "00000000013";
	Элемент.Родитель = ПланыВидовХарактеристик.СтатьиАктивовПассивов.ГруппаПрочиеПассивы;
	Элемент.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.Пассив;
	Элемент.РеквизитДопУпорядочивания = 48;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Ложь;
	#КонецОбласти
//++ НЕ УТ

	#Область РезервыПоСомнительнымДолгам
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "РезервыПоСомнительнымДолгам";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ПеречислениеСсылка.СтатьиБезАналитики"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Резервы по сомнительным долгам';uk='Резерви по сумнівних боргах'",КодОсновногоЯзыка);
	Элемент.Код = "00000000056";
	Элемент.Родитель = ПланыВидовХарактеристик.СтатьиАктивовПассивов.ГруппаПрочиеПассивы;
	Элемент.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.Пассив;
	Элемент.РеквизитДопУпорядочивания = 52;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Истина;
	#КонецОбласти
//-- НЕ УТ

	#Область ВложенияСобственныхСредств
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ВложенияСобственныхСредств";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ПеречислениеСсылка.СтатьиБезАналитики"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Вложения собственных средств';uk='Вкладення власних коштів'",КодОсновногоЯзыка);
	Элемент.Код = "00000000040";
	Элемент.Родитель = ПланыВидовХарактеристик.СтатьиАктивовПассивов.СобственныеСредства;
	Элемент.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.Пассив;
	Элемент.РеквизитДопУпорядочивания = 6;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Истина;
	#КонецОбласти

	#Область ВыводСобственныхСредств
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ВыводСобственныхСредств";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ПеречислениеСсылка.СтатьиБезАналитики"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Вывод собственных средств';uk='Виведення власних коштів'",КодОсновногоЯзыка);
	Элемент.Код = "00000000041";
	Элемент.Родитель = ПланыВидовХарактеристик.СтатьиАктивовПассивов.СобственныеСредства;
	Элемент.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.Актив;
	Элемент.РеквизитДопУпорядочивания = 7;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Истина;
	#КонецОбласти

	#Область ТоварыВПути
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ТоварыВПути";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ПеречислениеСсылка.СтатьиБезАналитики"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Товары в пути';uk='Товари в дорозі'",КодОсновногоЯзыка);
	Элемент.Код = "00000000054";
	Элемент.Родитель = ПланыВидовХарактеристик.СтатьиАктивовПассивов.Товары;
	Элемент.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.Актив;
	Элемент.РеквизитДопУпорядочивания = 28;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Истина;
	#КонецОбласти

	#Область ТоварыВРознице
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ТоварыВРознице";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ПеречислениеСсылка.СтатьиБезАналитики"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Товары в рознице';uk='Товари у роздробі'",КодОсновногоЯзыка);
	Элемент.Код = "00000000025";
	Элемент.Родитель = ПланыВидовХарактеристик.СтатьиАктивовПассивов.Товары;
	Элемент.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.Актив;
	Элемент.РеквизитДопУпорядочивания = 29;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Истина;
	#КонецОбласти

	#Область ТоварыНаОптовыхСкладах
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ТоварыНаОптовыхСкладах";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ПеречислениеСсылка.СтатьиБезАналитики"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Товары на оптовых складах';uk='Товари на гуртових складах'",КодОсновногоЯзыка);
	Элемент.Код = "00000000007";
	Элемент.Родитель = ПланыВидовХарактеристик.СтатьиАктивовПассивов.Товары;
	Элемент.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.Актив;
	Элемент.РеквизитДопУпорядочивания = 27;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Истина;
	#КонецОбласти

	#Область ТоварыПереданныеВПереработку
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ТоварыПереданныеВПереработку";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ПеречислениеСсылка.СтатьиБезАналитики"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Товары, переданные в переработку';uk='Товари, передані в переробку'",КодОсновногоЯзыка);
	Элемент.Код = "00000000026";
	Элемент.Родитель = ПланыВидовХарактеристик.СтатьиАктивовПассивов.Товары;
	Элемент.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.Актив;
	Элемент.РеквизитДопУпорядочивания = 31;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Истина;
	#КонецОбласти

	#Область ТоварыПереданныеНаКомиссию
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ТоварыПереданныеНаКомиссию";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ПеречислениеСсылка.СтатьиБезАналитики"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	Элемент.Наименование = НСтр("ru='Товары, переданные на комиссию';uk='Товари, передані на комісію'",КодОсновногоЯзыка);
	Элемент.Код = "00000000008";
	Элемент.Родитель = ПланыВидовХарактеристик.СтатьиАктивовПассивов.Товары;
	Элемент.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.Актив;
	Элемент.РеквизитДопУпорядочивания = 30;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Истина;
	#КонецОбласти

КонецПроцедуры

// Вызывается при начальном заполнении создаваемого элемента.
//
// Параметры:
//  Объект                  - ПланВидовХарактеристикОбъект.СтатьиАктивовПассивов - заполняемый объект.
//  Данные                  - СтрокаТаблицыЗначений - данные заполнения.
//  ДополнительныеПараметры - Структура - Дополнительные параметры.
//
Процедура ПриНачальномЗаполненииЭлемента(Объект, Данные, ДополнительныеПараметры) Экспорт
	
	
	
КонецПроцедуры

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти

#КонецЕсли

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	ОбщегоНазначенияУТВызовСервера.ОбработкаПолученияДанныхВыбораПВХСтатьиАктивовПассивов(ДанныеВыбора, Параметры, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

#Область ОбновлениеИнформационнойБазы


// Добавляет в список процедуры-обработчики обновления данных ИБ
// для всех поддерживаемых версий библиотеки или конфигурации.
// Вызывается перед началом обновления данных ИБ для построения плана обновления.
//
//  Обработчики - ТаблицаЗначений - описание полей, см. в процедуре
//                ОбновлениеИнформационнойБазы.НоваяТаблицаОбработчиковОбновления.
//
// Пример добавления процедуры-обработчика в список:
//  Обработчик = Обработчики.Добавить();
//  Обработчик.Версия              = "1.1.0.0";
//  Обработчик.Процедура           = "ОбновлениеИБ.ПерейтиНаВерсию_1_1_0_0";
//  Обработчик.МонопольныйРежим    = Ложь;
//
// Параметры:
// 	Обработчики - см. ОбновлениеИнформационнойБазы.НоваяТаблицаОбработчиковОбновления
//
Процедура ОписаниеОбработчиковОбновления(Обработчики) Экспорт

#Область ПланыВидовХарактеристик_СтатьиАктивовПассивов_ЗаполнитьНастройкиПредопределенныхЭлементов

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.5.4.302";
	Обработчик.РежимВыполнения = "Оперативно";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("42fe117f-1e73-4ea2-8dda-2584c590d11b");
	Обработчик.Процедура = "ПланыВидовХарактеристик.СтатьиАктивовПассивов.ЗаполнитьНастройкиПредопределенныхЭлементов";
	Обработчик.ЧитаемыеОбъекты = "ПланВидовХарактеристик.СтатьиАктивовПассивов";
	Обработчик.ИзменяемыеОбъекты = "ПланВидовХарактеристик.СтатьиАктивовПассивов";
	Обработчик.Комментарий = НСтр("ru='В плане видов характеристик ""Статьи активов и пассивов"" заполняет реквизиты предопределенных элементов';uk='У плані видів характеристик ""Статті активів і пасивів"" заповнює реквізити напередвизначених елементів'");

#КонецОбласти
	
КонецПроцедуры	


Процедура ЗаполнитьНастройкиПредопределенныхЭлементов() Экспорт
	МетаданныеОбъекта = Метаданные.ПланыВидовХарактеристик.СтатьиАктивовПассивов;
	ПолноеИмяОбъекта  = МетаданныеОбъекта.ПолноеИмя();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СтатьиАктивовПассивов.Ссылка,
		|	СтатьиАктивовПассивов.ИмяПредопределенныхДанных КАК Имя,
		|	ВЫБОР
		|		КОГДА СтатьиАктивовПассивов.Ссылка В (
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ВыводСобственныхСредств),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ВыданныеАвансы),
		//++ НЕ УТ
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ОсновныеСредства),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.НематериальныеАктивы),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.КапитализацияОС),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.КапитализацияНМАиНИОКР),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.КапитализацияОбъектовСтроительства),
		//-- НЕ УТ
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ЗадолженностьКлиентов),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ДенежныеСредстваБезналичные),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ДенежныеСредстваНаправления),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ДенежныеСредстваВПути),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ДенежныеСредстваНаличные),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ДенежныеСредстваУПодотчетныхЛиц),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ДенежныеДокументы),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ДепозитыВБанках),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ЗадолженностьСобственныхОрганизаций),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ЗаймыВыданные),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПрочиеАктивы),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.РасходыБудущихПериодов),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.НезавершенноеПроизводство),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.РасходыТекущегоПериода),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ТоварыПереданныеВПереработку),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ТоварыПереданныеНаКомиссию),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ТоварыВПути),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ТоварыВРознице),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ТоварыНаОптовыхСкладах))
		|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСтатейУправленческогоБаланса.Актив)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыСтатейУправленческогоБаланса.Пассив)
		|	КОНЕЦ КАК АктивПассив
		|ИЗ
		|	ПланВидовХарактеристик.СтатьиАктивовПассивов КАК СтатьиАктивовПассивов
		|ГДЕ
		|	СтатьиАктивовПассивов.Предопределенный
		|	И НЕ СтатьиАктивовПассивов.ЭтоГруппа
		|	И НЕ СтатьиАктивовПассивов.Ссылка В (&АктивыПассивы)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Статьи.Ссылка,
		|	Статьи.ИмяПредопределенныхДанных КАК Имя,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыСтатейУправленческогоБаланса.АктивПассив) КАК АктивПассив
		|ИЗ
		|	ПланВидовХарактеристик.СтатьиАктивовПассивов КАК Статьи
		|ГДЕ
		|	Статьи.Ссылка В (&АктивыПассивы)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Статьи.Ссылка,
		|	Статьи.ИмяПредопределенныхДанных КАК Имя,
		|	НЕОПРЕДЕЛЕНО КАК АктивПассив
		|ИЗ
		|	ПланВидовХарактеристик.СтатьиАктивовПассивов КАК Статьи
		|ГДЕ
		|	Статьи.Предопределенный
		|	И Статьи.ЭтоГруппа";
		
	АктивыПассивы = Новый Массив;
	//++ НЕ УТ
	АктивыПассивы.Добавить(ПланыВидовХарактеристик.СтатьиАктивовПассивов.Лизинг);
	//-- НЕ УТ
	АктивыПассивы.Добавить(ПланыВидовХарактеристик.СтатьиАктивовПассивов.Налоги);
	Запрос.УстановитьПараметр("АктивыПассивы", АктивыПассивы);
	
	ПорядокСтатейXML = ПолучитьМакет("ПорядокСтатей").ПолучитьТекст();
	ПорядокСтатей = ОбщегоНазначения.ПрочитатьXMLВТаблицу(ПорядокСтатейXML).Данные;
	ТипБезАналитики = Новый ОписаниеТипов("ПеречислениеСсылка.СтатьиБезАналитики");
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяОбъекта);
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			
			Блокировка.Заблокировать();
			
			Объект = Выборка.Ссылка.ПолучитьОбъект();
			Порядок = ПорядокСтатей.Найти(Выборка.Имя);
			Если Порядок <> Неопределено Тогда
				Объект.РеквизитДопУпорядочивания = Порядок.РеквизитДопУпорядочивания;
			КонецЕсли;
			Если ЗначениеЗаполнено(Выборка.АктивПассив) Тогда
				Объект.БезАналитики = Объект.ТипЗначения = ТипБезАналитики;
				Объект.АктивПассив = Выборка.АктивПассив;
			КонецЕсли;
			ОбновлениеИнформационнойБазы.ЗаписатьОбъект(Объект);
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			ТекстСообщения = НСтр("ru='Не удалось обработать элемент: %Ссылка% по причине: %Причина%';uk='Не вдалося обробити елемент:%Ссылка% через: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", Выборка.Ссылка);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Предупреждение,
				МетаданныеОбъекта,
				Выборка.Ссылка,
				ТекстСообщения);
			Продолжить;
		КонецПопытки;
	КонецЦикла;
	УстановитьПредставлениеОборотовСтатейАктивовПассивов();
	
КонецПроцедуры

Процедура УстановитьПредставлениеОборотовСтатейАктивовПассивов()
	
	СтатьиАП = ПланыВидовХарактеристик.СтатьиАктивовПассивов;
	
	УстановитьПредставлениеОборотовСтатьи(
		СтатьиАП.ЗадолженностьПоКредитам,
		НСтр("ru='Возврат кредита и процентов';uk='Повернення кредиту і відсотків'"),
		НСтр("ru='Кредит и начисления процентов';uk='Кредит і нарахування відсотків'"));
		
	УстановитьПредставлениеОборотовСтатьи(
		СтатьиАП.ПолученныеАвансы,
		НСтр("ru='Зачет авансов';uk='Залік авансів'"),
		НСтр("ru='Авансы';uk='Аванси'"));
		
	УстановитьПредставлениеОборотовСтатьи(
		СтатьиАП.ЗадолженностьПередПоставщиками,
		НСтр("ru='Оплата и прочие взаиморасчеты';uk='Оплата і інші взаєморозрахунки'"),
		НСтр("ru='Кредит';uk='Кредит'"));
		
	УстановитьПредставлениеОборотовСтатьи(
		СтатьиАП.ПрибылиИУбытки,
		НСтр("ru='Себестоимость и прочие расходы';uk='Собівартість та інші витрати'"),
		НСтр("ru='Выручка и прочие доходы';uk='Виторг і інші доходи'"));
	
КонецПроцедуры

Процедура УстановитьПредставлениеОборотовСтатьи(Статья, ПредставлениеДебетаСтатьи, ПредставлениеКредитаСтатьи)
	
	Объект = Статья.ПолучитьОбъект();
	Объект.ВыводитьОборот = Истина;
	Объект.ПредставлениеДебетаСтатьи = ПредставлениеДебетаСтатьи;
	Объект.ПредставлениеКредитаСтатьи = ПредставлениеКредитаСтатьи;
	ОбновлениеИнформационнойБазы.ЗаписатьОбъект(Объект);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти


#КонецЕсли
