
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Параметры.Свойство("Заголовок",			Заголовок);
	Параметры.Свойство("ОрганизацияСсылка",	ОрганизацияСсылка);
	
	ПрочитатьДанные();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОтредактированаИстория" И ОрганизацияСсылка = Источник Тогда
		Если Параметр.ИмяРегистра = "СпециальныеРежимыЗарплатаКадры" Тогда
			Если СпециальныеРежимыЗарплатаКадрыНаборЗаписейПрочитан Тогда
				РедактированиеПериодическихСведенийКлиент.ОбработкаОповещения(
					ЭтаФорма,
					ОрганизацияСсылка,
					ИмяСобытия,
					Параметр,
					Источник);
				ОбновитьПолеСведенияОСпецРежимеПериод(ЭтаФорма, ОбщегоНазначенияКлиент.ДатаСеанса());
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
//++ ЕРП ЗИК
&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Оповещение = Новый ОписаниеОповещения("СохранитьИЗакрыть", ЭтотОбъект);
	ОбщегоНазначенияКлиент.ПоказатьПодтверждениеЗакрытияФормы(Оповещение, Отказ, ЗавершениеРаботы);
	
КонецПроцедуры
//~Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
//~	
//~	Оповещение = Новый ОписаниеОповещения("СохранитьИЗакрыть", ЭтотОбъект);
//~	ОбщегоНазначенияКлиент.ПоказатьПодтверждениеЗакрытияФормы(Оповещение, Отказ, ЗавершениеРаботы);
//~	
//~КонецПроцедуры
//-- ЕРП ЗИК

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	РедактированиеПериодическихСведений.ПроверитьЗаписьВФорме(ЭтаФорма, "СпециальныеРежимыЗарплатаКадры", ОрганизацияСсылка, Отказ);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
&НаКлиенте
Процедура СпециальныеРежимыЗарплатаКадрыРезидентДияСитиПриИзменении(Элемент)
	
	ОбновитьПолеСведенияОСпецРежимеПериод(ЭтаФорма, ОбщегоНазначенияКлиент.ДатаСеанса());
	
КонецПроцедуры

&НаКлиенте
Процедура СпециальныеРежимыЗарплатаКадрыПериодСтрокойПриИзменении(Элемент)
	
	ЗарплатаКадрыКлиент.ВводМесяцаПриИзменении(ЭтаФорма, "СпециальныеРежимыЗарплатаКадры.Период", "СпециальныеРежимыЗарплатаКадрыПериодСтрокой", Модифицированность);
	
КонецПроцедуры

&НаКлиенте
Процедура СпециальныеРежимыЗарплатаКадрыПериодСтрокойНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаНачалоВыбора(
		ЭтаФорма,
		ЭтаФорма,
		"СпециальныеРежимыЗарплатаКадры.Период",
		"СпециальныеРежимыЗарплатаКадрыПериодСтрокой");
	
КонецПроцедуры

&НаКлиенте
Процедура СпециальныеРежимыЗарплатаКадрыПериодСтрокойРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаРегулирование(ЭтаФорма, "СпециальныеРежимыЗарплатаКадры.Период", "СпециальныеРежимыЗарплатаКадрыПериодСтрокой", Направление, Модифицированность);
	
КонецПроцедуры

&НаКлиенте
Процедура СпециальныеРежимыЗарплатаКадрыПериодСтрокойАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаАвтоПодборТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура СпециальныеРежимыЗарплатаКадрыПериодСтрокойОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаОкончаниеВводаТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СпециальныеРежимыЗарплатаКадрыИстория(Команда)
	
	РедактированиеПериодическихСведенийКлиент.ОткрытьИсторию("СпециальныеРежимыЗарплатаКадры", ОрганизацияСсылка, ЭтаФорма, ЭтаФорма.ТолькоПросмотр);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	СохранитьИЗакрытьНаКлиенте();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПрочитатьДанные()
	
	ОрганизацияОбъект = ОрганизацияСсылка.ПолучитьОбъект();
	
	ЗначениеВРеквизитФормы(ОрганизацияОбъект, "Организация");

	// Спец режимаы
	
	РедактированиеПериодическихСведений.ПрочитатьЗаписьДляРедактированияВФорме(ЭтаФорма, "СпециальныеРежимыЗарплатаКадры", ОрганизацияСсылка);
	ОбновитьПолеСведенияОСпецРежимеПериод(ЭтаФорма, ТекущаяДатаСеанса());

КонецПроцедуры

&НаКлиенте
Процедура СохранитьДанные(Отказ, ОповещениеЗавершения = Неопределено)

	ЗапроситьРежимИзмененияСпециальныхРежимов(СпециальныеРежимыЗарплатаКадры.Период, Отказ, ОповещениеЗавершения);
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьДанныеЗавершение(Отказ, ОповещениеЗавершения) 

	Если Не Отказ Тогда
		СохранитьДанныеНаСервере(Отказ);
	КонецЕсли;
	
	Если ОповещениеЗавершения <> Неопределено Тогда 
		ВыполнитьОбработкуОповещения(ОповещениеЗавершения, Отказ);
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура СохранитьДанныеНаСервере(Отказ)
	
	Если ПроверитьЗаполнение() Тогда
		
		РедактированиеПериодическихСведений.ЗаписатьЗаписьПослеРедактированияВФорме(ЭтаФорма, "СпециальныеРежимыЗарплатаКадры", ОрганизацияСсылка);
		
		Модифицированность = Ложь;
		
	Иначе
		Отказ = Истина;
		
	КонецЕсли;
	
	Если НЕ Отказ Тогда
		Модифицированность = Ложь;
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьНаборЗаписейПериодическихСведений(ИмяРегистра, ВедущийОбъект) Экспорт
	
	РедактированиеПериодическихСведений.ПрочитатьНаборЗаписей(ЭтаФорма, ИмяРегистра, ВедущийОбъект);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьПолеСведенияОСпецРежимеПериод(Форма, ДатаСеанса)
	
	// Не обязательно заполнение поля Период если данные по умолчанию и при этом 
	// записи о спецрежиме еще нет еще нет.
	Если ЗарплатаКадрыКлиентСервер.СведенияОСпецРежимеПоУмолчанию(Форма.СпециальныеРежимыЗарплатаКадры) И 
		НЕ ЗначениеЗаполнено(Форма.СпециальныеРежимыЗарплатаКадрыПрежняя.Период) Тогда
		Если ЗначениеЗаполнено(Форма.СпециальныеРежимыЗарплатаКадры.Период) Тогда
			Форма.СпециальныеРежимыЗарплатаКадры.Период = '00010101';
		КонецЕсли; 
	Иначе
		Если НЕ ЗначениеЗаполнено(Форма.СпециальныеРежимыЗарплатаКадры.Период) Тогда
			Форма.СпециальныеРежимыЗарплатаКадры.Период = НачалоМесяца(ДатаСеанса);
		КонецЕсли;
	КонецЕсли;
	
	РедактированиеПериодическихСведенийКлиентСервер.ОбновитьОтображениеПолейВвода(Форма, "СпециальныеРежимыЗарплатаКадры", Форма.ОрганизацияСсылка);
	
	ЗарплатаКадрыКлиентСервер.ЗаполнитьМесяцПоДате(Форма, "СпециальныеРежимыЗарплатаКадры.Период", "СпециальныеРежимыЗарплатаКадрыПериодСтрокой");
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапроситьРежимИзмененияСпециальныхРежимов(ДатаИзменения, Отказ, ОповещениеЗавершения)
	
	ДополнительныеПараметры = Новый Структура("ОповещениеЗавершения", ОповещениеЗавершения);
	Оповещение = Новый ОписаниеОповещения("ЗапроситьРежимИзмененияСпециальныхРежимовЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	
	ТекстКнопкиДа = НСтр("ru='Изменились специальные режимы';uk='Змінилися спеціальні режими'");
	ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru='При редактировании изменились специальные режимы Зарплаты и Кадры для организации.
                    |Если просто исправлены прежние данные (они были ошибочны), нажмите ""Исправлена ошибка"".
                    |Если спецрежимы организации изменились с %1, нажмите ""Изменились специальные режимы""'
                    |;uk='Під час редагування змінилися спеціальні режими Зарплати та Кадри для організації.
                    |Якщо просто виправлені попередні дані (вони були помилковими), натисніть ""Виправлена помилка"".
                    |Якщо спецрежими організації змінилися з %1, натисніть ""Змінити спеціальні режими""'"), 
		Формат(ДатаИзменения, "ДФ='д ММММ гггг ""г""'"));
	
	РедактированиеПериодическихСведенийКлиент.ЗапроситьРежимИзмененияРегистра(ЭтаФорма, "СпециальныеРежимыЗарплатаКадры", ТекстВопроса, ТекстКнопкиДа, Отказ, Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапроситьРежимИзмененияСпециальныхРежимовЗавершение(Отказ, ДополнительныеПараметры) Экспорт 
	
	СохранитьДанныеЗавершение(Отказ, ДополнительныеПараметры.ОповещениеЗавершения);
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьИЗакрыть(Результат, ДополнительныеПараметры) Экспорт 
	
	СохранитьИЗакрытьНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьИЗакрытьНаКлиенте()  

	Оповещение = Новый ОписаниеОповещения("СохранитьИЗакрытьНаКлиентеЗавершение", ЭтотОбъект);
	СохранитьДанные(Ложь, Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьИЗакрытьНаКлиентеЗавершение(Отказ, ДополнительныеПараметры) Экспорт 

	Если Не Отказ Тогда
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли; 
	
КонецПроцедуры


#КонецОбласти
