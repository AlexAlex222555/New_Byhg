#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(ЮридическоеФизическоеЛицо) Тогда
		Если ЗначениеЗаполнено(ДанныеЗаполнения)
		 И ДанныеЗаполнения.Свойство("ВидОрганизации")
		 И ДанныеЗаполнения.ВидОрганизации = "ИндивидуальныйПредприниматель" Тогда
			ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо;
		Иначе
			ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо;
		КонецЕсли;
	КонецЕсли;
	ОрганизацииЛокализация.ОбработкаЗаполненияОрганизации(ЭтотОбъект, ДанныеЗаполнения, СтандартнаяОбработка);
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)

	Перем ТекстСообщения;
	
	МассивНепроверяемыхРеквизитов = Новый Массив;

	Если Не ОбособленноеПодразделение Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ГоловнаяОрганизация");
	КонецЕсли;
    
	
	Если Не ЭтоНовый()
		И ОбособленноеПодразделение
		И ЕстьОбособленныеПодразделенияОрганизации() Тогда
		
		ТекстСообщения = НСтр("ru='Организация не может быть обособленным подразделением, потому что она уже выбрана в качестве головной для других организаций.';uk='Організація не може бути відокремленим підрозділом, тому що вона вже обрана в якості головної для інших організацій.'");
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект,,, Отказ);
		
	КонецЕсли;
    
	ОрганизацииЛокализация.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);

КонецПроцедуры

Процедура ПередЗаписью(Отказ)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтоЮрЛицо(ЮрФизЛицо) = Ложь Тогда

		ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо;
		
	Иначе
		
		ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо;
		
	КонецЕсли;
	
	Если НЕ ОбособленноеПодразделение Тогда
		
		Если ЭтоНовый() Тогда
			Если ПолучитьСсылкуНового().Пустая() Тогда
				УстановитьСсылкуНового(Справочники.Организации.ПолучитьСсылку());
			КонецЕсли;
			ГоловнаяОрганизация = ПолучитьСсылкуНового();
		ИначеЕсли ГоловнаяОрганизация <> Ссылка Тогда
			ГоловнаяОрганизация = Ссылка;
		КонецЕсли;
		
	КонецЕсли;
	
	//++ НЕ УТ
	ЕстьОбособленныеПодразделения = Истина;
	//-- НЕ УТ
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоОрганизаций") Тогда
		УстановитьПривилегированныйРежим(Истина);
		Запрос = Новый Запрос(
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	Организации.Ссылка
		|ИЗ
		|	Справочник.Организации КАК Организации
		|ГДЕ
		|	Организации.Ссылка <> &Ссылка
		|	И Организации.Ссылка <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)");
		
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		Если Не Запрос.Выполнить().Пустой() Тогда
			Если Не ПолучитьФункциональнуюОпцию("БазоваяВерсия") Тогда
				Константы.ИспользоватьНесколькоОрганизаций.Установить(Истина);
	//++ НЕ БЗК			
				Константы.ИспользоватьНесколькоКасс.Установить(Истина);
				Константы.ИспользоватьНесколькоРасчетныхСчетов.Установить(Истина);
				Константы.ИспользоватьНесколькоРасчетныхСчетовКасс.Установить(Истина);
	//-- НЕ БЗК			
			Иначе
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Базовая версия может вести учет только по одной организации';uk='Базова версія може вести облік тільки по одній організації'"),,,, Отказ);
			КонецЕсли;
		КонецЕсли;
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	
	//++ НЕ БЗК
	ОбщегоНазначенияУТ.ПодготовитьДанныеДляСинхронизацииКлючей(ЭтотОбъект, ПараметрыСинхронизацииКлючей());	
	//-- НЕ БЗК
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ОбновитьПовторноИспользуемыеЗначения();
	//++ НЕ БЗК
	ОбщегоНазначенияУТ.СинхронизироватьКлючи(ЭтотОбъект);
	//-- НЕ БЗК
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	ФайлЛоготип            = Неопределено;
	ФайлФаксимильнаяПечать = Неопределено;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ЕстьОбособленныеПодразделенияОрганизации()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Организации.Ссылка
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	Организации.ОбособленноеПодразделение И 
	|	Организации.ГоловнаяОрганизация = &Ссылка
	|	И Организации.Ссылка <> Организации.ГоловнаяОрганизация";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Возврат Не Запрос.Выполнить().Пустой();
	
КонецФункции

Функция ПараметрыСинхронизацииКлючей()
	
	Результат = Новый Соответствие;
	//++ НЕ БЗК
	Результат.Вставить("Справочник.ВидыЗапасов", "ПометкаУдаления");
	Результат.Вставить("Справочник.КлючиАналитикиУчетаПоПартнерам", "ПометкаУдаления");
	Результат.Вставить("Справочник.КлючиАналитикиУчетаНоменклатуры", "ПометкаУдаления");
	//++ НЕ УТ
	Результат.Вставить("Справочник.ПартииПроизводства", "ПометкаУдаления");
	//-- НЕ УТ
    Результат.Вставить("Справочник.КлючиРеестраДокументов", "ПометкаУдаления,Наименование,КодПоЕДРПОУ");
	//-- НЕ БЗК
	Возврат Результат;
	
КонецФункции

Функция ЭтоЮрЛицо(ЮрФизЛицо)
	
	Если ЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицо ИЛИ ЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицоНеРезидент Тогда
		Возврат Истина;
	ИначеЕсли ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо ИЛИ ЮрФизЛицо = Перечисления.ЮрФизЛицо.ИндивидуальныйПредприниматель Тогда
		Возврат Ложь;
	ИначеЕсли ТипЗнч(ЮрФизЛицо) = Тип("ПеречислениеСсылка.ЮридическоеФизическоеЛицо") Тогда
	 	Возврат ЮрФизЛицо <> Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

#КонецОбласти

#КонецЕсли
