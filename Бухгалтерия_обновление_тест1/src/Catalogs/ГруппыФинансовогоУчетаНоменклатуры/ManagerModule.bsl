#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Функция определяет группу финансового учета по умолчанию.
// Возвращает группу финансового учета, если найден один элемент справочника.
// Возвращает ПустуюСсылку в противном случае.
//
// Возвращаемое значение:
//	ГруппаФинансовогоУчета - СправочникСсылка.ГруппыФинансовогоУчетаНоменклатуры - Группа фин. учета по умолчанию.
//
Функция ПолучитьГруппуФинансовогоУчетаПоУмолчанию() Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 2
	|	ДанныеСправочника.Ссылка КАК ГруппаФинансовогоУчета
	|ИЗ
	|	Справочник.ГруппыФинансовогоУчетаНоменклатуры КАК ДанныеСправочника
	|ГДЕ
	|	НЕ ДанныеСправочника.ПометкаУдаления
	|	И НЕ ДанныеСправочника.ЭтоГруппа
	|");
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() = 1 
	   И Выборка.Следующий()
	Тогда
		ГруппаФинансовогоУчета = Выборка.ГруппаФинансовогоУчета;
	Иначе
		ГруппаФинансовогоУчета = Справочники.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка();
	КонецЕсли;
	
	Возврат ГруппаФинансовогоУчета;

КонецФункции

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

КонецПроцедуры

#Область ДляВызоваИзДругихПодсистем

// Заполняет реквизиты параметров настройки счетов учета номенклатуры (в т.ч. номенклатуры переданной), которые влияют на настройку,
// 	соответствующими им именам реквизитов аналитики учета.
//
// Параметры:
// 	СоответствиеИмен - Соответствие - ключом выступает имя реквизита, используемое в настройке счетов учета,
// 		значением является соответствующее имя реквизита аналитики учета.
// 
Процедура ЗаполнитьСоответствиеРеквизитовНастройкиСчетовУчета(СоответствиеИмен) Экспорт
	
	Возврат;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

//++ НЕ УТ 
// Выполняет первоначальное заполнение справочника
//
Процедура СоздатьГруппыФинансовогоУчетаПоУмолчанию() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	1 КАК Поле
	|ИЗ
	|	Справочник.ГруппыФинансовогоУчетаНоменклатуры КАК ГруппыФинансовогоУчета");
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		
		ЯзыкИБ = МультиязычностьУкр.КодЯзыкаИнформационнойБазы();
		
		Отказ  = Ложь; 
		
		ГруппаФинансовогоУчета = Справочники.ГруппыФинансовогоУчетаНоменклатуры.СоздатьЭлемент();
		ГруппаФинансовогоУчета.Наименование = НСтр("ru='Товары';uk='Товари'",ЯзыкИБ);
		ГруппаФинансовогоУчета.ВидЦенности = Перечисления.ВидыЦенностей.Товары;
		ГруппаФинансовогоУчета.Описание = НСтр("ru='Заполнение по умолчанию';uk='Заповнення по умовчанню'",ЯзыкИБ);
		
		ГруппаФинансовогоУчета.Записать();
		СтруктураСчетовУчета = Новый Структура;
		СтруктураСчетовУчета.Вставить("СчетУчета_НаСкладе", ПланыСчетов.Хозрасчетный.ТоварыНаСкладе);
		СтруктураСчетовУчета.Вставить("СчетУчета_НоменклатураПереданная", ПланыСчетов.Хозрасчетный.ТоварыНаКомиссии);
		СтруктураСчетовУчета.Вставить("СчетУчета_ВыручкаОтПродаж", ПланыСчетов.Хозрасчетный.ДоходОтРеализацииТоваров);
		СтруктураСчетовУчета.Вставить("СчетУчета_СебестоимостьПродаж", ПланыСчетов.Хозрасчетный.СебестоимостьРеализованныхТоваров);
		СтруктураСчетовУчета.Вставить("СчетУчета_ВычетыИзДоходов", ПланыСчетов.Хозрасчетный.ВычетыИзДохода);
		
		СтруктураИзмерений = НастройкаСчетовУчетаКлиентСервер.ИнициализироватьСтруктуруИзмеренийРегистра();
		СтруктураИзмерений.АналитикаУчета = ГруппаФинансовогоУчета.Ссылка;
		РегистрыСведений.ПорядокОтраженияНаСчетахУчета.СохранитьЗначенияСчетовУчета(СтруктураИзмерений, СтруктураСчетовУчета, Отказ);
		
	КонецЕсли;
	
КонецПроцедуры
//-- НЕ УТ 


// Добавляет в список процедуры-обработчики обновления данных ИБ
// для всех поддерживаемых версий библиотеки или конфигурации.
// Вызывается перед началом обновления данных ИБ для построения плана обновления.
//
//  Обработчики - ТаблицаЗначений - описание полей, см. в процедуре
//                ОбновлениеИнформационнойБазы.НоваяТаблицаОбработчиковОбновления.
//
// Пример добавления процедуры-обработчика в список:
//  Обработчик = Обработчики.Добавить();
//  Обработчик.Версия              = "1.1.0.0";
//  Обработчик.Процедура           = "ОбновлениеИБ.ПерейтиНаВерсию_1_1_0_0";
//  Обработчик.МонопольныйРежим    = Ложь;
//
// Параметры:
// 	Обработчики - см. ОбновлениеИнформационнойБазы.НоваяТаблицаОбработчиковОбновления
//
Процедура ОписаниеОбработчиковОбновления(Обработчики) Экспорт
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.5.4.400";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Справочники.ГруппыФинансовогоУчетаНоменклатуры.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("6ba9f1ea-2acb-4017-9b7c-136470f94d91");
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Справочники.ГруппыФинансовогоУчетаНоменклатуры.ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию";
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.ЧитаемыеОбъекты = "Справочник.ГруппыФинансовогоУчетаНоменклатуры";
	Обработчик.ИзменяемыеОбъекты = "Справочник.ГруппыФинансовогоУчетаНоменклатуры";
	Обработчик.БлокируемыеОбъекты = "Справочник.ГруппыФинансовогоУчетаНоменклатуры";
	Обработчик.Комментарий = НСтр("ru='Заполняет новый реквизит ""Вид ценности"" в справочнике ""Группы финансового учета наменклатуры"" значением по умолчанию ""Товар"".';uk='Заповнює новий реквізит ""Вид цінності"" у довіднику ""Групи фінансового обліку номенклатури"" значенням по умовчанню ""Товар"".'");

КонецПроцедуры

// Обработчик обновления УТ 3.5.4
// Процедура заполняет новый реквизит ВидЦенности значением по умолчанию
Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ОбновлениеИнформационнойБазыУТ.ЗаполнитьПустойРеквизитЗначениемПоУмолчанию(
		Параметры, 
		"Справочник.ГруппыФинансовогоУчетаНоменклатуры",
		"ВидЦенности",
		Перечисления.ВидыЦенностей.Товары
	);
		
КонецПроцедуры

Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ОбновлениеИнформационнойБазыУТ.ЗаполнитьПустойРеквизитЗначениемПоУмолчаниюЗарегистрироватьДанныеКОбработке(
		Параметры,
		"Справочник.ГруппыФинансовогоУчетаНоменклатуры",
		"ВидЦенности"
	);	
	
КонецПроцедуры


#КонецОбласти

#КонецЕсли

