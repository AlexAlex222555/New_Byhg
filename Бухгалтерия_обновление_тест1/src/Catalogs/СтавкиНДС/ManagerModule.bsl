#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	УчетНДСУП.ПолучитьДанныеВыбораСтавкиНДС(ДанныеВыбора, Параметры, СтандартнаяОбработка);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбновлениеИнформационнойБазы

// Добавляет в список процедуры-обработчики обновления данных ИБ
// для всех поддерживаемых версий библиотеки или конфигурации.
// Вызывается перед началом обновления данных ИБ для построения плана обновления.
//
//  Обработчики - ТаблицаЗначений - описание полей, см. в процедуре
//                ОбновлениеИнформационнойБазы.НоваяТаблицаОбработчиковОбновления.
//
// Пример добавления процедуры-обработчика в список:
//  Обработчик = Обработчики.Добавить();
//  Обработчик.Версия              = "1.1.0.0";
//  Обработчик.Процедура           = "ОбновлениеИБ.ПерейтиНаВерсию_1_1_0_0";
//  Обработчик.МонопольныйРежим    = Ложь;
//
// Параметры:
// 	Обработчики - см. ОбновлениеИнформационнойБазы.НоваяТаблицаОбработчиковОбновления
//
Процедура ОписаниеОбработчиковОбновления(Обработчики) Экспорт

	Обработчик = Обработчики.Добавить();
	Обработчик.Процедура = "Справочники.СтавкиНДС.СоздатьЭлементыПервоначальногоЗаполнения";
	Обработчик.Версия = "3.5.4.300";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("65d193c9-0397-421b-80ec-57fa152d9e0f");
	Обработчик.Комментарий = НСтр("ru='Заполнение справочника Ставки НДС';uk='Заповнення довідника Ставки ПДВ'");
	
	Изменяемые = Новый Массив;
	Изменяемые.Добавить(Метаданные.Справочники.СтавкиНДС.ПолноеИмя());
	Обработчик.ИзменяемыеОбъекты = СтрСоединить(Изменяемые, ",");

КонецПроцедуры

Процедура СоздатьЭлементыПервоначальногоЗаполнения(ПервыйЗапуск = Ложь) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	НачатьТранзакцию();
	
	Попытка
		
		СтавкаБезНДСОбъект = Справочники.СтавкиНДС.БезНДС.ПолучитьОбъект();

        СтавкаБезНДСОбъект.ПеречислениеСтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
        
		СтавкаБезНДСОбъект.Наименование = НСтр("ru='Без НДС';uk='Без ПДВ'",ОбщегоНазначения.КодОсновногоЯзыка()); // строка записывается в ИБ
		СтавкаБезНДСОбъект.Ставка = 0;
		
		СтавкаБезНДСОбъект.ТипыНалогообложенияНДС.Очистить();
		
        ТипНалогообложенияНДС = СтавкаБезНДСОбъект.ТипыНалогообложенияНДС.Добавить();
        ТипНалогообложенияНДС.ТипНалогообложенияНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОсвобожденаОтНДС;
		
		СтавкаБезНДСОбъект.Записать();
        
		СтавкаНеНДСОбъект = Справочники.СтавкиНДС.НеНДС.ПолучитьОбъект();

        СтавкаНеНДСОбъект.ПеречислениеСтавкаНДС = Перечисления.СтавкиНДС.НеНДС;
        
		СтавкаНеНДСОбъект.Наименование = НСтр("ru='Не НДС';uk='Не ПДВ'",ОбщегоНазначения.КодОсновногоЯзыка()); // строка записывается в ИБ
		СтавкаНеНДСОбъект.Ставка = 0;
		
		СтавкаНеНДСОбъект.ТипыНалогообложенияНДС.Очистить();
		
        ТипНалогообложенияНДС = СтавкаНеНДСОбъект.ТипыНалогообложенияНДС.Добавить();
        ТипНалогообложенияНДС.ТипНалогообложенияНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС;
		
		СтавкаНеНДСОбъект.Записать();
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		ВызватьИсключение;
		
	КонецПопытки;
	
	УчетНДСЛокализация.ЗаполнитьСправочникСтавкиНДС();
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
