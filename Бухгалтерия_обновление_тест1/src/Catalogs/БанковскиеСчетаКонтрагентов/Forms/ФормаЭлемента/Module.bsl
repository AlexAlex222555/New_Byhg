#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Объект, ЭтотОбъект);
	
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтаФорма);
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ПриЧтенииСозданииНаСервере();
	КонецЕсли;
	
	// ИнтеграцияС1СДокументооборотом
	ИнтеграцияС1СДокументооборот.ПриСозданииНаСервере(ЭтаФорма);
	// Конец ИнтеграцияС1СДокументооборотом
	
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	ПриЧтенииСозданииНаСервере();
	
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	
	МодификацияКонфигурацииПереопределяемый.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтаФорма);
	
	МодификацияКонфигурацииПереопределяемый.ПослеЗаписиНаСервере(ЭтаФорма, ТекущийОбъект, ПараметрыЗаписи);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ)
	
	Если Объект.РучноеИзменениеРеквизитовБанка Тогда
		ЗаполнитьЗначенияСвойств(Объект, ЭтаФорма, РеквизитыБанка());
	КонецЕсли;
	
	Объект.НаименованиеБанкаМеждународное = НаименованиеБанкаМеждународное;
	
	Объект.НаименованиеБанкаДляРасчетовМеждународное = НаименованиеБанкаДляРасчетовМеждународное;
	
	Если ПустаяСтрока(Объект.Наименование) Тогда
		Объект.Наименование = СформироватьАвтоНаименование();
	КонецЕсли;
	
	// Заполним текст корреспондента.
	Если ИспользоватьТекстКорреспондента Тогда
		Объект.ТекстКорреспондента = ТекстКорреспондента;
	Иначе
		Объект.ТекстКорреспондента = "";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	МодификацияКонфигурацииКлиентПереопределяемый.ПослеЗаписи(ЭтаФорма, ПараметрыЗаписи);
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	МодификацияКонфигурацииПереопределяемый.ПередЗаписьюНаСервере(ЭтаФорма, Отказ, ТекущийОбъект, ПараметрыЗаписи);
	
	// ИнтеграцияС1СДокументооборотом
	ИнтеграцияС1СДокументооборот.ПередЗаписьюНаСервере(ЭтаФорма, ТекущийОбъект, ПараметрыЗаписи);
	// Конец ИнтеграцияС1СДокументооборотом
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура НаименованиеБанкаПриИзменении(Элемент)
	
	СформироватьАвтоНаименование();
	
КонецПроцедуры

&НаКлиенте
Процедура ВладелецПриИзменении(Элемент)
	
	ВладелецПриИзмененииСервер();
	
КонецПроцедуры

&НаСервере
Процедура ВладелецПриИзмененииСервер()
	
	СформироватьАвтоНаименование();
	
КонецПроцедуры

&НаКлиенте
Процедура ИностранныйБанкПриИзменении(Элемент)
	
	Объект.ИностранныйБанк = (ИностранныйБанк = 1);
	
	УстановитьПараметрыРедактированияРеквизитов();
	
	ИностранныйБанкПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ИностранныйБанкПриИзмененииНаСервере()
	
	УправлениеЭлементамиФормы();
	
	НастроитьЗависимыеЭлементыФормыНаСервере();
		
КонецПроцедуры

&НаКлиенте
Процедура НомерСчетаПриИзменении(Элемент)
	
	НомерСчетаПриИзмененииСервер();
	
КонецПроцедуры

&НаСервере
Процедура НомерСчетаПриИзмененииСервер()
	
	Если НЕ Объект.Ссылка.Пустая()
		И НЕ ЗначениеЗаполнено(Объект.Ссылка.НомерСчетаУстаревший)
		И Объект.НомерСчета <> Объект.Ссылка.НомерСчета
		И РегламентированныеДанныеКлиентСервер.НомерБанковскогоСчетаСоответствуетСтандартуIBAN(Объект.НомерСчета)
		И НЕ РегламентированныеДанныеКлиентСервер.НомерБанковскогоСчетаСоответствуетСтандартуIBAN(Объект.Ссылка.НомерСчета) Тогда
		
		Объект.НомерСчетаУстаревший = Объект.Ссылка.НомерСчета;
		
	КонецЕсли;
	
	БанкПоСчету = РаботаСБанками.ПолучитьБанкПоНомеруСчетаIBAN(Объект.НомерСчета);
	Если ЗначениеЗаполнено(БанкПоСчету) Тогда
		Объект.Банк = БанкПоСчету;
		ЗаполнитьРеквизитыБанка();
	КонецЕсли;
	
	СформироватьАвтоНаименование();
	
КонецПроцедуры

&НаКлиенте
Процедура НомерСчетаОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)

	ТекстОшибки = "";
	ОчиститьСообщения();
	Валютный = (Объект.ВалютаДенежныхСредств <> ВалютаРеглУчета);
	
	Если Не ПустаяСтрока(Текст)
		И Не Объект.ИностранныйБанк
		И Не РегламентированныеДанныеКлиентСервер.ПроверитьКорректностьНомераСчета(Текст, Валютный, ТекстОшибки) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,, "НомерСчета", "Объект");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВалютаДенежныхСредствПриИзменении(Элемент)
	
	ВалютныйСчет = (ЗначениеЗаполнено(Объект.ВалютаДенежныхСредств) И Объект.ВалютаДенежныхСредств <> ВалютаРеглУчета);
	УстановитьПараметрыРедактированияРеквизитов();
	ВалютаДенежныхСредствПриИзмененииСервер();
	
КонецПроцедуры

&НаСервере
Процедура ВалютаДенежныхСредствПриИзмененииСервер()
	
	СформироватьАвтоНаименование();
	УправлениеЭлементамиФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользуетсяБанкДляРасчетовПриИзменении(Элемент)
	
	УправлениеЭлементамиФормы();
	//Элементы.СчетВБанкеДляРасчетов.Доступность			   = ИспользуетсяБанкДляРасчетов;
	//Элементы.СВИФТБанкаДляРасчетов.Доступность			   = ИспользуетсяБанкДляРасчетов;
	//Элементы.НаименованиеБанкаДляРасчетов.Доступность	       = ИспользуетсяБанкДляРасчетов;
	//Элементы.АдресБанкаДляРасчетовМеждународный.Доступность  = ИспользуетсяБанкДляРасчетов;
	//Элементы.СтранаБанкаДляРасчетов.Доступность              = ИспользуетсяБанкДляРасчетов;

	Если Не ИспользуетсяБанкДляРасчетов Тогда
		Объект.СчетВБанкеДляРасчетов = Неопределено;
		Для каждого КлючИЗначение Из Новый Структура(РеквизитыБанкаДляРасчетов()) Цикл
			Объект[КлючИЗначение.Ключ] = "";
			ЭтаФорма[КлючИЗначение.Ключ] = "";
		КонецЦикла;
	КонецЕсли;
	
	УстановитьПараметрыРедактированияРеквизитов();
	
	
КонецПроцедуры

&НаКлиенте
Процедура КодБанкаПриИзменении(Элемент)
	
	РеквизитБанкаПриИзменении("КодБанка");
	
КонецПроцедуры

&НаКлиенте
Процедура КодБанкаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если Элемент.Имя = "КодБанка" И Не Объект.РучноеИзменениеРеквизитовБанка Тогда
		
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("Реквизит", Элемент.Имя);
		СтруктураПараметров.Вставить("ТекущаяСтрока", Объект.Банк);
		СтруктураПараметров.Вставить("ПараметрВыборГруппИЭлементов", ИспользованиеГруппИЭлементов.Элементы);
		ОткрытьФорму("Справочник.КлассификаторБанков.Форма.ФормаВыбора", СтруктураПараметров, ЭтаФорма,,,,
			Новый ОписаниеОповещения("ОбработкаВыбораБанкаИзКлассификатора", ЭтотОбъект, Элемент.Имя));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КодБанкаОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ЗначениеЗаполнено(КодБанка) Тогда
		РеквизитБанкаОткрытие("КодБанка");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РучноеИзменениеРеквизитовБанкаПриИзменении(Элемент)
	
	Если Объект.РучноеИзменениеРеквизитовБанка Тогда
		Если Не Объект.Банк.Пустая() Тогда
			ЗаполнитьРеквизитыБанкаПоБанку("Банк", Объект.Банк, Истина);
		КонецЕсли;
		Объект.Банк = "";
	Иначе
		ЗаполнитьРеквизитыБанкаПоКоду("Банк", Объект.КодБанка, Истина);
		Для каждого КлючИЗначение Из Новый Структура(РеквизитыБанка()) Цикл
			Объект[КлючИЗначение.Ключ] = "";
		КонецЦикла;
	КонецЕсли;
	
	УправлениеЭлементамиФормы();
	
	НастроитьЗависимыеЭлементыФормы(Элемент.Имя);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъекта(Команда)
	
	Если Не Объект.Ссылка.Пустая() Тогда
		ОткрытьФорму("Справочник.БанковскиеСчетаКонтрагентов.Форма.РазблокированиеРеквизитов",,,,,, 
			Новый ОписаниеОповещения("Подключаемый_РазрешитьРедактированиеРеквизитовОбъектаЗавершение", ЭтотОбъект), 
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъектаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(Результат) = Тип("Массив") И Результат.Количество() > 0 Тогда
		ЗапретРедактированияРеквизитовОбъектовКлиент.УстановитьДоступностьЭлементовФормы(ЭтаФорма, Результат);
	КонецЕсли;
	
КонецПроцедуры

// ИнтеграцияС1СДокументооборотом
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуИнтеграции(Команда)
	
	ИнтеграцияС1СДокументооборотКлиент.ВыполнитьПодключаемуюКомандуИнтеграции(Команда, ЭтаФорма, Объект);
	
КонецПроцедуры
// Конец ИнтеграцияС1СДокументооборотом

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТекстКорреспондента.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ИспользоватьТекстКорреспондента");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Ложь;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветФона", ЦветаСтиля.FormBackColor);
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.BorderColor);
	
КонецПроцедуры

&НаСервере
Функция ЗаполнитьРеквизитыБанкаПоКоду(ТипБанка, КодБанка = "", ПеренестиЗначенияРеквизитов = Ложь)
	
	НашлиПоКоду   = Ложь;
	ЗаписьОБанке = Неопределено;
	
	Если ТипБанка = "Банк" Тогда
		СтруктураРеквизитов = Новый Структура(РеквизитыБанка());
	Иначе
		СтруктураРеквизитов = Новый Структура(РеквизитыБанкаДляРасчетов());
	КонецЕсли;
	
	Для каждого КлючИЗначение Из СтруктураРеквизитов Цикл
		ЭтаФорма[КлючИЗначение.Ключ] = "";
	КонецЦикла;
	
	Если ЗначениеЗаполнено(КодБанка) Тогда
		
		РаботаСБанками.ПолучитьДанныеКлассификатора(КодБанка,, ЗаписьОБанке);
		
		Если ЗначениеЗаполнено(ЗаписьОБанке) Тогда
			ЗаполнитьРеквизитыБанкаПоБанку(ТипБанка, ЗаписьОБанке, ПеренестиЗначенияРеквизитов);
			Объект[ТипБанка] = ЗаписьОБанке;
			НашлиПоКоду = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Возврат НашлиПоКоду;
	
КонецФункции

&НаСервере
Функция ЗаполнитьРеквизитыБанкаПоБанку(ТипБанка, Банк = "", ПеренестиЗначенияРеквизитов = Ложь)
	
	Если ТипБанка = "Банк" Тогда
		
		СтруктураРеквизитов = Новый Структура;
		ИменаРеквизитов = СтрРазделить(РеквизитыБанка(), ",", Ложь);
		Для каждого ИмяРеквизита Из ИменаРеквизитов Цикл
			СтруктураРеквизитов.Вставить(ИмяРеквизита, СтрЗаменить(ИмяРеквизита, "Банка", ""));
		КонецЦикла;
		СтруктураРеквизитов.Вставить("КодБанка", "Код");
		СтруктураРеквизитов.Вставить("СВИФТБанка", "СВИФТБИК");
		СтруктураРеквизитов.Вставить("НаименованиеБанкаМеждународное", "МеждународноеНаименование");
		
		РеквизитыБанка = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Банк, СтруктураРеквизитов);
		
		Исключения = "";
		Если Не ЗначениеЗаполнено(РеквизитыБанка.НаименованиеБанкаМеждународное)
			Или ЗначениеЗаполнено(НаименованиеБанкаМеждународное) Тогда
			Исключения = "НаименованиеБанкаМеждународное";
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(ЭтаФорма, РеквизитыБанка,, Исключения);
		
		Если ПеренестиЗначенияРеквизитов Тогда
			ЗаполнитьЗначенияСвойств(Объект, РеквизитыБанка);
			Объект.Банк = Неопределено;
		КонецЕсли;
		
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#Область Прочее

&НаСервере
Процедура ПриЧтенииСозданииНаСервере()
	
	НастройкиПолейФормы = Справочники.БанковскиеСчетаКонтрагентов.НастройкиПолейФормы();
	ЗначениеВРеквизитФормы(НастройкиПолейФормы, "НастройкиПолей");
	ЗависимостиПолейФормы = ДенежныеСредстваСервер.ЗависимостиПолейФормы(НастройкиПолейФормы);
	ЗначениеВРеквизитФормы(ЗависимостиПолейФормы, "ЗависимостиПолей");
	
	ИспользоватьНесколькоВалют = ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоВалют");
	
	ВалютаРеглУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	ВалютныйСчет = (ЗначениеЗаполнено(Объект.ВалютаДенежныхСредств) И Объект.ВалютаДенежныхСредств <> ВалютаРеглУчета);
	
	ИностранныйБанк = ?(Объект.ИностранныйБанк, 1, 0);
	
	ЗаполнитьСписокВидовСчета();
	
	ЗаполнитьРеквизитыБанка();
	СформироватьАвтоНаименование();
	
	УправлениеЭлементамиФормы();
	НастроитьЗависимыеЭлементыФормыНаСервере();
	
	ИспользоватьТекстКорреспондента = ЗначениеЗаполнено(Объект.ТекстКорреспондента);
	Если ИспользоватьТекстКорреспондента Тогда
		ТекстКорреспондента = Объект.ТекстКорреспондента;
	Иначе
		ЗаполнитьТекстКорреспондента();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УправлениеЭлементамиФормы()
	
	Элементы.ИспользуетсяБанкДляРасчетов.Доступность = ВалютныйСчет;
	
	Элементы.ИностранныйБанк.Видимость = ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоВалют");
	
	Элементы.НаименованиеБанка.Доступность = Объект.РучноеИзменениеРеквизитовБанка;
	Элементы.ГородБанка.Доступность        = Объект.РучноеИзменениеРеквизитовБанка;

	Элементы.СчетВБанкеДляРасчетов.Доступность         = ВалютныйСчет И ИспользуетсяБанкДляРасчетов;
	Элементы.СВИФТБанкаДляРасчетов.Доступность         = ВалютныйСчет И ИспользуетсяБанкДляРасчетов;
	Элементы.НаименованиеБанкаДляРасчетов.Доступность  = ВалютныйСчет И ИспользуетсяБанкДляРасчетов;
	Элементы.НаименованиеБанкаДляРасчетов.Видимость    = ВалютныйСчет И Не ИностранныйБанк;
	Элементы.НаименованиеБанкаДляРасчетовМеждународное.Доступность  = ВалютныйСчет И ИспользуетсяБанкДляРасчетов;
	Элементы.АдресБанкаДляРасчетовМеждународный.Доступность  		= ВалютныйСчет И ИспользуетсяБанкДляРасчетов;
	Элементы.СтранаБанкаДляРасчетов.Доступность              		= ВалютныйСчет И ИспользуетсяБанкДляРасчетов;
	
	Если Объект.ИностранныйБанк Тогда
		Элементы.Переместить(Элементы.СВИФТБанка, Элементы.СВИФТБанка.Родитель, Элементы.КодБанка);
	Иначе
		Элементы.Переместить(Элементы.КодБанка, Элементы.КодБанка.Родитель, Элементы.СВИФТБанка);
	КонецЕсли;

	Элементы.ИспользуетсяБанкДляРасчетов.Видимость = ВалютныйСчет;
	Элементы.ГруппаБанкДляРасчетов.Видимость       = ВалютныйСчет;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокВидовСчета()
	
	СписокВидСчета = Элементы.ВидСчета.СписокВыбора;
	СписокВидСчета.Очистить();
	  
	ЯзыкИБ = МультиязычностьУкрПовтИсп.КодЯзыкаИнформационнойБазы(); 

	СписокВидСчета.Добавить(НСтр("ru='Текущий';uk='Поточний'",ЯзыкИБ));
	СписокВидСчета.Добавить(НСтр("ru='Депозитный';uk='Депозитний'",ЯзыкИБ));
	СписокВидСчета.Добавить(НСтр("ru='Инвестиционный';uk='Інвестиційний'",ЯзыкИБ));
	
КонецПроцедуры


&НаСервере
Процедура ЗаполнитьРеквизитыБанка()
	
	КодБанка		  = "";
	НаименованиеБанка = "";
	ГородБанка		  = "";
	
	НаименованиеБанкаМеждународное = Объект.НаименованиеБанкаМеждународное;
	НаименованиеБанкаДляРасчетовМеждународное = Объект.НаименованиеБанкаДляРасчетовМеждународное;
	
	Если Объект.РучноеИзменениеРеквизитовБанка Тогда
		ЗаполнитьЗначенияСвойств(ЭтаФорма, Объект, РеквизитыБанка());
	Иначе
		Если Не Объект.Банк.Пустая() Тогда
			ЗаполнитьРеквизитыБанкаПоБанку("Банк", Объект.Банк, Ложь);
		КонецЕсли;
	КонецЕсли;
	
	ЗаполнитьСписокВидовСчета();
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Объект.ВидСчета = Элементы.ВидСчета.СписокВыбора[0];
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Если ЗначениеЗаполнено(Объект.СВИФТБанкаДляРасчетов) Тогда
			ИспользуетсяБанкДляРасчетов = Истина;
		Иначе
			ИспользуетсяБанкДляРасчетов = Ложь;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция СформироватьАвтоНаименование()
	
	Элементы.Наименование.СписокВыбора.Очистить();
	
	Если Объект.РучноеИзменениеРеквизитовБанка Тогда
		
		СтрокаНаименования = Прав(СокрЛП(Объект.НомерСчета), 4) +
			?(ЗначениеЗаполнено(НаименованиеБанка), " в " +
			Строка(НаименованиеБанка), "") + " (" + Строка(Объект.ВалютаДенежныхСредств) + ")";
		СтрокаНаименования = Лев(СтрокаНаименования, 150);
		Элементы.Наименование.СписокВыбора.Добавить(СтрокаНаименования);
		
		СтрокаНаименования = ?(ЗначениеЗаполнено(НаименованиеБанка), Строка(НаименованиеБанка), "") +
			" (" + Строка(Объект.ВалютаДенежныхСредств) + ")";
		СтрокаНаименования = Лев(СтрокаНаименования, 150);
		Элементы.Наименование.СписокВыбора.Добавить(СтрокаНаименования);
	Иначе
		
		СтрокаНаименования = Прав(СокрЛП(Объект.НомерСчета), 4) +
			?(ЗначениеЗаполнено(Объект.Банк), " в " + Строка(Объект.Банк), "") +
			" (" + Строка(Объект.ВалютаДенежныхСредств) + ")";
		СтрокаНаименования = Лев(СтрокаНаименования, 150);
		Элементы.Наименование.СписокВыбора.Добавить(СтрокаНаименования);
		
		СтрокаНаименования = ?(ЗначениеЗаполнено(Объект.Банк), Строка(Объект.Банк), "") +
			" (" + Строка(Объект.ВалютаДенежныхСредств) + ")";
		СтрокаНаименования = Лев(СтрокаНаименования, 150);
		Элементы.Наименование.СписокВыбора.Добавить(СтрокаНаименования);
	КонецЕсли;
	
	Возврат СтрокаНаименования;
	
КонецФункции

&НаКлиенте
Процедура РеквизитБанкаОткрытие(ИмяЭлемента)
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Реквизит", ИмяЭлемента);
	
	ЗначенияПолей = Новый Структура;
	
	Если ИмяЭлемента = "КодБанка" Тогда
		
		СтруктураПараметров.Вставить("РучноеИзменение", Объект.РучноеИзменениеРеквизитовБанка);
		
		Если Объект.РучноеИзменениеРеквизитовБанка Тогда
			
			СтруктураРеквизитов = Новый Структура(РеквизитыБанка());
			ЗаполнитьЗначенияСвойств(СтруктураРеквизитов, ЭтаФорма);
			
			ЗначенияПолей = Новый Структура;
			Для каждого КлючИЗначение Из СтруктураРеквизитов Цикл
				ЗначенияПолей.Вставить(СтрЗаменить(КлючИЗначение.Ключ, "Банка", ""), КлючИЗначение.Значение);
			КонецЦикла;
		Иначе
			СтруктураПараметров.Вставить("Банк", Объект.Банк);
		КонецЕсли;
	КонецЕсли;
	
	СтруктураПараметров.Вставить("ЗначенияПолей", ЗначенияПолей);
	ОткрытьФорму("Справочник.БанковскиеСчетаОрганизаций.Форма.РеквизитыБанка", СтруктураПараметров, ЭтаФорма,,,,
		Новый ОписаниеОповещения("ОбработкаРедактированияРеквизитовБанка", ЭтотОбъект, ИмяЭлемента));
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаРедактированияРеквизитовБанка(Результат, ДополнительныеПараметры) Экспорт
	
	Если ТолькоПросмотр Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат <> Неопределено Тогда
		
		Если ДополнительныеПараметры = "КодБанка" Тогда
			
			Объект.РучноеИзменениеРеквизитовБанка = Результат.РучноеИзменение;
			Если Результат.РучноеИзменение Тогда
				
				Объект.Банк = Неопределено;
				
				Для каждого КлючИЗначение Из Новый Структура(РеквизитыБанка()) Цикл
					Результат.ЗначенияПолей.Свойство(СтрЗаменить(КлючИЗначение.Ключ, "Банка", ""), Объект[КлючИЗначение.Ключ]);
					Результат.ЗначенияПолей.Свойство(СтрЗаменить(КлючИЗначение.Ключ, "Банка", ""), ЭтаФорма[КлючИЗначение.Ключ]);
					Результат.ЗначенияПолей.Свойство("СВИФТБИК", Объект.СВИФТБанка);
					Результат.ЗначенияПолей.Свойство("СВИФТБИК", СВИФТБанка);
				КонецЦикла;
			Иначе
				Объект.Банк = Результат.Банк;
				Для каждого КлючИЗначение Из Новый Структура(РеквизитыБанка()) Цикл
					Объект[КлючИЗначение.Ключ] = "";
				КонецЦикла;
				ЗаполнитьРеквизитыБанкаПоБанку("Банк", Объект.Банк, Ложь);
			КонецЕсли;
		
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РеквизитБанкаПриИзменении(ИмяЭлемента)
	
	Если ИмяЭлемента = "КодБанка" Тогда
		Если Не Объект.РучноеИзменениеРеквизитовБанка И Не Объект.ИностранныйБанк Тогда
			Если Не ЗаполнитьРеквизитыБанкаПоКоду("Банк", КодБанка, Истина) И ЗначениеЗаполнено(КодБанка) Тогда
				
				СписокВариантовОтветовНаВопрос = Новый СписокЗначений;
				СписокВариантовОтветовНаВопрос.Добавить("ВыбратьИзСписка",  НСтр("ru='Выбрать из списка';uk='Вибрати зі списку'"));
				СписокВариантовОтветовНаВопрос.Добавить("ПродолжитьВвод",   НСтр("ru='Продолжить ввод';uk='Продовжити введення'"));
				СписокВариантовОтветовНаВопрос.Добавить("ОтменитьВвод",    НСтр("ru='Отменить ввод';uk='Скасувати введення'"));
				
				ТекстВопроса = НСтр("ru='Банк с МФО %Значение% не найден в классификаторе банков.';uk='Банк з МФО %Значение% не найдено у класифікаторі банків.'");
				ТекстВопроса = СтрЗаменить(ТекстВопроса,"%Значение%", КодБанка);
				
				Ответ = Неопределено;
				
				ПоказатьВопрос(
					Новый ОписаниеОповещения("РеквизитБанкаПриИзмененииПослеВопроса",
					ЭтотОбъект,
					Новый Структура("ИмяЭлемента, СписокВариантовОтветовНаВопрос, ТекстВопроса",
						ИмяЭлемента, СписокВариантовОтветовНаВопрос, ТекстВопроса)),
					ТекстВопроса,
					СписокВариантовОтветовНаВопрос,
					0,,
					НСтр("ru='Выбор банка из классификатора';uk='Вибір банку з класифікатора'"));
				Возврат;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РеквизитБанкаПриИзмененииПослеВопроса(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	ИмяЭлемента = ДополнительныеПараметры.ИмяЭлемента;
	СписокВариантовОтветовНаВопрос = ДополнительныеПараметры.СписокВариантовОтветовНаВопрос;
	ТекстВопроса = ДополнительныеПараметры.ТекстВопроса;
	
	Ответ = РезультатВопроса;
	
	Если Ответ = "ОтменитьВвод" Тогда
		КодБанка = "";
	ИначеЕсли Ответ = "ПродолжитьВвод" Тогда
		Объект.РучноеИзменениеРеквизитовБанка = Истина;
		Объект.КодБанка = КодБанка;
	ИначеЕсли Ответ = "ВыбратьИзСписка" Тогда
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("Реквизит", "КодБанка");
		ОткрытьФорму("Справочник.КлассификаторБанков.Форма.ФормаВыбора", СтруктураПараметров, ЭтаФорма,,,,
			Новый ОписаниеОповещения("ОбработкаВыбораБанкаИзКлассификатора", ЭтотОбъект, "КодБанка"));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПараметрыРедактированияРеквизитов()
	
	Если Объект.ИностранныйБанк Тогда
		Объект.РучноеИзменениеРеквизитовБанка = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбораБанкаИзКлассификатора(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		
		Если ДополнительныеПараметры = "КодБанка" Тогда
			Для каждого КлючИЗначение Из Новый Структура(РеквизитыБанка()) Цикл
				Объект[КлючИЗначение.Ключ] = "";
			КонецЦикла;
			Объект.Банк = Результат;
			ЗаполнитьРеквизитыБанкаПоБанку("Банк", Результат, Ложь);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция РеквизитыБанка()
	
	Возврат "КодБанка, СВИФТБанка, НаименованиеБанка, НаименованиеБанкаМеждународное, СтранаБанка, ГородБанка,
		|ГородБанкаМеждународный, АдресБанка, АдресБанкаМеждународный, ТелефоныБанка";
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция РеквизитыБанкаДляРасчетов()
	
	Возврат "СВИФТБанкаДляРасчетов, НаименованиеБанкаДляРасчетов, НаименованиеБанкаДляРасчетовМеждународное,
		|СтранаБанкаДляРасчетов, АдресБанкаДляРасчетов, АдресБанкаДляРасчетовМеждународный, ТелефоныБанкаДляРасчетов";
	
КонецФункции

&НаКлиенте
Процедура НастроитьЗависимыеЭлементыФормы(ИзмененныйРеквизит = "")
	
	ДенежныеСредстваКлиентСервер.НастроитьЭлементыФормы(ЭтаФорма, ИзмененныйРеквизит, РеквизитыФормы(ЭтаФорма));
	
КонецПроцедуры

&НаСервере
Процедура НастроитьЗависимыеЭлементыФормыНаСервере(ИзмененныйРеквизит = "")
	
	ДенежныеСредстваКлиентСервер.НастроитьЭлементыФормы(ЭтаФорма, ИзмененныйРеквизит, РеквизитыФормы(ЭтаФорма));
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция РеквизитыФормы(Форма)
	
	РеквизитыФормы = Новый Структура;
	РеквизитыФормы.Вставить("ИспользоватьНесколькоВалют");
	РеквизитыФормы.Вставить("ИспользуетсяБанкДляРасчетов");
	РеквизитыФормы.Вставить("ВалютныйСчет");
	РеквизитыФормы.Вставить("ИспользоватьТекстКорреспондента");
	РеквизитыФормы.Вставить("СчетФизЛица");
	РеквизитыФормы.Вставить("КонтрагентФизЛицо");
	
	ЗаполнитьЗначенияСвойств(РеквизитыФормы, Форма);
	
	Возврат РеквизитыФормы;
	
КонецФункции

#КонецОбласти


//++ Локализация

#Область Локализация_ОбработчикиСобытийЭлементовФормы


&НаКлиенте
Процедура ИспользоватьТекстКорреспондентаПриИзменении(Элемент)
	
	НастроитьЗависимыеЭлементыФормы(Элемент.Имя);
	
КонецПроцедуры

#КонецОбласти
&НаСервере
Процедура ЗаполнитьТекстКорреспондента()
	
	Если ТипЗнч(Объект.Владелец) = Тип("СправочникСсылка.Контрагенты") Тогда
		Запрос = Новый Запрос("
		|ВЫБРАТЬ
		|	ДанныеСправочника.НаименованиеПолное КАК НаименованиеПолное
		|ИЗ
		|	Справочник.Контрагенты КАК ДанныеСправочника
		|ГДЕ
		|	ДанныеСправочника.Ссылка = &Ссылка
		|");
	ИначеЕсли ТипЗнч(Объект.Владелец) = Тип("СправочникСсылка.ФизическиеЛица") Тогда
		Запрос = Новый Запрос("
		|ВЫБРАТЬ
		|	ДанныеСправочника.Наименование КАК НаименованиеПолное
		|ИЗ
		|	Справочник.ФизическиеЛица КАК ДанныеСправочника
		|ГДЕ
		|	ДанныеСправочника.Ссылка = &Ссылка
		|");
	Иначе
		Запрос = Неопределено;
	КонецЕсли;
	
	Если Запрос <> Неопределено Тогда
	
		Запрос.УстановитьПараметр("Ссылка", Объект.Владелец);
		РезультатЗапроса = Запрос.Выполнить();
		Выборка = РезультатЗапроса.Выбрать();
		Если Выборка.Следующий() Тогда
			ТекстКорреспондента = СокрЛП(Выборка.НаименованиеПолное);
		КонецЕсли;
		
		
	КонецЕсли;

КонецПроцедуры
//-- Локализация
