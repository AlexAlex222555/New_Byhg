#Область ОписаниеПеременных

&НаКлиенте
Перем КэшированныеЗначения; //используется механизмом обработки изменения реквизитов ТЧ

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	
	ПараметрыВыбораСтатейИАналитик = Справочники.ПравилаРаспределенияРасходов.ПараметрыВыбораСтатейИАналитик(
		Объект.НазначениеПравила);
	ДоходыИРасходыСервер.ПриСозданииНаСервере(ЭтотОбъект, ПараметрыВыбораСтатейИАналитик);
	
	//++ НЕ УТ
	ПараметрыНастройки = Справочники.ПравилаРаспределенияРасходов.ПараметрыНастройкиСчетовУчета();
	НастройкаСчетовУчета.ПриСозданииНаСервере(ЭтотОбъект, ПараметрыНастройки);
	//-- НЕ УТ
	
	Если Объект.Ссылка.Пустая() Тогда
		ИнициализироватьФорму();
	КонецЕсли;
	
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ИнициализироватьФорму();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Объект.БазаРаспределенияПоПодразделениям = Неопределено;
	Объект.ПодразделенияУказаныВручную = Ложь;
	
	Если СпособРаспределенияПоПодразделениям = "ПоПоказателю" Тогда
		Объект.БазаРаспределенияПоПодразделениям = 
			ЗначениеРеквизитаОбъекта(Объект.Показатель, "БазаРаспределения");
	ИначеЕсли СпособРаспределенияПоПодразделениям = "Вручную" Тогда
		Объект.ПодразделенияУказаныВручную = Истина;
	ИначеЕсли ЗначениеЗаполнено(СпособРаспределенияПоПодразделениям) Тогда
		
		База = ПредопределенноеЗначение("Перечисление.ТипыБазыРаспределенияРасходов." + СпособРаспределенияПоПодразделениям);
		Объект.БазаРаспределенияПоПодразделениям = База;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	//++ НЕ УТ
	НастройкаСчетовУчета.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	//-- НЕ УТ
	
	РеквизитыОтборов = Новый Массив;
	РеквизитыОтборов.Добавить(Новый Структура("ОтборПоГруппамПродукции", "ГруппаПродукции"));
	РеквизитыОтборов.Добавить(Новый Структура("ОтборПоМатериалам", "Материал"));
	РеквизитыОтборов.Добавить(Новый Структура("ОтборПоВидамРабот", "ВидРабот"));
	РеквизитыОтборов.Добавить(Новый Структура("ОтборПоПодразделениям", "Подразделение"));
	РеквизитыОтборов.Добавить(Новый Структура("ОтборПоПродукции", "Продукция"));
	
	Для Каждого РеквизитСОтбором Из РеквизитыОтборов Цикл
		
		Для Каждого КлючИЗначение Из РеквизитСОтбором Цикл
			
			ТекущийОбъект[КлючИЗначение.Ключ].Очистить();
			Для Каждого Элемент Из ЭтаФорма[КлючИЗначение.Ключ] Цикл 
				
				НоваяСтрока = ТекущийОбъект[КлючИЗначение.Ключ].Добавить();
				НоваяСтрока[КлючИЗначение.Значение] = Элемент.Значение;
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЦикла;
		
	МодификацияКонфигурацииПереопределяемый.ПередЗаписьюНаСервере(ЭтаФорма, Отказ, ТекущийОбъект, ПараметрыЗаписи);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	СобытияФормКлиент.ОбработкаОповещения(ЭтотОбъект, ИмяСобытия, Параметр, Источник);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ДоходыИРасходыСервер.ПослеЗаписиНаСервере(ЭтотОбъект);
	//++ НЕ УТ
	НастройкаСчетовУчета.ПослеЗаписиНаСервере(ЭтотОбъект);
	//-- НЕ УТ
	
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийПравилаРаспределения

&НаКлиенте
Процедура РаспределятьПоПартиямПриИзменении(Элемент)
	
	Если Не Объект.РаспределятьПоПартиям Тогда
		УточнитьИзменениеРеквизита("РаспределятьПоПартиям");
	Иначе
		ОбработатьИзменениеРаспределятьПоПартиям();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УточнятьПартииВДокументеПриИзменении(Элемент)
	
	УточнитьИзменениеРеквизита("УточнятьПартииВДокументе")
	
КонецПроцедуры

&НаКлиенте
Процедура РаспределятьНаСтатьиПриИзменении(Элемент)
	
	Если Не Объект.РаспределятьНаСтатьи Тогда
		УточнитьИзменениеРеквизита("РаспределятьНаСтатьи");
	Иначе
		ОбработатьИзменениеРаспределятьНаСтатьи();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДоляСтоимостиНаПроизводствоПриИзменении(Элемент)
	
	НастроитьОформлениеПолей(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура НаправлениеРаспределенияПриИзменении(Элемент)
	
	ОбработатьИзменениеНаправленияРаспределения();
	
КонецПроцедуры

&НаКлиенте
Процедура СпособРаспределенияПоПодразделениямПриИзменении(Элемент)
	
	ОбработатьИзменениеСпособаРаспределения();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьЕдинуюБазуПриИзменении(Элемент)
	
	ОбработатьИзменениеИспользоватьРаспределениеПоПодразделениям();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьРазныеБазыПриИзменении(Элемент)
	
	ОбработатьИзменениеИспользоватьРаспределениеПоПодразделениям();
	
КонецПроцедуры

&НаКлиенте
Процедура БазаРаспределенияПоПартиямПриИзменении(Элемент)
	
	ОбработатьИзменениеБазаРаспределенияПоПартиям();
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеПравилаПоПартиямОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "ИзменитьОтбор" Тогда
		
		ПараметрыОтбора = Новый Структура();
		ДопПараметрОтбора = "";
		
		ГруппаБазы = ГруппаПоБазеРаспределения(Объект.БазаРаспределенияПоПартиям);
		Если ГруппаБазы = "Материалы" Тогда
			
			ПараметрыОтбора.Вставить("МассивМатериалов", ОтборПоМатериалам.ВыгрузитьЗначения());
			ДопПараметрОтбора = "ОтборПоМатериалам";
			
		ИначеЕсли ГруппаБазы = "Трудозатраты" Тогда
			
			ПараметрыОтбора.Вставить("МассивВидовРабот", ОтборПоВидамРабот.ВыгрузитьЗначения());
			ДопПараметрОтбора = "ОтборПоВидамРабот";
			
		ИначеЕсли ГруппаБазы = "Продукция" Тогда
			
			ПараметрыОтбора.Вставить("МассивПродукции", ОтборПоПродукции.ВыгрузитьЗначения());
			ДопПараметрОтбора = "ОтборПоПродукции";
			
		КонецЕсли;
		
		ОткрытьФорму("Справочник.ПравилаРаспределенияРасходов.Форма.ФормаОтбора",
				ПараметрыОтбора,
				ЭтаФорма,,,, 
				Новый ОписаниеОповещения("ЗавершитьПодборОтборов", ЭтотОбъект, ДопПараметрОтбора), 
				РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеОтбораПоГруппамПродукцииОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "ИзменитьОтбор" Тогда
		
		ОткрытьФорму("Справочник.ПравилаРаспределенияРасходов.Форма.ФормаОтбора",
				Новый Структура("МассивГруппПродукции", ОтборПоГруппамПродукции.ВыгрузитьЗначения()),
				ЭтаФорма,,,, 
				Новый ОписаниеОповещения("ЗавершитьПодборОтборов", ЭтотОбъект, "ОтборПоГруппамПродукции"), 
				РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);	
				
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеУказанныхПодразделенийОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыОтбора = Новый Структура("МассивПодразделений", ОтборПоПодразделениям.ВыгрузитьЗначения());
	ДопПараметрОтбора = "ОтборПоПодразделениям";

	ОткрытьФорму("Справочник.ПравилаРаспределенияРасходов.Форма.ФормаОтбора",
			ПараметрыОтбора,
			ЭтаФорма,,,, 
			Новый ОписаниеОповещения("ЗавершитьПодборОтборов", ЭтотОбъект, ДопПараметрОтбора), 
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
			
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПодразделения

&НаКлиенте
Процедура ПодразделенияПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если Не ОтменаРедактирования Тогда
		ОбновитьДолиСтоимости(ЭтаФорма);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПодразделенияПослеУдаления(Элемент)
	
	ОбновитьДолиСтоимости(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписание

&НаКлиенте
Процедура СписаниеСтатьяРасходовНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ДоходыИРасходыКлиент.НачалоВыбораСтатьи(ЭтотОбъект, Элемент, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура СписаниеСтатьяРасходовПриИзменении(Элемент)
	
	ДоходыИРасходыКлиентСервер.СтатьяПриИзменении(ЭтотОбъект, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура СписаниеВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	//++ НЕ УТ	
	Если Поле = Элементы.СписаниеПредставлениеОтраженияОперации Тогда
		НастройкаСчетовУчетаКлиент.ПриНажатии(ЭтотОбъект, Поле, СтандартнаяОбработка);
	КонецЕсли;
	//-- НЕ УТ	
	
КонецПроцедуры

&НаКлиенте
Процедура СписаниеПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	ТекущиеДанные = Элементы.Списание.ТекущиеДанные;
	ДоходыИРасходыКлиентСервер.ПриДобавленииСтрокиВТаблицу(ЭтотОбъект, ТекущиеДанные, "Объект.Списание");
	
КонецПроцедуры

&НаКлиенте
Процедура СписаниеПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если Не ОтменаРедактирования Тогда
		ОбновитьДолиСтоимости(ЭтаФорма);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписаниеПослеУдаления(Элемент)
	
	ОбновитьДолиСтоимости(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура СписаниеАналитикаРасходовНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ДоходыИРасходыКлиент.НачалоВыбораАналитикиРасходов(ЭтотОбъект, Элемент, СтандартнаяОбработка);

КонецПроцедуры

&НаКлиенте
Процедура СписаниеАналитикаРасходовАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	ДоходыИРасходыКлиент.АвтоПодборАналитикиРасходов(ЭтотОбъект, Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка);

КонецПроцедуры

&НаКлиенте
Процедура СписаниеАналитикаРасходовОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	ДоходыИРасходыКлиент.ОкончаниеВводаТекстаАналитикиРасходов(ЭтотОбъект, Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъекта(Команда)
	
	ОбщегоНазначенияУТКлиент.РазрешитьРедактированиеРеквизитовОбъекта(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Подбор

&НаКлиенте
Процедура ЗавершитьПодборОтборов(Результат, ДополнительныеПараметры) Экспорт
	
	РезультатОтбора = Результат;
	Если ТипЗнч(РезультатОтбора) = Тип("Массив") Тогда
		Если ДополнительныеПараметры = "ОтборПоГруппамПродукции" Тогда
			
			Модифицированность = Истина;
			ОтборПоГруппамПродукции.ЗагрузитьЗначения(РезультатОтбора);
			ОбработатьИзмененияОтбораПоГруппамПродукции(ЭтаФорма);
			
		ИначеЕсли ДополнительныеПараметры = "ОтборПоМатериалам" Тогда
			
			ОтборПоМатериалам.ЗагрузитьЗначения(РезультатОтбора);
			Модифицированность = Истина;
			
			ОбработатьИзмененияОтбораПоУказаннымПозициям(
				ЭтаФорма);
			
		ИначеЕсли ДополнительныеПараметры = "ОтборПоВидамРабот" Тогда
			
			ОтборПоВидамРабот.ЗагрузитьЗначения(РезультатОтбора);
			Модифицированность = Истина;
			
			ОбработатьИзмененияОтбораПоУказаннымПозициям(
				ЭтаФорма);
				
		ИначеЕсли ДополнительныеПараметры = "ОтборПоПродукции" Тогда
			
			ОтборПоПродукции.ЗагрузитьЗначения(РезультатОтбора);
			Модифицированность = Истина;
			
			ОбработатьИзмененияОтбораПоУказаннымПозициям(
				ЭтаФорма);
			
		ИначеЕсли ДополнительныеПараметры = "ОтборПоПодразделениям" Тогда
			
			Модифицированность = Истина;
			ОтборПоПодразделениям.ЗагрузитьЗначения(РезультатОтбора);
			УточнитьИзменениеРеквизита("ОтборПоПодразделениям");
			
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиИзмененийРеквизитов

&НаКлиенте
Процедура ОбработатьИзменениеРаспределятьПоПартиям()
	
	Если Не Объект.РаспределятьПоПартиям Тогда
		ОчиститьЗависимыеРеквизиты("РаспределятьПоПартиям");
	Иначе
		НастроитьОформлениеПолей(ЭтаФорма);
	КонецЕсли;
	
	УстановитьДоступностьЭлементов(ЭтаФорма, "РаспределятьПоПартиям");
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьИзменениеУточнятьПартииВДокументе()
	
	ОчиститьЗависимыеРеквизиты("УточнятьПартииВДокументе");
	
	УстановитьДоступностьЭлементов(ЭтаФорма, "УточнятьПартииВДокументе");
	УстановитьДоступностьДолиСтоимостиНаПроизводство(ЭтаФорма);
	НастроитьОформлениеПолей(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьИзменениеИспользоватьРаспределениеПоПодразделениям()

	Объект.РаспределятьПоПодразделениям = Не ПустаяСтрока(ИспользоватьРаспределениеПоПодразделениям);
	Если Не Объект.РаспределятьПоПодразделениям Тогда
		ОчиститьЗависимыеРеквизиты("ИспользоватьРаспределениеПоПодразделениям");
	КонецЕсли;
	
	НастроитьОформлениеПолей(ЭтаФорма);
	УстановитьДоступностьЭлементов(ЭтаФорма, "ИспользоватьРаспределениеПоПодразделениям");
		
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьИзменениеРаспределятьНаСтатьи()
	
	Если Не Объект.РаспределятьНаСтатьи Тогда
		ОчиститьЗависимыеРеквизиты("РаспределятьНаСтатьи");
	КонецЕсли;
	
	УстановитьДоступностьЭлементов(ЭтаФорма, "РаспределятьНаСтатьи");
	УстановитьДоступностьДолиСтоимостиНаПроизводство(ЭтаФорма);
	НастроитьОформлениеПолей(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьИзменениеНаправленияРаспределения()
	
	ОчиститьЗависимыеРеквизиты("НаправлениеРаспределения");
	
	Если (Объект.НаправлениеРаспределения = ПредопределенноеЗначение("Перечисление.НаправлениеРаспределенияПоПодразделениям.Текущее")
		Или Объект.НаправлениеРаспределения = ПредопределенноеЗначение("Перечисление.НаправлениеРаспределенияПоПодразделениям.Вышестоящее"))
		И Объект.РаспределятьПоПодразделениям Тогда
		
		ИспользоватьРаспределениеПоПодразделениям = "";
		ОбработатьИзменениеИспользоватьРаспределениеПоПодразделениям();
		
	КонецЕсли;
	
	УстановитьДоступностьЭлементов(ЭтаФорма, "НаправлениеРаспределения");
	УстановитьВидимостьЭлементов(ЭтаФорма, "НаправлениеРаспределения");
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьИзменениеБазаРаспределенияПоПартиям()
	
	Если (ОтборПоМатериалам.Количество()
			И Не ГруппаПоБазеРаспределения(Объект.БазаРаспределенияПоПартиям) = "Материалы") 
		Или (ОтборПоВидамРабот.Количество()
			И Не ГруппаПоБазеРаспределения(Объект.БазаРаспределенияПоПартиям) = "Трудозатраты")
		Или (ОтборПоПродукции.Количество()
			И Не ГруппаПоБазеРаспределения(Объект.БазаРаспределенияПоПартиям) = "Продукция") Тогда
		ОчиститьЗависимыеРеквизиты("БазаРаспределенияПоПартиям");
	Иначе
		ОбработатьИзмененияОтбораПоУказаннымПозициям(ЭтаФорма);
	КонецЕсли;
	
	НастроитьОформлениеПолей(ЭтаФорма);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбработатьИзмененияОтбораПоУказаннымПозициям(Форма)
	
	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	
	ГруппаБазы = ГруппаПоБазеРаспределения(Объект.БазаРаспределенияПоПартиям);
	ИмяРеквизита = "";
	Если ГруппаБазы = "Материалы" Тогда
		
		ПредставлениеОтбора = СформироватьПредставлениеОтбора(Форма.ОтборПоМатериалам.ВыгрузитьЗначения());
		ИмяРеквизита = "ОтборПоМатериалам";
		
	ИначеЕсли ГруппаБазы = "Трудозатраты" Тогда

		ПредставлениеОтбора = СформироватьПредставлениеОтбора(Форма.ОтборПоВидамРабот.ВыгрузитьЗначения());
		ИмяРеквизита = "ОтборПоВидамРабот";
		
	ИначеЕсли ГруппаБазы = "Продукция" Тогда
		
		ПредставлениеОтбора = СформироватьПредставлениеОтбора(Форма.ОтборПоПродукции.ВыгрузитьЗначения());
		ИмяРеквизита = "ОтборПоПродукции";
		
	КонецЕсли;
	
	Элементы.ПредставлениеОтбораПоУказаннымПозициям.Заголовок = ПредставлениеОтбора;
	НастроитьЗаголовкиПолей(Форма, ИмяРеквизита);
		
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбработатьИзмененияОтбораПоГруппамПродукции(Форма)
	
	Элементы = Форма.Элементы;
		
	Элементы.ПредставлениеОтбораПоГруппамПродукции.Заголовок = СформироватьПредставлениеОтбора(Форма.ОтборПоГруппамПродукции.ВыгрузитьЗначения(), 
		НСтр("ru='группа, группы, групп';uk='група, групи, груп'"), 
		НСтр("ru='Указать группы (виды) продукции';uk='Вказати групи (види) продукції'"));
		
	НастроитьЗаголовкиПолей(Форма, "ОтборПоГруппамПродукции");
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбработатьИзмененияОтбораПоПодразделениям(Форма)
	
	Элементы = Форма.Элементы;
			
	Элементы.ПредставлениеУказанныхПодразделений.Заголовок = 
		СформироватьПредставлениеОтбора(Форма.ОтборПоПодразделениям.ВыгрузитьЗначения(), НСтр("ru='подразделение, подразделения, подразделений';uk='підрозділ, підрозділи, підрозділів'"));
		
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьИзменениеСпособаРаспределения()
	
	Объект.ПодразделенияУказаныВручную = СпособРаспределенияПоПодразделениям = "Вручную";
	
	ОчиститьЗависимыеРеквизиты("СпособРаспределенияПоПодразделениям");		
	
	УстановитьВидимостьЭлементов(ЭтаФорма, "СпособРаспределенияПоПодразделениям");
	УстановитьВидимостьСтраниц(ЭтаФорма, "СпособРаспределенияПоПодразделениям");
	НастроитьОформлениеПолей(ЭтаФорма);
		
КонецПроцедуры

#КонецОбласти

#Область Отборы

&НаКлиентеНаСервереБезКонтекста
Функция СформироватьПредставлениеОтбора(СписокОтбора, ПредметИсчисления = Неопределено, ТекстУказатьПустоеЗначение = "")
	
	Если СписокОтбора.Количество() = 0 Тогда
		
		Если ПустаяСтрока(ТекстУказатьПустоеЗначение) Тогда
			ТекстУказать = НСтр("ru='Указать';uk='Вказати'");
		Иначе
			ТекстУказать = ТекстУказатьПустоеЗначение;
		КонецЕсли;
		
		Возврат Новый ФорматированнаяСтрока(ТекстУказать,,,, "ИзменитьОтбор");
		
	КонецЕсли;	
	
	Возврат ПредставлениеОтбора(СписокОтбора, ПредметИсчисления);
	
КонецФункции

&НаСервереБезКонтекста
Функция ПредставлениеОтбора(СписокОтбора, ПредметИсчисления)
	
	
	ПредставлениеОтбора = Справочники.ПравилаРаспределенияРасходов.ПредставлениеОтобранныхПозиций(СписокОтбора, ПредметИсчисления);
	ФорматированноеПредставлениеОтбора = Новый ФорматированнаяСтрока(ПредставлениеОтбора,, ЦветаСтиля.ПоясняющийТекст);
	
	ПодстрокаИзменить = Новый ФорматированнаяСтрока(НСтр("ru='(Изменить)';uk='(Змінити)'"),,,, "ИзменитьОтбор");
	
	Возврат Новый ФорматированнаяСтрока(ФорматированноеПредставлениеОтбора,
		?(ПустаяСтрока(ФорматированноеПредставлениеОтбора), "", " "),
		ПодстрокаИзменить);
	
КонецФункции

#КонецОбласти

#Область УправлениеФормой

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
			
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьВидимостьСтраниц(Форма, ИмяРеквизита = Неопределено)
	
	Элементы = Форма.Элементы;
	
	// Подразделения.
	Если ИмяРеквизита = Неопределено Или ИмяРеквизита = "СпособРаспределенияПоПодразделениям" Тогда
		Элементы.ПоПодразделениямВручную.Видимость = Форма.СпособРаспределенияПоПодразделениям = "Вручную";
	КонецЕсли;
		
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьВидимостьЭлементов(Форма, ИмяРеквизита = Неопределено)
	
	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	
	Если ИмяРеквизита = "НаправлениеРаспределения" Или ИмяРеквизита = Неопределено Тогда
		Элементы.ПредставлениеУказанныхПодразделений.Видимость = 
			Объект.НаправлениеРаспределения = ПредопределенноеЗначение("Перечисление.НаправлениеРаспределенияПоПодразделениям.Указанные");
	КонецЕсли;
	
	Если ИмяРеквизита = "СпособРаспределенияПоПодразделениям" Или ИмяРеквизита = Неопределено Тогда
		Элементы.Показатель.Видимость = Форма.СпособРаспределенияПоПодразделениям = "ПоПоказателю";
	КонецЕсли;
			
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДоступностьЭлементов(Форма, ИмяРеквизита = Неопределено)
	
	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	
	Если ИмяРеквизита = Неопределено Или ИмяРеквизита = "РаспределятьПоПартиям" Тогда
		
		Элементы.СтраницаНаПартии.Доступность = Объект.РаспределятьПоПартиям;
		Элементы.УточнятьПартииВДокументе.Доступность = Объект.РаспределятьПоПартиям;
		
	КонецЕсли;
	
	Если ИмяРеквизита = Неопределено Или ИмяРеквизита = "УточнятьПартииВДокументе" Тогда
		Элементы.СтраницаНаПартии.Доступность = Объект.РаспределятьПоПартиям И Не Объект.УточнятьПартииВДокументе;
	КонецЕсли;
	
	Если ИмяРеквизита = Неопределено Или ИмяРеквизита = "ИспользоватьРаспределениеПоПодразделениям" Тогда
		Элементы.СпособРаспределенияПоПодразделениям.ТолькоПросмотр = 
			Не Объект.РаспределятьПоПодразделениям;
	КонецЕсли;
	
	Если ИмяРеквизита = Неопределено Или ИмяРеквизита = "НаправлениеРаспределения" Тогда
		
		Элементы.ИспользоватьЕдинуюБазу.ТолькоПросмотр = 
			Объект.НаправлениеРаспределения = ПредопределенноеЗначение("Перечисление.НаправлениеРаспределенияПоПодразделениям.Текущее")
			Или Объект.НаправлениеРаспределения = ПредопределенноеЗначение("Перечисление.НаправлениеРаспределенияПоПодразделениям.Вышестоящее");
		Элементы.ИспользоватьРазныеБазы.ТолькоПросмотр = Элементы.ИспользоватьЕдинуюБазу.ТолькоПросмотр;
		
	КонецЕсли;
	
	// Другие статьи.
	Если ИмяРеквизита = Неопределено Или ИмяРеквизита = "РаспределятьНаСтатьи" Тогда
		Элементы.НаДругиеСтатьи.Доступность = Объект.РаспределятьНаСтатьи;
	КонецЕсли;
	
	УстановитьДоступностьДолиСтоимостиНаПроизводство(Форма);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДоступностьДолиСтоимостиНаПроизводство(Форма)
	
	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	
	Если Объект.РаспределятьПоПартиям 
		И Объект.РаспределятьНаСтатьи
		И Не (Форма.СпособРаспределенияПоПодразделениям = "Вручную" Или Объект.УточнятьПартииВДокументе) Тогда
		Элементы.ДоляСтоимостиНаПроизводство.ТолькоПросмотр = Ложь;
	Иначе
		Элементы.ДоляСтоимостиНаПроизводство.ТолькоПросмотр = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура НастроитьОформлениеПолей(Форма)
	
	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	
	Элементы.БазаРаспределенияПоПартиям.ОтметкаНезаполненного = Объект.РаспределятьПоПартиям 
		И Не Объект.УточнятьПартииВДокументе И Не ЗначениеЗаполнено(Объект.БазаРаспределенияПоПартиям);
		
	Элементы.СпособРаспределенияПоПодразделениям.ОтметкаНезаполненного = Объект.РаспределятьПоПодразделениям 
		И Не ЗначениеЗаполнено(Форма.СпособРаспределенияПоПодразделениям);
				
	Элементы.ДоляСтоимостиНаПроизводство.ОтметкаНезаполненного = Не Элементы.ДоляСтоимостиНаПроизводство.ТолькоПросмотр
		И Не ЗначениеЗаполнено(Объект.ДоляСтоимостиНаПроизводство);
		
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура НастроитьЗаголовкиПолей(Форма, ИмяРеквизита = Неопределено)
	
	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	
	Если ИмяРеквизита = "ОтборПоГруппамПродукции" Или ИмяРеквизита = Неопределено Тогда
		
		Если Форма.ОтборПоГруппамПродукции.Количество() Тогда
			Элементы.ЗаголовокОтбораПоГруппамПродукции.Заголовок = НСтр("ru='На указанные группы продукции';uk='На зазначені групи продукції'");
		Иначе
			Элементы.ЗаголовокОтбораПоГруппамПродукции.Заголовок = НСтр("ru='На все группы продукции';uk='На всі групи продукції'");
		КонецЕсли;
		
	КонецЕсли;
	
	Если ИмяРеквизита = "ОтборПоМатериалам" Или ИмяРеквизита = "БазаРаспределенияПоПартиям" 
		Или ИмяРеквизита = Неопределено Тогда
		
		Если Форма.ОтборПоМатериалам.Количество() Тогда
			Элементы.ЗаголовокОтбораПоУказаннымПозициям.Заголовок = НСтр("ru='По указанным материалам';uk='За вказаними матеріалами'");
		ИначеЕсли ГруппаПоБазеРаспределения(Объект.БазаРаспределенияПоПартиям) = "Материалы" Тогда
			Элементы.ЗаголовокОтбораПоУказаннымПозициям.Заголовок = НСтр("ru='Без отбора по материалам';uk='Без відбору за матеріалами'");
		КонецЕсли;
		
	КонецЕсли;
	
	Если ИмяРеквизита = "ОтборПоВидамРабот" Или ИмяРеквизита = "БазаРаспределенияПоПартиям" 
		Или ИмяРеквизита = Неопределено Тогда
		
		Если Форма.ОтборПоВидамРабот.Количество() Тогда
			Элементы.ЗаголовокОтбораПоУказаннымПозициям.Заголовок = НСтр("ru='По указанным видам работ';uk='За вказаними видами робіт'");
		ИначеЕсли ГруппаПоБазеРаспределения(Объект.БазаРаспределенияПоПартиям) = "Трудозатраты" Тогда
			Элементы.ЗаголовокОтбораПоУказаннымПозициям.Заголовок = НСтр("ru='Без отбора по видам работ';uk='Без відбору за видами робіт'");
		КонецЕсли;
		
	КонецЕсли;
	
	Если ИмяРеквизита = "ОтборПоПродукции" Или ИмяРеквизита = "БазаРаспределенияПоПартиям" 
		Или ИмяРеквизита = Неопределено Тогда
		
		Если Форма.ОтборПоПродукции.Количество() Тогда
			Элементы.ЗаголовокОтбораПоУказаннымПозициям.Заголовок = НСтр("ru='По указанной продукции';uk='По зазначеній продукції'");
		ИначеЕсли ГруппаПоБазеРаспределения(Объект.БазаРаспределенияПоПартиям) = "Продукция" Тогда
			Элементы.ЗаголовокОтбораПоУказаннымПозициям.Заголовок = НСтр("ru='Без отбора по продукции';uk='Без відбору по продукції'");
		КонецЕсли;
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.БазаРаспределенияПоПартиям)
		Или Объект.БазаРаспределенияПоПартиям = ПредопределенноеЗначение("Перечисление.ТипыБазыРаспределенияРасходов.СуммаМатериальныхИТрудозатрат") Тогда
		Элементы.ЗаголовокОтбораПоУказаннымПозициям.Заголовок = НСтр("ru='Отбор недоступен.';uk='Відбір недоступний.'");
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьЭлементовПоФО()
	
	Элементы.ГруппаОтборПоГруппамПродукции.Видимость = АналитическийУчетПоГруппамПродукции
		Или ОтборПоГруппамПродукции.Количество();
	
КонецПроцедуры

#КонецОбласти

#Область ИнициализацияФормы

&НаСервере
Процедура ИнициализироватьФорму()
	
	ЗаполнитьСлужебныеРеквизитыФормы();
	
	УстановитьВидимостьСтраниц(ЭтаФорма);
	УстановитьВидимостьЭлементовПоФО();
	УстановитьВидимостьЭлементов(ЭтаФорма);
	УстановитьДоступностьЭлементов(ЭтаФорма);
	НастроитьОформлениеПолей(ЭтаФорма);
	НастроитьЗаголовкиПолей(ЭтаФорма);
	
	ПараметрыВыбораСтатейИАналитик = Справочники.ПравилаРаспределенияРасходов.ПараметрыВыбораСтатейИАналитик(
		Объект.НазначениеПравила);
	ДоходыИРасходыСервер.ПриЧтенииНаСервере(ЭтотОбъект, ПараметрыВыбораСтатейИАналитик);
	
	//++ НЕ УТ
	ПараметрыНастройки = Справочники.ПравилаРаспределенияРасходов.ПараметрыНастройкиСчетовУчета();
	НастройкаСчетовУчета.ПриЧтенииНаСервере(ЭтотОбъект, ПараметрыНастройки);                   
	//-- НЕ УТ
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСлужебныеРеквизитыФормы()
	
	АналитическийУчетПоГруппамПродукции = ПолучитьФункциональнуюОпцию("АналитическийУчетПоГруппамПродукции");
	
	ОтборПоМатериалам.ЗагрузитьЗначения(Объект.ОтборПоМатериалам.Выгрузить(, "Материал").ВыгрузитьКолонку("Материал"));
	ОтборПоВидамРабот.ЗагрузитьЗначения(Объект.ОтборПоВидамРабот.Выгрузить(, "ВидРабот").ВыгрузитьКолонку("ВидРабот"));
	ОтборПоГруппамПродукции.ЗагрузитьЗначения(Объект.ОтборПоГруппамПродукции.Выгрузить(, "ГруппаПродукции").ВыгрузитьКолонку("ГруппаПродукции"));
	ОтборПоПодразделениям.ЗагрузитьЗначения(Объект.ОтборПоПодразделениям.Выгрузить(, "Подразделение").ВыгрузитьКолонку("Подразделение"));
	ОтборПоПродукции.ЗагрузитьЗначения(Объект.ОтборПоПродукции.Выгрузить(, "Продукция").ВыгрузитьКолонку("Продукция"));
	
	ОбработатьИзмененияОтбораПоГруппамПродукции(ЭтаФорма);
	ОбработатьИзмененияОтбораПоПодразделениям(ЭтаФорма);
	ОбработатьИзмененияОтбораПоУказаннымПозициям(ЭтаФорма);
	
	Если Объект.ПодразделенияУказаныВручную Тогда
		СпособРаспределенияПоПодразделениям = "Вручную";
	ИначеЕсли Объект.БазаРаспределенияПоПодразделениям = Перечисления.ТипыБазыРаспределенияРасходов.ВводитсяЕжемесячно
		Или Объект.БазаРаспределенияПоПодразделениям = Перечисления.ТипыБазыРаспределенияРасходов.ВводитсяПриИзменении Тогда
		СпособРаспределенияПоПодразделениям = "ПоПоказателю";
	ИначеЕсли Объект.БазаРаспределенияПоПодразделениям = Перечисления.ТипыБазыРаспределенияРасходов.СуммаМатериальныхЗатрат Тогда
		СпособРаспределенияПоПодразделениям = "СуммаМатериальныхЗатрат";
	ИначеЕсли Объект.БазаРаспределенияПоПодразделениям = Перечисления.ТипыБазыРаспределенияРасходов.СуммаРасходовНаОплатуТруда Тогда
		СпособРаспределенияПоПодразделениям = "СуммаРасходовНаОплатуТруда";
	ИначеЕсли Объект.БазаРаспределенияПоПодразделениям = Перечисления.ТипыБазыРаспределенияРасходов.СуммаМатериальныхИТрудозатрат Тогда
		СпособРаспределенияПоПодразделениям = "СуммаМатериальныхИТрудозатрат";
	КонецЕсли;
	
	Если Объект.РаспределятьПоПодразделениям Тогда
		ИспользоватьРаспределениеПоПодразделениям = "ИспользоватьРазныеБазы";
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ВзаимодействиеСПользователем

&НаКлиенте
Процедура УточнитьИзменениеРеквизита(ИмяРеквизита, НеобходимоЗадатьВопрос = Ложь)
	
	Если Не НеобходимоЗадатьВопрос Тогда
		
		// Параметр не передан. Значит надо определить требуется задать вопрос или нет.
		
		СтруктураЗависимыхРеквизитов = ЗависимыеРеквизиты(ИмяРеквизита);
		
		Для Каждого РеквизитФормы Из СтруктураЗависимыхРеквизитов.РеквизитыФормы Цикл
			
			Если ТипЗнч(ЭтаФорма[РеквизитФормы]) = Тип("Булево") И ЭтаФорма[РеквизитФормы] = Истина
				Или Не ТипЗнч(ЭтаФорма[РеквизитФормы]) = Тип("Булево") И ЗначениеЗаполнено(ЭтаФорма[РеквизитФормы]) Тогда
				
				НеобходимоЗадатьВопрос = Истина;
				Прервать;
				
			КонецЕсли;
			
		КонецЦикла;
		
		Если Не НеобходимоЗадатьВопрос Тогда
			Для Каждого РеквизитОбъекта Из СтруктураЗависимыхРеквизитов.РеквизитыОбъекта Цикл
				
				Если ТипЗнч(Объект[РеквизитОбъекта]) = Тип("Булево") И Объект[РеквизитОбъекта] = Истина
					Или Не ТипЗнч(Объект[РеквизитОбъекта]) = Тип("Булево") И ЗначениеЗаполнено(Объект[РеквизитОбъекта]) Тогда
					
					НеобходимоЗадатьВопрос = Истина;
					Прервать;
					
				КонецЕсли;
				
			КонецЦикла;
		КонецЕсли;
				
	КонецЕсли;
	
	Если НеобходимоЗадатьВопрос Тогда
		
		Если ИмяРеквизита = "РаспределятьПоПодразделениям" Тогда
			ТекстВопроса = НСтр("ru='Настройки распределения по подразделениям будут очищены. Продолжить?';uk='Настройки розподілу по підрозділах будуть очищені. Продовжити?'");
		ИначеЕсли ИмяРеквизита = "РаспределятьПоПартиям" Или ИмяРеквизита = "УточнятьПартииВДокументе" Тогда
			ТекстВопроса = НСтр("ru='Настройки распределения будут очищены. Продолжить?';uk='Настройки розподілу будуть очищені. Продовжити?'");
		ИначеЕсли ИмяРеквизита = "РаспределятьНаСтатьи" Тогда
			ТекстВопроса = НСтр("ru='Настройки распределения на другие статьи будут очищены. Продолжить?';uk='Настройки розподілу на інші статті будуть очищені. Продовжити?'");
		КонецЕсли;
		
		ПараметрыОповещения = Новый Структура("ИмяРеквизита", ИмяРеквизита);
		
		ПоказатьВопрос(Новый ОписаниеОповещения("УточнитьИзменениеРеквизитаЗавершение", ЭтаФорма, ПараметрыОповещения),
						ТекстВопроса,
						РежимДиалогаВопрос.ДаНет);
						
		Возврат;
		
	КонецЕсли;
		
	ОбработатьИзменениеРеквизитов(ИмяРеквизита);
	
КонецПроцедуры

&НаКлиенте
Процедура УточнитьИзменениеРеквизитаЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	ИмяРеквизита = ДополнительныеПараметры.ИмяРеквизита;
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ОбработатьИзменениеРеквизитов(ИмяРеквизита);
	Иначе
		Если ИмяРеквизита = "РаспределятьПоПартиям"
			Или ИмяРеквизита = "РаспределятьНаСтатьи"
			Или ИмяРеквизита = "УточнятьПартииВДокументе" Тогда
			Объект[ИмяРеквизита] = Не Объект[ИмяРеквизита];
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область РаботаСТипамиБаз

&НаКлиентеНаСервереБезКонтекста
Функция ТипыБазРаспределенияПоГруппе(Группа)
	
	ТипыБаз = Новый Массив;
	Если Группа = "Материалы" Тогда
		
		ТипыБаз.Добавить(ПредопределенноеЗначение("Перечисление.ТипыБазыРаспределенияРасходов.СуммаМатериальныхЗатрат"));
		ТипыБаз.Добавить(ПредопределенноеЗначение("Перечисление.ТипыБазыРаспределенияРасходов.КоличествоУказанныхМатериалов"));
		ТипыБаз.Добавить(ПредопределенноеЗначение("Перечисление.ТипыБазыРаспределенияРасходов.ВесУказанныхМатериалов"));
		ТипыБаз.Добавить(ПредопределенноеЗначение("Перечисление.ТипыБазыРаспределенияРасходов.ОбъемУказанныхМатериалов"));
		
	ИначеЕсли Группа = "Трудозатраты" Тогда
		
		ТипыБаз.Добавить(ПредопределенноеЗначение("Перечисление.ТипыБазыРаспределенияРасходов.СуммаРасходовНаОплатуТруда"));
		ТипыБаз.Добавить(ПредопределенноеЗначение("Перечисление.ТипыБазыРаспределенияРасходов.НормативыОплатыТруда"));
		ТипыБаз.Добавить(ПредопределенноеЗначение("Перечисление.ТипыБазыРаспределенияРасходов.КоличествоРаботУказанныхВидов"));
		
	ИначеЕсли Группа = "Продукция" Тогда
		
		ТипыБаз.Добавить(ПредопределенноеЗначение("Перечисление.ТипыБазыРаспределенияРасходов.ПлановаяСтоимостьПродукции"));
		ТипыБаз.Добавить(ПредопределенноеЗначение("Перечисление.ТипыБазыРаспределенияРасходов.КоличествоПродукции"));
		ТипыБаз.Добавить(ПредопределенноеЗначение("Перечисление.ТипыБазыРаспределенияРасходов.ВесПродукции"));
		ТипыБаз.Добавить(ПредопределенноеЗначение("Перечисление.ТипыБазыРаспределенияРасходов.ОбъемПродукции"));
		ТипыБаз.Добавить(ПредопределенноеЗначение("Перечисление.ТипыБазыРаспределенияРасходов.ОбъемПродукцииСУчетомБудущихВыпусков"));
		ТипыБаз.Добавить(ПредопределенноеЗначение("Перечисление.ТипыБазыРаспределенияРасходов.КоличествоПродукцииСУчетомБудущихВыпусков"));
		ТипыБаз.Добавить(ПредопределенноеЗначение("Перечисление.ТипыБазыРаспределенияРасходов.ВесПродукцииСУчетомБудущихВыпусков"));
		ТипыБаз.Добавить(ПредопределенноеЗначение("Перечисление.ТипыБазыРаспределенияРасходов.ПлановаяСтоимостьПродукцииСУчетомБудущихВыпусков"));
		
	КонецЕсли;
	
	Возврат ТипыБаз;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ГруппаПоБазеРаспределения(БазаРаспределения)
	
	Если Не ТипыБазРаспределенияПоГруппе("Материалы").Найти(БазаРаспределения) = Неопределено Тогда
		Возврат "Материалы";
	ИначеЕсли Не ТипыБазРаспределенияПоГруппе("Трудозатраты").Найти(БазаРаспределения) = Неопределено Тогда
		Возврат "Трудозатраты";
	ИначеЕсли Не ТипыБазРаспределенияПоГруппе("Продукция").Найти(БазаРаспределения) = Неопределено Тогда
		Возврат "Продукция";
	КонецЕсли;
	
	Возврат "";
	
КонецФункции

#КонецОбласти

#Область Прочее

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьДолиСтоимости(Форма)
	
	Объект = Форма.Объект;
	
	Если Объект.ПодразделенияУказаныВручную Тогда
		Объект.ДоляСтоимостиНаПроизводство = Объект.Подразделения.Итог("ДоляСтоимости");
	КонецЕсли;
	
	Объект.ДоляСтоимостиНаСтатьи = Объект.Списание.Итог("ДоляСтоимости");
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьИзменениеРеквизитов(ИмяРеквизита)
	
	Если ИмяРеквизита = "ИспользоватьРаспределениеПоПодразделениям" Тогда
		ОбработатьИзменениеИспользоватьРаспределениеПоПодразделениям();
	ИначеЕсли ИмяРеквизита = "РаспределятьПоПартиям" Тогда
		ОбработатьИзменениеРаспределятьПоПартиям();
	ИначеЕсли ИмяРеквизита = "УточнятьПартииВДокументе" Тогда
		ОбработатьИзменениеУточнятьПартииВДокументе();
	ИначеЕсли ИмяРеквизита = "РаспределятьНаСтатьи" Тогда
		ОбработатьИзменениеРаспределятьНаСтатьи();
	ИначеЕсли ИмяРеквизита = "НаправлениеРаспределения" Тогда
		ОбработатьИзменениеНаправленияРаспределения();
	ИначеЕсли ИмяРеквизита = "СпособРаспределенияПоПодразделениям" Тогда
		ОбработатьИзменениеСпособаРаспределения();
	ИначеЕсли ИмяРеквизита = "ОтборПоПодразделениям" Тогда
		ОбработатьИзмененияОтбораПоПодразделениям(ЭтаФорма);
	ИначеЕсли ИмяРеквизита = "ОтборПоГруппамПродукции" Тогда
		ОбработатьИзмененияОтбораПоГруппамПродукции(ЭтаФорма);
	ИначеЕсли ИмяРеквизита = "ОтборПоМатериалам" 
		Или ИмяРеквизита = "ОтборПоВидамРабот"
		Или ИмяРеквизита = "ОтборПоПродукции" Тогда
		ОбработатьИзмененияОтбораПоУказаннымПозициям(ЭтаФорма);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ОчиститьЗависимыеРеквизиты(ИмяРеквизита)
	
	СтруктураЗависимыхРеквизитов = ЗависимыеРеквизиты(ИмяРеквизита);
	
	Для Каждого РеквизитФормы Из СтруктураЗависимыхРеквизитов.РеквизитыФормы Цикл
		
		Если ТипЗнч(ЭтаФорма[РеквизитФормы]) = Тип("ДанныеФормыКоллекция") Тогда
			ЭтаФорма[РеквизитФормы].Очистить();
		Иначе
			ЭтаФорма[РеквизитФормы] = Неопределено;
		КонецЕсли;
		
		ОбработатьИзменениеРеквизитов(РеквизитФормы);
		
	КонецЦикла;
	
	Для Каждого РеквизитОбъекта Из СтруктураЗависимыхРеквизитов.РеквизитыОбъекта Цикл
		
		Если ТипЗнч(Объект[РеквизитОбъекта]) = Тип("ДанныеФормыКоллекция") Тогда
			Объект[РеквизитОбъекта].Очистить();
		Иначе
			Объект[РеквизитОбъекта] = Неопределено;
		КонецЕсли;
		
		ОбработатьИзменениеРеквизитов(РеквизитОбъекта);
		
	КонецЦикла;
	
	Возврат СтруктураЗависимыхРеквизитов;
	
КонецФункции

// Возвращает первый уровень зависимых реквизитов от переданного.
// Параметры:
//	Реквизит - Строка - имя реквизита, для которого следует получить зависимые реквизиты.
// Возвращаемое значение:
//	Структура - зависимые реквизиты
//		* РеквизитыФормы - Массив - содержит имена зависимых реквизитов формы (Строка).
//		* РеквизитыОбъекта - Массив - содержит имена зависимых реквизитов объекта (Строка).
//
&НаКлиенте
Функция ЗависимыеРеквизиты(Реквизит)
	
	РеквизитыФормы = Новый Массив;
	РеквизитыОбъекта = Новый Массив;
	
	Если Реквизит = "НаправлениеРаспределения" Тогда
		
		РеквизитыФормы.Добавить("ОтборПоПодразделениям");
		
	ИначеЕсли Реквизит = "УточнятьПартииВДокументе" Тогда
		
		РеквизитыОбъекта.Добавить("БазаРаспределенияПоПартиям");
		РеквизитыОбъекта.Добавить("НаправлениеРаспределения");
		РеквизитыФормы.Добавить("ИспользоватьРаспределениеПоПодразделениям");
		РеквизитыФормы.Добавить("ОтборПоГруппамПродукции");
		
	ИначеЕсли Реквизит = "БазаРаспределенияПоПартиям" Тогда
		
		РеквизитыФормы.Добавить("ОтборПоМатериалам");
		РеквизитыФормы.Добавить("ОтборПоВидамРабот");
		РеквизитыФормы.Добавить("ОтборПоПродукции");
			
	ИначеЕсли Реквизит = "РаспределятьПоПартиям" Тогда
		
		РеквизитыОбъекта.Добавить("УточнятьПартииВДокументе");
		
	ИначеЕсли Реквизит = "РаспределятьНаСтатьи" Тогда
		
		Если Не (Объект.РаспределятьНаСтатьи Или Объект.ПодразделенияУказаныВручную) Тогда
			РеквизитыОбъекта.Добавить("ДоляСтоимостиНаПроизводство");
		КонецЕсли;
		
		РеквизитыОбъекта.Добавить("Списание");
		РеквизитыОбъекта.Добавить("ДоляСтоимостиНаСтатьи");
		
	ИначеЕсли Реквизит = "ИспользоватьРаспределениеПоПодразделениям" Тогда
		
		РеквизитыОбъекта.Добавить("РаспределятьПоПодразделениям");
		РеквизитыФормы.Добавить("СпособРаспределенияПоПодразделениям");
		
	ИначеЕсли Реквизит = "СпособРаспределенияПоПодразделениям" Тогда
		
		РеквизитыОбъекта.Добавить("Показатель");
		РеквизитыОбъекта.Добавить("Подразделения");
		РеквизитыОбъекта.Добавить("ДоляСтоимостиНаПроизводство");
				
	КонецЕсли;
	
	Возврат Новый Структура("РеквизитыФормы, РеквизитыОбъекта", РеквизитыФормы, РеквизитыОбъекта);
		
КонецФункции

&НаСервереБезКонтекста
Функция ЗначениеРеквизитаОбъекта(Ссылка, ИмяРеквизита)
	
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, ИмяРеквизита);
	
КонецФункции

#КонецОбласти

#КонецОбласти
