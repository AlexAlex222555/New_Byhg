#Область ОписаниеПеременных

&НаКлиенте
Перем ТекущиеЗначенияРеквизитов;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	НастроитьФормуПоПараметрамФормы();
	
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьРеглУчет") Тогда
		Элементы.СостояниеУУ.Заголовок = НСтр("ru='Состояние';uk='Стан'");
		Элементы.СостояниеБУ.Видимость = Ложь;
		Элементы.ДатаПринятияКУчетуУпр.Заголовок = НСтр("ru='Принят к учету';uk='Прийнятий до обліку'");
		Элементы.ДатаПринятияКУчетуРегл.Видимость = Ложь;
	КонецЕсли; 
	
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОтборСостояниеПриИзменении(Элемент)
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(
		Список, "Состояние", ОтборСостояние);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборОрганизацияПриИзменении(Элемент)
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список, "Организация", ОтборОрганизация,,, ЗначениеЗаполнено(ОтборОрганизация));
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборПодразделениеПриИзменении(Элемент)
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список, "Подразделение", ОтборПодразделение,,, ЗначениеЗаполнено(ОтборПодразделение));
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборВидОбъектаУчетаПриИзменении(Элемент)
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список, "ВидОбъектаУчета", ОтборВидОбъектаУчета,,, ЗначениеЗаполнено(ОтборВидОбъектаУчета));
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ВыбратьЭлементы(Неопределено);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыбратьЭлементы(Команда)
	
	ВыбранныеЭлементы = Новый Массив;
	
	Если ЗначениеЗаполнено(РеквизитыКоторыеДолжныСовпадать) Тогда
		ПроверитьРеквизиты = СтрРазделить(РеквизитыКоторыеДолжныСовпадать, ",");
	Иначе
		ПроверитьРеквизиты = Новый Массив;
	КонецЕсли;
	
	Для каждого ИдентификаторСтроки Из Элементы.Список.ВыделенныеСтроки Цикл
		
		ДанныеСтроки = Элементы.Список.ДанныеСтроки(ИдентификаторСтроки);
		
		Если ДанныеСтроки = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ДанныеСтроки.Ссылка) 
			ИЛИ ДанныеСтроки.ПометкаУдаления
			ИЛИ ДанныеСтроки.ЭтоГруппа 
				И Элементы.Список.ВыборГруппИЭлементов <> ИспользованиеГруппИЭлементов.Группы
				И Элементы.Список.ВыборГруппИЭлементов <> ИспользованиеГруппИЭлементов.ГруппыИЭлементы Тогда
			Продолжить;
		КонецЕсли;
		
		Если ПроверитьРеквизиты.Количество() <> 0 Тогда
			
			Если ТекущиеЗначенияРеквизитов = Неопределено Тогда
				ТекущиеЗначенияРеквизитов = Новый Структура(РеквизитыКоторыеДолжныСовпадать);
				ЗаполнитьЗначенияСвойств(ТекущиеЗначенияРеквизитов, ДанныеСтроки);
			КонецЕсли; 
			
			Если НЕ ПроверитьВыбор(ДанныеСтроки, ПроверитьРеквизиты, ТекущиеЗначенияРеквизитов) Тогда
				Если НЕ ЭлементыВыбраны Тогда
					// Очистим текущие значения, чтобы при повторном выборе их не учитывать.
					ТекущиеЗначенияРеквизитов = Неопределено;
				КонецЕсли;
				Возврат;
			КонецЕсли;
			
		КонецЕсли;
		
		ВыбранныеЭлементы.Добавить(ДанныеСтроки.Ссылка);
		
	КонецЦикла;
	
	Если ВыбранныеЭлементы.Количество() <> 0 Тогда
		
		ЭлементыВыбраны = Истина;
		
		Если Элементы.Список.МножественныйВыбор Тогда
			ОповеститьОВыборе(ВыбранныеЭлементы);
		Иначе
			ОповеститьОВыборе(ВыбранныеЭлементы[0]);
		КонецЕсли; 
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура НастроитьФормуПоПараметрамФормы()
	
	РеквизитыКоторыеДолжныСовпадать = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Параметры, "РеквизитыКоторыеДолжныСовпадать", "");
	
	ОтборСписка = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Параметры, "Отбор", Новый Структура);

	ЗаполнитьБыстрыйОтбор("ВидОбъектаУчета", ОтборСписка, "ВидОбъектаУчета");
	
	Если ПравоДоступа("Чтение", Метаданные.РегистрыСведений.МестоУчетаНМА) Тогда
		ЗаполнитьБыстрыйОтбор("Организация",   ОтборСписка, "Организация");
		ЗаполнитьБыстрыйОтбор("Подразделение", ОтборСписка, "Подразделение");
	Иначе
		Элементы.ОтборОрганизация.Видимость = Ложь;
		Элементы.ОтборПодразделение.Видимость = Ложь;
		Элементы.Подразделение.Видимость = Ложь;
	КонецЕсли;
	
	Если ВнеоборотныеАктивыСлужебный.ЕстьПраваНаЧтениеСостоянияНМА() Тогда
		
		ЗаполнитьБыстрыйОтбор("Состояние", ОтборСписка, "СостояниеБУ,СостояниеУУ");
		
		ОтборНеПринятыхКУчету = ОтборСостояниеСписок.НайтиПоЗначению(Перечисления.СостоянияНМА.НеПринятКУчету) <> Неопределено
								ИЛИ ОтборСостояниеСписок.НайтиПоЗначению(Перечисления.СостоянияНМА.Списан) <> Неопределено
								ИЛИ ОтборСостояние = Перечисления.СостоянияНМА.НеПринятКУчету
								ИЛИ ОтборСостояние = Перечисления.СостоянияНМА.Списан;
		
		Если ОтборНеПринятыхКУчету Тогда
			Элементы.ОтборОрганизация.ТолькоПросмотр = Истина;
			Элементы.ОтборПодразделение.ТолькоПросмотр = Истина;
			Элементы.Организация.Видимость = Ложь;
			Элементы.Подразделение.Видимость = Ложь;
		КонецЕсли;
		
		Если Элементы.ОтборСостояние.Видимость Тогда
			Элементы.ОтборСостояниеСписок.Видимость = Ложь;
		КонецЕсли;
	
	Иначе
		Элементы.ОтборСостояние.Видимость = Ложь;
		Элементы.ОтборСостояниеСписок.Видимость = Ложь;
		Элементы.СостояниеБУ.Видимость = Ложь;
		Элементы.СостояниеУУ.Видимость = Ложь;
	КонецЕсли;
	
	ОписаниеЗапросаДляВыбора = Справочники.НематериальныеАктивы.ОписаниеЗапросаДляВыбора(Параметры);
	
	СвойстваСписка = ОбщегоНазначения.СтруктураСвойствДинамическогоСписка();
	СвойстваСписка.ТекстЗапроса = ОписаниеЗапросаДляВыбора.ТекстЗапроса;
	ОбщегоНазначения.УстановитьСвойстваДинамическогоСписка(Элементы.Список, СвойстваСписка);
	
	Для каждого ОписаниеПараметра Из ОписаниеЗапросаДляВыбора.ПараметрыЗапроса Цикл
		Список.Параметры.УстановитьЗначениеПараметра(ОписаниеПараметра.Ключ, ОписаниеПараметра.Значение);
	КонецЦикла; 
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьБыстрыйОтбор(ИмяОтбора, ОтборСписка, ЭлементыСписка = Неопределено)

	// Заполняет быстрые отборы и скрывает колонки в списке
	
	ЗначениеОтбора = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ОтборСписка, ИмяОтбора, Неопределено);
	
	Суффикс = "";
	Если ТипЗнч(ЗначениеОтбора) = Тип("ФиксированныйМассив") 
		ИЛИ ТипЗнч(ЗначениеОтбора) = Тип("Массив") Тогда
		
		Если ЗначениеОтбора.Количество() > 1 Тогда
			Суффикс = "Список";
			Элементы["Отбор" + ИмяОтбора].Видимость = Ложь;
			ЗначениеОтбора = ВнеоборотныеАктивыСлужебный.ФиксированныйМассивВСписок(ЗначениеОтбора);
		Иначе
			ЗначениеОтбора = ЗначениеОтбора.Получить(0);
			Элементы["Отбор" + ИмяОтбора + "Список"].Видимость = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	ЭтаФорма["Отбор" + ИмяОтбора + Суффикс] = ЗначениеОтбора;
	Если ЗначениеЗаполнено(ЗначениеОтбора) Тогда
		Элементы["Отбор" + ИмяОтбора + Суффикс].ТолькоПросмотр = Истина;
		Если ЭлементыСписка <> Неопределено Тогда
			Для каждого ИмяЭлементаСписка Из СтрРазделить(ЭлементыСписка, ",") Цикл
				Элементы[ИмяЭлементаСписка].Видимость = Ложь;
			КонецЦикла; 
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПроверитьВыбор(ДанныеСтроки, ПроверитьРеквизиты, ТекущиеЗначенияРеквизитов)

	ТекстПредупреждения = Неопределено;
	МестонахождениеНеСовпадает = Ложь;
	ПрочиеРеквизитыНеСовпадают = Ложь;
	
	Для каждого ИмяРеквизита Из ПроверитьРеквизиты Цикл
		
		Если ДанныеСтроки[ИмяРеквизита] <> ТекущиеЗначенияРеквизитов[ИмяРеквизита] 
			И (ЗначениеЗаполнено(ТекущиеЗначенияРеквизитов[ИмяРеквизита])
				ИЛИ ЗначениеЗаполнено(ДанныеСтроки[ИмяРеквизита])) Тогда
			
			Если ИмяРеквизита = "Организация"
				ИЛИ ИмяРеквизита = "Подразделение" Тогда
					
				МестонахождениеНеСовпадает = Истина;
			Иначе
				ПрочиеРеквизитыНеСовпадают = Истина;
			КонецЕсли;
			
		КонецЕсли; 
		
	КонецЦикла; 
	
	Если МестонахождениеНеСовпадает Тогда
		ТекстПредупреждения = НСтр("ru='Необходимо выбрать активы, числящиеся в одной организации и подразделении';uk='Необхідно вибрати активи, які значаться в одній організації і підрозділі'");
	ИначеЕсли ПрочиеРеквизитыНеСовпадают Тогда
		ТекстПредупреждения = НСтр("ru='Необходимо выбрать однотипные активы';uk='Необхідно вибрати однотипні активи'");
	КонецЕсли;

	Если ТекстПредупреждения <> Неопределено Тогда
		ПоказатьПредупреждение(, ТекстПредупреждения);
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

#КонецОбласти
