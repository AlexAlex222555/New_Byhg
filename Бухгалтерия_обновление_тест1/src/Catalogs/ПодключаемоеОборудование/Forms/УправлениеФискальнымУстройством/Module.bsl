
#Область ОбработчикиСобытий

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Кассир = "";
	ВыполненаСтандартнаяОбработка = Истина;
	МенеджерОборудованияКлиентСерверПереопределяемый.ОбработкаЗаполненияИмяКассира(Кассир, ВыполненаСтандартнаяОбработка); 
	ПараметрКассир = ?(Не ВыполненаСтандартнаяОбработка, Кассир, НСтр("ru='Администратор';uk='Адміністратор'")); 
	Если Параметры.Свойство("ИдентификаторУстройства") Тогда
		ИдентификаторУстройства = Параметры.ИдентификаторУстройства;
		Если НЕ ЗначениеЗаполнено(ИдентификаторУстройства) Тогда
			ИдентификаторУстройства = Неопределено;
		КонецЕсли;
		Элементы.ГруппаУправлениеСменой.Видимость = Ложь;
	Иначе
		ИдентификаторУстройства = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОперацияЗавершение(РезультатВыполнения, Параметры) Экспорт
	
	Доступность = Истина;
	
	ТекстСообщения = ?(РезультатВыполнения.Результат, НСтр("ru='Операция успешно завершена.';uk='Операція успішно завершена.'"), РезультатВыполнения.ОписаниеОшибки);
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСмену(Команда)
	
	ОчиститьСообщения();
	
	ПоддерживаемыеТипыВО = Новый Массив();
	ПоддерживаемыеТипыВО.Добавить("ФискальныйРегистратор");
	ПоддерживаемыеТипыВО.Добавить("ПринтерЧеков");
	ПоддерживаемыеТипыВО.Добавить("ККТ");
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОткрытьСменуПослеВыбораУстройства", ЭтотОбъект);
	МенеджерОборудованияКлиент.ПредложитьВыбратьУстройство(ОписаниеОповещения, ПоддерживаемыеТипыВО,
		НСтр("ru='Выберите фискальное устройство';uk='Виберіть фіскальний пристрій'"), 
		НСтр("ru='Фискальное устройство не подключено.';uk='Фіскальний пристрій не підключено.'"), 
		НСтр("ru='Фискальное устройство не выбрано.';uk='Фіскальний пристрій не вибрано.'"), 
		Истина);
	
КонецПроцедуры
	
&НаКлиенте
Процедура ОткрытьСменуПослеВыбораУстройства(РезультатВыбора, ДополнительныеПараметры) Экспорт
	
	Если РезультатВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОчиститьСообщения();
	Доступность = Ложь;
	
	ПараметрыОперации = МенеджерОборудованияКлиентСервер.ПараметрыВыполненияОперации();
	ПараметрыОперации.Кассир = ПараметрКассир; 
	
	ДополнительныеПараметры = Новый Структура();
	Если МенеджерОборудованияКлиентПовтИсп.ИспользуетсяПодсистемыФискальныхУстройств() Тогда
		МодульКассовыеСменыКлиентПереопределяемый = МенеджерОборудованияКлиентПовтИсп.ОбщийМодуль("КассовыеСменыКлиентПереопределяемый");
		МодульКассовыеСменыКлиентПереопределяемый.УправлениеФУЗаполнитьДополнительныеПараметрыПередОткрытиемСмены(РезультатВыбора, ДополнительныеПараметры);
	КонецЕсли;
	
	ОповещениеПриЗавершении = Новый ОписаниеОповещения("ОперацияЗавершение", ЭтотОбъект);
	МенеджерОборудованияКлиент.НачатьОткрытиеСменыНаФискальномУстройстве(ОповещениеПриЗавершении, УникальныйИдентификатор, ПараметрыОперации, РезультатВыбора,, ДополнительныеПараметры);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьСмену(Команда)
	
	ОчиститьСообщения();
	
	ПоддерживаемыеТипыВО = Новый Массив();
	ПоддерживаемыеТипыВО.Добавить("ФискальныйРегистратор");
	ПоддерживаемыеТипыВО.Добавить("ПринтерЧеков");
	ПоддерживаемыеТипыВО.Добавить("ККТ");
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗакрытьСменуПослеВыбораУстройства", ЭтотОбъект);
	МенеджерОборудованияКлиент.ПредложитьВыбратьУстройство(ОписаниеОповещения, ПоддерживаемыеТипыВО,
		НСтр("ru='Выберите фискальное устройство';uk='Виберіть фіскальний пристрій'"), 
		НСтр("ru='Фискальное устройство не подключено.';uk='Фіскальний пристрій не підключено.'"), 
		НСтр("ru='Фискальное устройство не выбрано.';uk='Фіскальний пристрій не вибрано.'"), 
		Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьСменуПослеВыбораУстройства(РезультатВыбора, ДополнительныеПараметры) Экспорт
	
	Если РезультатВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Доступность = Ложь;
	
	ПараметрыОперации = МенеджерОборудованияКлиентСервер.ПараметрыВыполненияОперации();
	ПараметрыОперации.Кассир = ПараметрКассир; 
	
	ОповещениеПриЗавершении = Новый ОписаниеОповещения("ОперацияЗавершение", ЭтотОбъект);
	МенеджерОборудованияКлиент.НачатьЗакрытиеСменыНаФискальномУстройстве(ОповещениеПриЗавершении, УникальныйИдентификатор, ПараметрыОперации, РезультатВыбора);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтчетОТекущемСостоянииРасчетов(Команда)
	
	ОчиститьСообщения();
	Доступность = Ложь;
	
	ПараметрыОперации = МенеджерОборудованияКлиентСервер.ПараметрыВыполненияОперации();
	ПараметрыОперации.Кассир = ПараметрКассир; 
	
	ОповещениеПриЗавершении = Новый ОписаниеОповещения("ОперацияЗавершение", ЭтотОбъект);
	МенеджерОборудованияКлиент.НачатьФормированиеОтчетаОТекущемСостоянииРасчетов(ОповещениеПриЗавершении, УникальныйИдентификатор, ПараметрыОперации, ИдентификаторУстройства);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтчетБезГашения(Команда)
	
	ОчиститьСообщения();
	Доступность = Ложь;
	
	ПараметрыОперации = МенеджерОборудованияКлиентСервер.ПараметрыВыполненияОперации();
	ПараметрыОперации.Кассир = ПараметрКассир; 
	
	ОповещениеПриЗавершении = Новый ОписаниеОповещения("ОперацияЗавершение", ЭтотОбъект);                                              
	МенеджерОборудованияКлиент.НачатьФормированиеОтчетаБезГашения(ОповещениеПриЗавершении, УникальныйИдентификатор, ПараметрыОперации, ИдентификаторУстройства);
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьДополнительногоОтчета(Команда)
	
	Если Команда.Имя = "ОтчетОПроданныхТоварах" Тогда
		
		ВходныеПараметры = Неопределено;
		НаименованиеДополнительногоОтчета = "PrintSoldReport";
		
	ИначеЕсли Команда.Имя = "ОтчетаПоДатам" Тогда
		
		Если НЕ ЗначениеЗаполнено(ПериодПериодическогоОтчета) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Заполните период за который хотите сформировать отчет.';uk='Заповніть період за який необхідно сформувати звіт.'"));
			Возврат;
		КонецЕсли;
		
		ВходныеПараметры  = Новый Массив;
		
		ВходныеПараметры.Добавить(ПериодПериодическогоОтчета.ДатаНачала);
		ВходныеПараметры.Добавить(ПериодПериодическогоОтчета.ДатаОкончания);
		
		НаименованиеДополнительногоОтчета = "PrintPReportDate";
		
	ИначеЕсли Команда.Имя = "ОтчетПоНомерам" Тогда
		
		Если НЕ ЗначениеЗаполнено(НачальныйНомерПериодическогоОтчета) ИЛИ НЕ ЗначениеЗаполнено(КонечныйНомерПериодическогоОтчета) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Заполните номера дневных отчетов для формирования отчета.';uk='Заповніть номери денних звітів для формування звіту.'"));
			Возврат;
		КонецЕсли;
		
		ВходныеПараметры  = Новый Массив;
		
		ВходныеПараметры.Добавить(НачальныйНомерПериодическогоОтчета);
		ВходныеПараметры.Добавить(КонечныйНомерПериодическогоОтчета);

		НаименованиеДополнительногоОтчета = "PrintPReportNumber";
		
	Иначе
		Возврат;
	КонецЕсли;

	ЭтотОбъект.Доступность = Ложь;	
	
	ОповещениеПриЗавершении = Новый ОписаниеОповещения("ОперацияЗавершение", ЭтотОбъект);
	МенеджерОборудованияКлиент.НачатьПечатьДополнительногоФискальногоОтчета(ОповещениеПриЗавершении, УникальныйИдентификатор, ИдентификаторУстройства, НаименованиеДополнительногоОтчета, ВходныеПараметры);
	
КонецПроцедуры

#КонецОбласти

