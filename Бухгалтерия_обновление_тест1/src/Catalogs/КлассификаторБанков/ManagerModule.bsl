///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2020
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Функция формирует дерево классификатора из макета хранимого в конфигурации
Функция ПолучитьДеревоКлассификатора() Экспорт
	
	МакетКлассификаторБанков = Справочники.КлассификаторБанков.ПолучитьМакет("КлассификаторБанков");
 	Если ОбщегоНазначения.ПодсистемаСуществует("СервисыИТСУкраина.НСИС") Тогда
	    МодульНСИССервер = ОбщегоНазначения.ОбщийМодуль("НСИССервер");
	    МакетКлассификаторБанков = МодульНСИССервер.ПолучитьМакет("КлассификаторБанков", МакетКлассификаторБанков);
	КонецЕсли;    	
	КлассификаторXML = МакетКлассификаторБанков.ПолучитьТекст();
	
	КлассификаторТаблица = ОбщегоНазначения.ПрочитатьXMLВТаблицу(КлассификаторXML).Данные;
	
	Дерево = Новый ДеревоЗначений;
	Дерево.Колонки.Добавить("Уровень",      Новый ОписаниеТипов("Число"));
	Дерево.Колонки.Добавить("МФО",          Новый ОписаниеТипов("Строка"));
	Дерево.Колонки.Добавить("Наименование", Новый ОписаниеТипов("Строка"));
	Дерево.Колонки.Добавить("Город",        Новый ОписаниеТипов("Строка"));
	Дерево.Колонки.Добавить("Адрес",        Новый ОписаниеТипов("Строка"));
	Дерево.Колонки.Добавить("КодПоЕДРПОУ",  Новый ОписаниеТипов("Строка"));
	Дерево.Колонки.Добавить("Телефоны",     Новый ОписаниеТипов("Строка"));
	Дерево.Колонки.Добавить("КоррСчет",     Новый ОписаниеТипов("Строка"));
	Для Каждого КлассификаторЗапись Из КлассификаторТаблица Цикл
		
		Если КлассификаторЗапись.Level = "1" Тогда
			СтрокаУровень1 = Дерево.Строки.Добавить();
			НоваяСтрока = СтрокаУровень1;
		Иначе
			НоваяСтрока = СтрокаУровень1.Строки.Добавить();		
		КонецЕсли;
		
		НоваяСтрока.Уровень      = КлассификаторЗапись.Level;
		НоваяСтрока.МФО          = КлассификаторЗапись.MFO;
		НоваяСтрока.Наименование = КлассификаторЗапись.Name;
		НоваяСтрока.Город        = КлассификаторЗапись.City;
		НоваяСтрока.Адрес        = КлассификаторЗапись.Address;
		НоваяСтрока.КодПоЕДРПОУ  = КлассификаторЗапись.Code;
		НоваяСтрока.Телефоны     = КлассификаторЗапись.Tel;
		НоваяСтрока.КоррСчет     = КлассификаторЗапись.CorrAccount;
	КонецЦикла;
	
	Возврат Дерево;
	
КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ГрупповоеИзменениеОбъектов

// Возвращает реквизиты объекта, которые не рекомендуется редактировать
// с помощью обработки группового изменения реквизитов.
//
// Возвращаемое значение:
//  Массив Из Строка -
Функция РеквизитыНеРедактируемыеВГрупповойОбработке() Экспорт
	
	Результат = Новый Массив;
	Результат.Добавить("*");
	Возврат Результат;
	
КонецФункции

// Конец СтандартныеПодсистемы.ГрупповоеИзменениеОбъектов

// ТехнологияСервиса.ВыгрузкаЗагрузкаДанных

// Возвращает реквизиты справочника, которые образуют естественный ключ
// для элементов справочника.
//
// Возвращаемое значение:
//  Массив - массив имен реквизитов, образующих естественный ключ.
//
Функция ПоляЕстественногоКлюча() Экспорт
	
	Результат = Новый Массив();
	
	Результат.Добавить("Код");
	Результат.Добавить("КоррСчет");
	
	Возврат Результат;
	
КонецФункции

// Конец ТехнологияСервиса.ВыгрузкаЗагрузкаДанных

#КонецОбласти

#КонецОбласти

#КонецЕсли
