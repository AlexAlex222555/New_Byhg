
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.Свойство("ПоказыватьТолькоПКУ", ПоказыватьТолькоПКУ)
		И ПоказыватьТолькоПКУ Тогда
		
		Параметры.Отбор.Удалить("ТарифнаяСетка");
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы,
			"Создать",
			"Видимость",
			Ложь);
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы,
			"Скопировать",
			"Видимость",
			Ложь);
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы,
			"СписокКонтекстноеМенюСоздать",
			"Видимость",
			Ложь);
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы,
			"СписокКонтекстноеМенюСкопировать",
			"Видимость",
			Ложь);
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			Список, "ТарифнаяСетка", Справочники.ТарифныеСетки.ПустаяСсылка(), ВидСравненияКомпоновкиДанных.НеРавно);
			
		ГруппировкаПоТарифнойСетке = Список.Группировка.Элементы.Добавить(Тип("ПолеГруппировкиКомпоновкиДанных"));
		ГруппировкаПоТарифнойСетке.Поле = Новый ПолеКомпоновкиДанных("ТарифнаяСетка");
		ГруппировкаПоТарифнойСетке.Использование = Истина;
		
		ЭтаФорма.Заголовок = РазрядыКатегорииДолжностей.ИнициализироватьЗаголовокФормыИРеквизитов("СправочникРазрядовСписок", Перечисления.ВидыТарифныхСеток.Тариф);
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы, "ФормаПереместитьЭлементВверх", "Видимость",  Ложь);
			
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы, "ФормаПереместитьЭлементВниз", "Видимость",  Ложь);
		
	Иначе
		
		Если Не Параметры.Отбор.Свойство("ТарифнаяСетка") Тогда
			Параметры.Отбор.Вставить("ТарифнаяСетка", ПредопределенноеЗначение("Справочник.ТарифныеСетки.ПустаяСсылка"));
		КонецЕсли;
		
		ЭтаФорма.Заголовок = РазрядыКатегорииДолжностей.ИнициализироватьЗаголовокФормыИРеквизитов("СправочникРазрядовСписок");
		
	КонецЕсли;
	
	Если Параметры.РежимВыбора Тогда
		Элементы.Список.РежимВыбора = Истина;
	КонецЕсли;
	
	ЗарплатаКадры.ПриСозданииНаСервереФормыСДинамическимСписком(ЭтотОбъект, "Список",,,, "ТарифнаяСетка");
	
//++ ЕРП ЗИК
	//~Элементы.ФормаПереместитьЭлементВверх.Видимость = Ложь;
	//~Элементы.ФормаПереместитьЭлементВниз.Видимость = Ложь;
	//~
	//~// СтандартныеПодсистемы.ПодключаемыеКоманды
	//~ПараметрыРазмещения = ПодключаемыеКоманды.ПараметрыРазмещения();
	//~ПараметрыРазмещения.КоманднаяПанель = Элементы.КоманднаяПанельФормы;
	//~ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект, ПараметрыРазмещения);
	//~// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
//-- ЕРП ЗИК	

	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если ПоказыватьТолькоПКУ Тогда
		Отказ = Истина;
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура СписокПередЗагрузкойПользовательскихНастроекНаСервере(Элемент, Настройки)
	ЗарплатаКадры.ПроверитьПользовательскиеНастройкиДинамическогоСписка(ЭтотОбъект, Истина);
КонецПроцедуры

&НаСервере
Процедура СписокПриОбновленииСоставаПользовательскихНастроекНаСервере(СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ЗарплатаКадры.ПроверитьПользовательскиеНастройкиДинамическогоСписка(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПереместитьЭлементВверх(Команда)
	
//++ ЕРП ЗИК
	Если Не ПоказыватьТолькоПКУ
		И Элементы.Список.ТекущиеДанные <> Неопределено Тогда
		
	
	КонецЕсли; 
//-- ЕРП ЗИК	

КонецПроцедуры

&НаКлиенте
Процедура ПереместитьЭлементВниз(Команда)
	
//++ ЕРП ЗИК	
	Если Не ПоказыватьТолькоПКУ
		И Элементы.Список.ТекущиеДанные <> Неопределено Тогда
		
		
	КонецЕсли; 
//-- ЕРП ЗИК		

КонецПроцедуры

#КонецОбласти

//++ ЕРП ЗИК

//~// СтандартныеПодсистемы.ПодключаемыеКоманды
//~&НаКлиенте
//~Процедура Подключаемый_ВыполнитьКоманду(Команда)
//~	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.Список);
//~КонецПроцедуры

//~&НаСервере
//~Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
//~	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Список, Результат);
//~КонецПроцедуры

//~&НаКлиенте
//~Процедура Подключаемый_ОбновитьКоманды()
//~	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
//~КонецПроцедуры
//~// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

//-- ЕРП ЗИК
