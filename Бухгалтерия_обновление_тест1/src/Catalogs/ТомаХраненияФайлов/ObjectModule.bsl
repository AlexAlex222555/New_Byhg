///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2020
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.ПрофилиБезопасности") Тогда
		
		МодульРаботаВБезопасномРежиме   = ОбщегоНазначения.ОбщийМодуль("РаботаВБезопасномРежиме");
		ИспользуютсяПрофилиБезопасности = МодульРаботаВБезопасномРежиме.ИспользуютсяПрофилиБезопасности();
		
	Иначе
		ИспользуютсяПрофилиБезопасности = Ложь;
	КонецЕсли;
	
	Если Не ДополнительныеСвойства.Свойство("ПропуститьОсновнуюПроверкуЗаполнения") Тогда
	
		Если Не НомерПорядкаУникален(ПорядокЗаполнения, Ссылка) Тогда
			ТекстОшибки = НСтр("ru='Порядок заполнения не уникален - в системе уже есть том с таким порядком';uk='Порядок заповнення не унікальний - в системі вже є том з таким порядком'");
			ОбщегоНазначения.СообщитьПользователю(ТекстОшибки, , "ПорядокЗаполнения", "Объект", Отказ);
		КонецЕсли;
		
		Если МаксимальныйРазмер <> 0 Тогда
			ТекущийРазмерВБайтах = 0;
			Если Не Ссылка.Пустая() Тогда
				ТекущийРазмерВБайтах = РаботаСФайламиВТомахСлужебный.ОбъемТома(Ссылка);
			КонецЕсли;
			ТекущийРазмер = ТекущийРазмерВБайтах / (1024 * 1024);
			
			Если МаксимальныйРазмер < ТекущийРазмер Тогда
				ТекстОшибки = НСтр("ru='Максимальный размер тома меньше, чем текущий размер';uk='Максимальний розмір тому менше, ніж поточний розмір'");
				ОбщегоНазначения.СообщитьПользователю(ТекстОшибки, , "МаксимальныйРазмер", "Объект", Отказ);
			КонецЕсли;
		КонецЕсли;
		
		Если ПустаяСтрока(ПолныйПутьWindows) И ПустаяСтрока(ПолныйПутьLinux) Тогда
			ТекстОшибки = НСтр("ru='Не заполнен полный путь';uk='Не заповнений повний шлях'");
			ОбщегоНазначения.СообщитьПользователю(ТекстОшибки, , "ПолныйПутьWindows", "Объект", Отказ);
			ОбщегоНазначения.СообщитьПользователю(ТекстОшибки, , "ПолныйПутьLinux",   "Объект", Отказ);
			Возврат;
		КонецЕсли;
		
		Если Не ИспользуютсяПрофилиБезопасности
		   И Не ПустаяСтрока(ПолныйПутьWindows)
		   И (    Лев(ПолныйПутьWindows, 2) <> "\\"
		      ИЛИ СтрНайти(ПолныйПутьWindows, ":") <> 0 ) Тогда
			
			ТекстОшибки = НСтр("ru='Путь к тому должен быть в формате UNC (\\servername\resource).';uk='Шлях до тому повинен бути у форматі UNC (\\servername\resource).'");
			ОбщегоНазначения.СообщитьПользователю(ТекстОшибки, , "ПолныйПутьWindows", "Объект", Отказ);
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если Не ДополнительныеСвойства.Свойство("ПропуститьПроверкуДоступаКПапке") Тогда
		
		ИмяПоляСПолнымПутем = ?(ОбщегоНазначения.ЭтоWindowsСервер(), "ПолныйПутьWindows", "ПолныйПутьLinux");
		Если ОбщегоНазначения.РазделениеВключено() Тогда
			МодульРаботаВМоделиСервиса = ОбщегоНазначения.ОбщийМодуль("РаботаВМоделиСервиса");
			ЗначениеРазделителя = ?(МодульРаботаВМоделиСервиса.ИспользованиеРазделителяСеанса(),
				МодульРаботаВМоделиСервиса.ЗначениеРазделителяСеанса(), "");
		Иначе
			ЗначениеРазделителя = "";
		КонецЕсли;
		
		ПолныйПутьТома = СтрЗаменить(ЭтотОбъект[ИмяПоляСПолнымПутем], "%z", ЗначениеРазделителя);
		ИмяКаталогаТестовое = ПолныйПутьТома + "ПроверкаДоступа" + ПолучитьРазделительПути();
		
		Попытка
			СоздатьКаталог(ИмяКаталогаТестовое);
			УдалитьФайлы(ИмяКаталогаТестовое);
		Исключение
			ИнформацияОбОшибке = ИнформацияОбОшибке();
			
			Если ИспользуютсяПрофилиБезопасности Тогда
				ШаблонОшибки =
					НСтр("ru='Путь к тому некорректен.
                               |Возможно не настроены разрешения в профилях безопасности,
                               |или учетная запись, от лица которой работает
                               |сервер BAF, не имеет прав доступа к каталогу тома.
                               |
                               |%1'
                               |;uk='Шлях до тому некоректний.
                               |Можливо не настроєні дозволи в профілях безпеки,
                               |або обліковий запис, від імені якого працює
                               |сервер BAF, не має прав доступу до каталогу тома.  
                               |
                               |%1'");
			Иначе
				ШаблонОшибки =
					НСтр("ru='Путь к тому некорректен.
                               |Возможно учетная запись, от лица которой работает
                               |сервер BAF, не имеет прав доступа к каталогу тома.
                               |
                               |%1'
                               |;uk='Шлях до тому некоректний.
                               |Можливо обліковий запис, від імені якої працює
                               |сервер BAF, не має прав доступу до каталогу тому.
                               |
                               |%1'");
			КонецЕсли;
			
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				ШаблонОшибки, КраткоеПредставлениеОшибки(ИнформацияОбОшибке));
			
			ОбщегоНазначения.СообщитьПользователю(
				ТекстОшибки, , ИмяПоляСПолнымПутем, "Объект", Отказ);
		КонецПопытки;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Возвращает Ложь, если есть том с таким порядком.
Функция НомерПорядкаУникален(ПорядокЗаполнения, СсылкаНаТом)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КОЛИЧЕСТВО(Тома.ПорядокЗаполнения) КАК Количество
	|ИЗ
	|	Справочник.ТомаХраненияФайлов КАК Тома
	|ГДЕ
	|	Тома.ПорядокЗаполнения = &ПорядокЗаполнения
	|	И Тома.Ссылка <> &СсылкаНаТом";
	
	Запрос.Параметры.Вставить("ПорядокЗаполнения", ПорядокЗаполнения);
	Запрос.Параметры.Вставить("СсылкаНаТом", СсылкаНаТом);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Количество = 0;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru='Недопустимый вызов объекта на клиенте.';uk='Неправильний виклик об''єкта на клієнті.'");
#КонецЕсли