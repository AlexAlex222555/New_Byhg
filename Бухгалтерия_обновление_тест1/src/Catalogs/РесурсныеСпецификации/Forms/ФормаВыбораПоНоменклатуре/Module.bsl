
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ПараметрыВыбораСпецификаций = УправлениеДаннымиОбИзделияхКлиентСервер.ПараметрыВыбораСпецификаций();
	ПараметрыВыбораСпецификаций.Вставить("ИсключитьСпецификацию");
	ПараметрыВыбораСпецификаций.Вставить("ПолучитьСпецификацииПоНоменклатуре", Ложь);
	ПараметрыВыбораСпецификаций.Вставить("ПолучитьСпецификацииПоСпискуНоменклатуры", Ложь);
	ЗаполнитьЗначенияСвойств(ПараметрыВыбораСпецификаций, Параметры,,"ПараметрыСмещенияПериода");
	
	ДанныеОбИзделии = УправлениеДаннымиОбИзделияхКлиентСервер.СтруктураДанныхОбИзделииДляВыбораСпецификации();
	
	// Заполнение реквизитов по входящим данным
	Если ПараметрыВыбораСпецификаций.ПолучитьСпецификацииПоНоменклатуре Тогда
		
		ЗаполнитьЗначенияСвойств(ДанныеОбИзделии, Параметры);
		
	ИначеЕсли ПараметрыВыбораСпецификаций.ПолучитьСпецификацииПоСпискуНоменклатуры Тогда
	
		Если Параметры.ДанныеОбИзделиях.Количество() = 1 Тогда
			ЗаполнитьЗначенияСвойств(ДанныеОбИзделии, Параметры.ДанныеОбИзделиях[0]);
			ПараметрыВыбораСпецификаций.ПолучитьСпецификацииПоНоменклатуре = Истина;
			ПараметрыВыбораСпецификаций.ПолучитьСпецификацииПоСпискуНоменклатуры = Ложь;
		Иначе
			Для каждого ДанныеИзделия Из Параметры.ДанныеОбИзделиях Цикл
				ЗаполнитьЗначенияСвойств(ТаблицаПродукции.Добавить(), ДанныеИзделия);
			КонецЦикла;
		КонецЕсли;
		
	//++ Устарело_Производство21
	ИначеЕсли Параметры.Свойство("АдресТаблицыПродукции") Тогда // для совместимости с версией 2.1 (Документ.СписаниеЗатратНаВыпуск)
		
		Таблица = ПолучитьИзВременногоХранилища(Параметры.АдресТаблицыПродукции);
		Для каждого Строка Из Таблица Цикл
			НоваяСтрока = ТаблицаПродукции.Добавить();
			НоваяСтрока.Номенклатура           = Строка.Номенклатура;
			НоваяСтрока.Характеристика         = Строка.Характеристика;
			НоваяСтрока.НачалоПроизводства     = Строка.НачалоПроизводства;
			НоваяСтрока.ПодразделениеДиспетчер = Строка.Подразделение;
		КонецЦикла;
		
		ПараметрыВыбораСпецификаций = УправлениеДаннымиОбИзделияхКлиентСервер.ПараметрыВыбораСпецификацийНаИзготовлениеСборку();
		ПараметрыВыбораСпецификаций.Вставить("ПолучитьСпецификацииПоНоменклатуре", Ложь);
		ПараметрыВыбораСпецификаций.Вставить("ПолучитьСпецификацииПоСпискуНоменклатуры", Истина);
		
	//-- Устарело_Производство21
	Иначе
		
		ВызватьИсключение НСтр("ru='Для открытия формы необходимо передать параметры.';uk='Для відкриття форми необхідно передати параметри.'");
		
	КонецЕсли;
	
	Если ПараметрыВыбораСпецификаций.ПолучитьСпецификацииПоСпискуНоменклатуры Тогда
		Таблица = ТаблицаПродукции.Выгрузить();
		Для каждого КлючИЗначение Из ДанныеОбИзделии Цикл
			ДанныеОбИзделии[КлючИЗначение.Ключ] = Новый Массив;
			ОбщегоНазначенияКлиентСервер.ДополнитьМассив(
				ДанныеОбИзделии[КлючИЗначение.Ключ], Таблица.ВыгрузитьКолонку(КлючИЗначение.Ключ), Истина);
		КонецЦикла;
	КонецЕсли;
	
	НастроитьЭлементыФормы();
	
	ОбновитьСписокСпецификаций();
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОтборНаправлениеДеятельностиПриИзменении(Элемент)
	
	ОбновитьСписокСпецификаций();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборПодразделениеДиспетчерПриИзменении(Элемент)
	
	ОбновитьСписокСпецификаций();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	ОбновитьСписокСпецификаций();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписок(Команда)

	ОбновитьСписокСпецификаций();

КонецПроцедуры

&НаКлиенте
Процедура ОтображатьПобочныйВыход(Команда)
	
	Элементы.СписокОтображатьПобочныйВыход.Пометка = НЕ Элементы.СписокОтображатьПобочныйВыход.Пометка;
	
	ПараметрыВыбораСпецификаций.СпецификацииПоФиксированнойСтоимости =
		?(Элементы.СписокОтображатьПобочныйВыход.Пометка,"Показывать","");
	
	ОбновитьСписокСпецификаций();
	
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Список, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура НастроитьЭлементыФормы()
	
	Элементы.Статус.Видимость = НЕ Параметры.Свойство("ДоступныеСтатусы") ИЛИ Параметры.ДоступныеСтатусы.Количество() <> 1;
	
	ОсновнойТипПроизводственногоПроцесса = Перечисления.ТипыПроизводственныхПроцессов.ПустаяСсылка();
	Если Параметры.Свойство("ДоступныеТипы") Тогда
		Элементы.ТипПроизводственногоПроцесса.Видимость = Параметры.ДоступныеТипы.Количество() <> 1;
		Если Параметры.ДоступныеТипы.Количество() = 1 Тогда
			ОсновнойТипПроизводственногоПроцесса = Параметры.ДоступныеТипы[0];
		КонецЕсли;
	КонецЕсли;
	
	// Заголовок
	Если НЕ Параметры.Свойство("Заголовок", Заголовок) Тогда
		ТекстПодстановки = "";
		Если ПараметрыВыбораСпецификаций.ПолучитьСпецификацииПоНоменклатуре И ЗначениеЗаполнено(ДанныеОбИзделии.Номенклатура) Тогда
			ТекстПодстановки = СтрШаблон(" ""%1""", Строка(ДанныеОбИзделии.Номенклатура)
				+ ?(ДанныеОбИзделии.Характеристика.Пустая(),"",", "+Строка(ДанныеОбИзделии.Характеристика)));
		КонецЕсли;
		Если ЗначениеЗаполнено(ОсновнойТипПроизводственногоПроцесса) Тогда
			ТекстПодстановки = СтрШаблон("%1 (%2)", ТекстПодстановки, НРег(ОсновнойТипПроизводственногоПроцесса));
		КонецЕсли;
		Заголовок = СтрШаблон(НСтр("ru='Ресурсные спецификации%1';uk='Ресурсні специфікації %1'"), ТекстПодстановки);
	КонецЕсли;
	
	// Отборы
	Для каждого ТекущийОтбор Из СписокОтборовПоПараметрамНазначения() Цикл
		
		ИмяОтбора = "Отбор"+ТекущийОтбор.Значение;
		
		ЭлементОтбора = Элементы[ИмяОтбора]; // ПолеФормы
		
		Если УправлениеДаннымиОбИзделияхПовтИсп.ПараметрНазначенияИспользуется(
									Перечисления.ВидыПараметровНазначенияСпецификаций[ТекущийОтбор.Значение]) Тогда
			Если ПараметрыВыбораСпецификаций.ПолучитьСпецификацииПоНоменклатуре
					И ЗначениеЗаполнено(ДанныеОбИзделии[ТекущийОтбор.Значение]) Тогда
				ЗначениеОтбора = ДанныеОбИзделии[ТекущийОтбор.Значение];
			ИначеЕсли ПараметрыВыбораСпецификаций.ПолучитьСпецификацииПоСпискуНоменклатуры
					И ДанныеОбИзделии[ТекущийОтбор.Значение].Количество() = 1
					И ЗначениеЗаполнено(ДанныеОбИзделии[ТекущийОтбор.Значение][0]) Тогда
				ЗначениеОтбора = ДанныеОбИзделии[ТекущийОтбор.Значение][0];
			Иначе
				ЗначениеОтбора = НСтр("ru='<не указано>';uk='<не зазначено>'");
			КонецЕсли;
			ЭлементОтбора.Заголовок = СтрШаблон(НСтр("ru='%1: %2';uk='%1: %2'"), ТекущийОтбор.Представление, ЗначениеОтбора);
			ЭлементОтбора.Видимость = Истина;
		Иначе
			ЭлементОтбора.Видимость = Ложь;
		КонецЕсли;
		
		ЭтаФорма[ИмяОтбора] = Истина;
		
	КонецЦикла;
	
	// Период действия
	Если ПараметрыВыбораСпецификаций.ПолучитьСпецификацииПоНоменклатуре Тогда
		Дата = ДанныеОбИзделии.НачалоПроизводства;
	ИначеЕсли ПараметрыВыбораСпецификаций.ПолучитьСпецификацииПоСпискуНоменклатуры 
		И ДанныеОбИзделии.НачалоПроизводства.Количество() = 1 Тогда
		Дата = ДанныеОбИзделии.НачалоПроизводства[0];
	КонецЕсли;
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "НачалоПроизводства", Дата);
	
	// Информация по параметрам выбора
	ЗаполнитьИнформациюПоПараметрамВыбораСпецификации();
	
	// Спецификации по фиксированной стоимости
	Элементы.СписокОтображатьПобочныйВыход.Пометка   = (ПараметрыВыбораСпецификаций.СпецификацииПоФиксированнойСтоимости = "Показывать");
	Элементы.СписокОтображатьПобочныйВыход.Видимость = (ПараметрыВыбораСпецификаций.СпецификацииПоФиксированнойСтоимости <> "");
	
КонецПроцедуры

#Область СписокСпецификаций

&НаСервере
Процедура ОбновитьСписокСпецификаций()
	
	Если ПараметрыВыбораСпецификаций.ПолучитьСпецификацииПоНоменклатуре Тогда
		ЗаполнитьСписокСпецификацийПоНоменклатуре();
	ИначеЕсли ПараметрыВыбораСпецификаций.ПолучитьСпецификацииПоСпискуНоменклатуры Тогда
		ЗаполнитьСписокСпецификацийПоТаблицеПродукции();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокСпецификацийПоНоменклатуре()
	
	ИгнорируемыеПараметрыНазначения = Новый Массив;
	Для каждого ТекущийОтбор Из СписокОтборовПоПараметрамНазначения() Цикл
		Если НЕ ЭтаФорма["Отбор"+ТекущийОтбор.Значение] Тогда
			ИгнорируемыеПараметрыНазначения.Добавить(Перечисления.ВидыПараметровНазначенияСпецификаций[ТекущийОтбор.Значение]);
		КонецЕсли;
	КонецЦикла;
	ПараметрыВыбораСпецификаций.Вставить("ИгнорируемыеПараметрыНазначения", ИгнорируемыеПараметрыНазначения);
	
	ДанныеОбИзделии.НачалоПроизводства = Дата;
	
	Результат = УправлениеДаннымиОбИзделиях.СпецификацииИзделия(ДанныеОбИзделии, ПараметрыВыбораСпецификаций);
	
	Спецификации             = Новый Массив;
	ПриоритетнаяСпецификация = Справочники.РесурсныеСпецификации.ПустаяСсылка();
	
	Для Индекс = 0 По Результат.ВГраница() Цикл
		Спецификации.Добавить(Результат[Индекс].Спецификация);
		Если ПриоритетнаяСпецификация.Пустая() И Результат[Индекс].ПодбираетсяАвтоматически = Истина Тогда
			ПриоритетнаяСпецификация = Результат[Индекс].Спецификация;
		КонецЕсли;
	КонецЦикла;
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "СписокСпецификаций",       Спецификации);
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "ПриоритетнаяСпецификация", ПриоритетнаяСпецификация);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокСпецификацийПоТаблицеПродукции()
	
	СписокРеквизитов = Новый Массив;
	СписокРеквизитов.Добавить("Номенклатура");
	СписокРеквизитов.Добавить("Характеристика");
	
	ИгнорируемыеПараметрыНазначения = Новый Массив;
	Для каждого ТекущийОтбор Из СписокОтборовПоПараметрамНазначения() Цикл
		Если ЭтаФорма["Отбор"+ТекущийОтбор.Значение] Тогда
			Если ДанныеОбИзделии[ТекущийОтбор.Значение].Количество() = 1 Тогда
				СписокРеквизитов.Добавить(ТекущийОтбор.Значение);
			КонецЕсли;
		Иначе
			ИгнорируемыеПараметрыНазначения.Добавить(Перечисления.ВидыПараметровНазначенияСпецификаций[ТекущийОтбор.Значение]);
		КонецЕсли;
	КонецЦикла;
	ПараметрыВыбораСпецификаций.Вставить("ИгнорируемыеПараметрыНазначения", ИгнорируемыеПараметрыНазначения);
	
	Таблица = УправлениеДаннымиОбИзделиях.ТаблицаДанныхОбИзделииДляВыбораСпецификации();
	Для Индекс = 0 По ТаблицаПродукции.Количество() - 1 Цикл
		НоваяСтрока = Таблица.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ТаблицаПродукции[Индекс],СтрСоединить(СписокРеквизитов,","));
		НоваяСтрока.НачалоПроизводства = Дата;
		НоваяСтрока.ИндексДанных = Индекс;
	КонецЦикла;
	
	Спецификации = УправлениеДаннымиОбИзделиях.СписокСпецификацийПоСпискуНоменклатуры(Таблица, ПараметрыВыбораСпецификаций);
	
	ПриоритетнаяСпецификация = Справочники.РесурсныеСпецификации.ПустаяСсылка();
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "СписокСпецификаций",       Спецификации);
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "ПриоритетнаяСпецификация", ПриоритетнаяСпецификация);
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();
	
	Справочники.РесурсныеСпецификации.УстановитьУсловноеОформлениеСпискаРесурсныхСпецификаций(Список.УсловноеОформление);
	
	Элемент = Список.УсловноеОформление.Элементы.Добавить();
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("ПриоритетнаяСпецификация");
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	Элемент.Оформление.УстановитьЗначениеПараметра("Шрифт", Новый Шрифт(,,Истина));

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьИнформациюПоПараметрамВыбораСпецификации()
	
	ТекстПараметрыВыбора = "";
	
	Если ПараметрыВыбораСпецификаций.ПолучитьСпецификацииПоСпискуНоменклатуры
		И ДанныеОбИзделии.Номенклатура.Количество() > 0 Тогда
			ТекстПараметрыВыбора = НСтр("ru='Номенклатура:';uk='Номенклатура:'") + " " + СтрСоединить(ДанныеОбИзделии.Номенклатура, ", ")+".";
	КонецЕсли;
	
	Элементы.ТекстПараметрыВыбора.Видимость = НЕ ПустаяСтрока(ТекстПараметрыВыбора);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция СписокОтборовПоПараметрамНазначения()
	
	СписокОтборов = Новый СписокЗначений;
	СписокОтборов.Добавить("НаправлениеДеятельности", НСтр("ru='Направление деятельности';uk='Напрям діяльності'"));
	СписокОтборов.Добавить("ПодразделениеДиспетчер",  НСтр("ru='Подразделение-диспетчер';uk='Підрозділ-диспетчер'"));
	
	Возврат СписокОтборов;
	
КонецФункции

#КонецОбласти

#КонецОбласти
