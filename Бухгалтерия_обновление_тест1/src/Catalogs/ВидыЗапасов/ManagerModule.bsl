#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Соотвествие со списком реквизитов, по которым определяется уникальность ключа
// 
// Возвращаемое значение:
//   Соотвествие - ключ - имя реквизита 
//
Функция КлючевыеРеквизиты() Экспорт
	
	Результат = Новый Соответствие;
	Результат.Вставить("Организация");
	Результат.Вставить("ТипЗапасов");
    Результат.Вставить("НалоговоеНазначение");
	Результат.Вставить("ВладелецТовара");
	Результат.Вставить("Соглашение");
	Результат.Вставить("Валюта");
	Результат.Вставить("РеализацияЗапасовДругойОрганизации");
	Результат.Вставить("ВидЗапасовВладельца");
	Результат.Вставить("СпособПередачиТоваров");
	Результат.Вставить("УстарелоПоставщик");
	Результат.Вставить("УстарелоПредназначение");
	Результат.Вставить("УстарелоПодразделение");
	Результат.Вставить("УстарелоМенеджер");
	Результат.Вставить("УстарелоСделка");
	Результат.Вставить("ГруппаФинансовогоУчета");
	Результат.Вставить("Контрагент");
	Результат.Вставить("Договор");
	Результат.Вставить("УстарелоНазначение");
	Результат.Вставить("ГруппаПродукции");
	Результат.Вставить("ВидЦены");
	
	Возврат Результат;
	
КонецФункции

// Функция получает вид запасов для текущего документа.
//
// Параметры:
//	Организация - СправочникСсылка.Организации - Организация документа
//	ХозяйственнаяОперация - ПеречислениеСсылка.ХозяйственныеОперации - Операция документа
//	РеквизитыДокумента - Структура, ВыборкаИзРезультатаЗапроса - Данные документа:
//      * Организация - СправочникСсылка.Организации
//      * ТипЗапасов - ПеречислениеСсылка.ТипыЗапасов
//      * ВладелецТовара - СправочникСсылка.Организации, СправочникСсылка.Партнеры
//      * Контрагент - СправочникСсылка.Организации, СправочникСсылка.Контрагенты
//      * Соглашение - СправочникСсылка.СоглашенияСПоставщиками
//      * Договор - СправочникСсылка.ДоговорыКонтрагентов, СправочникСсылка.ДоговорыМеждуОрганизациями
//      * Валюта - СправочникСсылка.Валюты
//      * НалогообложениеНДС - ПеречислениеСсылка.ТипыНалогообложенияНДС
//      * НалогообложениеОрганизации - ПеречислениеСсылка.СистемыНалогообложения
//      * ВидЗапасов - СправочникСсылка.ВидыЗапасов
//      * ГруппаФинансовогоУчета - СправочникСсылка.ГруппыФинансовогоУчетаНоменклатуры
//      * ГруппаПродукции - СправочникСсылка.Организации
//      * ХозяйственнаяОперация - ПеречислениеСсылка.ХозяйственныеОперации
//      * ВидЦены - СправочникСсылка.ВидыЦенПоставщиков
//      * СохраняемыйВидЗапасов - СправочникСсылка.ВидыЗапасов.
//	ЦелевоеНалоговоеНазначение - СправочникСсылка.НалоговыеНазначенияАктивовИЗатрат - целевое налоговое назначение
//
// Возвращаемое значение:
//	СправочникСсылка.ВидыЗапасов - Найденный вид запасов.
//
Функция ВидЗапасовДокумента(Организация, ХозяйственнаяОперация, РеквизитыДокумента = Неопределено, ЦелевоеНалоговоеНазначение = Неопределено) Экспорт	
	
	Если ЗначениеЗаполнено(РеквизитыДокумента) Тогда
		Реквизиты = Новый Структура("
			|Организация,
			|ТипЗапасов,
			|ВладелецТовара,
			|Контрагент,
			|Соглашение,
			|Договор,
			|Валюта,
            |НалоговоеНазначение, 
            |НалоговоеНазначениеОрганизации,
			|ВидЗапасов,
			|ГруппаФинансовогоУчета,
			|ГруппаПродукции,
			|ХозяйственнаяОперация,
			|ВидЦены,
			|СохраняемыйВидЗапасов
			|");
		
		Реквизиты.Организация = Справочники.Организации.ПустаяСсылка();
		Реквизиты.ВладелецТовара = Неопределено;
		Реквизиты.Контрагент = Неопределено;
		Реквизиты.Договор = Неопределено;
		Реквизиты.Соглашение = Справочники.СоглашенияСПоставщиками.ПустаяСсылка();
		Реквизиты.Валюта = Справочники.Валюты.ПустаяСсылка();
        Реквизиты.НалоговоеНазначение = Справочники.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка();
		Реквизиты.ТипЗапасов = Перечисления.ТипыЗапасов.ПустаяСсылка();
		Реквизиты.ГруппаФинансовогоУчета = Справочники.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка();
		Реквизиты.ГруппаПродукции = Справочники.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка();
		Реквизиты.ВидЦены = Справочники.ВидыЦенПоставщиков.ПустаяСсылка();
		
		ЗаполнитьЗначенияСвойств(Реквизиты, РеквизитыДокумента);
	Иначе
		Реквизиты = Неопределено;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Реквизиты) И ЗначениеЗаполнено(Реквизиты.СохраняемыйВидЗапасов) Тогда
		
		// Вид запасов уже известен - не надо пытаться его переформировать
		Результат = Реквизиты.СохраняемыйВидЗапасов;
		
	Иначе
		
        СтруктураВидЗапасов = СтруктураВидаЗапасов(Организация, ХозяйственнаяОперация, Реквизиты, ЦелевоеНалоговоеНазначение);
		
		УстановитьПривилегированныйРежим(Истина);
		Результат = ВидЗапасовПоОтборамКэш(СтруктураВидЗапасов);
		УстановитьПривилегированныйРежим(Ложь);
		
	КонецЕсли;
	
	Возврат Результат;

КонецФункции

// Функция получает вид запасов для передачи товаров между организациями.
//
// Параметры:
//	ВидЗапасовВладельца - СправочникСсылка.ВидыЗапасов - Вид запасов организации - владельца
//	ОрганизацияПродавец - СправочникСсылка.Организации - Организация - продавец
//	ЦелевоеНалоговоеНазначение - СправочникСсылка.НалоговыеНазначенияАктивовИЗатрат - целевое налоговое назначение
//	ДатаДокумента - Дата - Дата документа
//
// Возвращаемое значение:
//	СправочникСсылка.ВидыЗапасов - Созданный вид запасов.
//
Функция ВидЗапасовДляПередачиМеждуОрганизациями(ВидЗапасовВладельца, ОрганизацияПродавец, Знач ЦелевоеНалоговоеНазначение, Знач ДатаДокумента = Неопределено) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ВидыЗапасовВладельца.Ссылка КАК ВидЗапасовВладельца,
	|	ВидыЗапасовПродавца.Ссылка КАК ВидЗапасов,
	|	Настройка.ОрганизацияПродавец КАК Организация,
	|	ВидыЗапасовВладельца.Организация КАК Комитент,
	|	ВидыЗапасовВладельца.Организация КАК Контрагент,
	|	Настройка.Валюта КАК Валюта,
	|	Настройка.СпособПередачиТоваров КАК СпособПередачиТоваров,
	|	ИСТИНА КАК РеализацияЗапасовДругойОрганизации,
	|	ВЫБОР
	|		КОГДА Настройка.СпособПередачиТоваров = ЗНАЧЕНИЕ(Перечисление.СпособыПередачиТоваров.ПередачаНаКомиссию)
	|			ТОГДА ВидыЗапасовВладельца.Организация
	|		ИНАЧЕ ВидыЗапасовВладельца.ВладелецТовара
	|	КОНЕЦ КАК ВладелецТовара,
	|	ВидыЗапасовВладельца.ТипЗапасов КАК ТипЗапасовВладельца,
    |	ВидыЗапасовВладельца.НалоговоеНазначение КАК НалоговоеНазначениеВладельца
	|ИЗ
	|	Справочник.ВидыЗапасов КАК ВидыЗапасовВладельца
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаПередачиТоваровМеждуОрганизациями КАК Настройка
	|		ПО ВидыЗапасовВладельца.Организация = Настройка.ОрганизацияВладелец
	|			И ВидыЗапасовВладельца.ТипЗапасов = Настройка.ТипЗапасов
	|			И (Настройка.ОрганизацияПродавец = &ОрганизацияПродавец)
	|			И (Настройка.СпособПередачиТоваров <> ЗНАЧЕНИЕ(Перечисление.СпособыПередачиТоваров.НеПередается))
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасовПродавца
	|		ПО ВидыЗапасовВладельца.Ссылка = ВидыЗапасовПродавца.ВидЗапасовВладельца
	|			И (Настройка.ОрганизацияПродавец = ВидыЗапасовПродавца.Организация)
	|			И (Настройка.СпособПередачиТоваров = ВидыЗапасовПродавца.СпособПередачиТоваров)
	|			И (Настройка.Валюта = ВидыЗапасовПродавца.Валюта
	|				ИЛИ Настройка.СпособПередачиТоваров = ЗНАЧЕНИЕ(Перечисление.СпособыПередачиТоваров.Продажа))
	|		    И ВЫБОР КОГДА &ОрганизацияПродавецПлательщикНДС 
	|			    ТОГДА ИСТИНА 
	|			    ИНАЧЕ ВидыЗапасовПродавца.НалоговоеНазначение.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиНДС.Необлагаемая) 
	|		    КОНЕЦ
	|		    И ВЫБОР КОГДА ВидыЗапасовВладельца.НалоговоеНазначение = ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.Управленческое)
	|			    ТОГДА ВидыЗапасовПродавца.НалоговоеНазначение = &НалоговоеНазначениеОрганизацииПродавца
	|			    ИНАЧЕ ИСТИНА 
	|		    КОНЕЦ
	|		    И ВЫБОР КОГДА &ОрганизацияПродавец = ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|			    ТОГДА ВидыЗапасовПродавца.НалоговоеНазначение = ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.Управленческое)
	|			    ИНАЧЕ ИСТИНА 
	|		    КОНЕЦ
	|ГДЕ
	|	ВидыЗапасовВладельца.Ссылка = &ВидЗапасовВладельца");
	
	Запрос.УстановитьПараметр("ОрганизацияПродавец", ОрганизацияПродавец);
	Запрос.УстановитьПараметр("ВидЗапасовВладельца", ВидЗапасовВладельца);
	ОрганизацияПродавецПлательщикНДС = НДСОбщегоНазначенияСервер.ОрганизацияПлательщикНДС(ОрганизацияПродавец, ?(ДатаДокумента = Неопределено, ТекущаяДатаСеанса(), ДатаДокумента));
	Запрос.УстановитьПараметр("ОрганизацияПродавецПлательщикНДС", ОрганизацияПродавецПлательщикНДС);
	НалоговоеНазначениеОрганизацииПродавца = Справочники.Организации.НалоговоеНазначениеНДС(ОрганизацияПродавец, ?(ДатаДокумента = Неопределено, ТекущаяДатаСеанса(), ДатаДокумента));
	Запрос.УстановитьПараметр("НалоговоеНазначениеОрганизацииПродавца", НалоговоеНазначениеОрганизацииПродавца);
	
	ВидЗапасов = Справочники.ВидыЗапасов.ПустаяСсылка();
	
	УстановитьПривилегированныйРежим(Истина);
	Выборка = Запрос.Выполнить().Выбрать();
	УстановитьПривилегированныйРежим(Ложь);
	
	Если Выборка.Следующий() Тогда
		
		Если ЗначениеЗаполнено(Выборка.ВидЗапасов) Тогда
			ВидЗапасов = Выборка.ВидЗапасов;
		Иначе
			СтруктураПараметры = Новый Структура("
				|Организация,
				|СпособПередачиТоваров,
				|Комитент,
				|Контрагент,
				|Валюта,
				|ВидЗапасовВладельца,
				|РеализацияЗапасовДругойОрганизации,
				|ВладелецТовара,
                |НалоговоеНазначение 
				|");
			ЗаполнитьЗначенияСвойств(СтруктураПараметры, Выборка);
			
			Если Выборка.НалоговоеНазначениеВладельца = Справочники.НалоговыеНазначенияАктивовИЗатрат.Управленческое Тогда
				НалоговоеНазначение = НалоговоеНазначениеОрганизацииПродавца;	
			ИначеЕсли ОрганизацияПродавецПлательщикНДС Тогда
				НалоговоеНазначение = Выборка.НалоговоеНазначениеВладельца;	
			Иначе
				НалоговоеНазначение = Справочники.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяХозДеятельность;
			КонецЕсли; 
			
			СправочникОбъект = Справочники.ВидыЗапасов.СоздатьЭлемент();
			ЗаполнитьЗначенияСвойств(СправочникОбъект, СтруктураПараметры);
            СправочникОбъект.НалоговоеНазначение = НалоговоеНазначение;
			
			УстановитьПривилегированныйРежим(Истина);
			СправочникОбъект.Записать();
			УстановитьПривилегированныйРежим(Ложь);
			
			ВидЗапасов = СправочникОбъект.Ссылка;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ВидЗапасов;
	
КонецФункции

// Функция получает вид запасов для возврата товаров от клиента.
//
// Параметры:
//	ВидЗапасовОтгрузки - СправочникСсылка.ВидыЗапасов - Вид запасов реализованного товара
//	Организация - СправочникСсылка.Организации - Организация в документе возврата товаров
//				- Неопределено - Организация берется из вида запасов отгрузки.
//
// Возвращаемое значение:
//	СправочникСсылка.ВидыЗапасов - Созданный вид запасов.
//
Функция ВидЗапасовДляВозвратаТоваровОтКлиента(ВидЗапасовОтгрузки, Организация = Неопределено) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ВидыЗапасов.Ссылка					КАК ВидЗапасов,
	|	ВидыЗапасов.Организация				КАК Организация,
	|	ВидыЗапасов.ТипЗапасов				КАК ТипЗапасов,
	|	ВидыЗапасов.ВладелецТовара			КАК ВладелецТовара,
	|	ВидыЗапасов.Контрагент				КАК Контрагент,
	|	ВидыЗапасов.Договор					КАК Договор,
	|	ВидыЗапасов.Соглашение				КАК Соглашение,
	|	ВидыЗапасов.Валюта					КАК Валюта,
	|	ВидыЗапасов.ГруппаФинансовогоУчета	КАК ГруппаФинансовогоУчета,
    |	ВидыЗапасов.НалоговоеНазначение     КАК НалоговоеНазначение,
	|	ВЫБОР КОГДА ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемНаКомиссию)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика)
    |	КОНЕЦ КАК ХозяйственнаяОперация
	|ИЗ
	|	Справочник.ВидыЗапасов КАК ВидыЗапасов
	|ГДЕ
	|	ВидыЗапасов.Ссылка = &ВидЗапасовОтгрузки
	|");
	
	Запрос.УстановитьПараметр("ВидЗапасовОтгрузки", ВидЗапасовОтгрузки);
	
	ВидЗапасов = Справочники.ВидыЗапасов.ПустаяСсылка();
	
	УстановитьПривилегированныйРежим(Истина);
	Выборка = Запрос.Выполнить().Выбрать();
	УстановитьПривилегированныйРежим(Ложь);
	Если Выборка.Следующий() Тогда
		
		ВидЗапасов = Справочники.ВидыЗапасов.ВидЗапасовДокумента(
			?(Организация = Неопределено, Выборка.Организация, Организация),
			Выборка.ХозяйственнаяОперация,
			Выборка);
			
	КонецЕсли;
	
	Возврат ВидЗапасов;
	
КонецФункции


// Функция получает вид запасов другого налогового назначения
//
// Параметры:
//	ИзменяемыйВидЗапасов - СправочникСсылка.ВидыЗапасов - Вид запасов в котором изменяется налоговое назначение
//	НовоеНалоговоеНазначение - СправочникСсылка.НалоговыеНазначенияАктивовИЗатрат - новое налоговое назначение
//
// Возвращаемое значение:
//	СправочникСсылка.ВидыЗапасов - Созданный/существующий вид запасов.
//
Функция ВидЗапасовДругогоНалоговогоНазначения(ИзменяемыйВидЗапасов, НовоеНалоговоеНазначение, СтароеНалоговоеНазначение, НалоговоеНазначениеНазначенияПолучателя) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ВидыЗапасов.Ссылка					КАК ВидЗапасов,
	|	ВидыЗапасов.Организация				КАК Организация,
	|	ВидыЗапасов.ТипЗапасов				КАК ТипЗапасов,
	|	ВидыЗапасов.ВладелецТовара			КАК ВладелецТовара,
	|	ВидыЗапасов.Контрагент				КАК Контрагент,
	|	ВидыЗапасов.Договор					КАК Договор,
	|	ВидыЗапасов.Соглашение				КАК Соглашение,
	|	ВидыЗапасов.Валюта					КАК Валюта,
	|	ВидыЗапасов.ГруппаФинансовогоУчета	КАК ГруппаФинансовогоУчета,
    |	ВидыЗапасов.НалоговоеНазначение     КАК НалоговоеНазначение,
    |	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация
	|ИЗ
	|	Справочник.ВидыЗапасов КАК ВидыЗапасов
	|ГДЕ
	|	ВидыЗапасов.Ссылка = &ИзменяемыйВидЗапасов
	|");
	
	Запрос.УстановитьПараметр("ИзменяемыйВидЗапасов", ИзменяемыйВидЗапасов);
	
	ВидЗапасов = ИзменяемыйВидЗапасов;
	
	УстановитьПривилегированныйРежим(Истина);
	Выборка = Запрос.Выполнить().Выбрать();
	УстановитьПривилегированныйРежим(Ложь);
	Если Выборка.Следующий() Тогда
		
		Если Выборка.НалоговоеНазначение = Справочники.НалоговыеНазначенияАктивовИЗатрат.НДС_Пропорционально Тогда
			ИзменяемоеНалоговоеНазначение = Справочники.НалоговыеНазначенияАктивовИЗатрат.НДС_Пропорционально;
		ИначеЕсли ЗначениеЗаполнено(НалоговоеНазначениеНазначенияПолучателя) Тогда       
			ИзменяемоеНалоговоеНазначение = НалоговоеНазначениеНазначенияПолучателя;
		ИначеЕсли НовоеНалоговоеНазначение = Справочники.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка() Тогда       
			ИзменяемоеНалоговоеНазначение = Выборка.НалоговоеНазначение;
		Иначе
			ИзменяемоеНалоговоеНазначение = НовоеНалоговоеНазначение;	
		КонецЕсли;
		
		Если Выборка.НалоговоеНазначение = ИзменяемоеНалоговоеНазначение Тогда
			ВидЗапасов = ИзменяемыйВидЗапасов;
		Иначе
			ВидЗапасов = Справочники.ВидыЗапасов.ВидЗапасовДокумента(
				Выборка.Организация, 
				Выборка.ХозяйственнаяОперация,
				Выборка,
				ИзменяемоеНалоговоеНазначение
			);
		КонецЕсли;	
		
	КонецЕсли;
	
	Возврат ВидЗапасов;
	
КонецФункции



#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	( ЗначениеРазрешено(Организация)
	|	ИЛИ(ВЫБОР КОГДА ТипЗначения(ВладелецТовара) = Тип(Справочник.Организации) ТОГДА ЗначениеРазрешено(ВладелецТовара)
	|	ИНАЧЕ ЛОЖЬ КОНЕЦ)) 
	|	И(ВЫБОР КОГДА ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА ЗначениеРазрешено(ВладелецТовара)
	|	ИНАЧЕ ИСТИНА КОНЕЦ) ";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область ЗаменаДублейВидовЗапасов

Функция ТекстЗапросаПоискаДублейВидовЗапасов(ЭтоОбработчикОбновления = Ложь)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВидыЗапасов.Организация КАК Организация,
	|	ВидыЗапасов.ТипЗапасов КАК ТипЗапасов,
    |	ВидыЗапасов.НалоговоеНазначение КАК НалоговоеНазначение,
	|	ВЫБОР ВидыЗапасов.ВладелецТовара
	|		КОГДА ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ВидыЗапасов.ВладелецТовара
	|	КОНЕЦ КАК ВладелецТовара,
	|	ВидыЗапасов.Соглашение КАК Соглашение,
	|	ВидыЗапасов.Валюта КАК Валюта,
	|	ВидыЗапасов.РеализацияЗапасовДругойОрганизации КАК РеализацияЗапасовДругойОрганизации,
	|	ВидыЗапасов.ВидЗапасовВладельца КАК ВидЗапасовВладельца,
	|	ВидыЗапасов.СпособПередачиТоваров КАК СпособПередачиТоваров,
	|	ВЫБОР
	|		КОГДА ВидыЗапасов.УстарелоПоставщик В (ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка), ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка))
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА НЕ ВидыЗапасов.ВладелецТовара В (НЕОПРЕДЕЛЕНО, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка), ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка))
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ВидыЗапасов.УстарелоПоставщик
	|	КОНЕЦ КАК УстарелоПоставщик,
	|	ВЫБОР
	|		КОГДА ВидыЗапасов.УстарелоПредназначение = ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПредназначениеНеОграничено)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПустаяСсылка)
	|		ИНАЧЕ ВидыЗапасов.УстарелоПредназначение
	|	КОНЕЦ КАК УстарелоПредназначение,
	|	ВидыЗапасов.УстарелоПодразделение КАК УстарелоПодразделение,
	|	ВидыЗапасов.УстарелоМенеджер КАК УстарелоМенеджер,
	|	ВидыЗапасов.УстарелоСделка КАК УстарелоСделка,
	|	ВидыЗапасов.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	ВЫБОР ВидыЗапасов.Контрагент
	|		КОГДА ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ВидыЗапасов.Контрагент
	|	КОНЕЦ КАК Контрагент,
	|	ВЫБОР ВидыЗапасов.Договор
	|		КОГДА ЗНАЧЕНИЕ(Справочник.ДоговорыМеждуОрганизациями.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ВидыЗапасов.Договор
	|	КОНЕЦ КАК Договор,
	|	ВидыЗапасов.УстарелоНазначение КАК УстарелоНазначение,
	|	ВидыЗапасов.ГруппаПродукции КАК ГруппаПродукции,
	|	ВидыЗапасов.ВидЦены КАК ВидЦены,
	|	СУММА(1) КАК КоличествоДублей
	|ПОМЕСТИТЬ ВтОтборыДублей
	|ИЗ
	|	Справочник.ВидыЗапасов КАК ВидыЗапасов
	|ГДЕ
	|	(&ПоВсемОрганизациям
	|			ИЛИ ВидыЗапасов.Организация В (&МассивОрганизаций))
	|	И (НЕ ВидыЗапасов.ПометкаУдаления
	|			ИЛИ НЕ &ПроверятьПометкуУдаления)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВидыЗапасов.Организация,
	|	ВидыЗапасов.ТипЗапасов,
    |	ВидыЗапасов.НалоговоеНазначение,
	|	ВЫБОР ВидыЗапасов.ВладелецТовара
	|		КОГДА ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ВидыЗапасов.ВладелецТовара
	|	КОНЕЦ,
	|	ВидыЗапасов.Соглашение,
	|	ВидыЗапасов.Валюта,
	|	ВидыЗапасов.РеализацияЗапасовДругойОрганизации,
	|	ВидыЗапасов.ВидЗапасовВладельца,
	|	ВидыЗапасов.СпособПередачиТоваров,
	|	ВЫБОР
	|		КОГДА ВидыЗапасов.УстарелоПоставщик В (ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка), ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка))
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА НЕ ВидыЗапасов.ВладелецТовара В (НЕОПРЕДЕЛЕНО, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка), ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка))
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ВидыЗапасов.УстарелоПоставщик
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ВидыЗапасов.УстарелоПредназначение = ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПредназначениеНеОграничено)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПустаяСсылка)
	|		ИНАЧЕ ВидыЗапасов.УстарелоПредназначение
	|	КОНЕЦ,
	|	ВидыЗапасов.УстарелоПодразделение,
	|	ВидыЗапасов.УстарелоМенеджер,
	|	ВидыЗапасов.УстарелоСделка,
	|	ВидыЗапасов.ГруппаФинансовогоУчета,
	|	ВЫБОР ВидыЗапасов.Контрагент
	|		КОГДА ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ВидыЗапасов.Контрагент
	|	КОНЕЦ,
	|	ВЫБОР ВидыЗапасов.Договор
	|		КОГДА ЗНАЧЕНИЕ(Справочник.ДоговорыМеждуОрганизациями.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ВидыЗапасов.Договор
	|	КОНЕЦ,
	|	ВидыЗапасов.УстарелоНазначение,
	|	ВидыЗапасов.ГруппаПродукции,
	|	ВидыЗапасов.ВидЦены
	|
	|ИМЕЮЩИЕ
	|	СУММА(1) > 1
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ТипЗапасов,
	|	ВладелецТовара,
	|	Соглашение,
	|	Валюта,
	|	РеализацияЗапасовДругойОрганизации,
	|	ВидЗапасовВладельца,
	|	СпособПередачиТоваров,
	|	УстарелоПоставщик,
	|	УстарелоПодразделение,
	|	УстарелоМенеджер,
	|	УстарелоСделка,
	|	Контрагент,
	|	Договор,
	|	УстарелоНазначение,
	|	ГруппаПродукции,
	|	ВидЦены";
	
	ТекстЗапроса = ТекстЗапроса + 
	"
	|;
	|//////////////////////////////////////////
	|";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ЭтоОбработчикОбновления", ?(ЭтоОбработчикОбновления, "ИСТИНА", "ЛОЖЬ"));
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаНаличиеДублейВидовЗапасов() Экспорт
	
	 Возврат "ВЫБРАТЬ ПЕРВЫЕ 1
	 |	ВидыЗапасов.Ссылка КАК Ссылка
	 |ИЗ
	 |	Справочник.ВидыЗапасов КАК ВидыЗапасов
	 |ГДЕ
	 |	ВидыЗапасов.ЭтоДубль";
	
КонецФункции

Процедура УстановитьПараметрыЗапросаПоискаДублей(Запрос, МассивОрганизаций = Неопределено, ПроверятьПометкуУдаления = Ложь)
	
	ЕстьОтборПоОрганизациям = ЗначениеЗаполнено(МассивОрганизаций);
	
	Запрос.УстановитьПараметр("ПоВсемОрганизациям", НЕ ЕстьОтборПоОрганизациям);
	Запрос.УстановитьПараметр("МассивОрганизаций",  ?(ЕстьОтборПоОрганизациям, МассивОрганизаций, Новый Массив));
	Запрос.УстановитьПараметр("ПроверятьПометкуУдаления", ПроверятьПометкуУдаления);
	
КонецПроцедуры

Процедура ЗаменитьДублиВидовЗапасов(Параметры = Неопределено, АдресХранилищаРезультата = "") Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = ТекстЗапросаПоискаДублейВидовЗапасов() + 
	"ВЫБРАТЬ
	|	ВидыЗапасов.Ссылка КАК Ссылка,
	|	ВидыЗапасов.Наименование КАК Наименование,
	|	ВидыЗапасов.Организация КАК Организация,
	|	ВидыЗапасов.ТипЗапасов КАК ТипЗапасов,
    |	ВидыЗапасов.НалоговоеНазначение КАК НалоговоеНазначение,
	|	ВЫБОР ВидыЗапасов.ВладелецТовара
	|		КОГДА ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ВидыЗапасов.ВладелецТовара
	|	КОНЕЦ КАК ВладелецТовара,
	|	ВидыЗапасов.Соглашение КАК Соглашение,
	|	ВидыЗапасов.Валюта КАК Валюта,
	|	ВидыЗапасов.РеализацияЗапасовДругойОрганизации КАК РеализацияЗапасовДругойОрганизации,
	|	ВидыЗапасов.ВидЗапасовВладельца КАК ВидЗапасовВладельца,
	|	ВидыЗапасов.СпособПередачиТоваров КАК СпособПередачиТоваров,
	|	ВЫБОР
	|		КОГДА ВидыЗапасов.УстарелоПоставщик В (ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка), ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка))
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА НЕ ВидыЗапасов.ВладелецТовара В (НЕОПРЕДЕЛЕНО, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка), ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка))
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ВидыЗапасов.УстарелоПоставщик
	|	КОНЕЦ КАК УстарелоПоставщик,
	|	ВЫБОР
	|		КОГДА ВидыЗапасов.УстарелоПредназначение = ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПредназначениеНеОграничено)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПустаяСсылка)
	|		ИНАЧЕ ВидыЗапасов.УстарелоПредназначение
	|	КОНЕЦ КАК УстарелоПредназначение,
	|	ВидыЗапасов.УстарелоПодразделение КАК УстарелоПодразделение,
	|	ВидыЗапасов.УстарелоМенеджер КАК УстарелоМенеджер,
	|	ВидыЗапасов.УстарелоСделка КАК УстарелоСделка,
	|	ВидыЗапасов.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	ВЫБОР ВидыЗапасов.Контрагент
	|		КОГДА ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ВидыЗапасов.Контрагент
	|	КОНЕЦ КАК Контрагент,
	|	ВЫБОР ВидыЗапасов.Договор
	|		КОГДА ЗНАЧЕНИЕ(Справочник.ДоговорыМеждуОрганизациями.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ВидыЗапасов.Договор
	|	КОНЕЦ КАК Договор,
	|	ВидыЗапасов.УстарелоНазначение КАК УстарелоНазначение,
	|	ВидыЗапасов.ГруппаПродукции КАК ГруппаПродукции,
	|	ВидыЗапасов.ВидЦены КАК ВидЦены,
	|	ВидыЗапасов.ЭтоДубль КАК ЭтоДубль
	|ПОМЕСТИТЬ СпрВидыЗапасов
	|ИЗ
	|	Справочник.ВидыЗапасов КАК ВидыЗапасов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВидыЗапасов.Организация КАК Организация,
	|	ВидыЗапасов.ТипЗапасов КАК ТипЗапасов,
    |	ВидыЗапасов.НалоговоеНазначение КАК НалоговоеНазначение,
	|	ВидыЗапасов.ВладелецТовара КАК ВладелецТовара,
	|	ВидыЗапасов.Соглашение КАК Соглашение,
	|	ВидыЗапасов.Валюта КАК Валюта,
	|	ВидыЗапасов.РеализацияЗапасовДругойОрганизации КАК РеализацияЗапасовДругойОрганизации,
	|	ВидыЗапасов.ВидЗапасовВладельца КАК ВидЗапасовВладельца,
	|	ВидыЗапасов.СпособПередачиТоваров КАК СпособПередачиТоваров,
	|	ВидыЗапасов.УстарелоПоставщик КАК УстарелоПоставщик,
	|	ВидыЗапасов.УстарелоПодразделение КАК УстарелоПодразделение,
	|	ВидыЗапасов.УстарелоМенеджер КАК УстарелоМенеджер,
	|	ВидыЗапасов.УстарелоСделка КАК УстарелоСделка,
	|	ВидыЗапасов.Контрагент КАК Контрагент,
	|	ВидыЗапасов.Договор КАК Договор,
	|	ВидыЗапасов.УстарелоНазначение КАК УстарелоНазначение,
	|	ВидыЗапасов.ГруппаПродукции КАК ГруппаПродукции,
	|	ВидыЗапасов.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	ВидыЗапасов.ВидЦены КАК ВидЦены,
	|	ВидыЗапасов.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ КорректныеВидыЗапасов
	|ИЗ
	|	СпрВидыЗапасов КАК ВидыЗапасов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтОтборыДублей КАК Отборы
	|		ПО ВидыЗапасов.Организация = Отборы.Организация
	|			И ВидыЗапасов.ТипЗапасов = Отборы.ТипЗапасов
	|			И ВидыЗапасов.ВладелецТовара = Отборы.ВладелецТовара
	|			И ВидыЗапасов.Соглашение = Отборы.Соглашение
	|			И ВидыЗапасов.Валюта = Отборы.Валюта
	|			И ВидыЗапасов.РеализацияЗапасовДругойОрганизации = Отборы.РеализацияЗапасовДругойОрганизации
	|			И ВидыЗапасов.ВидЗапасовВладельца = Отборы.ВидЗапасовВладельца
	|			И ВидыЗапасов.СпособПередачиТоваров = Отборы.СпособПередачиТоваров
	|			И ВидыЗапасов.УстарелоПоставщик = Отборы.УстарелоПоставщик
	|			И ВидыЗапасов.УстарелоПодразделение = Отборы.УстарелоПодразделение
	|			И ВидыЗапасов.УстарелоМенеджер = Отборы.УстарелоМенеджер
	|			И ВидыЗапасов.УстарелоСделка = Отборы.УстарелоСделка
	|			И ВидыЗапасов.Контрагент = Отборы.Контрагент
	|			И ВидыЗапасов.Договор = Отборы.Договор
	|			И ВидыЗапасов.УстарелоНазначение = Отборы.УстарелоНазначение
	|			И ВидыЗапасов.ГруппаПродукции = Отборы.ГруппаПродукции
	|			И ВидыЗапасов.ВидЦены = Отборы.ВидЦены
	|			И ВидыЗапасов.ГруппаФинансовогоУчета = Отборы.ГруппаФинансовогоУчета
    |			И ВидыЗапасов.НалоговоеНазначение = Отборы.НалоговоеНазначение
	|ГДЕ
	|	НЕ ВидыЗапасов.ЭтоДубль
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ТипЗапасов,
	|	ВладелецТовара,
	|	Соглашение,
	|	Валюта,
	|	РеализацияЗапасовДругойОрганизации,
	|	ВидЗапасовВладельца,
	|	СпособПередачиТоваров,
	|	УстарелоПоставщик,
	|	УстарелоПодразделение,
	|	УстарелоМенеджер,
	|	УстарелоСделка,
	|	Контрагент,
	|	Договор,
	|	УстарелоНазначение,
	|	ГруппаПродукции,
	|	ВидЦены
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВидыЗапасов.Организация КАК Организация,
	|	ВидыЗапасов.ТипЗапасов КАК ТипЗапасов,
    |	ВидыЗапасов.НалоговоеНазначение КАК НалоговоеНазначение,
	|	ВидыЗапасов.ВладелецТовара КАК ВладелецТовара,
	|	ВидыЗапасов.Соглашение КАК Соглашение,
	|	ВидыЗапасов.Валюта КАК Валюта,
	|	ВидыЗапасов.РеализацияЗапасовДругойОрганизации КАК РеализацияЗапасовДругойОрганизации,
	|	ВидыЗапасов.ВидЗапасовВладельца КАК ВидЗапасовВладельца,
	|	ВидыЗапасов.СпособПередачиТоваров КАК СпособПередачиТоваров,
	|	ВидыЗапасов.УстарелоПоставщик КАК УстарелоПоставщик,
	|	ВидыЗапасов.УстарелоПодразделение КАК УстарелоПодразделение,
	|	ВидыЗапасов.УстарелоМенеджер КАК УстарелоМенеджер,
	|	ВидыЗапасов.УстарелоСделка КАК УстарелоСделка,
	|	ВидыЗапасов.Контрагент КАК Контрагент,
	|	ВидыЗапасов.Договор КАК Договор,
	|	ВидыЗапасов.УстарелоНазначение КАК УстарелоНазначение,
	|	ВидыЗапасов.ГруппаПродукции КАК ГруппаПродукции,
	|	ВидыЗапасов.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	ВидыЗапасов.ВидЦены КАК ВидЦены,
	|	ВидыЗапасов.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ДублиВидовЗапасов
	|ИЗ
	|	СпрВидыЗапасов КАК ВидыЗапасов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтОтборыДублей КАК Отборы
	|		ПО ВидыЗапасов.Организация = Отборы.Организация
	|			И ВидыЗапасов.ТипЗапасов = Отборы.ТипЗапасов
	|			И ВидыЗапасов.ВладелецТовара = Отборы.ВладелецТовара
	|			И ВидыЗапасов.Соглашение = Отборы.Соглашение
	|			И ВидыЗапасов.Валюта = Отборы.Валюта
	|			И ВидыЗапасов.РеализацияЗапасовДругойОрганизации = Отборы.РеализацияЗапасовДругойОрганизации
	|			И ВидыЗапасов.ВидЗапасовВладельца = Отборы.ВидЗапасовВладельца
	|			И ВидыЗапасов.СпособПередачиТоваров = Отборы.СпособПередачиТоваров
	|			И ВидыЗапасов.УстарелоПоставщик = Отборы.УстарелоПоставщик
	|			И ВидыЗапасов.УстарелоПодразделение = Отборы.УстарелоПодразделение
	|			И ВидыЗапасов.УстарелоМенеджер = Отборы.УстарелоМенеджер
	|			И ВидыЗапасов.УстарелоСделка = Отборы.УстарелоСделка
	|			И ВидыЗапасов.Контрагент = Отборы.Контрагент
	|			И ВидыЗапасов.Договор = Отборы.Договор
	|			И ВидыЗапасов.УстарелоНазначение = Отборы.УстарелоНазначение
	|			И ВидыЗапасов.ГруппаПродукции = Отборы.ГруппаПродукции
	|			И ВидыЗапасов.ВидЦены = Отборы.ВидЦены
	|			И ВидыЗапасов.ГруппаФинансовогоУчета = Отборы.ГруппаФинансовогоУчета
    |			И ВидыЗапасов.НалоговоеНазначение = Отборы.НалоговоеНазначение
	|ГДЕ
	|	ВидыЗапасов.ЭтоДубль
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(Корректные.Ссылка, ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)) КАК КорректныйВидЗапасов,
	|	Дубли.Ссылка КАК Дубль,
	|	Дубли.Ссылка.ПометкаУдаления КАК ПометкаУдаленияДубля
	|ИЗ
	|	ДублиВидовЗапасов КАК Дубли
	|		ЛЕВОЕ СОЕДИНЕНИЕ КорректныеВидыЗапасов КАК Корректные
	|		ПО Дубли.Организация = Корректные.Организация
	|			И Дубли.ТипЗапасов = Корректные.ТипЗапасов
	|			И Дубли.ВладелецТовара = Корректные.ВладелецТовара
	|			И Дубли.Соглашение = Корректные.Соглашение
	|			И Дубли.Валюта = Корректные.Валюта
	|			И Дубли.РеализацияЗапасовДругойОрганизации = Корректные.РеализацияЗапасовДругойОрганизации
	|			И Дубли.ВидЗапасовВладельца = Корректные.ВидЗапасовВладельца
	|			И Дубли.СпособПередачиТоваров = Корректные.СпособПередачиТоваров
	|			И Дубли.УстарелоПоставщик = Корректные.УстарелоПоставщик
	|			И Дубли.УстарелоПодразделение = Корректные.УстарелоПодразделение
	|			И Дубли.УстарелоМенеджер = Корректные.УстарелоМенеджер
	|			И Дубли.УстарелоСделка = Корректные.УстарелоСделка
	|			И Дубли.Контрагент = Корректные.Контрагент
	|			И Дубли.Договор = Корректные.Договор
	|			И Дубли.УстарелоНазначение = Корректные.УстарелоНазначение
	|			И Дубли.ГруппаПродукции = Корректные.ГруппаПродукции
	|			И Дубли.ВидЦены = Корректные.ВидЦены
	|			И Дубли.ГруппаФинансовогоУчета = Корректные.ГруппаФинансовогоУчета
    |			И Дубли.НалоговоеНазначение = Корректные.НалоговоеНазначение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВтОтборыДублей
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ КорректныеВидыЗапасов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ДублиВидовЗапасов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ СпрВидыЗапасов";
	
	УстановитьПараметрыЗапросаПоискаДублей(Запрос);
	
	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.Выполнить();
	
	// Собственные виды запасов.
	ВсеДубли = Результат.Выгрузить();
	
	ДублиБезКорректныхЗаписей = ВсеДубли.НайтиСтроки(Новый Структура("КорректныйВидЗапасов", Справочники.ВидыЗапасов.ПустаяСсылка()));
	
	Если ДублиБезКорректныхЗаписей.Количество() > 0 Тогда
		
		Для Каждого СтрМас Из ДублиБезКорректныхЗаписей Цикл
			НачатьТранзакцию();
			Попытка
				СпрОбъект = СтрМас.Дубль.ПолучитьОбъект();
				СпрОбъект.ЭтоДубль = Ложь;
				СпрОбъект.ДополнительныеСвойства.Вставить("НеПроверятьДубли", Истина);
				СпрОбъект.Записать();
				ЗафиксироватьТранзакцию();
			Исключение
				ОтменитьТранзакцию();
				ТекстСообщения = НСтр("ru='Не отменить отметку ЭтоДубль: %Ссылка% по причине: %Причина%';uk='Не скасувати позначку ЭтоДубль: %Ссылка% через: %Причина%'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%",  СпрОбъект.Ссылка);
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
				ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
					УровеньЖурналаРегистрации.Ошибка,
					Метаданные.Справочники.ВидыЗапасов,
					СпрОбъект.Ссылка,
					ТекстСообщения);
			КонецПопытки;
		КонецЦикла;
		ПометитьДублиВидовЗапасов();
		
	КонецЕсли;
	
	Результат = Запрос.Выполнить();
	
	// Собственные виды запасов.
	Результат = Запрос.Выполнить();
	ВсеДубли = Результат.Выгрузить();
	
	ДублиБезКорректныхЗаписей = ВсеДубли.НайтиСтроки(Новый Структура("КорректныйВидЗапасов", Справочники.ВидыЗапасов.ПустаяСсылка()));
	
	Если ДублиБезКорректныхЗаписей.Количество() > 0 Тогда
		
		ТекстСообщения = НСтр("ru='Не для всех дублей видов запасов удается определить корректный вид запасов. Обратитесь к разработчикам.';uk='Не для всіх дублів видів запасів вдається визначити коректний вид запасів. Зверніться до розробників.'");
		
		ВызватьИсключение ТекстСообщения;
		
	КонецЕсли;
	// Сформируем соответствие элементов к замене.
	СоответствиеЗаписей = Новый Соответствие;
	
	Для каждого СтрМас из ВсеДубли Цикл
		
		СоответствиеЗаписей.Вставить(СтрМас.Дубль, СтрМас.КорректныйВидЗапасов);
		
		Если НЕ СтрМас.ПометкаУдаленияДубля Тогда
			СправочникОбъект = СтрМас.Дубль.ПолучитьОбъект();
			СправочникОбъект.ДополнительныеСвойства.Вставить("НеПроверятьДубли", Истина);
			СправочникОбъект.УстановитьПометкуУдаления(Истина, Ложь);
		КонецЕсли;

	КонецЦикла;
	УстановитьПривилегированныйРежим(Ложь);
	
	Если СоответствиеЗаписей.Количество() > 0 Тогда
	
		// Заменим дубли.
		Исключения = Новый Массив;
		Исключения.Добавить(Метаданные.РегистрыСведений.СтоимостьТоваров);
		Исключения.Добавить(Метаданные.РегистрыСведений.УстаревшиеВидыЗапасовСОстатками);
		
		УстановитьПривилегированныйРежим(Истина);
		ОбщегоНазначенияУТ.ЗаменитьСсылки(СоответствиеЗаписей, Исключения);
		УстановитьПривилегированныйРежим(Ложь);
		
		ЗаменитьДублиВРегистреСтоимостьТоваров(СоответствиеЗаписей);
		
		УстановитьПривилегированныйРежим(Истина);
		РегистрыСведений.УстаревшиеВидыЗапасовСОстатками.ОбновитьЗаписи();
		УстановитьПривилегированныйРежим(Ложь);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаменитьДублиВРегистреСтоимостьТоваров(СоответствиеАналитик)
	
	ТаблицаАналитик = Новый ТаблицаЗначений;
	ТаблицаАналитик.Колонки.Добавить("ЗаменяемаяАналитика", Новый ОписаниеТипов("СправочникСсылка.ВидыЗапасов"));
	ТаблицаАналитик.Колонки.Добавить("НоваяАналитика", 		Новый ОписаниеТипов("СправочникСсылка.ВидыЗапасов"));
	
	Для Каждого КлючИЗначение Из СоответствиеАналитик Цикл
		НоваяСтрока = ТаблицаАналитик.Добавить();
		НоваяСтрока.ЗаменяемаяАналитика = КлючИЗначение.Ключ;
		НоваяСтрока.НоваяАналитика 		= КлючИЗначение.Значение;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ТаблицаАналитик", ТаблицаАналитик);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Т.ЗаменяемаяАналитика КАК ЗаменяемаяАналитика,
	|	Т.НоваяАналитика КАК НоваяАналитика
	|ПОМЕСТИТЬ ВТАналитики
	|ИЗ
	|	&ТаблицаАналитик КАК Т
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ЗаменяемаяАналитика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СтоимостьТоваров.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ВТРегистраторы
	|ИЗ
	|	РегистрСведений.СтоимостьТоваров КАК СтоимостьТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТАналитики КАК ВТАналитики
	|		ПО СтоимостьТоваров.ВидЗапасов = ВТАналитики.ЗаменяемаяАналитика
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтоимостьТоваров.Регистратор КАК Регистратор,
	|	КОНЕЦПЕРИОДА(СтоимостьТоваров.Период, МЕСЯЦ) КАК Период,
	|	СтоимостьТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	СтоимостьТоваров.Организация КАК Организация,
	|	СтоимостьТоваров.РазделУчета КАК РазделУчета,
	|	ЕСТЬNULL(ВТАналитики.НоваяАналитика, СтоимостьТоваров.ВидЗапасов) КАК ВидЗапасов,
	|	СРЕДНЕЕ(СтоимостьТоваров.Стоимость) КАК Стоимость,
	|	СРЕДНЕЕ(СтоимостьТоваров.СтоимостьДопРасходы) КАК СтоимостьДопРасходы,
	|	СРЕДНЕЕ(СтоимостьТоваров.СтоимостьЗабалансовая) КАК СтоимостьЗабалансовая,
	|	СРЕДНЕЕ(СтоимостьТоваров.СтоимостьБезНДС) КАК СтоимостьБезНДС,
	|	СРЕДНЕЕ(СтоимостьТоваров.СтоимостьДопРасходыБезНДС) КАК СтоимостьДопРасходыБезНДС,
	|	СРЕДНЕЕ(СтоимостьТоваров.Трудозатраты) КАК Трудозатраты,
	|	СРЕДНЕЕ(СтоимостьТоваров.ПостатейныеПостоянныеСНДС) КАК ПостатейныеПостоянныеСНДС,
	|	СРЕДНЕЕ(СтоимостьТоваров.ПостатейныеПеременныеСНДС) КАК ПостатейныеПеременныеСНДС,
	|	СРЕДНЕЕ(СтоимостьТоваров.ПостатейныеПостоянныеБезНДС) КАК ПостатейныеПостоянныеБезНДС,
	|	СРЕДНЕЕ(СтоимостьТоваров.ПостатейныеПеременныеБезНДС) КАК ПостатейныеПеременныеБезНДС,
	|	СРЕДНЕЕ(СтоимостьТоваров.СтоимостьРегл) КАК СтоимостьРегл,
	|	СРЕДНЕЕ(СтоимостьТоваров.СтоимостьРеглБезНДС) КАК СтоимостьРеглБезНДС,
	|	СРЕДНЕЕ(СтоимостьТоваров.НДСРегл) КАК НДСРегл,
	|	СРЕДНЕЕ(СтоимостьТоваров.СтоимостьЗабалансоваяРегл) КАК СтоимостьЗабалансоваяРегл,
	|	СРЕДНЕЕ(СтоимостьТоваров.ДопРасходыРегл) КАК ДопРасходыРегл,
	|	СРЕДНЕЕ(СтоимостьТоваров.ТрудозатратыРегл) КАК ТрудозатратыРегл,
	|	СРЕДНЕЕ(СтоимостьТоваров.ПостатейныеПостоянныеРегл) КАК ПостатейныеПостоянныеРегл,
	|	СРЕДНЕЕ(СтоимостьТоваров.ПостатейныеПеременныеРегл) КАК ПостатейныеПеременныеРегл,
	|	СРЕДНЕЕ(СтоимостьТоваров.ПостояннаяРазница) КАК ПостояннаяРазница,
	|	СРЕДНЕЕ(СтоимостьТоваров.ВременнаяРазница) КАК ВременнаяРазница,
	|	СРЕДНЕЕ(СтоимостьТоваров.СтоимостьУпр) КАК СтоимостьУпр,
	|	СРЕДНЕЕ(СтоимостьТоваров.ДопРасходыУпр) КАК ДопРасходыУпр,
	|	СРЕДНЕЕ(СтоимостьТоваров.ТрудозатратыУпр) КАК ТрудозатратыУпр,
	|	СРЕДНЕЕ(СтоимостьТоваров.ПостатейныеПостоянныеУпр) КАК ПостатейныеПостоянныеУпр,
	|	СРЕДНЕЕ(СтоимостьТоваров.ПостатейныеПеременныеУпр) КАК ПостатейныеПеременныеУпр
	|ПОМЕСТИТЬ ВТДвижения
	|ИЗ
	|	РегистрСведений.СтоимостьТоваров КАК СтоимостьТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТРегистраторы КАК ВТРегистраторы
	|		ПО СтоимостьТоваров.Регистратор = ВТРегистраторы.Регистратор
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТАналитики КАК ВТАналитики
	|		ПО СтоимостьТоваров.ВидЗапасов = ВТАналитики.ЗаменяемаяАналитика
	|
	|СГРУППИРОВАТЬ ПО
	|	СтоимостьТоваров.Регистратор,
	|	КОНЕЦПЕРИОДА(СтоимостьТоваров.Период, МЕСЯЦ),
	|	СтоимостьТоваров.АналитикаУчетаНоменклатуры,
	|	СтоимостьТоваров.Организация,
	|	СтоимостьТоваров.РазделУчета,
	|	ЕСТЬNULL(ВТАналитики.НоваяАналитика, СтоимостьТоваров.ВидЗапасов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТРегистраторы.Регистратор КАК Регистратор
	|ИЗ
	|	ВТРегистраторы КАК ВТРегистраторы";
	
	УстановитьПривилегированныйРежим(Истина);
	РезультатЗапроса = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	*
	|ИЗ
	|	ВТДвижения КАК Т
	|ГДЕ
	|	Т.Регистратор = &Регистратор
	|УПОРЯДОЧИТЬ ПО
	|	Т.АналитикаУчетаНоменклатуры,
	|	Т.Организация,
	|	Т.РазделУчета,
	|	Т.ВидЗапасов";
	
	УстановитьПривилегированныйРежим(Истина);
	Пока Выборка.Следующий() Цикл
		
		Запрос.УстановитьПараметр("Регистратор", Выборка.Регистратор);
		
		НаборЗаписей = РегистрыСведений.СтоимостьТоваров.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(Выборка.Регистратор);
		
		НаборЗаписей.Загрузить(Запрос.Выполнить().Выгрузить());
		
		
		НаборЗаписей.Записать(Истина);
		
	КонецЦикла;
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Прочее

Функция ВидЗапасовПоОтборам(ПоляОтбора) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ВидыЗапасов.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ВидыЗапасов КАК ВидыЗапасов
	|ГДЕ
	|	ВидыЗапасов.Организация = &Организация
	|	И ВидыЗапасов.ТипЗапасов = &ТипЗапасов
    |	И ВидыЗапасов.НалоговоеНазначение = &НалоговоеНазначение
	|	И ВидыЗапасов.ВладелецТовара = &ВладелецТовара
	|	И ВидыЗапасов.Соглашение = &Соглашение
	|	И ВидыЗапасов.Валюта = &Валюта
	|	И ВидыЗапасов.ГруппаФинансовогоУчета = &ГруппаФинансовогоУчета
	|	И ВидыЗапасов.Контрагент = &Контрагент
	|	И ВидыЗапасов.Договор = &Договор
	|	И ВидыЗапасов.ГруппаПродукции = &ГруппаПродукции
	|	И ВидыЗапасов.ВидЦены = &ВидЦены
	|	И НЕ ВидыЗапасов.ЭтоДубль
	|	И НЕ ВидыЗапасов.Устаревший";
	
	Запрос.УстановитьПараметр("Организация", ПоляОтбора.Организация);
	Запрос.УстановитьПараметр("ТипЗапасов", ПоляОтбора.ТипЗапасов);
	Запрос.УстановитьПараметр("ВладелецТовара", ПоляОтбора.ВладелецТовара);
	Запрос.УстановитьПараметр("Контрагент", ПоляОтбора.Контрагент);
	Запрос.УстановитьПараметр("Соглашение", ПоляОтбора.Соглашение);
	Запрос.УстановитьПараметр("Договор", ПоляОтбора.Договор);
	Запрос.УстановитьПараметр("Валюта", ПоляОтбора.Валюта);
    Запрос.УстановитьПараметр("НалоговоеНазначение", ПоляОтбора.НалоговоеНазначение);
	Запрос.УстановитьПараметр("ГруппаФинансовогоУчета", ПоляОтбора.ГруппаФинансовогоУчета);
	Запрос.УстановитьПараметр("ГруппаПродукции", ПоляОтбора.ГруппаПродукции);
	Запрос.УстановитьПараметр("ВидЦены", ПоляОтбора.ВидЦены);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		ВидЗапасов = ВыборкаДетальныеЗаписи.Ссылка;
	Иначе
		ВидЗапасов = Неопределено;
	КонецЕсли;
	
	Возврат ВидЗапасов;
	
КонецФункции

Функция СоздатьВидЗапасов(СтруктураПолей)
	
	НачатьТранзакцию();
	Попытка
		
		Блокировка = Новый БлокировкаДанных();
		
		ЭлементБлокировки = Блокировка.Добавить("Справочник.ВидыЗапасов");
		Если ЗначениеЗаполнено(СтруктураПолей.Организация) Тогда
			ЭлементБлокировки.УстановитьЗначение("Организация", СтруктураПолей.Организация);
		КонецЕсли;
		Если ЗначениеЗаполнено(СтруктураПолей.ТипЗапасов) Тогда
			ЭлементБлокировки.УстановитьЗначение("ТипЗапасов", СтруктураПолей.ТипЗапасов);
		КонецЕсли;
		Если ЗначениеЗаполнено(СтруктураПолей.ВладелецТовара) Тогда
			ЭлементБлокировки.УстановитьЗначение("ВладелецТовара", СтруктураПолей.ВладелецТовара);
		КонецЕсли;
		Если ЗначениеЗаполнено(СтруктураПолей.Контрагент) Тогда
			ЭлементБлокировки.УстановитьЗначение("Контрагент", СтруктураПолей.Контрагент);
		КонецЕсли;
		Если ЗначениеЗаполнено(СтруктураПолей.Соглашение) Тогда
			ЭлементБлокировки.УстановитьЗначение("Соглашение", СтруктураПолей.Соглашение);
		КонецЕсли;
		Если ЗначениеЗаполнено(СтруктураПолей.Договор) Тогда
			ЭлементБлокировки.УстановитьЗначение("Договор", СтруктураПолей.Договор);
		КонецЕсли;
		Если ЗначениеЗаполнено(СтруктураПолей.Валюта) Тогда
			ЭлементБлокировки.УстановитьЗначение("Валюта", СтруктураПолей.Валюта);
		КонецЕсли;
        Если ЗначениеЗаполнено(СтруктураПолей.НалоговоеНазначение) Тогда
        	ЭлементБлокировки.УстановитьЗначение("НалоговоеНазначение", СтруктураПолей.НалоговоеНазначение);
        КонецЕсли;
		Если ЗначениеЗаполнено(СтруктураПолей.ГруппаФинансовогоУчета) Тогда
			ЭлементБлокировки.УстановитьЗначение("ГруппаФинансовогоУчета", СтруктураПолей.ГруппаФинансовогоУчета);
		КонецЕсли;
		Если ЗначениеЗаполнено(СтруктураПолей.ГруппаПродукции) Тогда
			ЭлементБлокировки.УстановитьЗначение("ГруппаПродукции", СтруктураПолей.ГруппаПродукции);
		КонецЕсли;
		Если ЗначениеЗаполнено(СтруктураПолей.ВидЦены) Тогда
			ЭлементБлокировки.УстановитьЗначение("ВидЦены", СтруктураПолей.ВидЦены);
		КонецЕсли;
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		
		Блокировка.Заблокировать();
		
		ВидЗапасов = ВидЗапасовПоОтборам(СтруктураПолей); // производится ответственное чтение еще раз
		Если Не ЗначениеЗаполнено(ВидЗапасов) Тогда // вид запасов в ИБ гарантированно отсутствует
			СправочникОбъект = Справочники.ВидыЗапасов.СоздатьЭлемент(); // поэтому можем создать новый
			ЗаполнитьЗначенияСвойств(СправочникОбъект, СтруктураПолей);
			СправочникОбъект.Записать();
			
			ВидЗапасов = СправочникОбъект.Ссылка;
		КонецЕсли;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		
		ОписаниеВидаЗапасов = ОбщегоНазначенияУТКлиентСервер.ПредставлениеСтруктуры(СтруктураПолей);
		
		ТекстСообщения = НСтр("ru='Не удалось записать новый вид запасов с параметрами: %ОписаниеВидаЗапасов% по причине: %Причина%';uk='Не вдалося записати новий вид запасів з параметрами: %ОписаниеВидаЗапасов% через: %Причина%'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеВидаЗапасов%", ОписаниеВидаЗапасов);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
			УровеньЖурналаРегистрации.Ошибка,
			Метаданные.Справочники.ВидыЗапасов,
			,
			ТекстСообщения);
		ВызватьИсключение;
	КонецПопытки;
	
	Возврат ВидЗапасов;
	
КонецФункции

// Возвращает структуру с данными для поиска или создания нового элемента справочника ВидыЗапасов.
//
// Параметры:
//  Организация				 - СправочникСсылка.Организации				 - организация, для которой требуется получить структуру
//  ХозяйственнаяОперация	 - ПеречислениеСсылка.ХозяйственныеОперации	 - хоз. операция, для которой требуется получить структуру
//  РеквизитыДокумента		 - Структура или ВыборкаИзРезультатаЗапроса	 - структура или выборка со значениями.
//	ЦелевоеНалоговоеНазначение - СправочникСсылка.НалоговыеНазначенияАктивовИЗатрат - целевое налоговое назначение
// 
// Возвращаемое значение:
//  Структура - структура с данными.
//
Функция СтруктураВидаЗапасов(Организация, ХозяйственнаяОперация = Неопределено, РеквизитыДокумента = Неопределено, ЦелевоеНалоговоеНазначение = Неопределено) Экспорт
	
	Если Не ЗначениеЗаполнено(Организация) Тогда
		ТекстИсключения = НСтр("ru='Попытка генерации вида запасов с незаполненной организацией.';uk='Спроба генерації виду запасів з незаповненою організацією.'");
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	СтруктураВидЗапасов = ПараметрыОтбораВидовЗапасов(); 
	СтруктураВидЗапасов.ТипЗапасов = Перечисления.ТипыЗапасов.Товар;
	СтруктураВидЗапасов.Организация = Организация;
	
	Если РеквизитыДокумента <> Неопределено Тогда
		
        Если РеквизитыДокумента.ТипЗапасов = Перечисления.ТипыЗапасов.Услуга
			Или РеквизитыДокумента.ТипЗапасов = Перечисления.ТипыЗапасов.АгентскаяУслуга Тогда
			ТекстИсключения = НСтр("ru='Попытка генерации вида запасов для типа запасов ""%ТипЗапасов%"".
|Для этого типа запасов виды запасов не используются.'
|;uk='Спроба генерації виду запасів для типу запасів ""%ТипЗапасов%"".
|Для цього типу запасів види запасів не використовуються.'");
			ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ТипЗапасов%", РеквизитыДокумента.ТипЗапасов);
			ВызватьИсключение ТекстИсключения;
		КонецЕсли;
		
        Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПриемНаКомиссию
            ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПриемНаКомиссиюИмпорт
			ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратТоваровКомитенту
			ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаНаКомиссиюВДругуюОрганизацию
			ИЛИ РеквизитыДокумента.ТипЗапасов = Перечисления.ТипыЗапасов.КомиссионныйТовар Тогда
		 
		 	СтруктураВидЗапасов.ТипЗапасов = Перечисления.ТипыЗапасов.КомиссионныйТовар;
			
			ТекстыИсключения = Новый Массив;
			Если Не ЗначениеЗаполнено(РеквизитыДокумента.ВладелецТовара) Тогда
				ТекстыИсключения.Добавить(НСтр("ru='Не заполнен обязательный реквизит ""Владелец товара"".';uk='Не заповнений обов''язковий реквізит ""Власник товару"".'"));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(РеквизитыДокумента.Валюта) Тогда
				ТекстыИсключения.Добавить(НСтр("ru='Не заполнен обязательный реквизит ""Валюта"".';uk='Не заповнений обов''язковий реквізит ""Валюта"".'"));
			КонецЕсли;
			Если ТекстыИсключения.Количество() Тогда
				ТекстИсключения = НСтр("ru='Попытка генерации вида запасов для типа запасов ""%ТипЗапасов%"".';uk='Спроба генерації виду запасів для типу запасів ""%ТипЗапасов%"".'");
				ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ТипЗапасов%", СтруктураВидЗапасов.ТипЗапасов);
				ВызватьИсключение ТекстИсключения + Символы.ПС + СтрСоединить(ТекстыИсключения, Символы.ПС);
			КонецЕсли;
			
			СтруктураВидЗапасов.ВладелецТовара = РеквизитыДокумента.ВладелецТовара;
			СтруктураВидЗапасов.Контрагент = ?(ЗначениеЗаполнено(РеквизитыДокумента.Контрагент), РеквизитыДокумента.Контрагент, Неопределено);
			СтруктураВидЗапасов.Соглашение = ?(ЗначениеЗаполнено(РеквизитыДокумента.Соглашение), РеквизитыДокумента.Соглашение, Справочники.СоглашенияСПоставщиками.ПустаяСсылка());
			СтруктураВидЗапасов.Договор = ?(ЗначениеЗаполнено(РеквизитыДокумента.Договор), РеквизитыДокумента.Договор, Неопределено);
			СтруктураВидЗапасов.Валюта = РеквизитыДокумента.Валюта;
            СтруктураВидЗапасов.НалоговоеНазначение = РеквизитыДокумента.НалоговоеНазначение;
            
		ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПриемНаХранениеСПравомПродажи
			ИЛИ РеквизитыДокумента.ТипЗапасов = Перечисления.ТипыЗапасов.ТоварНаХраненииСПравомПродажи Тогда
			
		 	СтруктураВидЗапасов.ТипЗапасов = Перечисления.ТипыЗапасов.ТоварНаХраненииСПравомПродажи;
			
			ТекстыИсключения = Новый Массив;
			Если Не ЗначениеЗаполнено(РеквизитыДокумента.ВладелецТовара) Тогда
				ТекстыИсключения.Добавить(НСтр("ru='Не заполнен обязательный реквизит ""Владелец товара"".';uk='Не заповнений обов''язковий реквізит ""Власник товару"".'"));
			КонецЕсли;
			
			ТипДоговораПоставкаПодПринципала = Ложь;
			Если Не ЗначениеЗаполнено(РеквизитыДокумента.Договор) Тогда
				ТекстыИсключения.Добавить(НСтр("ru='Не заполнен обязательный реквизит ""Договор"".';uk='Не заповнений обов''язковий реквізит ""Договір"".'"));
			Иначе
				ТипДоговора = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РеквизитыДокумента.Договор, "ТипДоговора");
				ТипДоговораПоставкаПодПринципала = (ТипДоговора = Перечисления.ТипыДоговоров.СКомитентомНаЗакупку);
			КонецЕсли;
			
			
			Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыкупПринятыхНаХранениеТоваров
				И ТекстыИсключения.Количество() = 1 И Не ЗначениеЗаполнено(РеквизитыДокумента.ВидЦены) Тогда
				ТекстИсключения = НСтр("ru='Недостаточно товаров для выкупа с хранения.
|В текущем режиме работы отрицательный остаток товаров организаций не контролируется, но необходимо указать вид цены.'
|;uk='Недостатньо товарів для викупу зі зберігання. 
|У поточному режимі роботи від''ємний залишок товарів організацій не контролюється, але необхідно вказати вид ціни.'");
				ВызватьИсключение ТекстИсключения;
			ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОтгрузкаПринятыхСПравомПродажиТоваровСХранения
				И ТекстыИсключения.Количество() > 0 Тогда
				ТекстИсключения = НСтр("ru='Недостаточно товаров для отгрузки с хранения.
|Даже если контроль остатков отключен, программа не поддерживает отгрузку товаров с ответственного хранения ""в минус"".'
|;uk='Недостатньо товарів для відвантаження зі зберігання. 
|Навіть якщо контроль залишків відключений, програма не підтримує відвантаження товарів з відповідального зберігання ""в мінус"".'");
				ВызватьИсключение ТекстИсключения;
			КонецЕсли;
			
			Если ТекстыИсключения.Количество() Тогда
				ТекстИсключения = НСтр("ru='Попытка генерации вида запасов для типа запасов ""%ТипЗапасов%"".';uk='Спроба генерації виду запасів для типу запасів ""%ТипЗапасов%"".'");
				ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ТипЗапасов%", СтруктураВидЗапасов.ТипЗапасов);
				ВызватьИсключение ТекстИсключения + Символы.ПС + СтрСоединить(ТекстыИсключения, Символы.ПС);
			КонецЕсли;
			
			СтруктураВидЗапасов.ВладелецТовара = РеквизитыДокумента.ВладелецТовара;
			СтруктураВидЗапасов.Контрагент = ?(ЗначениеЗаполнено(РеквизитыДокумента.Контрагент), РеквизитыДокумента.Контрагент, Неопределено);
			СтруктураВидЗапасов.Договор = РеквизитыДокумента.Договор;
			СтруктураВидЗапасов.ВидЦены = РеквизитыДокумента.ВидЦены;
            
		ИначеЕсли РеквизитыДокумента.ТипЗапасов = Перечисления.ТипыЗапасов.СобственныйТоварВПути
			ИЛИ РеквизитыДокумента.ТипЗапасов = Перечисления.ТипыЗапасов.СобственныйТоварПоНеотфактурованнойПоставке Тогда
			
			СтруктураВидЗапасов.ТипЗапасов = РеквизитыДокумента.ТипЗапасов;
            СтруктураВидЗапасов.НалоговоеНазначение = РеквизитыДокумента.НалоговоеНазначение;
			
		//++ НЕ УТ
		ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеОтДавальца
			ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДавальцу
			ИЛИ РеквизитыДокумента.ТипЗапасов = Перечисления.ТипыЗапасов.МатериалДавальца Тогда
		 
		 	СтруктураВидЗапасов.ТипЗапасов = Перечисления.ТипыЗапасов.МатериалДавальца;
			
			Если Не ЗначениеЗаполнено(РеквизитыДокумента.ВладелецТовара) Тогда
				ТекстИсключения = НСтр("ru='Попытка генерации вида запасов для типа запасов ""%ТипЗапасов%"".
|Не заполнен обязательный реквизит ""Владелец товара"".'
|;uk='Спроба генерації виду запасів для типу запасів ""%ТипЗапасов%"".
|Не заповнений обов''язковий реквізит ""Власник товару"".'");
				ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ТипЗапасов%", СтруктураВидЗапасов.ТипЗапасов);
				ВызватьИсключение ТекстИсключения;
			КонецЕсли;
			
			СтруктураВидЗапасов.ВладелецТовара = РеквизитыДокумента.ВладелецТовара;
			СтруктураВидЗапасов.Контрагент = ?(ЗначениеЗаполнено(РеквизитыДокумента.Контрагент), РеквизитыДокумента.Контрагент, Неопределено);
			СтруктураВидЗапасов.Договор = ?(ЗначениеЗаполнено(РеквизитыДокумента.Договор), РеквизитыДокумента.Договор, Неопределено);
            
		ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПроизводствоИзДавальческогоСырья
			ИЛИ РеквизитыДокумента.ТипЗапасов = Перечисления.ТипыЗапасов.ПродукцияДавальца Тогда
		 
		 	СтруктураВидЗапасов.ТипЗапасов = Перечисления.ТипыЗапасов.ПродукцияДавальца;
			
			Если Не ЗначениеЗаполнено(РеквизитыДокумента.ВладелецТовара) Тогда
				ТекстИсключения = НСтр("ru='Попытка генерации вида запасов для типа запасов ""%ТипЗапасов%"".
|Не заполнен обязательный реквизит ""Владелец товара"".'
|;uk='Спроба генерації виду запасів для типу запасів ""%ТипЗапасов%"".
|Не заповнений обов''язковий реквізит ""Власник товару"".'");
				ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ТипЗапасов%", СтруктураВидЗапасов.ТипЗапасов);
				ВызватьИсключение ТекстИсключения;
			КонецЕсли;
			
			СтруктураВидЗапасов.ВладелецТовара = РеквизитыДокумента.ВладелецТовара;
			СтруктураВидЗапасов.Контрагент = ?(ЗначениеЗаполнено(РеквизитыДокумента.Контрагент), РеквизитыДокумента.Контрагент, Неопределено);
			СтруктураВидЗапасов.Договор = ?(ЗначениеЗаполнено(РеквизитыДокумента.Договор), РеквизитыДокумента.Договор, Неопределено);
            
		
		ИначеЕсли РеквизитыДокумента.ТипЗапасов = Перечисления.ТипыЗапасов.ТоварТребующийПодтвержденияВыпуска Тогда
			
			СтруктураВидЗапасов.ТипЗапасов = Перечисления.ТипыЗапасов.ТоварТребующийПодтвержденияВыпуска;
			СтруктураВидЗапасов.ВладелецТовара = РеквизитыДокумента.ВладелецТовара;
			СтруктураВидЗапасов.Контрагент = ?(ЗначениеЗаполнено(РеквизитыДокумента.Контрагент), РеквизитыДокумента.Контрагент, Неопределено);
			СтруктураВидЗапасов.Договор = ?(ЗначениеЗаполнено(РеквизитыДокумента.Договор), РеквизитыДокумента.Договор, Неопределено);
		//-- НЕ УТ
			
		Иначе
			Если ЗначениеЗаполнено(РеквизитыДокумента.ТипЗапасов) Тогда
				СтруктураВидЗапасов.ТипЗапасов = РеквизитыДокумента.ТипЗапасов;
			Иначе
				СтруктураВидЗапасов.ТипЗапасов = Перечисления.ТипыЗапасов.Товар;
            КонецЕсли;
            ИспользоватьРаздельныйУчетПоНалогообложению = ПолучитьФункциональнуюОпцию("ИспользоватьРаздельныйУчетПоНалогообложению", Новый Структура("Организация", Организация));
            Если Не ИспользоватьРаздельныйУчетПоНалогообложению Тогда
                Если ТипЗнч(РеквизитыДокумента) = Тип("СправочникОбъект.ВидыЗапасов") Тогда
                    НалоговоеНазначениеОрганизации = Справочники.Организации.НалоговоеНазначениеНДС(РеквизитыДокумента.Организация, ТекущаяДатаСеанса());
                Иначе
                    НалоговоеНазначениеОрганизации = РеквизитыДокумента.НалоговоеНазначениеОрганизации;
                КонецЕсли; 
				СтруктураВидЗапасов.НалоговоеНазначение = НалоговоеНазначениеОрганизации;
			Иначе
				СтруктураВидЗапасов.НалоговоеНазначение = РеквизитыДокумента.НалоговоеНазначение;
			КонецЕсли;
		КонецЕсли;
		
		Если ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета") Тогда
			СтруктураВидЗапасов.ГруппаФинансовогоУчета = РеквизитыДокумента.ГруппаФинансовогоУчета;
		КонецЕсли;
		
		//++ НЕ УТ
		Если ПолучитьФункциональнуюОпцию("АналитическийУчетПоГруппамПродукции") Тогда
			СтруктураВидЗапасов.ГруппаПродукции = РеквизитыДокумента.ГруппаПродукции;
		КонецЕсли;
		//-- НЕ УТ
		
	КонецЕсли;
	
	ПараметрыОтбораВидовЗапасов = ПараметрыОтбораВидовЗапасов(); 
	
	Для Каждого КлючИЗначение Из ПараметрыОтбораВидовЗапасов Цикл
		Если Не ЗначениеЗаполнено(СтруктураВидЗапасов[КлючИЗначение.Ключ]) Тогда
			СтруктураВидЗапасов[КлючИЗначение.Ключ] = КлючИЗначение.Значение;
		КонецЕсли;
    КонецЦикла;
    
	Если Организация = Справочники.Организации.УправленческаяОрганизация Тогда
	    СтруктураВидЗапасов.НалоговоеНазначение = Справочники.Организации.НалоговоеНазначениеУправленческойОрганизации();
	ИначеЕсли ЦелевоеНалоговоеНазначение <> Неопределено Тогда
		СтруктураВидЗапасов.НалоговоеНазначение = ЦелевоеНалоговоеНазначение;
    КонецЕсли;	
	
	
	Возврат СтруктураВидЗапасов;
	
КонецФункции

// Возвращает параметры отбора видов запасов.
//
// Возвращаемое значение:
// 	Структура - содержит следующие ключи:
// * Организация - СправочникСсылка.Организации - организация, от имени которой будет оформляться реализация товаров.
// * ТипЗапасов - ПеречислениеСсылка.ТипыЗапасов, Массив из ПеречислениеСсылка.ТипыЗапасов - доступные типы запасов товаров.
// * ВладелецТовара - СправочникСсылка.Организации, СправочникСсылка.Партнеры - владелец товаров.
// * Контрагент - СправочникСсылка.Организации, СправочникСсылка.Партнеры - контрагент, с которым заключается договор на реализацию товаров.
// * Соглашение - СправочникСсылка.СоглашенияСПоставщиками - соглашение, в рамках которого оформляется поступление товаров.
// * Договор - СправочникСсылка.ДоговорыКонтрагентов, СправочникСсылка.ДоговорыМеждуОрганизациями, Массив из СправочникСсылка.ДоговорыКонтрагентов, СправочникСсылка.ДоговорыМеждуОрганизациями - договор, в рамках которого оформляется реализация товаров.
// * Валюта - СправочникСсылка.Валюты - валюта, по которой осуществляются взаиморасчеты с владельцем товаров.
// * НалогообложениеНДС - ПеречислениеСсылка.ТипыНалогообложенияНДС - тип налогообложения реализации товаров, облагаемой налогом на добавленную стоимость.
// * ГруппаФинансовогоУчета - СправочникСсылка.ГруппыФинансовогоУчетаНоменклатуры - группа финансового учета товаров.
// * ГруппаПродукции - СправочникСсылка.ГруппыАналитическогоУчетаНоменклатуры - вид продукции.
// * ВидЦены - СправочникСсылка.ВидыЦенПоставщиков - вид цены, по которой зафиксировано поступление товара.
//
Функция ПараметрыОтбораВидовЗапасов() Экспорт
	
	Параметры = Новый Структура("
	|Организация,
	|ТипЗапасов,
	|ВладелецТовара,
	|Контрагент,
	|Соглашение,
	|Договор,
	|Валюта,
    |НалоговоеНазначение,
	|ГруппаФинансовогоУчета,
	|ГруппаПродукции,
	|ВидЦены
	|");
	
	Параметры.Организация = Справочники.Организации.ПустаяСсылка();
	Параметры.ВладелецТовара = Неопределено;
	Параметры.Контрагент = Неопределено;
	Параметры.Договор = Неопределено;
	Параметры.Соглашение = Справочники.СоглашенияСПоставщиками.ПустаяСсылка();
	Параметры.Валюта = Справочники.Валюты.ПустаяСсылка();
    Параметры.НалоговоеНазначение = Справочники.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка();
	Параметры.ТипЗапасов = Перечисления.ТипыЗапасов.ПустаяСсылка();
	Параметры.ГруппаФинансовогоУчета = Справочники.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка();
	Параметры.ГруппаПродукции = Справочники.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка();
	Параметры.ВидЦены = Справочники.ВидыЦенПоставщиков.ПустаяСсылка();
	
	Возврат Параметры;
	
КонецФункции

Функция ВидЗапасовПоОтборамКэш(ПараметрыАналитики)
	
	СтруктураАналитики = ПараметрыОтбораВидовЗапасов();
	ЗаполнитьЗначенияСвойств(СтруктураАналитики, ПараметрыАналитики);
	
	Результат = ЗначениеНастроекПовтИсп.ВидЗапасовПоОтборам(СтруктураАналитики.Организация,
		СтруктураАналитики.ТипЗапасов,
		СтруктураАналитики.ВладелецТовара,
		СтруктураАналитики.Контрагент,
		СтруктураАналитики.Соглашение,
		СтруктураАналитики.Договор,
		СтруктураАналитики.Валюта,
        СтруктураАналитики.НалоговоеНазначение,
		СтруктураАналитики.ГруппаФинансовогоУчета,
		СтруктураАналитики.ГруппаПродукции,
		СтруктураАналитики.ВидЦены);
		
	Если Не ЗначениеЗаполнено(Результат) Тогда
		Результат = СоздатьВидЗапасов(СтруктураАналитики);
		ОбновитьПовторноИспользуемыеЗначения();
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область ОбновлениеИнформационнойБазы


// Добавляет в список процедуры-обработчики обновления данных ИБ
// для всех поддерживаемых версий библиотеки или конфигурации.
// Вызывается перед началом обновления данных ИБ для построения плана обновления.
//
//  Обработчики - ТаблицаЗначений - описание полей, см. в процедуре
//                ОбновлениеИнформационнойБазы.НоваяТаблицаОбработчиковОбновления.
//
// Пример добавления процедуры-обработчика в список:
//  Обработчик = Обработчики.Добавить();
//  Обработчик.Версия              = "1.1.0.0";
//  Обработчик.Процедура           = "ОбновлениеИБ.ПерейтиНаВерсию_1_1_0_0";
//  Обработчик.МонопольныйРежим    = Ложь;
//
// Параметры:
// 	Обработчики - см. ОбновлениеИнформационнойБазы.НоваяТаблицаОбработчиковОбновления
//
Процедура ОписаниеОбработчиковОбновления(Обработчики) Экспорт

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.5.4.300";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("2e05deaa-58c8-456b-ac09-5fda6f407c73");
	Обработчик.Процедура = "Справочники.ВидыЗапасов.ОбработатьДанныеДляПереходаНаВерсию25Монопольно";
	Обработчик.ЧитаемыеОбъекты = "Справочник.ВидыЗапасов";
	Обработчик.ИзменяемыеОбъекты = "Справочник.ВидыЗапасов";
	Обработчик.Комментарий = НСтр("ru='Заполняет реквизит ""Группы финансового учета"" в справочнике ""Виды запасов"".
                                   |Производит поиск дублей в справочнике ""Виды запасов"", у найденных элементов проставляет в Истина реквизит ЭтоДубль.
                                   |Производит поиск устаревших видов запасов в справочнике ""Виды запасов"", у найденных элементов проставляет в Истина реквизит Устаревший.'
                                   |;uk='Заповнює реквізит ""Групи фінансового обліку"" у довіднику ""Види запасів"".
                                   |Проводить пошук дублів у довіднику ""Види запасів"", у знайдених елементів проставляє в Истина реквізит ЭтоДубль.
                                   |Здійснює пошук застарілих видів запасів у довіднику ""Види запасів"", у знайдених елементів проставляє в Истина реквізит Устаревший.'");

КонецПроцедуры	

// Монопольный обработчик обновления УТ 3.5.4
Процедура ОбработатьДанныеДляПереходаНаВерсию25Монопольно() Экспорт
	
	ОбработатьДанныеДляПереходаНаНовуюВерсиюМонопольно();
	
	ПометитьУстаревшиеВидыЗапасов();
	ПометитьДублиВидовЗапасов();
	
	//++ НЕ УТ
	СоздатьВидыЗапасовПоОтчетамПереработчика();
	//-- НЕ УТ
	
КонецПроцедуры

// Обработчик обновления УТ 3.5.4,
// заполняет реквизит "Группа финансового учета" справочника "ВидыЗапасов",
// обновляет справочник по данным регистра сведений.
Процедура ОбработатьДанныеДляПереходаНаНовуюВерсиюМонопольно() Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВидыЗапасов.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТДанныеДляОбработки
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ВидыЗапасов.Ссылка КАК Ссылка
	|	ИЗ
	|		Справочник.ВидыЗапасов КАК ВидыЗапасов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасовВладельца
	|			ПО ВидыЗапасовВладельца.Ссылка = ВидыЗапасов.ВидЗапасовВладельца
	|	ГДЕ
	|		НЕ ВидыЗапасов.ПометкаУдаления
	|		И ВидыЗапасов.РеализацияЗапасовДругойОрганизации
	|		И ВидыЗапасов.ГруппаФинансовогоУчета <> ВидыЗапасовВладельца.ГруппаФинансовогоУчета
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ВидыЗапасов.Ссылка КАК Ссылка
	|	ИЗ
	|		Справочник.ВидыЗапасов КАК ВидыЗапасов
	|	ГДЕ
	|		НЕ ВидыЗапасов.ПометкаУдаления
	|		И ВидыЗапасов.ВладелецТовара <> НЕОПРЕДЕЛЕНО
	|		И ВидыЗапасов.УстарелоПоставщик <> ВидыЗапасов.ВладелецТовара
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ВидыЗапасов.Ссылка КАК Ссылка
	|	ИЗ
	|		Справочник.ВидыЗапасов КАК ВидыЗапасов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.УдалитьАналитикаВидовЗапасов КАК Аналитика
	|			ПО ВидыЗапасов.Ссылка = Аналитика.КлючАналитики
	|	ГДЕ
	|		ВидыЗапасов.Организация <> Аналитика.Организация
	|		ИЛИ ВидыЗапасов.ТипЗапасов <> Аналитика.ТипЗапасов
	|		ИЛИ ВидыЗапасов.НалоговоеНазначение <> Аналитика.НалоговоеНазначение
	|		ИЛИ (ВидыЗапасов.УстарелоПоставщик <> НЕОПРЕДЕЛЕНО
	|			И ВидыЗапасов.УстарелоПоставщик <> Аналитика.Поставщик)
	|		ИЛИ (ВидыЗапасов.ВладелецТовара <> НЕОПРЕДЕЛЕНО
	|			И ВидыЗапасов.ВладелецТовара <> Аналитика.Поставщик)
	|		ИЛИ ВидыЗапасов.Соглашение <> Аналитика.Соглашение
	|		ИЛИ ВидыЗапасов.Валюта <> Аналитика.Валюта
	|		ИЛИ ВидыЗапасов.ГруппаФинансовогоУчета <> Аналитика.ГруппаФинансовогоУчета
	|		ИЛИ ВидыЗапасов.Контрагент <> Аналитика.Контрагент
	|		ИЛИ ВидыЗапасов.Договор <> Аналитика.Договор
	|		ИЛИ ВидыЗапасов.ГруппаПродукции <> Аналитика.ГруппаПродукции
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТоварыОрганизаций.ВидЗапасов
	|	ИЗ
	|		РегистрНакопления.ТоварыОрганизаций КАК ТоварыОрганизаций
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриобретениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|			ПО ТоварыОрганизаций.Регистратор = ПоступлениеТоваровУслуг.Ссылка
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК СправочникВидыЗапасов
	|			ПО ТоварыОрганизаций.ВидЗапасов = СправочникВидыЗапасов.Ссылка
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Константа.ФормироватьВидыЗапасовПоПоставщикам КАК ФормироватьВидыЗапасовПоПоставщикам
	|			ПО ИСТИНА
	|	ГДЕ
	|		ТоварыОрганизаций.Активность
	|		И ТоварыОрганизаций.Регистратор ССЫЛКА Документ.ПриобретениеТоваровУслуг
	|		И СправочникВидыЗапасов.УстарелоПоставщик = НЕОПРЕДЕЛЕНО
	|		И ПоступлениеТоваровУслуг.Партнер <> ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
	|		И ФормироватьВидыЗапасовПоПоставщикам.Значение = ИСТИНА
	|
	|	СГРУППИРОВАТЬ ПО
	|		ТоварыОрганизаций.ВидЗапасов
	|
	|	ИМЕЮЩИЕ
	|		КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПоступлениеТоваровУслуг.Партнер) = 1
	|
	|	) КАК ВидыЗапасов
	|;
	|/////////////////////////////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КОбработке.Ссылка КАК Ссылка,
	|	КОбработке.Ссылка.ВерсияДанных КАК ВерсияДанных,
	|	МАКСИМУМ(
	|		ВЫБОР КОГДА НЕ СправочникВидыЗапасов.ПометкаУдаления
	|			И СправочникВидыЗапасов.РеализацияЗапасовДругойОрганизации
	|			И СправочникВидыЗапасов.ГруппаФинансовогоУчета <> ВидыЗапасовВладельца.ГруппаФинансовогоУчета
	|			ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ
	|	) КАК НекорректнаяГФУ,
	|	МАКСИМУМ(
	|		ВЫБОР КОГДА СправочникВидыЗапасов.ВладелецТовара <> НЕОПРЕДЕЛЕНО
	|				И СправочникВидыЗапасов.УстарелоПоставщик <> СправочникВидыЗапасов.ВладелецТовара
	|			ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ
	|	) КАК НекорректныйПоставщик,
	|	МАКСИМУМ(
	|		ВЫБОР КОГДА СправочникВидыЗапасов.Организация <> Аналитика.Организация
	|			ИЛИ СправочникВидыЗапасов.ТипЗапасов <> Аналитика.ТипЗапасов
	|			ИЛИ СправочникВидыЗапасов.НалоговоеНазначение <> Аналитика.НалоговоеНазначение
	|			ИЛИ (СправочникВидыЗапасов.УстарелоПоставщик <> НЕОПРЕДЕЛЕНО
	|				И СправочникВидыЗапасов.УстарелоПоставщик <> Аналитика.Поставщик)
	|			ИЛИ (СправочникВидыЗапасов.ВладелецТовара <> НЕОПРЕДЕЛЕНО
	|				И СправочникВидыЗапасов.ВладелецТовара <> Аналитика.Поставщик)
	|			ИЛИ СправочникВидыЗапасов.Соглашение <> Аналитика.Соглашение
	|			ИЛИ СправочникВидыЗапасов.Валюта <> Аналитика.Валюта
	|			ИЛИ СправочникВидыЗапасов.ГруппаФинансовогоУчета <> Аналитика.ГруппаФинансовогоУчета
	|			ИЛИ СправочникВидыЗапасов.Контрагент <> Аналитика.Контрагент
	|			ИЛИ СправочникВидыЗапасов.Договор <> Аналитика.Договор
	|			ИЛИ СправочникВидыЗапасов.ГруппаПродукции <> Аналитика.ГруппаПродукции
	|			ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ
	|	) КАК ТребуетсяОбновлениеПоДаннымРС,
	|	МАКСИМУМ(Аналитика.Организация) КАК Организация,
	|	МАКСИМУМ(Аналитика.ТипЗапасов) КАК ТипЗапасов,
	|	МАКСИМУМ(Аналитика.НалоговоеНазначение) КАК НалоговоеНазначение,
	|	МАКСИМУМ(Аналитика.Поставщик) КАК Поставщик,
	|	МАКСИМУМ(Аналитика.Соглашение) КАК Соглашение,
	|	МАКСИМУМ(Аналитика.Валюта) КАК Валюта,
	|	МАКСИМУМ(Аналитика.АналитикаПредназначения) КАК АналитикаПредназначения,
	|	МАКСИМУМ(Аналитика.ГруппаФинансовогоУчета) КАК ГруппаФинансовогоУчета,
	|	МАКСИМУМ(Аналитика.Контрагент) КАК Контрагент,
	|	МАКСИМУМ(Аналитика.Договор) КАК Договор,
	|	МАКСИМУМ(Аналитика.ГруппаПродукции) КАК ГруппаПродукции,
	|	МАКСИМУМ(ВидыЗапасовВладельца.Ссылка) КАК ВидЗапасовВладельца,
	|	МАКСИМУМ(ВЫБОР 
	|			КОГДА СправочникВидыЗапасов.УстарелоПоставщик = НЕОПРЕДЕЛЕНО
	|					И ФормироватьВидыЗапасовПоПоставщикам.Значение = ИСТИНА
	|					И НЕ ПоступлениеТоваровУслуг.Партнер ЕСТЬ NULL
	|					И ПоступлениеТоваровУслуг.Партнер <> ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ТребуетсяВосстановитьПоставщика,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПоступлениеТоваровУслуг.Партнер) = 1 КАК ВПоступленияхОдинПоставщик,
	|	МАКСИМУМ(ПоступлениеТоваровУслуг.Партнер) КАК ПоступлениеТоваровУслугПартнер
	|ИЗ
	|	ВТДанныеДляОбработки КАК КОбработке
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК СправочникВидыЗапасов
	|			ПО СправочникВидыЗапасов.Ссылка = КОбработке.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УдалитьАналитикаВидовЗапасов КАК Аналитика
	|		ПО КОбработке.Ссылка = Аналитика.КлючАналитики
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасовВладельца
	|			ПО ВидыЗапасовВладельца.Ссылка = СправочникВидыЗапасов.ВидЗапасовВладельца
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыОрганизаций КАК ТоварыОрганизаций
	|			ПО КОбработке.Ссылка = ТоварыОрганизаций.ВидЗапасов
	|			И ТоварыОрганизаций.Регистратор ССЫЛКА Документ.ПриобретениеТоваровУслуг
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриобретениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|			ПО ПоступлениеТоваровУслуг.Ссылка = ТоварыОрганизаций.Регистратор
	|			И ПоступлениеТоваровУслуг.Партнер <> ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Константа.ФормироватьВидыЗапасовПоПоставщикам КАК ФормироватьВидыЗапасовПоПоставщикам
	|			ПО ИСТИНА
	|
	|СГРУППИРОВАТЬ ПО
	|	КОбработке.Ссылка,
	|	КОбработке.Ссылка.ВерсияДанных
	|");
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ТекстДанныеЗаполненияПоРС = "
	|ВЫБРАТЬ
	|	Аналитика.Организация,
	|	Аналитика.ТипЗапасов,
	|	Аналитика.НалоговоеНазначение,
	|	Аналитика.Поставщик,
	|	Аналитика.Соглашение,
	|	Аналитика.Валюта,
	|	Аналитика.АналитикаПредназначения,
	|	Аналитика.ГруппаФинансовогоУчета,
	|	Аналитика.Договор,
	|	Аналитика.Контрагент,
	|	Аналитика.ГруппаПродукции
	|ИЗ
	|	РегистрСведений.УдалитьАналитикаВидовЗапасов КАК Аналитика
	|ГДЕ
	|	Аналитика.КлючАналитики = &КлючАналитики
	|";
	
	Запрос.Текст = ТекстДанныеЗаполненияПоРС;
	
	Пока Выборка.Следующий() Цикл
		НачатьТранзакцию();
		Попытка
			
			СправочникОбъект = Выборка.Ссылка.ПолучитьОбъект();
		
			ОбъектИзменен = Ложь;
		
			Если Выборка.НекорректнаяГФУ Тогда
				
				СправочникОбъект.ГруппаФинансовогоУчета = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СправочникОбъект.ВидЗапасовВладельца, "ГруппаФинансовогоУчета");
				СправочникОбъект.Наименование = СправочникОбъект.НаименованиеВидаЗапасов(СправочникОбъект);
				
				ОбъектИзменен = Истина;
				
			КонецЕсли;
		
			Если Выборка.НекорректныйПоставщик Тогда
				
				СправочникОбъект.УстарелоПоставщик = СправочникОбъект.ВладелецТовара;
				
				ОбъектИзменен = Истина;
				
			КонецЕсли;
		
			Если Выборка.ТребуетсяОбновлениеПоДаннымРС Тогда
				
				Запрос.УстановитьПараметр("КлючАналитики", Выборка.Ссылка);
				ДанныеПоРС = Запрос.Выполнить().Выгрузить()[0];
				
				Если СправочникОбъект.Организация <> ДанныеПоРС.Организация
					И ЗначениеЗаполнено(ДанныеПоРС.Организация) Тогда
					СправочникОбъект.Организация = ДанныеПоРС.Организация;
				КонецЕсли;
				
				Если СправочникОбъект.ТипЗапасов <> ДанныеПоРС.ТипЗапасов
					И ЗначениеЗаполнено(ДанныеПоРС.ТипЗапасов) Тогда
					СправочникОбъект.ТипЗапасов = ДанныеПоРС.ТипЗапасов;
				КонецЕсли;
				
				Если СправочникОбъект.НалоговоеНазначение <> ДанныеПоРС.НалоговоеНазначение
					И ЗначениеЗаполнено(ДанныеПоРС.НалоговоеНазначение) Тогда
					СправочникОбъект.НалоговоеНазначение = ДанныеПоРС.НалоговоеНазначение;
				КонецЕсли;
				
				Если СправочникОбъект.УстарелоПоставщик <> ДанныеПоРС.Поставщик
					И СправочникОбъект.ВладелецТовара = ДанныеПоРС.Поставщик Тогда
					СправочникОбъект.УстарелоПоставщик = ДанныеПоРС.Поставщик;
				КонецЕсли;
				
				Если СправочникОбъект.Соглашение <> ДанныеПоРС.Соглашение
					И ЗначениеЗаполнено(ДанныеПоРС.Соглашение) Тогда
					СправочникОбъект.Соглашение = ДанныеПоРС.Соглашение;
				КонецЕсли;
				
				Если СправочникОбъект.Валюта <> ДанныеПоРС.Валюта
					И ЗначениеЗаполнено(ДанныеПоРС.Валюта) Тогда
					СправочникОбъект.Валюта = ДанныеПоРС.Валюта;
				КонецЕсли;
				
				Если СправочникОбъект.ГруппаФинансовогоУчета <> ДанныеПоРС.ГруппаФинансовогоУчета
					И ЗначениеЗаполнено(ДанныеПоРС.ГруппаФинансовогоУчета)
					И НЕ СправочникОбъект.РеализацияЗапасовДругойОрганизации Тогда
					СправочникОбъект.ГруппаФинансовогоУчета = ДанныеПоРС.ГруппаФинансовогоУчета;
				КонецЕсли;
				
				Если СправочникОбъект.Контрагент <> ДанныеПоРС.Контрагент
					И ЗначениеЗаполнено(ДанныеПоРС.Контрагент) Тогда
					СправочникОбъект.Контрагент = ДанныеПоРС.Контрагент;
				КонецЕсли;
				
				Если СправочникОбъект.Договор <> ДанныеПоРС.Договор
					И ЗначениеЗаполнено(ДанныеПоРС.Договор) Тогда
					СправочникОбъект.Договор = ДанныеПоРС.Договор;
				КонецЕсли;
				
				Если СправочникОбъект.ГруппаПродукции <> ДанныеПоРС.ГруппаПродукции
					И ЗначениеЗаполнено(ДанныеПоРС.ГруппаПродукции) Тогда
					СправочникОбъект.ГруппаПродукции = ДанныеПоРС.ГруппаПродукции;
				КонецЕсли;
				
				ОбъектИзменен = Истина;
			КонецЕсли;
			
			Если Выборка.ТребуетсяВосстановитьПоставщика И Выборка.ВПоступленияхОдинПоставщик Тогда
				СправочникОбъект.УстарелоПоставщик = Выборка.ПоступлениеТоваровУслугПартнер;
				
				ОбъектИзменен = Истина;
			КонецЕсли;

			Если ОбъектИзменен Тогда
				ОбновлениеИнформационнойБазы.ЗаписатьОбъект(СправочникОбъект);
			КонецЕсли;
			
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			ТекстСообщения = НСтр("ru='Не удалось обработать : %Ссылка% по причине: %Причина%';uk='Не вдалося обробити : %Ссылка% по причині: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", Выборка.Ссылка);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(
				ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Предупреждение,
				Метаданные.Справочники.ВидыЗапасов,
				Выборка.Ссылка,
				ТекстСообщения
			);
		КонецПопытки;
	КонецЦикла;
	
КонецПроцедуры

Процедура ПометитьУстаревшиеВидыЗапасов()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВидыЗапасов.Ссылка КАК Ссылка,
	|	ВидыЗапасов.Наименование КАК Наименование,
	|	ВидыЗапасов.Организация КАК Организация,
	|	ВидыЗапасов.ТипЗапасов КАК ТипЗапасов,
	|	ВидыЗапасов.НалоговоеНазначение КАК НалоговоеНазначение,
	|	ВидыЗапасов.ВладелецТовара КАК ВладелецТовара,
	|	ВидыЗапасов.Соглашение КАК Соглашение,
	|	ВидыЗапасов.Валюта КАК Валюта,
	|	ВидыЗапасов.РеализацияЗапасовДругойОрганизации КАК РеализацияЗапасовДругойОрганизации,
	|	ВидыЗапасов.ВидЗапасовВладельца КАК ВидЗапасовВладельца,
	|	ВидыЗапасов.СпособПередачиТоваров КАК СпособПередачиТоваров,
	|	ВидыЗапасов.УстарелоПоставщик КАК УстарелоПоставщик,
	|	ВидыЗапасов.УстарелоПредназначение КАК УстарелоПредназначение,
	|	ВидыЗапасов.УстарелоПодразделение КАК УстарелоПодразделение,
	|	ВидыЗапасов.УстарелоМенеджер КАК УстарелоМенеджер,
	|	ВидыЗапасов.УстарелоСделка КАК УстарелоСделка,
	|	ВидыЗапасов.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	ВидыЗапасов.Контрагент КАК Контрагент,
	|	ВидыЗапасов.Договор КАК Договор,
	|	ВидыЗапасов.УстарелоНазначение КАК УстарелоНазначение,
	|	ВидыЗапасов.ГруппаПродукции КАК ГруппаПродукции,
	|	ВидыЗапасов.ВидЦены КАК ВидЦены,
	|	ВидыЗапасов.Устаревший КАК Устаревший
	|ИЗ
	|	Справочник.ВидыЗапасов КАК ВидыЗапасов
	|ГДЕ
	|	(НЕ ВидыЗапасов.Устаревший
	|			ИЛИ ВидыЗапасов.УстарелоПредназначение = ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПредназначениеНеОграничено)
	|			ИЛИ НЕ ВидыЗапасов.ВладелецТовара В (&ПустыеЗначенияВладельцаТовара)
	|				И ВидыЗапасов.УстарелоПоставщик <> НЕОПРЕДЕЛЕНО
	|			ИЛИ ВидыЗапасов.Контрагент В (&ПустыеСсылкиКонтрагента)
	|			ИЛИ ВидыЗапасов.Договор В (&ПустыеСсылкиДоговора)
	|			ИЛИ ВидыЗапасов.ВладелецТовара В (&ПустыеСсылкиВладельцаТовара)	
	|			ИЛИ ВидыЗапасов.УстарелоПоставщик В (&ПустыеСсылкиПоставщика))";	
	
	ПустыеЗначенияВладельцаТовара = Новый Массив;
	ПустыеЗначенияВладельцаТовара.Добавить(Неопределено);
	ПустыеЗначенияВладельцаТовара.Добавить(Справочники.Партнеры.ПустаяСсылка());
	ПустыеЗначенияВладельцаТовара.Добавить(Справочники.Организации.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустыеЗначенияВладельцаТовара", ПустыеЗначенияВладельцаТовара);
	
	ПустыеСсылкиВладельцаТовара = Новый Массив;
	ПустыеСсылкиВладельцаТовара.Добавить(Справочники.Партнеры.ПустаяСсылка());
	ПустыеСсылкиВладельцаТовара.Добавить(Справочники.Организации.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустыеСсылкиВладельцаТовара", ПустыеЗначенияВладельцаТовара);
	
	ПустыеСсылкиКонтрагента = Новый Массив;
	ПустыеСсылкиКонтрагента.Добавить(Справочники.Контрагенты.ПустаяСсылка());
	ПустыеСсылкиКонтрагента.Добавить(Справочники.Организации.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустыеСсылкиКонтрагента", ПустыеСсылкиКонтрагента);
	
	ПустыеСсылкиДоговора = Новый Массив;
	ПустыеСсылкиДоговора.Добавить(Справочники.ДоговорыМеждуОрганизациями.ПустаяСсылка());
	ПустыеСсылкиДоговора.Добавить(Справочники.ДоговорыКонтрагентов.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустыеСсылкиДоговора", ПустыеСсылкиДоговора);
	
	ПустыеСсылкиПоставщика = Новый Массив;
	ПустыеСсылкиПоставщика.Добавить(Справочники.Партнеры.ПустаяСсылка());
	ПустыеСсылкиПоставщика.Добавить(Справочники.Организации.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустыеСсылкиПоставщика", ПустыеСсылкиПоставщика);
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ВидЗапасовОбъект = Неопределено;
		
		УстанавливаемоеЗначениеУстаревший = ТребуетсяУстановитьПризнакУстаревший(Выборка);
		
		ТекущиеЗначенияСвойств = Новый Структура;
		
		Для Каждого Колонка Из РезультатЗапроса.Колонки Цикл
			ТекущиеЗначенияСвойств.Вставить(Колонка.Имя, Выборка[Колонка.Имя]);
		КонецЦикла;
		
		ОбработатьРеквизитыОбъекта(ТекущиеЗначенияСвойств);
		ТекущиеЗначенияСвойств.Устаревший = УстанавливаемоеЗначениеУстаревший;
		
		Если Не ОбщегоНазначенияУТКлиентСервер.СтруктурыРавны(ТекущиеЗначенияСвойств, Выборка) Тогда
	
			ВидЗапасовОбъект = Выборка.Ссылка.ПолучитьОбъект();
			ЗаполнитьЗначенияСвойств(ВидЗапасовОбъект, ТекущиеЗначенияСвойств);
			
		КонецЕсли;
			
		Если ВидЗапасовОбъект <> Неопределено Тогда
			Попытка
				ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ВидЗапасовОбъект);
			Исключение
				ПредставлениеОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
				ТекстИсключения = НСтр("ru='Не удалось пометить вид запаса как устаревший по причине: %ПредставлениеОшибки%.';uk='Не вдалося помітити вид запасу як застарілий по причині: %ПредставлениеОшибки%.'");
				ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ПредставлениеОшибки%", ПредставлениеОшибки);
				ЗаписьЖурналаРегистрации(
					ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
					УровеньЖурналаРегистрации.Ошибка,
					Метаданные.Справочники.ВидыЗапасов,
					Выборка.Ссылка,
					ТекстИсключения
				);
			КонецПопытки;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ТребуетсяУстановитьПризнакУстаревший(ВидЗапасов)
	
	ТекущиеЗначенияСвойств = ПустойВидЗапасовСтруктура();
	ОжидаемыеЗначенияСвойств = ПустойВидЗапасовСтруктура();
	
	ЗаполнитьЗначенияСвойств(ТекущиеЗначенияСвойств, ВидЗапасов);
	
	Попытка
		ЗаполнитьЗначенияСвойств(ОжидаемыеЗначенияСвойств, СтруктураВидаЗапасов(ВидЗапасов.Организация,, ВидЗапасов));
	Исключение
		// Возникновение исключения означает, что вид запаса не соответствует новым проверкам.
		// Это ожидаемое поведение, поэтому не требуется делать запись в журнале регистрации.
		// Вид запаса будет помечен как устаревший.
		Возврат Истина;
	КонецПопытки;
	
	ОбработатьРеквизитыОбъекта(ТекущиеЗначенияСвойств);
	
	Если Не ОбщегоНазначенияУТКлиентСервер.СтруктурыРавны(ТекущиеЗначенияСвойств, ОжидаемыеЗначенияСвойств) Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;

КонецФункции

//++ НЕ УТ
Процедура СоздатьВидыЗапасовПоОтчетамПереработчика()
	
	Если НЕ ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьТоваровПоНазначениям") Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар) КАК ТипЗапасов,
	|	Продукция.Номенклатура.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	Продукция.Ссылка.Организация КАК Организация
	|ИЗ
	|	Документ.ОтчетПереработчика.Продукция КАК Продукция
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
	|		ПО (ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар))
	|			И (Продукция.Номенклатура.ГруппаФинансовогоУчета = ВидыЗапасов.ГруппаФинансовогоУчета
	|				ИЛИ ВидыЗапасов.ГруппаФинансовогоУчета = ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка)
	|					И НЕ &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета)
	|			И Продукция.Ссылка.Организация = ВидыЗапасов.Организация
	|			И (НЕ ВидыЗапасов.ЭтоДубль)
	|ГДЕ
	|	Продукция.УдалитьВидЗапасов = ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)
	|	И Продукция.Ссылка.Проведен
	|	И ВидыЗапасов.Ссылка ЕСТЬ NULL";
	
	Запрос.УстановитьПараметр("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета", ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета"));
	
	Результат = Запрос.Выполнить();
	
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		СтруктураАналитики = ПараметрыОтбораВидовЗапасов();
		ЗаполнитьЗначенияСвойств(СтруктураАналитики, Выборка);
		
		Результат = ВидЗапасовПоОтборам(СтруктураАналитики);
		Если Не ЗначениеЗаполнено(Результат) Тогда
			Результат = СоздатьВидЗапасов(СтруктураАналитики);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры
//-- НЕ УТ


Процедура ПометитьДублиВидовЗапасов() Экспорт
	
 	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = ТекстЗапросаПоискаДублейВидовЗапасов(Истина) + 
	"ВЫБРАТЬ
	|	ВидыЗапасов.Ссылка КАК Ссылка,
	|	ВидыЗапасов.Наименование КАК Наименование,
	|	ВидыЗапасов.Организация КАК Организация,
	|	ВидыЗапасов.ТипЗапасов КАК ТипЗапасов,
    |	ВидыЗапасов.НалоговоеНазначение КАК НалоговоеНазначение,
	|	ВЫБОР ВидыЗапасов.ВладелецТовара
	|		КОГДА ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ВидыЗапасов.ВладелецТовара
	|	КОНЕЦ КАК ВладелецТовара,
	|	ВидыЗапасов.Соглашение КАК Соглашение,
	|	ВидыЗапасов.Валюта КАК Валюта,
	|	ВидыЗапасов.РеализацияЗапасовДругойОрганизации КАК РеализацияЗапасовДругойОрганизации,
	|	ВидыЗапасов.ВидЗапасовВладельца КАК ВидЗапасовВладельца,
	|	ВидыЗапасов.СпособПередачиТоваров КАК СпособПередачиТоваров,
	|	ВЫБОР
	|		КОГДА ВидыЗапасов.УстарелоПоставщик В (ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка), ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка))
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА НЕ ВидыЗапасов.ВладелецТовара В (НЕОПРЕДЕЛЕНО, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка), ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка))
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ВидыЗапасов.УстарелоПоставщик
	|	КОНЕЦ КАК УстарелоПоставщик,
	|	ВЫБОР
	|		КОГДА ВидыЗапасов.УстарелоПредназначение = ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПредназначениеНеОграничено)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПустаяСсылка)
	|		ИНАЧЕ ВидыЗапасов.УстарелоПредназначение
	|	КОНЕЦ КАК УстарелоПредназначение,
	|	ВидыЗапасов.УстарелоПодразделение КАК УстарелоПодразделение,
	|	ВидыЗапасов.УстарелоМенеджер КАК УстарелоМенеджер,
	|	ВидыЗапасов.УстарелоСделка КАК УстарелоСделка,
	|	ВидыЗапасов.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	ВЫБОР ВидыЗапасов.Контрагент
	|		КОГДА ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ВидыЗапасов.Контрагент
	|	КОНЕЦ КАК Контрагент,
	|	ВЫБОР ВидыЗапасов.Договор
	|		КОГДА ЗНАЧЕНИЕ(Справочник.ДоговорыМеждуОрганизациями.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ВидыЗапасов.Договор
	|	КОНЕЦ КАК Договор,
	|	ВидыЗапасов.УстарелоНазначение КАК УстарелоНазначение,
	|	ВидыЗапасов.ГруппаПродукции КАК ГруппаПродукции,
	|	ВидыЗапасов.ВидЦены КАК ВидЦены,
	|	ВидыЗапасов.ЭтоДубль КАК ЭтоДубль,
	|	ВидыЗапасов.ПометкаУдаления КАК ПометкаУдаления
	|ПОМЕСТИТЬ СпрВидыЗапасов
	|ИЗ
	|	Справочник.ВидыЗапасов КАК ВидыЗапасов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВидыЗапасов.Организация КАК Организация,
	|	ВидыЗапасов.ТипЗапасов КАК ТипЗапасов,
    |	ВидыЗапасов.НалоговоеНазначение КАК НалоговоеНазначение,
	|	ВидыЗапасов.ВладелецТовара КАК ВладелецТовара,
	|	ВидыЗапасов.Соглашение КАК Соглашение,
	|	ВидыЗапасов.Валюта КАК Валюта,
	|	ВидыЗапасов.РеализацияЗапасовДругойОрганизации КАК РеализацияЗапасовДругойОрганизации,
	|	ВидыЗапасов.ВидЗапасовВладельца КАК ВидЗапасовВладельца,
	|	ВидыЗапасов.СпособПередачиТоваров КАК СпособПередачиТоваров,
	|	ВидыЗапасов.УстарелоПоставщик КАК УстарелоПоставщик,
	|	ВидыЗапасов.УстарелоПредназначение КАК УстарелоПредназначение,
	|	ВидыЗапасов.УстарелоПодразделение КАК УстарелоПодразделение,
	|	ВидыЗапасов.УстарелоМенеджер КАК УстарелоМенеджер,
	|	ВидыЗапасов.УстарелоСделка КАК УстарелоСделка,
	|	ВидыЗапасов.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	ВидыЗапасов.Контрагент КАК Контрагент,
	|	ВидыЗапасов.Договор КАК Договор,
	|	ВидыЗапасов.УстарелоНазначение КАК УстарелоНазначение,
	|	ВидыЗапасов.ГруппаПродукции КАК ГруппаПродукции,
	|	ВидыЗапасов.ВидЦены КАК ВидЦены,
	|	ВидыЗапасов.Ссылка КАК Ссылка,
	|	ВидыЗапасов.ПометкаУдаления КАК ПометкаУдаления,
	|	ВидыЗапасов.ЭтоДубль КАК ЭтоДубль,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТоварыОрганизаций.Регистратор) КАК КоличествоСсылок
	|ИЗ
	|	СпрВидыЗапасов КАК ВидыЗапасов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтОтборыДублей КАК Отборы
	|		ПО ВидыЗапасов.Организация = Отборы.Организация
	|			И ВидыЗапасов.ТипЗапасов = Отборы.ТипЗапасов
    |			И ВидыЗапасов.НалоговоеНазначение = Отборы.НалоговоеНазначение
	|			И ВидыЗапасов.ВладелецТовара = Отборы.ВладелецТовара
	|			И ВидыЗапасов.Соглашение = Отборы.Соглашение
	|			И ВидыЗапасов.Валюта = Отборы.Валюта
	|			И ВидыЗапасов.РеализацияЗапасовДругойОрганизации = Отборы.РеализацияЗапасовДругойОрганизации
	|			И ВидыЗапасов.ВидЗапасовВладельца = Отборы.ВидЗапасовВладельца
	|			И ВидыЗапасов.СпособПередачиТоваров = Отборы.СпособПередачиТоваров
	|			И ВидыЗапасов.УстарелоПоставщик = Отборы.УстарелоПоставщик
	|			И ВидыЗапасов.УстарелоПредназначение = Отборы.УстарелоПредназначение
	|			И ВидыЗапасов.УстарелоПодразделение = Отборы.УстарелоПодразделение
	|			И ВидыЗапасов.УстарелоМенеджер = Отборы.УстарелоМенеджер
	|			И ВидыЗапасов.УстарелоСделка = Отборы.УстарелоСделка
	|			И ВидыЗапасов.ГруппаФинансовогоУчета = Отборы.ГруппаФинансовогоУчета
	|			И ВидыЗапасов.Контрагент = Отборы.Контрагент
	|			И ВидыЗапасов.Договор = Отборы.Договор
	|			И ВидыЗапасов.УстарелоНазначение = Отборы.УстарелоНазначение
	|			И ВидыЗапасов.ГруппаПродукции = Отборы.ГруппаПродукции
	|			И ВидыЗапасов.ВидЦены = Отборы.ВидЦены
	|			И (НЕ ВидыЗапасов.ЭтоДубль)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыОрганизаций КАК ТоварыОрганизаций
	|		ПО ВидыЗапасов.Ссылка = ТоварыОрганизаций.ВидЗапасов
	|
	|СГРУППИРОВАТЬ ПО
	|	ВидыЗапасов.Контрагент,
	|	ВидыЗапасов.УстарелоНазначение,
	|	ВидыЗапасов.Валюта,
	|	ВидыЗапасов.РеализацияЗапасовДругойОрганизации,
	|	ВидыЗапасов.УстарелоПоставщик,
	|	ВидыЗапасов.Соглашение,
	|	ВидыЗапасов.ЭтоДубль,
	|	ВидыЗапасов.ВладелецТовара,
	|	ВидыЗапасов.СпособПередачиТоваров,
	|	ВидыЗапасов.ВидЗапасовВладельца,
	|	ВидыЗапасов.Договор,
	|	ВидыЗапасов.ТипЗапасов,
	|	ВидыЗапасов.Ссылка,
	|	ВидыЗапасов.Организация,
	|	ВидыЗапасов.УстарелоМенеджер,
	|	ВидыЗапасов.УстарелоСделка,
	|	ВидыЗапасов.ГруппаФинансовогоУчета,
	|	ВидыЗапасов.ПометкаУдаления,
	|	ВидыЗапасов.ГруппаПродукции,
	|	ВидыЗапасов.ВидЦены,
	|	ВидыЗапасов.УстарелоПредназначение,
	|	ВидыЗапасов.УстарелоПодразделение,
    |	ВидыЗапасов.НалоговоеНазначение
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организация,
	|	ТипЗапасов,
    |	НалоговоеНазначение,
	|	ВладелецТовара,
	|	Соглашение,
	|	Валюта,
	|	РеализацияЗапасовДругойОрганизации,
	|	ВидЗапасовВладельца,
	|	СпособПередачиТоваров,
	|	УстарелоПоставщик,
	|	УстарелоПредназначение,
	|	УстарелоПодразделение,
	|	УстарелоМенеджер,
	|	УстарелоСделка,
	|	ГруппаФинансовогоУчета,
	|	Контрагент,
	|	Договор,
	|	УстарелоНазначение,
	|	ГруппаПродукции,
	|	ВидЦены,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТоварыОрганизаций.Регистратор) УБЫВ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВтОтборыДублей
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ СпрВидыЗапасов";
	
	УстановитьПараметрыЗапросаПоискаДублей(Запрос);
	
	ПоляСтруктуры = "
		|	Организация,
		|	ТипЗапасов,
        |	НалоговоеНазначение,
		|	ВладелецТовара,
		|	Соглашение,
		|	Валюта,
		|	РеализацияЗапасовДругойОрганизации,
		|	ВидЗапасовВладельца,
		|	СпособПередачиТоваров,
		|	УстарелоПоставщик,
		|	УстарелоПредназначение,
		|	УстарелоПодразделение,
		|	УстарелоМенеджер,
		|	УстарелоСделка,
		|	ГруппаФинансовогоУчета,
		|	Контрагент,
		|	Договор,
		|	УстарелоНазначение,
		|	ГруппаПродукции,
		|	ВидЦены
		|";
		
	СтруктураДляСравнения = Новый Структура(ПоляСтруктуры);
	СтруктураИзВыборки = Новый Структура(ПоляСтруктуры);
	
	МассивДублейОднойГруппы = Новый Массив();
	
	Результат = Запрос.Выполнить();
	ВыборкаДублейВидовЗапасов = Результат.Выбрать();
	
	Если ВыборкаДублейВидовЗапасов.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(СтруктураДляСравнения, ВыборкаДублейВидовЗапасов);
		МассивДублейОднойГруппы.Добавить(ВыборкаДублейВидовЗапасов.Ссылка);
		Пока ВыборкаДублейВидовЗапасов.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(СтруктураИзВыборки, ВыборкаДублейВидовЗапасов);
			Если Не ОбщегоНазначенияУТКлиентСервер.СтруктурыРавны(СтруктураДляСравнения, СтруктураИзВыборки) Тогда
				ВыбратьИПометитьДубли(МассивДублейОднойГруппы);
			КонецЕсли;
			МассивДублейОднойГруппы.Добавить(ВыборкаДублейВидовЗапасов.Ссылка);
			ЗаполнитьЗначенияСвойств(СтруктураДляСравнения, ВыборкаДублейВидовЗапасов);
		КонецЦикла;
		ВыбратьИПометитьДубли(МассивДублейОднойГруппы);
	КонецЕсли;

КонецПроцедуры

Процедура ВыбратьИПометитьДубли(МассивДублейОднойГруппы)
	
	Счетчик = 1;
	Пока Счетчик <= МассивДублейОднойГруппы.ВГраница() Цикл
		НачатьТранзакцию();
		Попытка
			СпрОбъект = МассивДублейОднойГруппы[Счетчик].ПолучитьОбъект();
			СпрОбъект.ЭтоДубль = Истина;
			СпрОбъект.ДополнительныеСвойства.Вставить("НеПроверятьДубли", Истина);
			ОбновлениеИнформационнойБазы.ЗаписатьОбъект(СпрОбъект);
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			ТекстСообщения = НСтр("ru='Не удалось обработать справочник: %Ссылка% по причине: %Причина%';uk='Не вдалося обробити довідник: %Ссылка% з причини: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%",  МассивДублейОднойГруппы[Счетчик]);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Ошибка,
				Метаданные.Справочники.ВидыЗапасов,
				МассивДублейОднойГруппы[Счетчик],
				ТекстСообщения);
		КонецПопытки;
		Счетчик = Счетчик + 1;
	КонецЦикла;
	
	МассивДублейОднойГруппы.Очистить();
	
КонецПроцедуры

Функция ОбработатьРеквизитыОбъекта(ОбрабатываемыйОбъект) Экспорт
	
	Если Не ЗначениеЗаполнено(ОбрабатываемыйОбъект.ВладелецТовара) И ОбрабатываемыйОбъект.ВладелецТовара <> Неопределено Тогда
		ОбрабатываемыйОбъект.ВладелецТовара = Неопределено;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ОбрабатываемыйОбъект.Договор) И ОбрабатываемыйОбъект.Договор <> Неопределено Тогда
		ОбрабатываемыйОбъект.Договор = Неопределено;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ОбрабатываемыйОбъект.Контрагент) И ОбрабатываемыйОбъект.Контрагент <> Неопределено Тогда
		ОбрабатываемыйОбъект.Контрагент = Неопределено;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ОбрабатываемыйОбъект.УстарелоПоставщик) И ОбрабатываемыйОбъект.УстарелоПоставщик <> Неопределено Тогда
		ОбрабатываемыйОбъект.УстарелоПоставщик = Неопределено;
	ИначеЕсли ЗначениеЗаполнено(ОбрабатываемыйОбъект.ВладелецТовара)
		И ОбрабатываемыйОбъект.УстарелоПоставщик <> Неопределено Тогда
		ОбрабатываемыйОбъект.УстарелоПоставщик = Неопределено;
	КонецЕсли;
	
	Если ОбрабатываемыйОбъект.УстарелоПредназначение = Перечисления.ТипыПредназначенияВидовЗапасов.ПредназначениеНеОграничено Тогда
		ОбрабатываемыйОбъект.УстарелоПредназначение = Перечисления.ТипыПредназначенияВидовЗапасов.ПустаяСсылка();
	КонецЕсли;
	
КонецФункции

Функция ПустойВидЗапасовСтруктура() Экспорт
	
	Параметры = Новый Структура("
	|Организация,
	|ТипЗапасов,
	|ВладелецТовара,
	|Контрагент,
	|Соглашение,
	|Договор,
	|Валюта,
    |НалоговоеНазначение,
	|ГруппаФинансовогоУчета,
	|ГруппаПродукции,
	|ВидЦены,
	|РеализацияЗапасовДругойОрганизации,
	|ВидЗапасовВладельца,
	|СпособПередачиТоваров,
	|УстарелоПоставщик,
	|УстарелоПодразделение,
	|УстарелоМенеджер,
	|УстарелоСделка,      
	|УстарелоНазначение,
	|УстарелоПредназначение
	|");
	
	Параметры.Организация = Справочники.Организации.ПустаяСсылка();
	Параметры.ВладелецТовара = Неопределено;
	Параметры.Контрагент = Неопределено;
	Параметры.Договор = Неопределено;
	Параметры.Соглашение = Справочники.СоглашенияСПоставщиками.ПустаяСсылка();
	Параметры.Валюта = Справочники.Валюты.ПустаяСсылка();
    Параметры.НалоговоеНазначение = Справочники.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка();
	Параметры.ТипЗапасов = Перечисления.ТипыЗапасов.ПустаяСсылка();
	Параметры.ГруппаФинансовогоУчета = Справочники.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка();
	Параметры.ГруппаПродукции = Справочники.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка();
	Параметры.ВидЦены = Справочники.ВидыЦенПоставщиков.ПустаяСсылка();
	Параметры.РеализацияЗапасовДругойОрганизации = Ложь;
	Параметры.ВидЗапасовВладельца = Справочники.ВидыЗапасов.ПустаяСсылка();
	Параметры.СпособПередачиТоваров = Перечисления.СпособыПередачиТоваров.ПустаяСсылка();
	Параметры.УстарелоПоставщик = Неопределено;
	Параметры.УстарелоПодразделение = Справочники.СтруктураПредприятия.ПустаяСсылка();
	Параметры.УстарелоМенеджер = Справочники.Пользователи.ПустаяСсылка();
	Параметры.УстарелоСделка = Справочники.СделкиСКлиентами.ПустаяСсылка();
	Параметры.УстарелоНазначение = Справочники.Назначения.ПустаяСсылка();
	Параметры.УстарелоПредназначение = Перечисления.ТипыПредназначенияВидовЗапасов.ПустаяСсылка();
	
	Возврат Параметры;
	
КонецФункции


#КонецОбласти

#КонецОбласти

#КонецЕсли

