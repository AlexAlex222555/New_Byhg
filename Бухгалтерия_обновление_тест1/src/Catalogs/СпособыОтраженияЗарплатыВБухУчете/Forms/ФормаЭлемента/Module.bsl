#Область ОписаниеПеременных

&НаКлиенте
Перем КэшированныеЗначения;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Объект, ЭтотОбъект);
	
	ПараметрыВыбораСтатейИАналитик = Справочники.СпособыОтраженияЗарплатыВБухУчете.ПараметрыВыбораСтатейИАналитик();
	ДоходыИРасходыСервер.ПриСозданииНаСервере(ЭтотОбъект, ПараметрыВыбораСтатейИАналитик);
	
	ПараметрыНастройки = Справочники.СпособыОтраженияЗарплатыВБухУчете.ПараметрыНастройкиСчетовУчета();
	НастройкаСчетовУчета.ПриСозданииНаСервере(ЭтотОбъект, ПараметрыНастройки);
	
	// Обработчик подсистемы запрета редактирования реквизитов объектов
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ПриСозданииЧтенииНаСервере();
		Элементы.РазрешитьРедактированиеРеквизитовОбъекта.Доступность = Ложь;
	КонецЕсли;
	
	Если ТолькоПросмотр Или Элементы.РазрешитьРедактированиеРеквизитовОбъекта.Доступность Тогда
		Элементы.НастроитьОтражениеВРеглУчете.Доступность            = Ложь;
		Элементы.НастроитьОтражениеВРеглУчетеВзносов.Доступность     = Ложь;

	КонецЕсли;

	// Обработчик подсистемы "Свойства".
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Объект", Объект);
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры


&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПараметрыВыбораСтатейИАналитик = Справочники.СпособыОтраженияЗарплатыВБухУчете.ПараметрыВыбораСтатейИАналитик();
	ДоходыИРасходыСервер.ПриЧтенииНаСервере(ЭтотОбъект, ПараметрыВыбораСтатейИАналитик);
	
	ПараметрыНастройки = Справочники.СпособыОтраженияЗарплатыВБухУчете.ПараметрыНастройкиСчетовУчета();
	НастройкаСчетовУчета.ПриЧтенииНаСервере(ЭтотОбъект, ПараметрыНастройки);
	
	ПриСозданииЧтенииНаСервере();
	
	Для Каждого ПараметрыВыбораСтатьи Из ПараметрыВыбораСтатейИАналитик Цикл
		УстановитьПараметрыАвтоподбораАналитик(ПараметрыВыбораСтатьи);
	КонецЦикла;
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	// Подсистема "Свойства"
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтаФорма, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если ТипЗнч(Объект.СтатьяРасходов) = Тип("ПланВидовХарактеристикСсылка.СтатьиАктивовПассивов")
		И Не ЗначениеЗаполнено(Объект.СчетУчета)Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru='Не указан счет учета для отражения зарплаты на прочие пассивы.';uk='Не зазначений рахунок обліку для відображення зарплати на інші пасиви.'"),
			,
			"НастроитьОтражениеВРеглУчете",
			,
			Отказ);
	КонецЕсли;
	
	Если Объект.РежимУчетаВзносов = 1 И АналитикаРасходовВзносовОбязательна И Не ЗначениеЗаполнено(Объект.АналитикаРасходовВзносов) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru='Аналитика расходов не заполнена.';uk='Аналітика витрат не заповнена.'"),
			,
			"АналитикаРасходовВзносов",
			,
			Отказ);
	КонецЕсли;
	
	Если Объект.РежимУчетаВзносов = 1 И ТипЗнч(Объект.СтатьяРасходовВзносов) = Тип("ПланВидовХарактеристикСсылка.СтатьиАктивовПассивов")
		И Не ЗначениеЗаполнено(Объект.СчетУчетаВзносов) Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru='Не указан счет учета для отражения взносов на прочие пассивы.';uk='Не зазначений рахунок обліку для відображення внесків на інші пасиви.'"),
			,
			"НастроитьОтражениеВРеглУчетеВзносов",
			,
			Отказ);
	КонецЕсли;
		
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтаФорма, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	НастройкаСчетовУчета.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	
	// Обработчик подсистемы "Свойства".
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтаФорма, ТекущийОбъект);
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ДоходыИРасходыСервер.ПослеЗаписиНаСервере(ЭтотОбъект);
	
	НастройкаСчетовУчета.ПослеЗаписиНаСервере(ЭтотОбъект);
	
	МодификацияКонфигурацииПереопределяемый.ПослеЗаписиНаСервере(ЭтаФорма, ТекущийОбъект, ПараметрыЗаписи);
	
	// Обработчик подсистемы запрета редактирования реквизитов объектов
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	
	Если Элементы.РазрешитьРедактированиеРеквизитовОбъекта.Доступность Тогда
		Элементы.НастроитьОтражениеВРеглУчете.Доступность            = Ложь;
		Элементы.НастроитьОтражениеВРеглУчетеВзносов.Доступность     = Ложь;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

#Область НеЕНВД

&НаКлиенте
Процедура СтатьяРасходовНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ДоходыИРасходыКлиент.НачалоВыбораСтатьи(ЭтотОбъект, Элемент, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура СтатьяРасходовПриИзменении(Элемент)
	ДоходыИРасходыКлиентСервер.СтатьяПриИзменении(ЭтотОбъект, Элемент);
	ПараметрыВыбораСтатьи = ДоходыИРасходыКлиентСервер.ПараметрыВыбораПоЭлементу(ЭтотОбъект, Элемент);
	УстановитьПараметрыАвтоподбораАналитик(ПараметрыВыбораСтатьи);
КонецПроцедуры

&НаКлиенте
Процедура АналитикаРасходовНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ДоходыИРасходыКлиент.НачалоВыбораАналитикиРасходов(ЭтотОбъект, Элемент, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура АналитикаРасходовОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Структура") Тогда
		Объект.АналитикаРасходов = ВыбранноеЗначение.АналитикаРасходов;
		СтандартнаяОбработка = Ложь;
		Модифицированность = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура АналитикаРасходовАвтоПодбор(Элемент, Текст, ДанныеВыбора, Параметры, Ожидание, СтандартнаяОбработка)
	ДоходыИРасходыКлиент.АвтоПодборАналитикиРасходов(ЭтотОбъект, Элемент, Текст, ДанныеВыбора, Параметры, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура АналитикаРасходовОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, Параметры, СтандартнаяОбработка)
	ДоходыИРасходыКлиент.ОкончаниеВводаТекстаАналитикиРасходов(ЭтотОбъект, Элемент, Текст, ДанныеВыбора, Параметры, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура НастроитьОтражениеВРеглУчетеНажатие(Элемент, СтандартнаяОбработка)
	НастройкаСчетовУчетаКлиент.ПриНажатии(ЭтотОбъект, Элемент, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура РежимАналитикиВзносовПриИзменении(Элемент)
	
	Объект.СтатьяРасходовВзносов = ПредопределенноеЗначение("ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка");
	Объект.АналитикаРасходовВзносов = Неопределено;
	Объект.АналитикаАктивовПассивовВзносов = Неопределено;
	АналитикаРасходовВзносовАвтоматически = Ложь;
	АналитикаРасходовВзносовОбязательна = Ложь;
	
	Элементы.ГруппаВзносыОбщаяАналитика.Видимость = Объект.РежимУчетаВзносов = 1;
	
КонецПроцедуры

&НаКлиенте
Процедура СтатьяРасходовВзносовНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ДоходыИРасходыКлиент.НачалоВыбораСтатьи(ЭтотОбъект, Элемент, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура СтатьяРасходовВзносовПриИзменении(Элемент)
	ДоходыИРасходыКлиентСервер.СтатьяПриИзменении(ЭтотОбъект, Элемент);
	ПараметрыВыбораСтатьи = ДоходыИРасходыКлиентСервер.ПараметрыВыбораПоЭлементу(ЭтотОбъект, Элемент);
	УстановитьПараметрыАвтоподбораАналитик(ПараметрыВыбораСтатьи);
КонецПроцедуры

&НаКлиенте
Процедура АналитикаРасходовВзносовНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ДоходыИРасходыКлиент.НачалоВыбораАналитикиРасходов(ЭтотОбъект, Элемент, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура АналитикаРасходовВзносовОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Структура") Тогда
		АналитикаРасходовВзносов = ВыбранноеЗначение.АналитикаРасходов;
		СтандартнаяОбработка = Ложь;
		Модифицированность = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура АналитикаРасходовВзносовАвтоПодбор(Элемент, Текст, ДанныеВыбора, Параметры, Ожидание, СтандартнаяОбработка)
	ДоходыИРасходыКлиент.АвтоПодборАналитикиРасходов(ЭтотОбъект, Элемент, Текст, ДанныеВыбора, Параметры, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура АналитикаРасходовВзносовОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, Параметры, СтандартнаяОбработка)
	ДоходыИРасходыКлиент.ОкончаниеВводаТекстаАналитикиРасходов(ЭтотОбъект, Элемент, Текст, ДанныеВыбора, Параметры, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура НастроитьОтражениеВРеглУчетеВзносыНажатие(Элемент, СтандартнаяОбработка)
	НастройкаСчетовУчетаКлиент.ПриНажатии(ЭтотОбъект, Элемент, СтандартнаяОбработка);
КонецПроцедуры

#КонецОбласти


&НаКлиенте
Процедура ХарактерПриИзменении(Элемент)
	
	Объект.ОплатаСдельныхРабот = ХарактерНачисления = "РаспределяетсяНаПроизводство";
	НастроитьВидимостьЭлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтдельнаяСтатьяКалькуляцииПриИзменении(Элемент)
	Элементы.СтатьяКалькуляции.Доступность = Объект.ОтдельнаяСтатьяКалькуляции;
КонецПроцедуры

&НаКлиенте
Процедура ОтдельнаяСтатьяКалькуляцииВзносовПриИзменении(Элемент)
	Элементы.СтатьяКалькуляцииВзносов.Доступность = Объект.ОтдельнаяСтатьяКалькуляцииВзносов;
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъекта(Команда)
	
	Если Не Объект.Ссылка.Пустая() Тогда
		
		Модифицированность = Ложь;
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Объект", Объект.Ссылка);
		
		ОткрытьФорму("Справочник.СпособыОтраженияЗарплатыВБухУчете.Форма.РазблокированиеРеквизитов", 
			ПараметрыФормы,,,,,
			Новый ОписаниеОповещения("Подключаемый_РазрешитьРедактированиеРеквизитовОбъектаЗавершение", ЭтотОбъект),
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъектаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		Реквизиты = ЗапретРедактированияРеквизитовОбъектовКлиент.Реквизиты(ЭтаФорма, , Ложь);
		Элементы.РазрешитьРедактированиеРеквизитовОбъекта.Доступность = Ложь;
		Элементы.НастроитьОтражениеВРеглУчете.Доступность             = Истина;
		Элементы.НастроитьОтражениеВРеглУчетеВзносов.Доступность      = Истина;
		
		ЗапретРедактированияРеквизитовОбъектовКлиент.УстановитьДоступностьЭлементовФормы(ЭтаФорма, Реквизиты);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.Свойства

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

// Конец СтандартныеПодсистемы.Свойства

///////////////////////////////////////////////////////////////////// 
// Процедуры подсистемы Свойства.

&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено, СтандартнаяОбработка = Неопределено)
	УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
КонецПроцедуры

&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтаФорма, РеквизитФормыВЗначение("Объект"));

КонецПроцедуры

&НаСервере
Процедура НастроитьЭлементыФормы()
	
	// сдельные
	
	Элементы.СтатьяКалькуляции.Доступность = Объект.ОтдельнаяСтатьяКалькуляции;
	Элементы.СтатьяКалькуляцииВзносов.Доступность = Объект.ОтдельнаяСтатьяКалькуляцииВзносов;
	
	// постатейные
	
	Элементы.ГруппаВзносыОбщаяАналитика.Видимость = Объект.РежимУчетаВзносов = 1;
	
	
	ХарактерНачисления = ?(Объект.ОплатаСдельныхРабот, "РаспределяетсяНаПроизводство", "ОтражаетсяПоСтатьеРасходов");
	
КонецПроцедуры

&НаСервере
Процедура НастроитьВидимостьЭлементов()
	
	Элементы.СтраницаСдельные            .Видимость = Объект.ОплатаСдельныхРабот;
	Элементы.БазаРаспределенияПоВыработке.Видимость = Объект.ОплатаСдельныхРабот;
	Элементы.СтраницаПостатейные         .Видимость = Не Объект.ОплатаСдельныхРабот;
	Элементы.НаправлениеДеятельности     .Видимость = Не Объект.ОплатаСдельныхРабот;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииЧтенииНаСервере()
	
	НастроитьЭлементыФормы();
	
	НастроитьВидимостьЭлементов();
	
КонецПроцедуры


#Область ПриИзмененииРеквизитов

&НаСервереБезКонтекста
Функция АналитикаПодбираетсяАвтоматически(Статья)
	
	Если Не ЗначениеЗаполнено(Статья) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ПодбираемыеАналитики = Справочники.СпособыОтраженияЗарплатыВБухУчете.ПодбираемыеАналитики();
	Для Каждого Аналитика Из ПодбираемыеАналитики Цикл
		Если Статья.ТипЗначения.СодержитТип(Аналитика) Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

&НаСервере
Процедура УстановитьПараметрыАвтоподбораАналитик(ПараметрыВыбораСтатьи)
	
	АналитикаПодбираетсяАвтоматически = АналитикаПодбираетсяАвтоматически(Объект[ПараметрыВыбораСтатьи.Статья]);
	
	ЭтаФорма[ПараметрыВыбораСтатьи.АналитикаРасходов + "Автоматически"] = АналитикаПодбираетсяАвтоматически;
	
	Для Каждого ИмяЭлементаАналитики Из ПараметрыВыбораСтатьи.ЭлементыФормы.АналитикаРасходов Цикл
		ЗаполнитьПодсказкуВвода(ИмяЭлементаАналитики, АналитикаПодбираетсяАвтоматически);
	КонецЦикла;
	
	Для Каждого ИмяЭлементаАналитики Из ПараметрыВыбораСтатьи.ЭлементыФормы.АналитикаАктивовПассивов Цикл
		ЗаполнитьПодсказкуВвода(ИмяЭлементаАналитики, АналитикаПодбираетсяАвтоматически);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПодсказкуВвода(ИмяЭлемента, АналитикаПодбираетсяАвтоматически)
	
	Если АналитикаПодбираетсяАвтоматически Тогда
		Элементы[ИмяЭлемента].ПодсказкаВвода = НСтр("ru='<подбирается автоматически>';uk='<підбирається автоматично>'");
	Иначе
		Элементы[ИмяЭлемента].ПодсказкаВвода = "";
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти