#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	Если МультиязычностьУкр.КодЯзыкаИнтерфейса() = "uk" Тогда
		Язык = "Ukr";
	Иначе
	    Язык = "";
	КонецЕсли; 
	
	Макет = НСИССервер.ПолучитьМакет("ОснованияСпециальногоСтажа", Справочники.ОснованияСпециальногоСтажа.ПолучитьМакет("Классификатор"));
	КлассификаторXML = Макет.ПолучитьТекст();
	
	КлассификаторТаблица = ОбщегоНазначения.ПрочитатьXMLВТаблицу(КлассификаторXML).Данные;
	
	Дерево = РеквизитФормыВЗначение("ДеревоКлассификатора");
	
	//Дерево.Колонки.Добавить("Выбран",     Новый ОписаниеТипов("Булево"));

	Для Каждого КлассификаторЗапись Из КлассификаторТаблица Цикл
		
		Если КлассификаторЗапись.Level = "1" Тогда
			СтрокаУровень1 = Дерево.Строки.Добавить();
			СтрокаУровень1.Наименование = КлассификаторЗапись["Title"+Язык];
			СтрокаУровень1.КореньУровня = Истина;
			Продолжить;
		ИначеЕсли КлассификаторЗапись.Level = "2" Тогда
			СтрокаУровень2 = СтрокаУровень1.Строки.Добавить();
			СтрокаУровень2.КодОтчености = КлассификаторЗапись.Code;
			СтрокаУровень2.Наименование = КлассификаторЗапись["Title"+Язык];
			СтрокаУровень2.КореньУровня = Истина;
			Продолжить;
		Иначе
			НоваяСтрока = СтрокаУровень2.Строки.Добавить();		
		КонецЕсли;
		
		НоваяСтрока.Код          = КлассификаторЗапись.Code;
		НоваяСтрока.Наименование = КлассификаторЗапись["Title"+Язык];
		НоваяСтрока.КореньУровня = Ложь;
		
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(Дерево, "ДеревоКлассификатора");
//++ ЕРП ЗИК	
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
//-- ЕРП ЗИК	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДеревоКлассификатора

&НаКлиенте
Процедура ОбходДереваВверх(ТекущиеДанные)

	Родитель = ТекущиеДанные.ПолучитьРодителя();
	Если Родитель <> Неопределено Тогда // Верхний уровень
		
		ДочерниеСтроки = Родитель.ПолучитьЭлементы();
		КоличествоВыбранных = 0;
		ОбщееКоличество = 0;
		Для каждого Элемент Из ДочерниеСтроки Цикл
			Если Элемент.Выбран = 2 Тогда
				КоличествоВыбранных = КоличествоВыбранных + 0.5;
			ИначеЕсли Элемент.Выбран = 1 Тогда
				КоличествоВыбранных = КоличествоВыбранных + 1;
			КонецЕсли;
			ОбщееКоличество = ОбщееКоличество + 1;
		КонецЦикла;
		
		Если ОбщееКоличество = КоличествоВыбранных Тогда
			Родитель.Выбран = 1;
		ИначеЕсли КоличествоВыбранных = 0 Тогда
			Родитель.Выбран = 0;
		Иначе
			Родитель.Выбран = 2;
		КонецЕсли;
		
		ОбходДереваВверх(Родитель);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбходДереваВниз(ТекущиеДанные)
	
	ДочерниеСтроки = ТекущиеДанные.ПолучитьЭлементы();
	Для каждого Элемент Из ДочерниеСтроки Цикл
		Элемент.Выбран = ТекущиеДанные.Выбран;
		ОбходДереваВниз(Элемент);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбранПриИзменении(ТекущиеДанные)
	
	Если ТекущиеДанные.Выбран = 2 Тогда
		ТекущиеДанные.Выбран = 0;
	КонецЕсли;
	
	ОбходДереваВверх(ТекущиеДанные);
	ОбходДереваВниз(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоКлассификатораВыбранПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ДеревоКлассификатора.ТекущиеДанные;
	ВыбранПриИзменении(ТекущиеДанные);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	
	ОбработатьРезультатыПодбораНаСервере();
	ОповеститьОбИзменении(Тип("СправочникСсылка.ОснованияСпециальногоСтажа"));	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
//++ ЕРП ЗИК	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
//-- ЕРП ЗИК	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Прочее

&НаСервере
Процедура ОбработатьРезультатыПодбораНаСервере()
	
	МассивВыбранныхСтрок = Новый Массив;
	МассивКодов = Новый Массив;
	
	Дерево = РеквизитФормыВЗначение("ДеревоКлассификатора");
	Для каждого СтрокаУровень1 Из Дерево.Строки Цикл
		Если СтрокаУровень1.Выбран Тогда
			Если ((НЕ СтрокаУровень1.КореньУровня) ИЛИ СтрокаУровень1.Выбран = 1) И (Не ПустаяСтрока(СтрокаУровень1.КодОтчености)) Тогда
				МассивВыбранныхСтрок.Добавить(СтрокаУровень1);
				МассивКодов.Добавить(СтрокаУровень1.КодОтчености);
			КонецЕсли;
			Для каждого СтрокаУровень2 Из СтрокаУровень1.Строки Цикл
				Если СтрокаУровень2.Выбран Тогда
					Если ((НЕ СтрокаУровень2.КореньУровня) ИЛИ СтрокаУровень2.Выбран = 1) И (Не ПустаяСтрока(СтрокаУровень2.КодОтчености)) Тогда
						МассивВыбранныхСтрок.Добавить(СтрокаУровень2);
						МассивКодов.Добавить(СтрокаУровень2.КодОтчености);
					КонецЕсли;
			КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОснованияСпециальногоСтажа.Ссылка КАК Ссылка,
	|	ОснованияСпециальногоСтажа.КодОтчености КАК КодОтчености
	|ИЗ
	|	Справочник.ОснованияСпециальногоСтажа КАК ОснованияСпециальногоСтажа
	|ГДЕ
	|	ОснованияСпециальногоСтажа.Код В(&МассивКодов)";
	
	Запрос.УстановитьПараметр("МассивКодов", МассивКодов);
	
	ТаблицаКлассификатор = Запрос.Выполнить().Выгрузить();
	Для Каждого СтрокаКлассификатор Из ТаблицаКлассификатор Цикл
		СтрокаКлассификатор.КодОтчености = СокрЛП(СтрокаКлассификатор.КодОтчености);
	КонецЦикла;
	ТаблицаКлассификатор.Индексы.Добавить("КодОтчености");
	
	НачатьТранзакцию();
	
	Для каждого СтрокаДерева Из МассивВыбранныхСтрок Цикл
		
		НайденныйЭлемент = ТаблицаКлассификатор.Найти(СтрокаДерева.КодОтчености, "КодОтчености");
		Если НайденныйЭлемент <> Неопределено Тогда
			СправочникОбъект = НайденныйЭлемент.Ссылка.ПолучитьОбъект();
		Иначе
			СправочникОбъект = Справочники.ОснованияСпециальногоСтажа.СоздатьЭлемент();
		КонецЕсли;
		
		СправочникОбъект.Наименование            = СтрокаДерева.Наименование;
		СправочникОбъект.КодОтчености            = СтрокаДерева.КодОтчености;
				
		СправочникОбъект.Записать();
	
	КонецЦикла;
	
	ЗафиксироватьТранзакцию();
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

