#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс
//++ НЕ УТ

// Определяет показатели в валюте регистра.
// Подробнее см. МеждународныйУчетСерверПовтИсп.ПоказателиВВалюте().
//
// Параметры:
//  ИмяИсточникаДанных - Строка - Имя регистра источника.
//
// Возвращаемое значение:
//  Соответствие - Ключ - имя показателя.
//                 Значение - структура свойств показателя.
//
Функция ПоказателиРегистра(ИмяИсточникаДанных) Экспорт

	Если ПустаяСтрока(ИмяИсточникаДанных) Тогда
		Возврат Неопределено;
	КонецЕсли;

	Показатели = МеждународныйУчетСерверПовтИсп.Показатели(ИмяИсточникаДанных);
	
	Возврат Показатели;

КонецФункции

// Заменяет регистры источники в хозяйственных операциях по расчетам с клиентами/поставщиками 
// в зависимости от ФО.НоваяАрхитектураРасчетов.
Процедура ЗаменитьИсточникиРасчетовСПартнерами() Экспорт
	
	ЗаменаИсточника = Новый Соответствие;
	Если ПолучитьФункциональнуюОпцию("НоваяАрхитектураВзаиморасчетов") Тогда
		ЗаменаИсточника.Вставить(Метаданные.РегистрыНакопления.РасчетыСКлиентамиПоДокументам.Имя,
								Метаданные.РегистрыНакопления.РасчетыСКлиентамиПоСрокам.Имя);
		
		ЗаменаИсточника.Вставить(Метаданные.РегистрыНакопления.РасчетыСПоставщикамиПоДокументам.Имя,
								Метаданные.РегистрыНакопления.РасчетыСПоставщикамиПоСрокам.Имя);
	Иначе
		ЗаменаИсточника.Вставить(Метаданные.РегистрыНакопления.РасчетыСКлиентамиПоСрокам.Имя,
								Метаданные.РегистрыНакопления.РасчетыСКлиентамиПоДокументам.Имя);
		
		ЗаменаИсточника.Вставить(Метаданные.РегистрыНакопления.РасчетыСПоставщикамиПоСрокам.Имя,
								Метаданные.РегистрыНакопления.РасчетыСПоставщикамиПоДокументам.Имя);
	КонецЕсли;
	
	ИсточникиНаЗамену = Новый Массив;
	Для Каждого Источник Из ЗаменаИсточника Цикл
		ИсточникиНаЗамену.Добавить(Источник.Ключ);
		ИсточникиНаЗамену.Добавить(Источник.Значение);
	КонецЦикла;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Настройки.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.НастройкиХозяйственныхОпераций КАК Настройки
	|ГДЕ
	|	Настройки.ИсточникДанных В(&ИсточникДанных)");
	
	Запрос.УстановитьПараметр("ИсточникДанных", ИсточникиНаЗамену);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ОбъектНастройки = Выборка.Ссылка.ПолучитьОбъект();
		НовыйИсточник = ЗаменаИсточника[ОбъектНастройки.ИсточникДанных];
		Если НовыйИсточник <> Неопределено Тогда
			ОбъектНастройки.ИсточникДанных = НовыйИсточник;
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(ОбъектНастройки);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

//-- НЕ УТ

// Выполняет установку параметров сеанса. Вызывается из модуля сеанса.
//
// Параметры:
//  ИмяПараметра			 - Строка - имя параметра сеанса.
//  УстановленныеПараметры	 - Массив - все установленные параметры сеанса.
//
Процедура УстановитьПараметрыСеанса(ИмяПараметра, УстановленныеПараметры) Экспорт
	
	ПараметрыСеанса.ХозяйственныеОперацииСНастройкамиОграниченийДоступа = Новый ФиксированныйМассив(Новый Массив);
	
	Если ИмяПараметра = "ХозяйственныеОперацииСНастройкамиОграниченийДоступа" Тогда
		Запрос = Новый Запрос();
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ХозяйственныеОперацииДоступныеДляОграниченийДоступа.ХозяйственнаяОперация КАК Ссылка
		|ИЗ
		|	Справочник.НастройкиХозяйственныхОпераций КАК ХозяйственныеОперацииДоступныеДляОграниченийДоступа
		|ГДЕ
		|	ХозяйственныеОперацииДоступныеДляОграниченийДоступа.ПометкаУдаления = ЛОЖЬ
		|	И ХозяйственныеОперацииДоступныеДляОграниченийДоступа.ИспользоватьДляОграниченийДоступа = ИСТИНА";
		
		ОперацииДляПроверкиОграниченийДоступа = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
		
		ПараметрыСеанса.ХозяйственныеОперацииСНастройкамиОграниченийДоступа = Новый ФиксированныйМассив(ОперацииДляПроверкиОграниченийДоступа);
		УстановленныеПараметры.Добавить(ИмяПараметра);
	КонецЕсли;
	
КонецПроцедуры

// Вызывается при начальном заполнении предопределенных элементов
Процедура ПриНастройкеНачальногоЗаполненияЭлементов(Настройки) Экспорт
	
	Настройки.ПриНачальномЗаполненииЭлемента = Истина;
	
КонецПроцедуры

// Вызывается при начальном заполнении справочника.
//
// Параметры:
//  КодыЯзыков - Массив - список языков конфигурации. Актуально для мультиязычных конфигураций.
//  Элементы   - ТаблицаЗначений - данные заполнения. Состав колонок соответствует набору реквизитов справочника.
//  ТабличныеЧасти - Структура из КлючИЗначение - данные заполнения табличных частей.
//                                                Состав колонок соответствует набору реквизитов табличных частей.
Процедура ПриНачальномЗаполненииЭлементов(КодыЯзыков, Элементы, ТабличныеЧасти) Экспорт

	КодОсновногоЯзыка = ОбщегоНазначения.КодОсновногоЯзыка();


	#Область ВнеоборотныеАктивы
	Элемент = Элементы.Добавить();  // см. СтрокаТЧПредопреденногоЭлемента
	Элемент.ИмяПредопределенныхДанных = "ВнеоборотныеАктивы";
	Элемент.Наименование = НСтр("ru='Необоротные активы';uk='Необоротні активи'",КодОсновногоЯзыка);

		#Область АмортизацияНМА
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "АмортизацияНМА";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ВнеоборотныеАктивы;
		Элемент.Наименование = НСтр("ru='Амортизация НМА';uk='Амортизація НМА'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "АмортизацияНМА";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Амортизация НМА';uk='Амортизація НМА'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ПрочиеАктивыПассивы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.АмортизацияНМА;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("АмортизацияНМАМеждународныйУчет");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("АмортизацияНМА2_4");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("АмортизацияНМА");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //АмортизацияНМА

		#Область АмортизацияОС
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "АмортизацияОС";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ВнеоборотныеАктивы;
		Элемент.Наименование = НСтр("ru='Амортизация ОС';uk='Амортизація ОЗ'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "АмортизацияОС";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Амортизация ОС';uk='Амортизація ОЗ'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ПрочиеАктивыПассивы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.АмортизацияОС;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("АмортизацияОС2_4");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("АмортизацияОС");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("АмортизацияОСМеждународныйУчет");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //АмортизацияОС

		#Область ВводОстатковАмортизацииНМАиРасходовНаНИОКР
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ВводОстатковАмортизацииНМАиРасходовНаНИОКР";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ВнеоборотныеАктивы;
		Элемент.Наименование = НСтр("ru='Ввод остатков амортизации НМА';uk='Введення залишків амортизації НМА'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "АмортизацияНМА";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Амортизация НМА';uk='Амортизація НМА'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ПрочиеАктивыПассивы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковАмортизацииНМАиРасходовНаНИОКР;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ВводОстатковВнеоборотныхАктивов2_4");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ВводОстатковАмортизацииНМАиРасходовНаНИОКР

		#Область ВводОстатковАмортизацииОС
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ВводОстатковАмортизацииОС";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ВнеоборотныеАктивы;
		Элемент.Наименование = НСтр("ru='Ввод остатков амортизации ОС';uk='Введення залишків амортизації ОЗ'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "АмортизацияОС";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Амортизация ОС';uk='Амортизація ОЗ'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ПрочиеАктивыПассивы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковАмортизацииОС;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ВводОстатковВнеоборотныхАктивов2_4");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ВводОстатковАмортизацииОС

		#Область ВводОстатковВложенийВоВнеоборотныеАктивы
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ВводОстатковВложенийВоВнеоборотныеАктивы";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ВнеоборотныеАктивы;
		Элемент.Наименование = НСтр("ru='Ввод остатков вложений в необоротные активы';uk='Введення залишків вкладень в необоротні активи'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ПрочиеРасходы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Прочие расходы';uk='Інші витрати'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковВложенийВоВнеоборотныеАктивы;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ВводОстатковВнеоборотныхАктивов2_4");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;

		Элемент.ФункциональныеОпции = ТабличныеЧасти.ФункциональныеОпции.Скопировать();
		ЭлементТЧ = Элемент.ФункциональныеОпции.Добавить();
		ЭлементТЧ.ИмяФункциональнойОпции = "ИспользоватьВнеоборотныеАктивы2_4";
		#КонецОбласти //ВводОстатковВложенийВоВнеоборотныеАктивы

		#Область ВводОстатковНМАиРасходовНаНИОКР
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ВводОстатковНМАиРасходовНаНИОКР";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ВнеоборотныеАктивы;
		Элемент.Наименование = НСтр("ru='Ввод остатков НМА';uk='Введення залишків НМА'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "";
		Элемент.ПредставлениеИсточникаДанных = "";
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковНМАиРасходовНаНИОКР;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ВводОстатковВнеоборотныхАктивов2_4");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;

		Элемент.ФункциональныеОпции = ТабличныеЧасти.ФункциональныеОпции.Скопировать();
		ЭлементТЧ = Элемент.ФункциональныеОпции.Добавить();
		ЭлементТЧ.ИмяФункциональнойОпции = "ИспользоватьВнеоборотныеАктивы2_4";
		#КонецОбласти //ВводОстатковНМАиРасходовНаНИОКР

		#Область ВводОстатковОсновныхСредств
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ВводОстатковОсновныхСредств";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ВнеоборотныеАктивы;
		Элемент.Наименование = НСтр("ru='Ввод остатков основных средств';uk='Введення залишків основних засобів'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "";
		Элемент.ПредставлениеИсточникаДанных = "";
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковОсновныхСредств;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ВводОстатковВнеоборотныхАктивов2_4");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;

		Элемент.ФункциональныеОпции = ТабличныеЧасти.ФункциональныеОпции.Скопировать();
		ЭлементТЧ = Элемент.ФункциональныеОпции.Добавить();
		ЭлементТЧ.ИмяФункциональнойОпции = "ИспользоватьВнеоборотныеАктивы2_4";
		#КонецОбласти //ВводОстатковОсновныхСредств

		#Область ВводОстатковСтоимостиНМАиРасходовНаНИОКР
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ВводОстатковСтоимостиНМАиРасходовНаНИОКР";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ВнеоборотныеАктивы;
		Элемент.Наименование = НСтр("ru='Ввод остатков стоимости НМА';uk='Введення залишків вартості НМА'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "СтоимостьНМА";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Стоимость НМА';uk='Вартість НМА'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ПрочиеАктивыПассивы;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковСтоимостиНМАиРасходовНаНИОКР;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ВводОстатковВнеоборотныхАктивов2_4");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;

		Элемент.ФункциональныеОпции = ТабличныеЧасти.ФункциональныеОпции.Скопировать();
		ЭлементТЧ = Элемент.ФункциональныеОпции.Добавить();
		ЭлементТЧ.ИмяФункциональнойОпции = "ИспользоватьВнеоборотныеАктивы2_4";
		#КонецОбласти //ВводОстатковСтоимостиНМАиРасходовНаНИОКР

		#Область ВводОстатковСтоимостиОС
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ВводОстатковСтоимостиОС";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ВнеоборотныеАктивы;
		Элемент.Наименование = НСтр("ru='Ввод остатков стоимости ОС';uk='Введення залишків вартості ОЗ'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "СтоимостьОС";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Стоимость ОС';uk='Вартість ОЗ'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ПрочиеАктивыПассивы;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковСтоимостиОС;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ВводОстатковВнеоборотныхАктивов2_4");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ВводОстатковСтоимостиОС

		#Область ВыработкаНМА
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ВыработкаНМА";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ВнеоборотныеАктивы;
		Элемент.Наименование = НСтр("ru='Выработка НМА';uk='Виробіток НМА'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "";
		Элемент.ПредставлениеИсточникаДанных = "";
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыработкаНМА;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ВыработкаНМА");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ВыработкаНМА

		#Область ИзменениеПараметровАмортизацииНМА
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ИзменениеПараметровАмортизацииНМА";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ВнеоборотныеАктивы;
		Элемент.Наименование = НСтр("ru='Изменение параметров амортизации НМА';uk='Зміна параметрів амортизації НМА'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДоходыРасходыПрочиеАктивыПассивы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Доходы/Расходы - Прочие активы/пассивы';uk='Рухи Доходи/Витрати - Інші активи/пасиви'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ПрочиеАктивыПассивы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ПрочиеАктивыПассивы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ИзменениеПараметровАмортизацииНМА;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ИзменениеПараметровНМА2_4");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ПеремещениеНМА2_4");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ИзменениеПараметровАмортизацииНМА

		#Область ИзменениеПараметровАмортизацииОС
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ИзменениеПараметровАмортизацииОС";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ВнеоборотныеАктивы;
		Элемент.Наименование = НСтр("ru='Изменение параметров амортизации ОС';uk='Зміна параметрів амортизації ОЗ'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДоходыРасходыПрочиеАктивыПассивы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Доходы/Расходы - Прочие активы/пассивы';uk='Рухи Доходи/Витрати - Інші активи/пасиви'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ПрочиеАктивыПассивы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ПрочиеАктивыПассивы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ИзменениеПараметровАмортизацииОС;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ИзменениеПараметровОС2_4");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ПеремещениеОС2_4");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ИзменениеПараметровАмортизацииОС

		#Область ИзменениеПараметровНМА
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ИзменениеПараметровНМА";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ВнеоборотныеАктивы;
		Элемент.Наименование = НСтр("ru='Изменение параметров НМА';uk='Зміна параметрів НМА'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "";
		Элемент.ПредставлениеИсточникаДанных = "";
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ИзменениеПараметровНМА;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ИзменениеПараметровНМА2_4");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ИзменениеПараметровНМА");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ИзменениеПараметровНМАМеждународныйУчет");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ИзменениеПараметровНМА

		#Область ИзменениеПараметровОС
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ИзменениеПараметровОС";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ВнеоборотныеАктивы;
		Элемент.Наименование = НСтр("ru='Изменение параметров ОС';uk='Зміна параметрів ОЗ'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "";
		Элемент.ПредставлениеИсточникаДанных = "";
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ИзменениеПараметровОС;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ИзменениеПараметровОС2_4");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ИзменениеПараметровОС");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ИзменениеПараметровОСМеждународныйУчет");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ИзменениеПараметровОС

		#Область ИзменениеПараметровСтоимостиНМА
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ИзменениеПараметровСтоимостиНМА";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ВнеоборотныеАктивы;
		Элемент.Наименование = НСтр("ru='Изменение параметров стоимости НМА';uk='Зміна параметрів вартості НМА'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДоходыРасходыПрочиеАктивыПассивы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Доходы/Расходы - Прочие активы/пассивы';uk='Рухи Доходи/Витрати - Інші активи/пасиви'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ПрочиеАктивыПассивы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ПрочиеАктивыПассивы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ИзменениеПараметровСтоимостиНМА;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ИзменениеПараметровНМА2_4");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ПеремещениеНМА2_4");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ИзменениеПараметровСтоимостиНМА

		#Область ИзменениеПараметровСтоимостиОС
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ИзменениеПараметровСтоимостиОС";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ВнеоборотныеАктивы;
		Элемент.Наименование = НСтр("ru='Изменение параметров стоимости ОС';uk='Зміна параметрів вартості ОЗ'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДоходыРасходыПрочиеАктивыПассивы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Доходы/Расходы - Прочие активы/пассивы';uk='Рухи Доходи/Витрати - Інші активи/пасиви'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ПрочиеАктивыПассивы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ПрочиеАктивыПассивы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ИзменениеПараметровСтоимостиОС;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ИзменениеПараметровОС2_4");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ПеремещениеОС2_4");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ИзменениеПараметровСтоимостиОС

		#Область ИзменениеСостоянияОС
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ИзменениеСостоянияОС";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ВнеоборотныеАктивы;
		Элемент.Наименование = НСтр("ru='Изменение состояния ОС';uk='Зміна стану ОЗ'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "";
		Элемент.ПредставлениеИсточникаДанных = "";
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ИзменениеСостоянияОС;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ИзменениеСостоянияОС");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ИзменениеСостоянияОС


		#Область ИнвентаризацияВложенийВОС
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ИнвентаризацияВложенийВОС";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ВнеоборотныеАктивы;
		Элемент.Наименование = НСтр("ru='Инвентаризация вложений в ОС';uk='Інвентаризація вкладень в ОЗ'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "";
		Элемент.ПредставлениеИсточникаДанных = "";
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ИнвентаризацияВложенийВОС;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ИнвентаризацияОС");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;

		Элемент.ФункциональныеОпции = ТабличныеЧасти.ФункциональныеОпции.Скопировать();
		ЭлементТЧ = Элемент.ФункциональныеОпции.Добавить();
		ЭлементТЧ.ИмяФункциональнойОпции = "РегламентированныйУчетВНА";
		#КонецОбласти //ИнвентаризацияВложенийВОС

		#Область ИнвентаризацияНезавершенногоСтроительства
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ИнвентаризацияНезавершенногоСтроительства";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ВнеоборотныеАктивы;
		Элемент.Наименование = НСтр("ru='Инвентаризация незавершенного строительства';uk='Інвентаризація незавершеного будівництва'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "";
		Элемент.ПредставлениеИсточникаДанных = "";
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ИнвентаризацияНезавершенногоСтроительства;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ИнвентаризацияОС");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;

		Элемент.ФункциональныеОпции = ТабличныеЧасти.ФункциональныеОпции.Скопировать();
		ЭлементТЧ = Элемент.ФункциональныеОпции.Добавить();
		ЭлементТЧ.ИмяФункциональнойОпции = "РегламентированныйУчетВНА";
		#КонецОбласти //ИнвентаризацияНезавершенногоСтроительства

		#Область ИнвентаризацияНМА
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ИнвентаризацияНМА";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ВнеоборотныеАктивы;
		Элемент.Наименование = НСтр("ru='Инвентаризация НМА';uk='Інвентаризація НМА'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "";
		Элемент.ПредставлениеИсточникаДанных = "";
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ИнвентаризацияНМА;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ИнвентаризацияНМА");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ИнвентаризацияНМА

		#Область ИнвентаризацияОС
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ИнвентаризацияОС";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ВнеоборотныеАктивы;
		Элемент.Наименование = НСтр("ru='Инвентаризация ОС';uk='Інвентаризація ОЗ'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "";
		Элемент.ПредставлениеИсточникаДанных = "";
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ИнвентаризацияОС;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ИнвентаризацияОС");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ИнвентаризацияОС

		#Область КорректировкаСтоимостиИАмортизацииНМА
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "КорректировкаСтоимостиИАмортизацииНМА";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ВнеоборотныеАктивы;
		Элемент.Наименование = НСтр("ru='Корректировка стоимости и амортизации НМА';uk='Коригування вартості і амортизації НМА'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "";
		Элемент.ПредставлениеИсточникаДанных = "";
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.КорректировкаСтоимостиИАмортизацииНМА;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("КорректировкаСтоимостиИАмортизацииНМА");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;

		Элемент.ФункциональныеОпции = ТабличныеЧасти.ФункциональныеОпции.Скопировать();
		ЭлементТЧ = Элемент.ФункциональныеОпции.Добавить();
		ЭлементТЧ.ИмяФункциональнойОпции = "ИспользоватьВнеоборотныеАктивы2_4";
		#КонецОбласти //КорректировкаСтоимостиИАмортизацииНМА

		#Область КорректировкаСтоимостиИАмортизацииОС
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "КорректировкаСтоимостиИАмортизацииОС";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ВнеоборотныеАктивы;
		Элемент.Наименование = НСтр("ru='Корректировка стоимости и амортизации ОС';uk='Коригування вартості і амортизації ОЗ'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "";
		Элемент.ПредставлениеИсточникаДанных = "";
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.КорректировкаСтоимостиИАмортизацииОС;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("КорректировкаСтоимостиИАмортизацииОС");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;

		Элемент.ФункциональныеОпции = ТабличныеЧасти.ФункциональныеОпции.Скопировать();
		ЭлементТЧ = Элемент.ФункциональныеОпции.Добавить();
		ЭлементТЧ.ИмяФункциональнойОпции = "ИспользоватьВнеоборотныеАктивы2_4";
		#КонецОбласти //КорректировкаСтоимостиИАмортизацииОС
		
        #Область КорректировкаНалоговогоНазначенияОС
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "КорректировкаНалоговогоНазначенияОС";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ВнеоборотныеАктивы;
		Элемент.Наименование = НСтр("ru='Корректировка налогового назначения ОС';uk='Коригування податкового призначення ОЗ'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "";
		Элемент.ПредставлениеИсточникаДанных = "";
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.КорректировкаНалоговогоНазначенияОС;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("КорректировкаНалоговогоНазначенияОС");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //КорректировкаНалоговогоНазначенияОС
		
		#Область МодернизацияОС
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "МодернизацияОС";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ВнеоборотныеАктивы;
		Элемент.Наименование = НСтр("ru='Модернизация ОС';uk='Модернізація ОЗ'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДоходыРасходыПрочиеАктивыПассивы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Доходы/Расходы - Прочие активы/пассивы';uk='Рухи Доходи/Витрати - Інші активи/пасиви'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ПрочиеАктивыПассивы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.МодернизацияОС;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("МодернизацияОС2_4");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("МодернизацияОС");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //МодернизацияОС

		#Область РемонтОС
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "РемонтОС";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ВнеоборотныеАктивы;
		Элемент.Наименование = НСтр("ru='Ремонт ОС';uk='Ремонт ОЗ'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДоходыРасходыПрочиеАктивыПассивы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Доходы/Расходы - Прочие активы/пассивы';uk='Рухи Доходи/Витрати - Інші активи/пасиви'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ПрочиеАктивыПассивы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РемонтОС;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("РемонтОС");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //РемонтОС
		
		#Область МодернизацияНМА
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "МодернизацияНМА";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ВнеоборотныеАктивы;
		Элемент.Наименование = НСтр("ru='Модернизация НМА';uk='Модернізація НМА'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДоходыРасходыПрочиеАктивыПассивы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Доходы/Расходы - Прочие активы/пассивы';uk='Рухи Доходи/Витрати - Інші активи/пасиви'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ПрочиеАктивыПассивы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.МодернизацияНМА;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("МодернизацияНМА");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //МодернизацияОС
		

		
		#Область ПеремещениеНМА
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПеремещениеНМА";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ВнеоборотныеАктивы;
		Элемент.Наименование = НСтр("ru='Перемещение НМА';uk='Переміщення НМА'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "";
		Элемент.ПредставлениеИсточникаДанных = "";
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеремещениеНМА;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ПеремещениеНМА2_4");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ПеремещениеНМА");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ПеремещениеНМАМеждународныйУчет");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ПеремещениеНМА

		#Область ПеремещениеОС
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПеремещениеОС";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ВнеоборотныеАктивы;
		Элемент.Наименование = НСтр("ru='Перемещение ОС';uk='Переміщення ОЗ'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "";
		Элемент.ПредставлениеИсточникаДанных = "";
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеремещениеОС;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ПеремещениеОС2_4");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ПеремещениеОС");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ПеремещениеОСМеждународныйУчет");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ПеремещениеОС



		#Область ПереоценкаНМА
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПереоценкаНМА";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ВнеоборотныеАктивы;
		Элемент.Наименование = НСтр("ru='Переоценка НМА';uk='Переоцінка НМА'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "";
		Элемент.ПредставлениеИсточникаДанных = "";
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПереоценкаНМА;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ПереоценкаНМА2_4");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ПереоценкаНМА");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ПереоценкаНМА

		#Область ПереоценкаОС
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПереоценкаОС";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ВнеоборотныеАктивы;
		Элемент.Наименование = НСтр("ru='Переоценка ОС';uk='Переоцінка ОЗ'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "";
		Элемент.ПредставлениеИсточникаДанных = "";
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПереоценкаОС;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ПереоценкаОС2_4");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ПереоценкаОС");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ПереоценкаОС

		#Область ПодготовкаКПередачеНМА
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПодготовкаКПередачеНМА";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ВнеоборотныеАктивы;
		Элемент.Наименование = НСтр("ru='Подготовка к передаче НМА';uk='Підготовка до передачі НМА'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДоходыРасходыПрочиеАктивыПассивы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Доходы/Расходы - Прочие активы/пассивы';uk='Рухи Доходи/Витрати - Інші активи/пасиви'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ПрочиеАктивыПассивы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ПрочиеАктивыПассивы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПодготовкаКПередачеНМА;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ПодготовкаКПередачеНМА2_4");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ПодготовкаКПередачеНМА");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ПодготовкаКПередачеНМА

		#Область ПодготовкаКПередачеОС
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПодготовкаКПередачеОС";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ВнеоборотныеАктивы;
		Элемент.Наименование = НСтр("ru='Подготовка к передаче ОС';uk='Підготовка до передачі ОЗ'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДоходыРасходыПрочиеАктивыПассивы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Доходы/Расходы - Прочие активы/пассивы';uk='Рухи Доходи/Витрати - Інші активи/пасиви'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ПрочиеАктивыПассивы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ПрочиеАктивыПассивы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПодготовкаКПередачеОС;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ПодготовкаКПередачеОС2_4");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ПодготовкаКПередачеОС");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ПодготовкаКПередачеОС

		#Область ПринятиеКУчетуНМА
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПринятиеКУчетуНМА";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ВнеоборотныеАктивы;
		Элемент.Наименование = НСтр("ru='Принятие к учету НМА';uk='Прийняття до обліку НМА'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДоходыРасходыПрочиеАктивыПассивы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Доходы/Расходы - Прочие активы/пассивы';uk='Рухи Доходи/Витрати - Інші активи/пасиви'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ПрочиеАктивыПассивы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ПрочиеАктивыПассивы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПринятиеКУчетуНМА;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ПринятиеКУчетуНМА2_4");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ПринятиеКУчетуНМА");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ПринятиеКУчетуНМАМеждународныйУчет");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ПринятиеКУчетуНМА

		
		#Область ПринятиеКУчетуОС
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПринятиеКУчетуОС";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ВнеоборотныеАктивы;
		Элемент.Наименование = НСтр("ru='Принятие к учету ОС';uk='Прийняття до обліку ОЗ'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДоходыРасходыПрочиеАктивыПассивы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Доходы/Расходы - Прочие активы/пассивы';uk='Рухи Доходи/Витрати - Інші активи/пасиви'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ПрочиеАктивыПассивы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПринятиеКУчетуОС;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ПринятиеКУчетуОС2_4");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ПринятиеКУчетуОС");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ПринятиеКУчетуОСМеждународныйУчет");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ПринятиеКУчетуОС



		#Область РеализацияВнеоборотныхАктивов
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "РеализацияВнеоборотныхАктивов";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ВнеоборотныеАктивы;
		Элемент.Наименование = НСтр("ru='Реализация необоротных активов';uk='Реалізація необоротних активів'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "";
		Элемент.ПредставлениеИсточникаДанных = "";
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияВнеоборотныхАктивов;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("РеализацияУслугПрочихАктивов");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;

		Элемент.ФункциональныеОпции = ТабличныеЧасти.ФункциональныеОпции.Скопировать();
		ЭлементТЧ = Элемент.ФункциональныеОпции.Добавить();
		ЭлементТЧ.ИмяФункциональнойОпции = "ИспользоватьВнеоборотныеАктивы2_4";
		#КонецОбласти //РеализацияВнеоборотныхАктивов
		
		#Область СебестоимостьРеализацииНМА
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "СебестоимостьРеализацииНМА";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ВнеоборотныеАктивы;
		Элемент.Наименование = НСтр("ru='Себестоимость реализации НМА';uk='Собівартість реалізації НМА'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДоходыРасходыПрочиеАктивыПассивы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Доходы/Расходы - Прочие активы/пассивы';uk='Рухи Доходи/Витрати - Інші активи/пасиви'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ПрочиеАктивыПассивы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СебестоимостьРеализацииНМА;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("РеализацияУслугПрочихАктивов");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //СебестоимостьРеализацииНМА

		#Область СебестоимостьРеализацииОС
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "СебестоимостьРеализацииОС";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ВнеоборотныеАктивы;
		Элемент.Наименование = НСтр("ru='Себестоимость реализации ОС';uk='Собівартість реалізації ОЗ'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДоходыРасходыПрочиеАктивыПассивы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Доходы/Расходы - Прочие активы/пассивы';uk='Рухи Доходи/Витрати - Інші активи/пасиви'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ПрочиеАктивыПассивы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СебестоимостьРеализацииОС;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("РеализацияУслугПрочихАктивов");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //СебестоимостьРеализацииОС

		#Область СписаниеАмортизацииНМА
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "СписаниеАмортизацииНМА";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ВнеоборотныеАктивы;
		Элемент.Наименование = НСтр("ru='Списание амортизации НМА';uk='Списання амортизації НМА'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДоходыРасходыПрочиеАктивыПассивы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Доходы/Расходы - Прочие активы/пассивы';uk='Рухи Доходи/Витрати - Інші активи/пасиви'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ПрочиеАктивыПассивы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ПрочиеАктивыПассивы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СписаниеАмортизацииНМА;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("СписаниеНМА2_4");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //СписаниеАмортизацииНМА

		#Область СписаниеАмортизацииОС
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "СписаниеАмортизацииОС";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ВнеоборотныеАктивы;
		Элемент.Наименование = НСтр("ru='Списание амортизации ОС';uk='Списання амортизації ОЗ'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДоходыРасходыПрочиеАктивыПассивы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Доходы/Расходы - Прочие активы/пассивы';uk='Рухи Доходи/Витрати - Інші активи/пасиви'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ПрочиеАктивыПассивы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ПрочиеАктивыПассивы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СписаниеАмортизацииОС;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("СписаниеОС2_4");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //СписаниеАмортизацииОС


		#Область СписаниеНМА
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "СписаниеНМА";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ВнеоборотныеАктивы;
		Элемент.Наименование = НСтр("ru='Списание НМА';uk='Списання НМА'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "";
		Элемент.ПредставлениеИсточникаДанных = "";
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СписаниеНМА;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("СписаниеНМА2_4");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("СписаниеНМА");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("СписаниеНМАМеждународныйУчет");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //СписаниеНМА

		#Область СписаниеОС
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "СписаниеОС";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ВнеоборотныеАктивы;
		Элемент.Наименование = НСтр("ru='Списание ОС';uk='Списання ОЗ'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "";
		Элемент.ПредставлениеИсточникаДанных = "";
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СписаниеОС;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("СписаниеОС2_4");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("СписаниеОС");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("СписаниеОСМеждународныйУчет");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //СписаниеОС

		#Область СписаниеОСпоИнвентаризации
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "СписаниеОСпоИнвентаризации";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ВнеоборотныеАктивы;
		Элемент.Наименование = НСтр("ru='Списание ОС по инвентаризации';uk='Списання ОЗ за інвентаризацією'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "";
		Элемент.ПредставлениеИсточникаДанных = "";
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СписаниеОСпоИнвентаризации;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("СписаниеОС2_4");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;

		Элемент.ФункциональныеОпции = ТабличныеЧасти.ФункциональныеОпции.Скопировать();
		ЭлементТЧ = Элемент.ФункциональныеОпции.Добавить();
		ЭлементТЧ.ИмяФункциональнойОпции = "ИспользоватьВнеоборотныеАктивы2_4";
		#КонецОбласти //СписаниеОСпоИнвентаризации

		#Область СписаниеРезерваПереоценкиАмортизацииНМА
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "СписаниеРезерваПереоценкиАмортизацииНМА";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ВнеоборотныеАктивы;
		Элемент.Наименование = НСтр("ru='Списание резерва переоценки амортизации НМА';uk='Списання резерву переоцінки амортизації НМА'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДоходыРасходыПрочиеАктивыПассивы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Доходы/Расходы - Прочие активы/пассивы';uk='Рухи Доходи/Витрати - Інші активи/пасиви'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ПрочиеАктивыПассивы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СписаниеРезерваПереоценкиАмортизацииНМА;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("СписаниеНМА2_4");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //СписаниеРезерваПереоценкиАмортизацииНМА

		#Область СписаниеРезерваПереоценкиАмортизацииОС
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "СписаниеРезерваПереоценкиАмортизацииОС";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ВнеоборотныеАктивы;
		Элемент.Наименование = НСтр("ru='Списание резерва переоценки амортизации ОС';uk='Списання резерву переоцінки амортизації ОЗ'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДоходыРасходыПрочиеАктивыПассивы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Доходы/Расходы - Прочие активы/пассивы';uk='Рухи Доходи/Витрати - Інші активи/пасиви'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ПрочиеАктивыПассивы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СписаниеРезерваПереоценкиАмортизацииОС;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("СписаниеОС2_4");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //СписаниеРезерваПереоценкиАмортизацииОС

		#Область СписаниеРезерваПереоценкиСтоимостиНМА
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "СписаниеРезерваПереоценкиСтоимостиНМА";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ВнеоборотныеАктивы;
		Элемент.Наименование = НСтр("ru='Списание резерва переоценки стоимости НМА';uk='Списання резерву переоцінки вартості НМА'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДоходыРасходыПрочиеАктивыПассивы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Доходы/Расходы - Прочие активы/пассивы';uk='Рухи Доходи/Витрати - Інші активи/пасиви'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ПрочиеАктивыПассивы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СписаниеРезерваПереоценкиСтоимостиНМА;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("СписаниеНМА2_4");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //СписаниеРезерваПереоценкиСтоимостиНМА

		#Область СписаниеРезерваПереоценкиСтоимостиОС
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "СписаниеРезерваПереоценкиСтоимостиОС";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ВнеоборотныеАктивы;
		Элемент.Наименование = НСтр("ru='Списание резерва переоценки стоимости ОС';uk='Списання резерву переоцінки вартості ОЗ'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДоходыРасходыПрочиеАктивыПассивы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Доходы/Расходы - Прочие активы/пассивы';uk='Рухи Доходи/Витрати - Інші активи/пасиви'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ПрочиеАктивыПассивы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СписаниеРезерваПереоценкиСтоимостиОС;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("СписаниеОС2_4");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //СписаниеРезерваПереоценкиСтоимостиОС

		#Область СписаниеСтоимостиНМА
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "СписаниеСтоимостиНМА";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ВнеоборотныеАктивы;
		Элемент.Наименование = НСтр("ru='Списание стоимости НМА';uk='Списання вартості НМА'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДоходыРасходыПрочиеАктивыПассивы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Доходы/Расходы - Прочие активы/пассивы';uk='Рухи Доходи/Витрати - Інші активи/пасиви'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ПрочиеАктивыПассивы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СписаниеСтоимостиНМА;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("СписаниеНМА2_4");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //СписаниеСтоимостиНМА

		#Область СписаниеСтоимостиОС
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "СписаниеСтоимостиОС";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ВнеоборотныеАктивы;
		Элемент.Наименование = НСтр("ru='Списание стоимости ОС';uk='Списання вартості ОЗ'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДоходыРасходыПрочиеАктивыПассивы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Доходы/Расходы - Прочие активы/пассивы';uk='Рухи Доходи/Витрати - Інші активи/пасиви'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ПрочиеАктивыПассивы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СписаниеСтоимостиОС;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("СписаниеОС2_4");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //СписаниеСтоимостиОС

		#Область УвеличениеНакопленнойАмортизацииНМА
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "УвеличениеНакопленнойАмортизацииНМА";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ВнеоборотныеАктивы;
		Элемент.Наименование = НСтр("ru='Увеличение накопленной амортизации НМА';uk='Збільшення накопиченої амортизації НМА'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДоходыРасходыПрочиеАктивыПассивы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Доходы/Расходы - Прочие активы/пассивы';uk='Рухи Доходи/Витрати - Інші активи/пасиви'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ПрочиеАктивыПассивы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ПрочиеАктивыПассивы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.УвеличениеНакопленнойАмортизацииНМА;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ПереоценкаНМА2_4");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //УвеличениеНакопленнойАмортизацииНМА

		#Область УвеличениеНакопленнойАмортизацииОС
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "УвеличениеНакопленнойАмортизацииОС";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ВнеоборотныеАктивы;
		Элемент.Наименование = НСтр("ru='Увеличение накопленной амортизации ОС';uk='Збільшення накопиченої амортизації ОЗ'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДоходыРасходыПрочиеАктивыПассивы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Доходы/Расходы - Прочие активы/пассивы';uk='Рухи Доходи/Витрати - Інші активи/пасиви'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ПрочиеАктивыПассивы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ПрочиеАктивыПассивы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.УвеличениеНакопленнойАмортизацииОС;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ПереоценкаОС2_4");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //УвеличениеНакопленнойАмортизацииОС

		#Область УвеличениеСтоимостиНМА
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "УвеличениеСтоимостиНМА";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ВнеоборотныеАктивы;
		Элемент.Наименование = НСтр("ru='Увеличение стоимости НМА';uk='Збільшення вартості НМА'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДоходыРасходыПрочиеАктивыПассивы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Доходы/Расходы - Прочие активы/пассивы';uk='Рухи Доходи/Витрати - Інші активи/пасиви'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ПрочиеАктивыПассивы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ПрочиеАктивыПассивы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.УвеличениеСтоимостиНМА;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ПереоценкаНМА2_4");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //УвеличениеСтоимостиНМА

		#Область УвеличениеСтоимостиОС
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "УвеличениеСтоимостиОС";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ВнеоборотныеАктивы;
		Элемент.Наименование = НСтр("ru='Увеличение стоимости ОС';uk='Збільшення вартості ОЗ'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДоходыРасходыПрочиеАктивыПассивы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Доходы/Расходы - Прочие активы/пассивы';uk='Рухи Доходи/Витрати - Інші активи/пасиви'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ПрочиеАктивыПассивы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ПрочиеАктивыПассивы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.УвеличениеСтоимостиОС;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ПереоценкаОС2_4");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //УвеличениеСтоимостиОС

		#Область УменьшениеВеличиныДооценкиНакопленнойАмортизацииНМА
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "УменьшениеВеличиныДооценкиНакопленнойАмортизацииНМА";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ВнеоборотныеАктивы;
		Элемент.Наименование = НСтр("ru='Уменьшение величины дооценки накопленной амортизации НМА';uk='Зменшення величини дооцінки накопиченої амортизації НМА'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДоходыРасходыПрочиеАктивыПассивы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Доходы/Расходы - Прочие активы/пассивы';uk='Рухи Доходи/Витрати - Інші активи/пасиви'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ПрочиеАктивыПассивы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ПрочиеАктивыПассивы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.УменьшениеВеличиныДооценкиНакопленнойАмортизацииНМА;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ПереоценкаНМА2_4");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //УменьшениеВеличиныДооценкиНакопленнойАмортизацииНМА

		#Область УменьшениеВеличиныДооценкиНакопленнойАмортизацииОС
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "УменьшениеВеличиныДооценкиНакопленнойАмортизацииОС";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ВнеоборотныеАктивы;
		Элемент.Наименование = НСтр("ru='Уменьшение величины дооценки накопленной амортизации ОС';uk='Зменшення величини дооцінки накопиченої амортизації ОЗ'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДоходыРасходыПрочиеАктивыПассивы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Доходы/Расходы - Прочие активы/пассивы';uk='Рухи Доходи/Витрати - Інші активи/пасиви'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ПрочиеАктивыПассивы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ПрочиеАктивыПассивы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.УменьшениеВеличиныДооценкиНакопленнойАмортизацииОС;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ПереоценкаОС2_4");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //УменьшениеВеличиныДооценкиНакопленнойАмортизацииОС

		#Область УменьшениеВеличиныДооценкиСтоимостиНМА
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "УменьшениеВеличиныДооценкиСтоимостиНМА";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ВнеоборотныеАктивы;
		Элемент.Наименование = НСтр("ru='Уменьшение величины дооценки стоимости НМА';uk='Зменшення величини дооцінки вартості НМА'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДоходыРасходыПрочиеАктивыПассивы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Доходы/Расходы - Прочие активы/пассивы';uk='Рухи Доходи/Витрати - Інші активи/пасиви'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ПрочиеАктивыПассивы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ПрочиеАктивыПассивы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.УменьшениеВеличиныДооценкиСтоимостиНМА;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ПереоценкаНМА2_4");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //УменьшениеВеличиныДооценкиСтоимостиНМА

		#Область УменьшениеВеличиныДооценкиСтоимостиОС
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "УменьшениеВеличиныДооценкиСтоимостиОС";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ВнеоборотныеАктивы;
		Элемент.Наименование = НСтр("ru='Уменьшение величины дооценки стоимости ОС';uk='Зменшення величини дооцінки вартості ОЗ'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДоходыРасходыПрочиеАктивыПассивы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Доходы/Расходы - Прочие активы/пассивы';uk='Рухи Доходи/Витрати - Інші активи/пасиви'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ПрочиеАктивыПассивы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ПрочиеАктивыПассивы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.УменьшениеВеличиныДооценкиСтоимостиОС;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ПереоценкаОС2_4");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //УменьшениеВеличиныДооценкиСтоимостиОС

		#Область УменьшениеНакопленнойАмортизацииНМА
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "УменьшениеНакопленнойАмортизацииНМА";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ВнеоборотныеАктивы;
		Элемент.Наименование = НСтр("ru='Уменьшение накопленной амортизации НМА';uk='Зменшення накопиченої амортизації НМА'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДоходыРасходыПрочиеАктивыПассивы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Доходы/Расходы - Прочие активы/пассивы';uk='Рухи Доходи/Витрати - Інші активи/пасиви'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ПрочиеАктивыПассивы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.УменьшениеНакопленнойАмортизацииНМА;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ПереоценкаНМА2_4");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //УменьшениеНакопленнойАмортизацииНМА

		#Область УменьшениеНакопленнойАмортизацииОС
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "УменьшениеНакопленнойАмортизацииОС";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ВнеоборотныеАктивы;
		Элемент.Наименование = НСтр("ru='Уменьшение накопленной амортизации ОС';uk='Зменшення накопиченої амортизації ОЗ'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДоходыРасходыПрочиеАктивыПассивы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Доходы/Расходы - Прочие активы/пассивы';uk='Рухи Доходи/Витрати - Інші активи/пасиви'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ПрочиеАктивыПассивы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.УменьшениеНакопленнойАмортизацииОС;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ПереоценкаОС2_4");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //УменьшениеНакопленнойАмортизацииОС

		#Область УменьшениеСтоимостиНМА
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "УменьшениеСтоимостиНМА";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ВнеоборотныеАктивы;
		Элемент.Наименование = НСтр("ru='Уменьшение стоимости НМА';uk='Зменшення вартості НМА'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДоходыРасходыПрочиеАктивыПассивы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Доходы/Расходы - Прочие активы/пассивы';uk='Рухи Доходи/Витрати - Інші активи/пасиви'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ПрочиеАктивыПассивы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.УменьшениеСтоимостиНМА;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ПереоценкаНМА2_4");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //УменьшениеСтоимостиНМА

		#Область УменьшениеСтоимостиОС
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "УменьшениеСтоимостиОС";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ВнеоборотныеАктивы;
		Элемент.Наименование = НСтр("ru='Уменьшение стоимости ОС';uk='Зменшення вартості ОЗ'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДоходыРасходыПрочиеАктивыПассивы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Доходы/Расходы - Прочие активы/пассивы';uk='Рухи Доходи/Витрати - Інші активи/пасиви'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ПрочиеАктивыПассивы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.УменьшениеСтоимостиОС;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ПереоценкаОС2_4");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //УменьшениеСтоимостиОС
		
	#КонецОбласти //ВнеоборотныеАктивы

	#Область ДенежныеДокументы
	Элемент = Элементы.Добавить();  // см. СтрокаТЧПредопреденногоЭлемента
	Элемент.ИмяПредопределенныхДанных = "ДенежныеДокументы";
	Элемент.Наименование = НСтр("ru='Денежные документы';uk='Грошові документи'",КодОсновногоЯзыка);

		#Область ВозвратДенежныхДокументовПоставщику
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ВозвратДенежныхДокументовПоставщику";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ДенежныеДокументы;
		Элемент.Наименование = НСтр("ru='Возврат денежных документов поставщику';uk='Повернення грошових документів постачальнику'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДенежныеСредстваКонтрагент";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Денежные средства - Контрагент';uk='Рухи Грошові кошти - Контрагент'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДенежныхДокументовПоставщику;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ВыбытиеДенежныхДокументов");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ВозвратДенежныхДокументовПоставщику

		#Область ВыдачаДенежныхДокументовПодотчетнику
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ВыдачаДенежныхДокументовПодотчетнику";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ДенежныеДокументы;
		Элемент.Наименование = НСтр("ru='Выдача денежных документов подотчетнику';uk='Видача грошових документів підзвітнику'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДенежныхСредств";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Денежные средства - Денежные средства';uk='Рухи Грошові кошти - Грошові кошти'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыдачаДенежныхДокументовПодотчетнику;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ВыбытиеДенежныхДокументов");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ВыдачаДенежныхДокументовПодотчетнику

		#Область ПеремещениеДенежныхДокументов
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПеремещениеДенежныхДокументов";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ДенежныеДокументы;
		Элемент.Наименование = НСтр("ru='Перемещение денежных документов';uk='Переміщення грошових документів'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "";
		Элемент.ПредставлениеИсточникаДанных = "";
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеремещениеДенежныхДокументов;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;
		#КонецОбласти //ПеремещениеДенежныхДокументов

		#Область ПоступлениеДенежныхДокументовОтПодотчетника
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПоступлениеДенежныхДокументовОтПодотчетника";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ДенежныеДокументы;
		Элемент.Наименование = НСтр("ru='Поступление денежных документов от подотчетника';uk='Надходження грошових документів від підзвітної особи'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДенежныхСредств";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Денежные средства - Денежные средства';uk='Рухи Грошові кошти - Грошові кошти'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхДокументовОтПодотчетника;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ПоступлениеДенежныхДокументов");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ПоступлениеДенежныхДокументовОтПодотчетника

		#Область ПоступлениеДенежныхДокументовОтПоставщика
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПоступлениеДенежныхДокументовОтПоставщика";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ДенежныеДокументы;
		Элемент.Наименование = НСтр("ru='Поступление денежных документов от поставщика';uk='Надходження грошових документів від постачальника'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДенежныеСредстваКонтрагент";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Денежные средства - Контрагент';uk='Рухи Грошові кошти - Контрагент'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхДокументовОтПоставщика;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ПоступлениеДенежныхДокументов");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ПоступлениеДенежныхДокументовОтПоставщика

		#Область СписаниеДенежныхДокументов
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "СписаниеДенежныхДокументов";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ДенежныеДокументы;
		Элемент.Наименование = НСтр("ru='Списание денежных документов';uk='Списання грошових документів'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДенежныеСредстваДоходыРасходы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Денежные средства - Доходы/Расходы';uk='Рухи Грошові кошти - Доходи/Витрати'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СписаниеДенежныхДокументов;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ВыбытиеДенежныхДокументов");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //СписаниеДенежныхДокументов

	#КонецОбласти //ДенежныеДокументы

	#Область ДенежныеСредства
	Элемент = Элементы.Добавить();  // см. СтрокаТЧПредопреденногоЭлемента
	Элемент.ИмяПредопределенныхДанных = "ДенежныеСредства";
	Элемент.Наименование = НСтр("ru='Денежные средства';uk='Грошові кошти'",КодОсновногоЯзыка);

		#Область ВнесениеДенежныхСредствВКассуККМ
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ВнесениеДенежныхСредствВКассуККМ";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ДенежныеСредства;
		Элемент.Наименование = НСтр("ru='Внесение ДС в кассу ККМ';uk='Внесення ГК в касу ККМ'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДенежныхСредств";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Денежные средства - Денежные средства';uk='Рухи Грошові кошти - Грошові кошти'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВнесениеДенежныхСредствВКассуККМ;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ВнесениеДенежныхСредствВКассуККМ");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ВнесениеДенежныхСредствВКассуККМ

		#Область ВнутреннееПоступлениеДенежныхСредств
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ВнутреннееПоступлениеДенежныхСредств";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ДенежныеСредства;
		Элемент.Наименование = НСтр("ru='(не используется) Внутреннее поступление ДС';uk='(не використовується) Внутрішнє надходження ГК'",КодОсновногоЯзыка);
		#КонецОбласти //ВнутреннееПоступлениеДенежныхСредств

		#Область ВнутренняяПередачаДенежныхСредств
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ВнутренняяПередачаДенежныхСредств";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ДенежныеСредства;
		Элемент.Наименование = НСтр("ru='(не используется) Внутренняя передача ДС между организацией и филиалами';uk='(не використовується) Внутрішня передача ГК між організацією та філіями'",КодОсновногоЯзыка);
		#КонецОбласти //ВнутренняяПередачаДенежныхСредств

		#Область ВозвратДенежныхСредствВДругуюОрганизацию
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ВозвратДенежныхСредствВДругуюОрганизацию";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ДенежныеСредства;
		Элемент.Наименование = НСтр("ru='Возврат ДС в другую организацию';uk='Повернення ГК в іншу організацію'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДенежныеСредстваКонтрагент";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Денежные средства - Контрагент';uk='Рухи Грошові кошти - Контрагент'",КодОсновногоЯзыка);
		Элемент.Описание = НСтр("ru='Возврат денежных средств в собственную организацию (Интеркампани)';uk='Повернення грошових коштів у власну організацію (Інтеркампані)'",КодОсновногоЯзыка);
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Истина;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("РасходныйКассовыйОрдер");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("СписаниеБезналичныхДенежныхСредств");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ВозвратДенежныхСредствВДругуюОрганизацию

		#Область ВозвратДенежныхСредствОтДругойОрганизации
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ВозвратДенежныхСредствОтДругойОрганизации";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ДенежныеСредства;
		Элемент.Наименование = НСтр("ru='Возврат ДС от другой организации';uk='Повернення ГК від іншої організації'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДенежныеСредстваКонтрагент";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Денежные средства - Контрагент';uk='Рухи Грошові кошти - Контрагент'",КодОсновногоЯзыка);
		Элемент.Описание = НСтр("ru='Возврат денежных средств от собственной организации (Интеркампани)';uk='Повернення грошових коштів від власної організації (Інтеркампані)'",КодОсновногоЯзыка);
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствОтДругойОрганизации;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Истина;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("РасходныйКассовыйОрдер");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("СписаниеБезналичныхДенежныхСредств");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ВозвратДенежныхСредствОтДругойОрганизации

		#Область ВозвратДенежныхСредствОтПодотчетника
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ВозвратДенежныхСредствОтПодотчетника";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ДенежныеСредства;
		Элемент.Наименование = НСтр("ru='Возврат ДС от подотчетника';uk='Повернення ГК від підзвітника'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДенежныхСредств";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Денежные средства - Денежные средства';uk='Рухи Грошові кошти - Грошові кошти'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствОтПодотчетника;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Истина;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ПоступлениеБезналичныхДенежныхСредств");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ПриходныйКассовыйОрдер");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ВозвратДенежныхСредствОтПодотчетника

		#Область ВозвратДенежныхСредствОтПоставщика
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ВозвратДенежныхСредствОтПоставщика";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ДенежныеСредства;
		Элемент.Наименование = НСтр("ru='Возврат ДС от поставщика';uk='Повернення ГК від постачальника'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДенежныеСредстваКонтрагент";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Денежные средства - Контрагент';uk='Рухи Грошові кошти - Контрагент'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствОтПоставщика;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Истина;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ПоступлениеБезналичныхДенежныхСредств");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ПриходныйКассовыйОрдер");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ВозвратДенежныхСредствОтПоставщика

		#Область ВозвратНеперечисленныхДС
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ВозвратНеперечисленныхДС";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ДенежныеСредства;
		Элемент.Наименование = НСтр("ru='Возврат неперечисленной зарплаты';uk='Повернення неперерахованої зарплати'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДенежныеСредстваДоходыРасходы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Денежные средства - Доходы/Расходы';uk='Рухи Грошові кошти - Доходи/Витрати'",КодОсновногоЯзыка);
		Элемент.Описание = НСтр("ru='Возврат неперечисленной зарплаты';uk='Повернення неперерахованої зарплати'",КодОсновногоЯзыка);
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратНеперечисленныхДС;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Истина;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ПоступлениеБезналичныхДенежныхСредств");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ВозвратНеперечисленныхДС

		#Область ВозвратОплатыКлиенту
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ВозвратОплатыКлиенту";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ДенежныеСредства;
		Элемент.Наименование = НСтр("ru='Возврат оплаты клиенту';uk='Повернення оплати клієнту'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДенежныеСредстваКонтрагент";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Денежные средства - Контрагент';uk='Рухи Грошові кошти - Контрагент'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиенту;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Истина;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("РасходныйКассовыйОрдер");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("СписаниеБезналичныхДенежныхСредств");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ВозвратОплатыКлиенту

		#Область ВозвратОплатыКлиентуНаПлатежнуюКарту
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ВозвратОплатыКлиентуНаПлатежнуюКарту";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ДенежныеСредства;
		Элемент.Наименование = НСтр("ru='Возврат оплаты клиенту на платежную карту';uk='Повернення оплати клієнту на платіжну карту'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДенежныеСредстваКонтрагент";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Денежные средства - Контрагент';uk='Рухи Грошові кошти - Контрагент'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиентуНаПлатежнуюКарту;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ОперацияПоПлатежнойКарте");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ВозвратОплатыКлиентуНаПлатежнуюКарту

		#Область ВозвратОплатыНаПлатежнуюКарту
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ВозвратОплатыНаПлатежнуюКарту";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ДенежныеСредства;
		Элемент.Наименование = НСтр("ru='Возврат оплаты по эквайрингу';uk='Повернення оплати по еквайрингу'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДенежныхСредств";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Денежные средства - Денежные средства';uk='Рухи Грошові кошти - Грошові кошти'",КодОсновногоЯзыка);
		Элемент.Описание = НСтр("ru='Возврат денежных средств эквайеру';uk='Повернення грошових коштів еквайєру'",КодОсновногоЯзыка);
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОплатыНаПлатежнуюКарту;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ОперацияПоПлатежнойКарте");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ВозвратОплатыНаПлатежнуюКарту

		#Область ВыдачаДенежныхСредствВДругуюКассу
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ВыдачаДенежныхСредствВДругуюКассу";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ДенежныеСредства;
		Элемент.Наименование = НСтр("ru='Выдача ДС в другую кассу';uk='Видача ГК в іншу касу'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДенежныхСредств";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Денежные средства - Денежные средства';uk='Рухи Грошові кошти - Грошові кошти'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствВДругуюКассу;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Истина;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("РасходныйКассовыйОрдер");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ВыдачаДенежныхСредствВДругуюКассу

		#Область ВыдачаДенежныхСредствВКассуККМ
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ВыдачаДенежныхСредствВКассуККМ";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ДенежныеСредства;
		Элемент.Наименование = НСтр("ru='Выдача ДС в кассу ККМ';uk='Видача ГК в касу ККМ'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДенежныхСредств";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Денежные средства - Денежные средства';uk='Рухи Грошові кошти - Грошові кошти'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствВКассуККМ;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Истина;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("РасходныйКассовыйОрдер");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ВыдачаДенежныхСредствВКассуККМ

		#Область ВыдачаДенежныхСредствПодотчетнику
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ВыдачаДенежныхСредствПодотчетнику";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ДенежныеСредства;
		Элемент.Наименование = НСтр("ru='Выдача ДС подотчетнику';uk='Видача ГК підзвітній особі'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДенежныхСредств";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Денежные средства - Денежные средства';uk='Рухи Грошові кошти - Грошові кошти'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Истина;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("РасходныйКассовыйОрдер");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("СписаниеБезналичныхДенежныхСредств");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ВыдачаДенежныхСредствПодотчетнику

		#Область ВыемкаДенежныхСредствИзКассыККМ
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ВыемкаДенежныхСредствИзКассыККМ";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ДенежныеСредства;
		Элемент.Наименование = НСтр("ru='Выемка ДС из кассы ККМ';uk='Виймання ГК з каси ККМ'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДенежныхСредств";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Денежные средства - Денежные средства';uk='Рухи Грошові кошти - Грошові кошти'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыемкаДенежныхСредствИзКассыККМ;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ВыемкаДенежныхСредствИзКассыККМ");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ВыемкаДенежныхСредствИзКассыККМ

		#Область ИнкассацияДенежныхСредствВБанк
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ИнкассацияДенежныхСредствВБанк";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ДенежныеСредства;
		Элемент.Наименование = НСтр("ru='Инкассация ДС в банк';uk='Інкасація ГК в банк'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДенежныхСредств";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Денежные средства - Денежные средства';uk='Рухи Грошові кошти - Грошові кошти'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ИнкассацияДенежныхСредствВБанк;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Истина;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("РасходныйКассовыйОрдер");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ИнкассацияДенежныхСредствВБанк

		#Область ИнкассацияДенежныхСредствИзБанка
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ИнкассацияДенежныхСредствИзБанка";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ДенежныеСредства;
		Элемент.Наименование = НСтр("ru='Инкассация ДС из банка';uk='Інкасація ГК з банку'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДенежныхСредств";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Денежные средства - Денежные средства';uk='Рухи Грошові кошти - Грошові кошти'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ИнкассацияДенежныхСредствИзБанка;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Истина;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ПриходныйКассовыйОрдер");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ИнкассацияДенежныхСредствИзБанка

		#Область КомиссияПоЭквайрингу
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "КомиссияПоЭквайрингу";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ДенежныеСредства;
		Элемент.Наименование = НСтр("ru='Комиссия по эквайрингу';uk='Комісія по еквайрингу'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДенежныеСредстваДоходыРасходы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Денежные средства - Доходы/Расходы';uk='Рухи Грошові кошти - Доходи/Витрати'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.КомиссияПоЭквайрингу;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ОтчетБанкаПоОперациямЭквайринга");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //КомиссияПоЭквайрингу

		#Область КонвертацияВалюты
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "КонвертацияВалюты";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ДенежныеСредства;
		Элемент.Наименование = НСтр("ru='Конвертация валюты';uk='Конвертація валюти'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДенежныхСредств";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Денежные средства - Денежные средства';uk='Рухи Грошові кошти - Грошові кошти'",КодОсновногоЯзыка);
		Элемент.Описание = НСтр("ru='Списание денежных средств при конвертации валюты';uk='Списання грошових коштів при конвертації валюти'",КодОсновногоЯзыка);
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.КонвертацияВалюты;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Истина;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("РасходныйКассовыйОрдер");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("СписаниеБезналичныхДенежныхСредств");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //КонвертацияВалюты

		#Область КонвертацияВалютыПодотчетнымЛицом
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "КонвертацияВалютыПодотчетнымЛицом";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ДенежныеСредства;
		Элемент.Наименование = НСтр("ru='Конвертация валюты подотчетным лицом';uk='Конвертація валюти підзвітною особою'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДенежныхСредств";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Денежные средства - Денежные средства';uk='Рухи Грошові кошти - Грошові кошти'",КодОсновногоЯзыка);
		Элемент.Описание = НСтр("ru='Конвертация валюты подотчетным лицом';uk='Конвертація валюти підзвітною особою'",КодОсновногоЯзыка);
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.КонвертацияВалютыПодотчетнымЛицом;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("АвансовыйОтчет");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //КонвертацияВалютыПодотчетнымЛицом

		#Область ОплатаДенежныхСредствВДругуюОрганизацию
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ОплатаДенежныхСредствВДругуюОрганизацию";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ДенежныеСредства;
		Элемент.Наименование = НСтр("ru='Оплата ДС в другую организацию';uk='Оплата ГК в іншу організацію'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДенежныеСредстваКонтрагент";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Денежные средства - Контрагент';uk='Рухи Грошові кошти - Контрагент'",КодОсновногоЯзыка);
		Элемент.Описание = НСтр("ru='Оплата денежных средств в собственную организацию (Интеркампани)';uk='Оплата грошових коштів у власну організацію (Інтеркампані)'",КодОсновногоЯзыка);
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Истина;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("РасходныйКассовыйОрдер");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("СписаниеБезналичныхДенежныхСредств");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ОплатаДенежныхСредствВДругуюОрганизацию
		
		#Область ОплатаПодарочнымСертификатом
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ОплатаПодарочнымСертификатом";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ДенежныеСредства;
		Элемент.Наименование = НСтр("ru='Оплата подарочным сертификатом';uk='Оплата подарунковим сертифікатом'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияКонтрагентКонтрагент";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Контрагент - Контрагент';uk='Рухи Контрагент - Контрагент'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаПодарочнымСертификатом;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ОтчетОРозничныхПродажах");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ОплатаПодарочнымСертификатом

		#Область ОплатаПоставщику
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ОплатаПоставщику";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ДенежныеСредства;
		Элемент.Наименование = НСтр("ru='Оплата поставщику';uk='Оплата постачальнику'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДенежныеСредстваКонтрагент";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Денежные средства - Контрагент';uk='Рухи Грошові кошти - Контрагент'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаПоставщику;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Истина;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("РасходныйКассовыйОрдер");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("СписаниеБезналичныхДенежныхСредств");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ОплатаПоставщику

		#Область ОплатаПоставщикуПодотчетнымЛицом
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ОплатаПоставщикуПодотчетнымЛицом";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ДенежныеСредства;
		Элемент.Наименование = НСтр("ru='Оплата поставщику подотчетным лицом';uk='Оплата постачальнику підзвітною особою'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДенежныеСредстваКонтрагент";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Денежные средства - Контрагент';uk='Рухи Грошові кошти - Контрагент'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаПоставщикуПодотчетнымЛицом;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("АвансовыйОтчет");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ПриобретениеТоваровУслуг");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ОплатаПоставщикуПодотчетнымЛицом

		#Область ОтражениеИзлишкаПриИнвентаризацииДенежныхСредств
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ОтражениеИзлишкаПриИнвентаризацииДенежныхСредств";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ДенежныеСредства;
		Элемент.Наименование = НСтр("ru='Отражение излишка при инвентаризации денежных средств';uk='Відображення надлишку при інвентаризації грошових коштів'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДенежныеСредстваДоходыРасходы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Денежные средства - Доходы/Расходы';uk='Рухи Грошові кошти - Доходи/Витрати'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОтражениеИзлишкаПриИнвентаризацииДенежныхСредств;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ИнвентаризацияНаличныхДенежныхСредств");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ОтражениеИзлишкаПриИнвентаризацииДенежныхСредств

		#Область ОтражениеИзлишкаПриИнкассацииДенежныхСредств
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ОтражениеИзлишкаПриИнкассацииДенежныхСредств";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ДенежныеСредства;
		Элемент.Наименование = НСтр("ru='Отражение излишка при инкассации денежных средств';uk='Відображення надлишку при інкасації грошових коштів'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДенежныеСредстваДоходыРасходы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Денежные средства - Доходы/Расходы';uk='Рухи Грошові кошти - Доходи/Витрати'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОтражениеИзлишкаПриИнкассацииДенежныхСредств;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ОтражениеРасхожденийПриИнкассацииДенежныхСредств");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ОтражениеИзлишкаПриИнкассацииДенежныхСредств

		#Область ОтражениеНедостачиПриИнвентаризацииДенежныхСредств
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ОтражениеНедостачиПриИнвентаризацииДенежныхСредств";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ДенежныеСредства;
		Элемент.Наименование = НСтр("ru='Отражение недостачи при инвентаризации денежных средств';uk='Відображення нестачі під час інвентаризації грошових коштів'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДенежныеСредстваДоходыРасходы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Денежные средства - Доходы/Расходы';uk='Рухи Грошові кошти - Доходи/Витрати'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОтражениеНедостачиПриИнвентаризацииДенежныхСредств;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ИнвентаризацияНаличныхДенежныхСредств");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ОтражениеНедостачиПриИнвентаризацииДенежныхСредств

		#Область ОтражениеНедостачиПриИнкассацииДенежныхСредств
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ОтражениеНедостачиПриИнкассацииДенежныхСредств";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ДенежныеСредства;
		Элемент.Наименование = НСтр("ru='Отражение недостачи при инкассации денежных средств';uk='Відображення нестачі при інкасації грошових коштів'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДенежныеСредстваДоходыРасходы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Денежные средства - Доходы/Расходы';uk='Рухи Грошові кошти - Доходи/Витрати'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОтражениеНедостачиПриИнкассацииДенежныхСредств;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ОтражениеРасхожденийПриИнкассацииДенежныхСредств");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ОтражениеНедостачиПриИнкассацииДенежныхСредств

		#Область ОтчетБанкаПоОперациямЭквайринга
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ОтчетБанкаПоОперациямЭквайринга";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ДенежныеСредства;
		Элемент.Наименование = НСтр("ru='Отчет банка по операциям эквайринга';uk='Звіт банку за операціями еквайрингу'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "";
		Элемент.ПредставлениеИсточникаДанных = "";
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОтчетБанкаПоОперациямЭквайринга;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;
		#КонецОбласти //ОтчетБанкаПоОперациямЭквайринга

		#Область ПеречислениеДенежныхСредствНаДругойСчет
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПеречислениеДенежныхСредствНаДругойСчет";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ДенежныеСредства;
		Элемент.Наименование = НСтр("ru='Перечисление ДС на другой счет';uk='Перерахування ГК на інший рахунок'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДенежныхСредств";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Денежные средства - Денежные средства';uk='Рухи Грошові кошти - Грошові кошти'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеречислениеДенежныхСредствНаДругойСчет;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Истина;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("СписаниеБезналичныхДенежныхСредств");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ПеречислениеДенежныхСредствНаДругойСчет

		#Область ПеречислениеВБюджет
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПеречислениеВБюджет";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ДенежныеСредства;
		Элемент.Наименование = НСтр("ru='Перечисление налога';uk='Перерахування податку'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДенежныеСредстваДоходыРасходы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Денежные средства - Доходы/Расходы';uk='Рухи Грошові кошти - Доходи/Витрати'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеречислениеВБюджет;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Истина;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("СписаниеБезналичныхДенежныхСредств");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ПеречислениеВБюджет

		#Область ПоступлениеДенежныхСредствИзБанка
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПоступлениеДенежныхСредствИзБанка";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ДенежныеСредства;
		Элемент.Наименование = НСтр("ru='Поступление ДС из банка';uk='Надходження ГК з банку'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДенежныхСредств";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Денежные средства - Денежные средства';uk='Рухи Грошові кошти - Грошові кошти'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзБанка;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Истина;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ПриходныйКассовыйОрдер");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ПоступлениеДенежныхСредствИзБанка

		#Область ПоступлениеДенежныхСредствИзДругойКассы
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПоступлениеДенежныхСредствИзДругойКассы";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ДенежныеСредства;
		Элемент.Наименование = НСтр("ru='Поступление ДС из другой кассы';uk='Надходження ГК з іншої каси'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДенежныхСредств";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Денежные средства - Денежные средства';uk='Рухи Грошові кошти - Грошові кошти'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзДругойКассы;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Истина;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ПриходныйКассовыйОрдер");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ПоступлениеДенежныхСредствИзДругойКассы

		#Область ПоступлениеДенежныхСредствИзДругойОрганизации
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПоступлениеДенежныхСредствИзДругойОрганизации";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ДенежныеСредства;
		Элемент.Наименование = НСтр("ru='Поступление ДС из другой организации';uk='Надходження ГК з іншої організації'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДенежныеСредстваКонтрагент";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Денежные средства - Контрагент';uk='Рухи Грошові кошти - Контрагент'",КодОсновногоЯзыка);
		Элемент.Описание = НСтр("ru='Поступление денежных средств из собственной организации (Интеркампани)';uk='Надходження грошових коштів з власної організації (Інтеркампані)'",КодОсновногоЯзыка);
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзДругойОрганизации;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Истина;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("РасходныйКассовыйОрдер");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("СписаниеБезналичныхДенежныхСредств");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ПоступлениеДенежныхСредствИзДругойОрганизации

		#Область ПоступлениеДенежныхСредствИзКассыККМ
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПоступлениеДенежныхСредствИзКассыККМ";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ДенежныеСредства;
		Элемент.Наименование = НСтр("ru='Поступление ДС из кассы ККМ';uk='Надходження ГК з каси ККМ'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДенежныхСредств";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Денежные средства - Денежные средства';uk='Рухи Грошові кошти - Грошові кошти'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзКассыККМ;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Истина;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ПриходныйКассовыйОрдер");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ПоступлениеДенежныхСредствИзКассыККМ

		#Область ПоступлениеДенежныхСредствИзКассыНаРасчетныйСчет
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПоступлениеДенежныхСредствИзКассыНаРасчетныйСчет";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ДенежныеСредства;
		Элемент.Наименование = НСтр("ru='Поступление ДС из кассы на банковский счет';uk='Надходження ГК з каси на банківський рахунок'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДенежныхСредств";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Денежные средства - Денежные средства';uk='Рухи Грошові кошти - Грошові кошти'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзКассыНаРасчетныйСчет;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Истина;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ПоступлениеБезналичныхДенежныхСредств");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ПоступлениеДенежныхСредствИзКассыНаРасчетныйСчет

		#Область ПоступлениеДенежныхСредствОтКонвертацииВалюты
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПоступлениеДенежныхСредствОтКонвертацииВалюты";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ДенежныеСредства;
		Элемент.Наименование = НСтр("ru='Поступление ДС от конвертации валюты';uk='Надходження ГК від конвертації валюти'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДенежныхСредств";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Денежные средства - Денежные средства';uk='Рухи Грошові кошти - Грошові кошти'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствОтКонвертацииВалюты;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Истина;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ПоступлениеБезналичныхДенежныхСредств");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ПриходныйКассовыйОрдер");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ПоступлениеДенежныхСредствОтКонвертацииВалюты

		#Область ПоступлениеОплатыОтКлиентаПоПлатежнойКарте
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПоступлениеОплатыОтКлиентаПоПлатежнойКарте";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ДенежныеСредства;
		Элемент.Наименование = НСтр("ru='Поступление ДС по эквайринговым операциям';uk='Надходження ГК за еквайринговими операціями'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДенежныеСредстваКонтрагент";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Денежные средства - Контрагент';uk='Рухи Грошові кошти - Контрагент'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеОплатыОтКлиентаПоПлатежнойКарте;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ОперацияПоПлатежнойКарте");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ОтчетОРозничныхПродажах");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ПоступлениеОплатыОтКлиентаПоПлатежнойКарте

		#Область ПоступлениеДенежныхСредствСДругогоСчета
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПоступлениеДенежныхСредствСДругогоСчета";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ДенежныеСредства;
		Элемент.Наименование = НСтр("ru='Поступление ДС с другого счета';uk='Надходження ГК з іншого рахунку'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДенежныхСредств";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Денежные средства - Денежные средства';uk='Рухи Грошові кошти - Грошові кошти'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствСДругогоСчета;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Истина;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ПоступлениеБезналичныхДенежныхСредств");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ПоступлениеДенежныхСредствСДругогоСчета

		#Область ПоступлениеОплатыОтКлиента
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПоступлениеОплатыОтКлиента";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ДенежныеСредства;
		Элемент.Наименование = НСтр("ru='Поступление оплаты от клиента';uk='Надходження оплати від клієнта'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДенежныеСредстваКонтрагент";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Денежные средства - Контрагент';uk='Рухи Грошові кошти - Контрагент'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Истина;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ОтчетОРозничныхПродажах");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ПоступлениеБезналичныхДенежныхСредств");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ПриходныйКассовыйОрдер");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ПоступлениеОплатыОтКлиента

		#Область ПоступлениеОплатыПоПлатежнойКарте
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПоступлениеОплатыПоПлатежнойКарте";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ДенежныеСредства;
		Элемент.Наименование = НСтр("ru='Поступление оплаты по эквайрингу';uk='Надходження оплати по еквайрингу'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДенежныхСредств";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Денежные средства - Денежные средства';uk='Рухи Грошові кошти - Грошові кошти'",КодОсновногоЯзыка);
		Элемент.Описание = НСтр("ru='Поступление денежных средств от эквайера';uk='Надходження грошових коштів від еквайра'",КодОсновногоЯзыка);
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеОплатыПоПлатежнойКарте;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Истина;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ПоступлениеБезналичныхДенежныхСредств");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ПоступлениеОплатыПоПлатежнойКарте

		#Область ПрочееПоступлениеДенежныхСредств
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПрочееПоступлениеДенежныхСредств";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ДенежныеСредства;
		Элемент.Наименование = НСтр("ru='Прочее поступление ДС';uk='Інше надходження ГК'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДенежныеСредстваДоходыРасходы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Денежные средства - Доходы/Расходы';uk='Рухи Грошові кошти - Доходи/Витрати'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ПрочиеАктивыПассивы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПрочееПоступлениеДенежныхСредств;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Истина;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ПоступлениеБезналичныхДенежныхСредств");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ПриходныйКассовыйОрдер");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ПрочееПоступлениеДенежныхСредств

		#Область ПрочиеРасходыПодотчетногоЛица
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПрочиеРасходыПодотчетногоЛица";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ДенежныеСредства;
		Элемент.Наименование = НСтр("ru='Прочие расходы подотчетного лица';uk='Інші витрати підзвітної особи'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДенежныеСредстваДоходыРасходы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Денежные средства - Доходы/Расходы';uk='Рухи Грошові кошти - Доходи/Витрати'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПрочиеРасходыПодотчетногоЛица;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("АвансовыйОтчет");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ПрочиеРасходыПодотчетногоЛица

		#Область ПрочаяВыдачаДенежныхСредств
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПрочаяВыдачаДенежныхСредств";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ДенежныеСредства;
		Элемент.Наименование = НСтр("ru='Прочий расход ДС';uk='Інша витрата ГК'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДенежныеСредстваДоходыРасходы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Денежные средства - Доходы/Расходы';uk='Рухи Грошові кошти - Доходи/Витрати'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ПрочиеАктивыПассивы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Истина;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("РасходныйКассовыйОрдер");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("СписаниеБезналичныхДенежныхСредств");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ПрочаяВыдачаДенежныхСредств
		
#Область РасходыПриКонвертацииВалюты

	Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
	Элемент.ИмяПредопределенныхДанных = "РасходыПриКонвертацииВалюты";
	Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ДенежныеСредства;
	Элемент.Наименование = НСтр("ru='Расходы при конвертации валюты';uk='Витрати при конвертації валюти'",КодОсновногоЯзыка);
	Элемент.ИсточникДанных = "ДвиженияДенежныеСредстваДоходыРасходы";
	Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Денежные средства - Доходы/Расходы';uk='Рухи Грошові кошти - Доходи/Витрати'",КодОсновногоЯзыка);
	Элемент.Описание = "";
	Элемент.Приход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
	Элемент.Расход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
	Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РасходыПриКонвертацииВалюты;
	Элемент.ИспользоватьВБюджетировании = Истина;
	Элемент.ИспользоватьВМеждународномУчете = Истина;
	Элемент.ИспользоватьДляВыбора = Ложь;
	Элемент.ИспользоватьВРеестреДокументов = Ложь;
	Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

	//++ НЕ УТ
	ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
	//-- НЕ УТ
	Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
	Документ = Метаданные.Документы.Найти("ПоступлениеБезналичныхДенежныхСредств");
	Если Документ <> Неопределено Тогда
		ЭлементТЧ = Элемент.Документы.Добавить();
		ЭлементТЧ.ИмяДокумента = Документ.Имя;
		НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
		ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
	КонецЕсли;
	
#КонецОбласти //РасходыПриКонвертацииВалюты
		
		#Область СдачаДенежныхСредствВБанк
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "СдачаДенежныхСредствВБанк";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ДенежныеСредства;
		Элемент.Наименование = НСтр("ru='Сдача ДС в банк';uk='Здача коштів в банк'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДенежныхСредств";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Денежные средства - Денежные средства';uk='Рухи Грошові кошти - Грошові кошти'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СдачаДенежныхСредствВБанк;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Истина;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("РасходныйКассовыйОрдер");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //СдачаДенежныхСредствВБанк

		#Область СнятиеНаличныхДенежныхСредств
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "СнятиеНаличныхДенежныхСредств";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ДенежныеСредства;
		Элемент.Наименование = НСтр("ru='Снятие наличных ДС';uk='Зняття готівки '",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДенежныхСредств";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Денежные средства - Денежные средства';uk='Рухи Грошові кошти - Грошові кошти'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СнятиеНаличныхДенежныхСредств;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Истина;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("СписаниеБезналичныхДенежныхСредств");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //СнятиеНаличныхДенежныхСредств

		#Область ПеречислениеТаможне
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПеречислениеТаможне";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ДенежныеСредства;
		Элемент.Наименование = НСтр("ru='Таможенный платеж';uk='Митний платіж'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДенежныеСредстваКонтрагент";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Денежные средства - Контрагент';uk='Рухи Грошові кошти - Контрагент'",КодОсновногоЯзыка);
		Элемент.Описание = НСтр("ru='Оплата таможенных пошлин и сборов';uk='Оплата митних зборів і зборів'",КодОсновногоЯзыка);
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеречислениеТаможне;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Истина;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("СписаниеБезналичныхДенежныхСредств");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ПеречислениеТаможне

	#КонецОбласти //ДенежныеСредства

	#Область Закупки
	Элемент = Элементы.Добавить();  // см. СтрокаТЧПредопреденногоЭлемента
	Элемент.ИмяПредопределенныхДанных = "Закупки";
	Элемент.Наименование = НСтр("ru='Закупки';uk='Купівлі'",КодОсновногоЯзыка);


		#Область ВозвратТоваровКомитенту
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ВозвратТоваровКомитенту";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Закупки;
		Элемент.Наименование = НСтр("ru='Возврат товаров комитенту';uk='Повернення товарів комітенту'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "";
		Элемент.ПредставлениеИсточникаДанных = "";
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратТоваровКомитенту;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("АктОРасхожденияхПослеОтгрузки");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ВозвратТоваровПоставщику");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;

		Элемент.ФункциональныеОпции = ТабличныеЧасти.ФункциональныеОпции.Скопировать();
		ЭлементТЧ = Элемент.ФункциональныеОпции.Добавить();
		ЭлементТЧ.ИмяФункциональнойОпции = "ИспользоватьКомиссиюПриЗакупках";
		#КонецОбласти //ВозвратТоваровКомитенту

		#Область ВозвратТоваровПоставщику
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ВозвратТоваровПоставщику";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Закупки;
		Элемент.Наименование = НСтр("ru='Возврат товаров поставщику';uk='Повернення товарів постачальнику'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "Закупки";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Закупки';uk='Купівлі'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратТоваровПоставщику;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("АктОРасхожденияхПослеОтгрузки");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ВозвратТоваровПоставщику");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ВозвратТоваровПоставщику

		#Область ВыкупПринятыхНаХранениеТоваров
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ВыкупПринятыхНаХранениеТоваров";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Закупки;
		Элемент.Наименование = НСтр("ru='Выкуп товаров с хранения';uk='Викуп товарів зі зберігання'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "Закупки";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Закупки';uk='Купівлі'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыкупПринятыхНаХранениеТоваров;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ВыкупПринятыхНаХранениеТоваров");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;

		Элемент.ФункциональныеОпции = ТабличныеЧасти.ФункциональныеОпции.Скопировать();
		ЭлементТЧ = Элемент.ФункциональныеОпции.Добавить();
		ЭлементТЧ.ИмяФункциональнойОпции = "ИспользоватьОтветственноеХранениеВПроцессеЗакупки";
		#КонецОбласти //ВыкупПринятыхНаХранениеТоваров





		#Область ЗакупкаПоИмпорту
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ЗакупкаПоИмпорту";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Закупки;
		Элемент.Наименование = НСтр("ru='Закупка по импорту';uk='Купівля по імпорту'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "Закупки";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Закупки';uk='Купівлі'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаПоИмпорту;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Истина;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("АктОРасхожденияхПослеПриемки");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ЗаказПоставщику");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ПриобретениеТоваровУслуг");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ТаможеннаяДекларацияИмпорт");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;

		Элемент.ФункциональныеОпции = ТабличныеЧасти.ФункциональныеОпции.Скопировать();
		ЭлементТЧ = Элемент.ФункциональныеОпции.Добавить();
		ЭлементТЧ.ИмяФункциональнойОпции = "ИспользоватьИмпортныеЗакупки";
		#КонецОбласти //ЗакупкаПоИмпорту
		
		#Область ЗакупкаУПоставщикаРеглУчет
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ЗакупкаУПоставщикаРеглУчет";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Закупки;
		Элемент.Наименование = НСтр("ru='Закупка по регл. учету';uk='Купівля по регл. обліку'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "Закупки";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Закупки';uk='Купівлі'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ПриобретениеТоваровУслуг");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;

		Элемент.ФункциональныеОпции = ТабличныеЧасти.ФункциональныеОпции.Скопировать();
		ЭлементТЧ = Элемент.ФункциональныеОпции.Добавить();
		ЭлементТЧ.ИмяФункциональнойОпции = "ИспользоватьКомиссиюПриЗакупках";
		ЭлементТЧ = Элемент.ФункциональныеОпции.Добавить();
		ЭлементТЧ.ИмяФункциональнойОпции = "ИспользоватьУправленческуюОрганизацию";
		#КонецОбласти //ЗакупкаУПоставщикаРеглУчет

		#Область ЗакупкаУПоставщика
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ЗакупкаУПоставщика";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Закупки;
		Элемент.Наименование = НСтр("ru='Закупка у поставщика';uk='Купівля у постачальника'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "Закупки";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Закупки';uk='Купівлі'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщика;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Истина;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("АктОРасхожденияхПослеПриемки");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ЗаказПоставщику");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("КорректировкаПриобретения");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ПриобретениеТоваровУслуг");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ПриобретениеУслугПрочихАктивов");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ЗакупкаУПоставщика

		#Область ЗакупкаУПоставщикаНеотфактурованнаяПоставка
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ЗакупкаУПоставщикаНеотфактурованнаяПоставка";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Закупки;
		Элемент.Наименование = НСтр("ru='Закупка у поставщика (неотфактурованная поставка)';uk='Купівля у постачальника (невідфактурована поставка)'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияНоменклатураНоменклатура";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Номенклатура - Номенклатура';uk='Рухи Номенклатура - Номенклатура'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаНеотфактурованнаяПоставка;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Истина;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ПоступлениеТоваровНаСклад");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;

		Элемент.ФункциональныеОпции = ТабличныеЧасти.ФункциональныеОпции.Скопировать();
		ЭлементТЧ = Элемент.ФункциональныеОпции.Добавить();
		ЭлементТЧ.ИмяФункциональнойОпции = "ИспользоватьНеотфактурованныеПоставки";
		#КонецОбласти //ЗакупкаУПоставщикаНеотфактурованнаяПоставка
		

		#Область ЗакупкаУПоставщикаФактуровкаПоставки
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ЗакупкаУПоставщикаФактуровкаПоставки";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Закупки;
		Элемент.Наименование = НСтр("ru='Закупка у поставщика (фактуровка поставки)';uk='Купівля у постачальника (фактуровка поставки)'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "Закупки";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Закупки';uk='Купівлі'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаФактуровкаПоставки;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Истина;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ЗаказПоставщику");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("КорректировкаПриобретения");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ПриобретениеТоваровУслуг");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;

		Элемент.ФункциональныеОпции = ТабличныеЧасти.ФункциональныеОпции.Скопировать();
		ЭлементТЧ = Элемент.ФункциональныеОпции.Добавить();
		ЭлементТЧ.ИмяФункциональнойОпции = "ИспользоватьНеотфактурованныеПоставки";
		#КонецОбласти //ЗакупкаУПоставщикаФактуровкаПоставки

		#Область ЗакупкаЧерезПодотчетноеЛицо
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ЗакупкаЧерезПодотчетноеЛицо";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Закупки;
		Элемент.Наименование = НСтр("ru='Закупка через подотчетное лицо';uk='Купівля через підзвітну особу'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "Закупки";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Закупки';uk='Купівлі'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("АктОРасхожденияхПослеПриемки");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ПриобретениеТоваровУслуг");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ЗакупкаЧерезПодотчетноеЛицо

		#Область ЗачетАвансаПоставщику
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ЗачетАвансаПоставщику";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Закупки;
		Элемент.Наименование = НСтр("ru='Зачет аванса поставщику';uk='Зарахування авансу постачальнику'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "РасчетыСПоставщикамиПоДокументам";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Расчеты с поставщиками по документам';uk='Розрахунки з постачальниками за документами'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗачетАвансаПоставщику;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		#КонецОбласти //ЗачетАвансаПоставщику

		#Область ЗачетВознагражденияАвансомКомитенту
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ЗачетВознагражденияАвансомКомитенту";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Закупки;
		Элемент.Наименование = НСтр("ru='Зачет вознаграждения в счет аванса комитенту';uk='Залік винагороди в рахунок авансу комітенту'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "РасчетыСПоставщикамиПоДокументам";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Расчеты с поставщиками по документам';uk='Розрахунки з постачальниками за документами'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗачетВознагражденияАвансомКомитенту;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ОтчетКомитенту");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ЗачетВознагражденияАвансомКомитенту

		#Область ЗачетВознагражденияОплатойКомитенту
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ЗачетВознагражденияОплатойКомитенту";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Закупки;
		Элемент.Наименование = НСтр("ru='Зачет вознаграждения оплатой комитенту';uk='Залік винагороди оплатою комітенту'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "РасчетыСПоставщикамиПоДокументам";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Расчеты с поставщиками по документам';uk='Розрахунки з постачальниками за документами'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗачетВознагражденияОплатойКомитенту;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ОтчетКомитенту");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ОтчетПоКомиссииМеждуОрганизациями");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ЗачетВознагражденияОплатойКомитенту

		#Область КорректировкаПриобретенияСОтражениемНаПрочихДоходах
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "КорректировкаПриобретенияСОтражениемНаПрочихДоходах";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Закупки;
		Элемент.Наименование = НСтр("ru='(не используется) Корректировка приобретения с отражением на прочих доходах';uk='(не використовується) Коригування придбання з відображенням на інших доходах'",КодОсновногоЯзыка);
		#КонецОбласти //КорректировкаПриобретенияСОтражениемНаПрочихДоходах

		#Область КорректировкаПриобретенияСоСписаниемНаРасходы
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "КорректировкаПриобретенияСоСписаниемНаРасходы";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Закупки;
		Элемент.Наименование = НСтр("ru='(не используется) Корректировка приобретения со списанием на расходы';uk='(не використовується) Коригування придбання зі списанням на витрати'",КодОсновногоЯзыка);
		#КонецОбласти //КорректировкаПриобретенияСоСписаниемНаРасходы

		#Область ОтгрузкаПринятыхСПравомПродажиТоваровСХранения
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ОтгрузкаПринятыхСПравомПродажиТоваровСХранения";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Закупки;
		Элемент.Наименование = НСтр("ru='Отгрузка принятых товаров с хранения';uk='Відвантаження прийнятих товарів зі зберігання'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "Закупки";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Закупки';uk='Купівлі'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОтгрузкаПринятыхСПравомПродажиТоваровСХранения;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("АктОРасхожденияхПослеОтгрузки");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ОтгрузкаТоваровСХранения");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;

		Элемент.ФункциональныеОпции = ТабличныеЧасти.ФункциональныеОпции.Скопировать();
		ЭлементТЧ = Элемент.ФункциональныеОпции.Добавить();
		ЭлементТЧ.ИмяФункциональнойОпции = "ИспользоватьОтветственноеХранениеВПроцессеЗакупки";
		#КонецОбласти //ОтгрузкаПринятыхСПравомПродажиТоваровСХранения

		#Область ОтражениеЗадолженностиПередКомитентом
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ОтражениеЗадолженностиПередКомитентом";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Закупки;
		Элемент.Наименование = НСтр("ru='Отражение задолженности перед комитентом';uk='Відображення заборгованості перед комітентом'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "Закупки";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Закупки';uk='Купівлі'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОтражениеЗадолженностиПередКомитентом;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ОтчетКомитенту");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ОтчетКомитентуОСписании");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ОтчетПоКомиссииМеждуОрганизациями");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ОтражениеЗадолженностиПередКомитентом

		#Область ОтражениеИзлишковНаДоходыПриПоступленииТоваров
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ОтражениеИзлишковНаДоходыПриПоступленииТоваров";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Закупки;
		Элемент.Наименование = НСтр("ru='Отражение излишков на доходы при поступлении товаров';uk='Відображення надлишків на доходи при надходженні товарів'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияКонтрагентДоходыРасходы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Контрагент - Доходы/Расходы';uk='Рухи Контрагент - Доходи/Витрати'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОтражениеИзлишковНаДоходыПриПоступленииТоваров;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ПриобретениеТоваровУслуг");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ОтражениеИзлишковНаДоходыПриПоступленииТоваров

		#Область ОтражениеНедостачЗаСчетПоставщикаПриПоступленииТоваров
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ОтражениеНедостачЗаСчетПоставщикаПриПоступленииТоваров";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Закупки;
		Элемент.Наименование = НСтр("ru='Отражение недостач за счет поставщика при поступлении товаров';uk='Відображення нестач за рахунок постачальника при надходженні товарів'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияКонтрагентКонтрагент";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Контрагент - Контрагент';uk='Рухи Контрагент - Контрагент'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОтражениеНедостачЗаСчетПоставщикаПриПоступленииТоваров;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ПриобретениеТоваровУслуг");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ОтражениеНедостачЗаСчетПоставщикаПриПоступленииТоваров

		#Область ОтражениеНедостачЗаСчетСтороннейКомпанииПриПоступленииТоваров
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ОтражениеНедостачЗаСчетСтороннейКомпанииПриПоступленииТоваров";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Закупки;
		Элемент.Наименование = НСтр("ru='Отражение недостач за счет сторонней компании при поступлении товаров';uk='Відображення нестач за рахунок сторонньої компанії при надходженні товарів'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияКонтрагентКонтрагент";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Контрагент - Контрагент';uk='Рухи Контрагент - Контрагент'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОтражениеНедостачЗаСчетСтороннейКомпанииПриПоступленииТоваров;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ПриобретениеТоваровУслуг");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ОтражениеНедостачЗаСчетСтороннейКомпанииПриПоступленииТоваров

		#Область ОтражениеНедостачНаРасходыПриПоступленииТоваров
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ОтражениеНедостачНаРасходыПриПоступленииТоваров";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Закупки;
		Элемент.Наименование = НСтр("ru='Отражение недостач на расходы при поступлении товаров';uk='Відображення нестач на витрати при надходженні товарів'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияКонтрагентДоходыРасходы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Контрагент - Доходы/Расходы';uk='Рухи Контрагент - Доходи/Витрати'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОтражениеНедостачНаРасходыПриПоступленииТоваров;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ПриобретениеТоваровУслуг");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ОтражениеНедостачНаРасходыПриПоступленииТоваров

		#Область ОтчетКомиссионераОСписании
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ОтчетКомиссионераОСписании";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Закупки;
		Элемент.Наименование = НСтр("ru='Отчет комиссионера о списании';uk='Звіт комісіонера про списання'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияНоменклатураДоходыРасходы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Номенклатура - Доходы/Расходы';uk='Рухи Номенклатура - Доходи/Витрати'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОтчетКомиссионераОСписании;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ОтчетКомиссионераОСписании");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ОтчетКомиссионераОСписании

		#Область ОтчетКомитенту
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ОтчетКомитенту";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Закупки;
		Элемент.Наименование = НСтр("ru='Отчет комитенту';uk='Звіт комітенту'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ВыручкаИСебестоимостьПродаж";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Выручка и себестоимость продаж';uk='Виторг і собівартість продажів'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОтчетКомитенту;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ОтчетКомитенту");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ОтчетПоКомиссииМеждуОрганизациями");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;

		Элемент.ФункциональныеОпции = ТабличныеЧасти.ФункциональныеОпции.Скопировать();
		ЭлементТЧ = Элемент.ФункциональныеОпции.Добавить();
		ЭлементТЧ.ИмяФункциональнойОпции = "ИспользоватьКомиссиюПриЗакупках";
		#КонецОбласти //ОтчетКомитенту

		#Область ОтчетКомитентуОСписании
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ОтчетКомитентуОСписании";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Закупки;
		Элемент.Наименование = НСтр("ru='Отчет комитенту о списании';uk='Звіт комітенту про списання'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "";
		Элемент.ПредставлениеИсточникаДанных = "";
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОтчетКомитентуОСписании;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;
		#КонецОбласти //ОтчетКомитентуОСписании

        #Область ОформлениеГТДБрокером
        Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
        Элемент.ИмяПредопределенныхДанных = "ОформлениеГТДБрокером";
        Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Закупки;
        Элемент.Наименование = НСтр("ru='Оформление ГТД через брокера';uk='Оформлення ВМД через брокера'",КодОсновногоЯзыка);
        Элемент.ИсточникДанных = "Закупки";
        Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Закупки';uk='Купівлі'",КодОсновногоЯзыка);
        Элемент.Описание = "";
        Элемент.Приход = Перечисления.ТипыДанныхУчета.Номенклатура;
        Элемент.Расход = Перечисления.ТипыДанныхУчета.Контрагенты;
        Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОформлениеГТДБрокером;
        Элемент.ИспользоватьВБюджетировании = Истина;
        Элемент.ИспользоватьВМеждународномУчете = Истина;
        Элемент.ИспользоватьДляВыбора = Ложь;
        Элемент.ИспользоватьВРеестреДокументов = Ложь;
        Элемент.ИспользоватьДляОграниченийДоступа = Ложь;
        //++ НЕ УТ
        ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
        //-- НЕ УТ
        Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
        Документ = Метаданные.Документы.Найти("ТаможеннаяДекларацияИмпорт");
        Если Документ <> Неопределено Тогда
        	ЭлементТЧ = Элемент.Документы.Добавить();
        	ЭлементТЧ.ИмяДокумента = Документ.Имя;
        	НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
        	ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
        КонецЕсли;
        #КонецОбласти //ОформлениеГТДБрокером

		#Область ПереносПретензииНаАвансы
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПереносПретензииНаАвансы";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Закупки;
		Элемент.Наименование = НСтр("ru='Перенос претензии на авансы';uk='Перенесення претензії на аванси'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "РасчетыСПоставщикамиПоДокументам";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Расчеты с поставщиками по документам';uk='Розрахунки з постачальниками за документами'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПереносПретензииНаАвансы;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ВозвратТоваровПоставщику");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("КорректировкаПриобретения");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ПереносПретензииНаАвансы

		#Область ПереносПретензииНаРасчеты
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПереносПретензииНаРасчеты";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Закупки;
		Элемент.Наименование = НСтр("ru='Перенос претензии на расчеты';uk='Перенесення претензії на розрахунки'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "РасчетыСПоставщикамиПоДокументам";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Расчеты с поставщиками по документам';uk='Розрахунки з постачальниками за документами'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПереносПретензииНаРасчеты;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ВозвратТоваровПоставщику");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ПереносПретензииНаРасчеты

		#Область ПланированиеПоЗаказуПоставщику
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПланированиеПоЗаказуПоставщику";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Закупки;
		Элемент.Наименование = НСтр("ru='Планирование по заказу поставщику';uk='Планування по замовленню постачальнику'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "";
		Элемент.ПредставлениеИсточникаДанных = "";
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПланированиеПоЗаказуПоставщику;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;
		#КонецОбласти //ПланированиеПоЗаказуПоставщику

		#Область ПогашениеЗадолженностиПоставщику
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПогашениеЗадолженностиПоставщику";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Закупки;
		Элемент.Наименование = НСтр("ru='Погашение задолженности поставщику';uk='Погашення заборгованості постачальнику'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "";
		Элемент.ПредставлениеИсточникаДанных = "";
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПогашениеЗадолженностиПоставщику;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;
		#КонецОбласти //ПогашениеЗадолженностиПоставщику

		#Область ПоступлениеУслуг
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПоступлениеУслуг";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Закупки;
		Элемент.Наименование = НСтр("ru='Поступление услуг';uk='Надходження послуг'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияКонтрагентДоходыРасходы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Контрагент - Доходы/Расходы';uk='Рухи Контрагент - Доходи/Витрати'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеУслуг;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ПередачаТоваровМеждуОрганизациями");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ПриобретениеТоваровУслуг");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ПоступлениеУслуг

		#Область ПоступлениеУслугРеглУчет
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПоступлениеУслугРеглУчет";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Закупки;
		Элемент.Наименование = НСтр("ru='Поступление услуг (закупка по регл.)';uk='Надходження послуг (купівля по регл.)'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияКонтрагентДоходыРасходы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Контрагент - Доходы/Расходы';uk='Рухи Контрагент - Доходи/Витрати'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеУслугРеглУчет;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ПриобретениеТоваровУслуг");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;

		Элемент.ФункциональныеОпции = ТабличныеЧасти.ФункциональныеОпции.Скопировать();
		ЭлементТЧ = Элемент.ФункциональныеОпции.Добавить();
		ЭлементТЧ.ИмяФункциональнойОпции = "ИспользоватьУправленческуюОрганизацию";
		#КонецОбласти //ПоступлениеУслугРеглУчет

		#Область ПриемНаКомиссию
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПриемНаКомиссию";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Закупки;
		Элемент.Наименование = НСтр("ru='Прием на комиссию';uk='Приймання на комісію'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "Закупки";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Закупки';uk='Купівлі'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПриемНаКомиссию;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Истина;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("АктОРасхожденияхПослеПриемки");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ЗаказПоставщику");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ПередачаТоваровМеждуОрганизациями");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ПриобретениеТоваровУслуг");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;

		Элемент.ФункциональныеОпции = ТабличныеЧасти.ФункциональныеОпции.Скопировать();
		ЭлементТЧ = Элемент.ФункциональныеОпции.Добавить();
		ЭлементТЧ.ИмяФункциональнойОпции = "ИспользоватьКомиссиюПриЗакупках";
		#КонецОбласти //ПриемНаКомиссию

		#Область ПриемНаХранениеСПравомПродажи
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПриемНаХранениеСПравомПродажи";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Закупки;
		Элемент.Наименование = НСтр("ru='Прием на хранение';uk='Приймання на зберігання'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияНоменклатураНоменклатура";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Номенклатура - Номенклатура';uk='Рухи Номенклатура - Номенклатура'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПриемНаХранениеСПравомПродажи;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Истина;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("АктОРасхожденияхПослеПриемки");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ПриемкаТоваровНаХранение");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;

		Элемент.ФункциональныеОпции = ТабличныеЧасти.ФункциональныеОпции.Скопировать();
		ЭлементТЧ = Элемент.ФункциональныеОпции.Добавить();
		ЭлементТЧ.ИмяФункциональнойОпции = "ИспользоватьОтветственноеХранениеВПроцессеЗакупки";
		#КонецОбласти //ПриемНаХранениеСПравомПродажи

		#Область РасходыНаТаможенныеСборыШтрафы
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "РасходыНаТаможенныеСборыШтрафы";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Закупки;
		Элемент.Наименование = НСтр("ru='Расходы на таможенные сборы';uk='Витрати на митні збори'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияКонтрагентДоходыРасходы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Контрагент - Доходы/Расходы';uk='Рухи Контрагент - Доходи/Витрати'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РасходыНаТаможенныеСборыШтрафы;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ТаможеннаяДекларацияИмпорт");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //РасходыНаТаможенныеСборыШтрафы

		#Область ОформлениеГТДСамостоятельно
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ОформлениеГТДСамостоятельно";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Закупки;
		Элемент.Наименование = НСтр("ru='Самостоятельное оформление ГТД';uk='Самостійне оформлення ВМД'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "Закупки";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Закупки';uk='Купівлі'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОформлениеГТДСамостоятельно;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ТаможеннаяДекларацияИмпорт");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ОформлениеГТДСамостоятельно

		#Область СписаниеПринятыхТоваровЗаСчетПоклажедателя
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "СписаниеПринятыхТоваровЗаСчетПоклажедателя";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Закупки;
		Элемент.Наименование = НСтр("ru='Списание принятых товаров за счет поклажедателя';uk='Списання прийнятих товарів за рахунок поклажодавця'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "Закупки";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Закупки';uk='Купівлі'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СписаниеПринятыхТоваровЗаСчетПоклажедателя;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("СписаниеПринятыхНаХранениеТоваров");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;

		Элемент.ФункциональныеОпции = ТабличныеЧасти.ФункциональныеОпции.Скопировать();
		ЭлементТЧ = Элемент.ФункциональныеОпции.Добавить();
		ЭлементТЧ.ИмяФункциональнойОпции = "ИспользоватьОтветственноеХранениеВПроцессеЗакупки";
		#КонецОбласти //СписаниеПринятыхТоваровЗаСчетПоклажедателя

		#Область СписаниеПринятыхТоваровНаРасходы
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "СписаниеПринятыхТоваровНаРасходы";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Закупки;
		Элемент.Наименование = НСтр("ru='Списание принятых товаров на расходы';uk='Списання прийнятих товарів на витрати'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияКонтрагентДоходыРасходы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Контрагент - Доходы/Расходы';uk='Рухи Контрагент - Доходи/Витрати'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СписаниеПринятыхТоваровНаРасходы;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("СписаниеПринятыхНаХранениеТоваров");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;

		Элемент.ФункциональныеОпции = ТабличныеЧасти.ФункциональныеОпции.Скопировать();
		ЭлементТЧ = Элемент.ФункциональныеОпции.Добавить();
		ЭлементТЧ.ИмяФункциональнойОпции = "ИспользоватьОтветственноеХранениеВПроцессеЗакупки";
		#КонецОбласти //СписаниеПринятыхТоваровНаРасходы

		#Область СторноПоступления
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "СторноПоступления";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Закупки;
		Элемент.Наименование = НСтр("ru='Сторно поступления';uk='Сторно надходження'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "Закупки";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Закупки';uk='Купівлі'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СторноПоступления;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		#КонецОбласти //СторноПоступления

		#Область УдержаниеВознагражденияКомитентом
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "УдержаниеВознагражденияКомитентом";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Закупки;
		Элемент.Наименование = НСтр("ru='Удержание вознаграждения комитентом';uk='Утримання винагороди комітентом'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "";
		Элемент.ПредставлениеИсточникаДанных = "";
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.УдержаниеВознагражденияКомитентом;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;
		#КонецОбласти //УдержаниеВознагражденияКомитентом

	#КонецОбласти //Закупки

	#Область Зарплата
	Элемент = Элементы.Добавить();  // см. СтрокаТЧПредопреденногоЭлемента
	Элемент.ИмяПредопределенныхДанных = "Зарплата";
	Элемент.Наименование = НСтр("ru='Зарплата';uk='Зарплата'",КодОсновногоЯзыка);

		#Область ВыдачаЗаймаСотруднику
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ВыдачаЗаймаСотруднику";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Зарплата;
		Элемент.Наименование = НСтр("ru='Выдача займа сотруднику';uk='Видача позики співробітнику'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДенежныеСредстваДоходыРасходы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Денежные средства - Доходы/Расходы';uk='Рухи Грошові кошти - Доходи/Витрати'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыдачаЗаймаСотруднику;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Истина;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("РасходныйКассовыйОрдер");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("СписаниеБезналичныхДенежныхСредств");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ВыдачаЗаймаСотруднику

		#Область НачислениеВознагражденияЗаСчетРезервов
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "НачислениеВознагражденияЗаСчетРезервов";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Зарплата;
		Элемент.Наименование = НСтр("ru='Начисление вознаграждения за счет резервов';uk='Нарахування винагороди за рахунок резервів'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДоходыРасходыПрочиеАктивыПассивы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Доходы/Расходы - Прочие активы/пассивы';uk='Рухи Доходи/Витрати - Інші активи/пасиви'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ПрочиеАктивыПассивы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ПрочиеАктивыПассивы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.НачислениеВознагражденияЗаСчетРезервов;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ОтражениеЗарплатыВФинансовомУчете");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ОтражениеЗарплатыВФинансовомУчете2_5");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //НачислениеВознагражденияЗаСчетРезервов

		#Область НачислениеЗаработнойПлаты
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "НачислениеЗаработнойПлаты";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Зарплата;
		Элемент.Наименование = НСтр("ru='Начисление зарплаты';uk='Нарахування зарплати'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "";
		Элемент.ПредставлениеИсточникаДанных = "";
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.НачислениеЗаработнойПлаты;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;
		#КонецОбласти //НачислениеЗаработнойПлаты

		#Область НачислениеРезервовПоВознаграждениям
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "НачислениеРезервовПоВознаграждениям";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Зарплата;
		Элемент.Наименование = НСтр("ru='Начисление резервов по вознаграждениям';uk='Нарахування резервів за винагородами'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДоходыРасходыПрочиеАктивыПассивы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Доходы/Расходы - Прочие активы/пассивы';uk='Рухи Доходи/Витрати - Інші активи/пасиви'",КодОсновногоЯзыка);
		Элемент.Описание = НСтр("ru='Начисление резервов по вознаграждениям';uk='Нарахування резервів за винагородами'",КодОсновногоЯзыка);
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ПрочиеАктивыПассивы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.НачислениеРезервовПоВознаграждениям;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("НачислениеОценочныхОбязательствПоОтпускам");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //НачислениеРезервовПоВознаграждениям

		#Область НачислениеРезервовПоСтраховымВзносам
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "НачислениеРезервовПоСтраховымВзносам";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Зарплата;
		Элемент.Наименование = НСтр("ru='Начисление резервов по страховым взносам';uk='Нарахування резервів за страховими внесками'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДоходыРасходыПрочиеАктивыПассивы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Доходы/Расходы - Прочие активы/пассивы';uk='Рухи Доходи/Витрати - Інші активи/пасиви'",КодОсновногоЯзыка);
		Элемент.Описание = НСтр("ru='Начисление резервов по вознаграждениям';uk='Нарахування резервів за винагородами'",КодОсновногоЯзыка);
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ПрочиеАктивыПассивы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.НачислениеРезервовПоСтраховымВзносам;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("НачислениеОценочныхОбязательствПоОтпускам");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //НачислениеРезервовПоСтраховымВзносам

		#Область ОтражениеЗаработнойПлаты
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ОтражениеЗаработнойПлаты";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Зарплата;
		Элемент.Наименование = НСтр("ru='Отражение заработной платы';uk='Відображення заробітної плати'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДоходыРасходыПрочиеАктивыПассивы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Доходы/Расходы - Прочие активы/пассивы';uk='Рухи Доходи/Витрати - Інші активи/пасиви'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ПрочиеАктивыПассивы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОтражениеЗаработнойПлаты;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ОтражениеЗарплатыВФинансовомУчете");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ОтражениеЗарплатыВФинансовомУчете2_5");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ОтражениеЗаработнойПлаты

		#Область ОтражениеНалоговВзносовСЗаработнойПлаты
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ОтражениеНалоговВзносовСЗаработнойПлаты";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Зарплата;
		Элемент.Наименование = НСтр("ru='Отражение налогов взносов с заработной платы';uk='Відображення податків внесків із заробітної плати'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДоходыРасходыПрочиеАктивыПассивы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Доходы/Расходы - Прочие активы/пассивы';uk='Рухи Доходи/Витрати - Інші активи/пасиви'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ПрочиеАктивыПассивы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОтражениеНалоговВзносовСЗаработнойПлаты;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ОтражениеЗарплатыВФинансовомУчете");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ОтражениеЗарплатыВФинансовомУчете2_5");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ОтражениеНалоговВзносовСЗаработнойПлаты

		#Область ОтражениеНалоговВзносовСоСдельнойЗаработнойПлаты
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ОтражениеНалоговВзносовСоСдельнойЗаработнойПлаты";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Зарплата;
		Элемент.Наименование = НСтр("ru='Отражение налогов взносов со сдельной заработной платы';uk='Відображення податків внесків зі відрядної заробітної плати'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДоходыРасходыПрочиеАктивыПассивы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Доходы/Расходы - Прочие активы/пассивы';uk='Рухи Доходи/Витрати - Інші активи/пасиви'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ПрочиеАктивыПассивы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОтражениеНалоговВзносовСоСдельнойЗаработнойПлаты;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ОтражениеЗарплатыВФинансовомУчете");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ОтражениеЗарплатыВФинансовомУчете2_5");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ОтражениеНалоговВзносовСоСдельнойЗаработнойПлаты

		#Область ОтражениеНДФЛ
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ОтражениеНДФЛ";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Зарплата;
		Элемент.Наименование = НСтр("ru='Отражение НДФЛ';uk='Відображення ПДФО'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "";
		Элемент.ПредставлениеИсточникаДанных = "";
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОтражениеНДФЛ;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;  
		
		//++ НЕ УТ
		Элемент.ПоказателиРегистра = ТабличныеЧасти.ПоказателиРегистра.Скопировать();
		ЭлементТЧ = Элемент.ПоказателиРегистра.Добавить();
		ЭлементТЧ.Показатель = Перечисления.ПоказателиАналитическихРегистров.Сумма;
		ЭлементТЧ.Использование = Истина;
		//-- НЕ УТ

		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ОтражениеЗарплатыВФинансовомУчете");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ОтражениеЗарплатыВФинансовомУчете2_5");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ОтражениеНДФЛ

		#Область ОтражениеСдельнойЗаработнойПлаты
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ОтражениеСдельнойЗаработнойПлаты";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Зарплата;
		Элемент.Наименование = НСтр("ru='Отражение сдельной заработной платы';uk='Відображення відрядної заробітної плати'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДоходыРасходыПрочиеАктивыПассивы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Доходы/Расходы - Прочие активы/пассивы';uk='Рухи Доходи/Витрати - Інші активи/пасиви'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ПрочиеАктивыПассивы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОтражениеСдельнойЗаработнойПлаты;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ОтражениеЗарплатыВФинансовомУчете");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ОтражениеЗарплатыВФинансовомУчете2_5");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ОтражениеСдельнойЗаработнойПлаты

		#Область ПогашениеЗаймаСотрудником
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПогашениеЗаймаСотрудником";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Зарплата;
		Элемент.Наименование = НСтр("ru='Погашение займа сотрудником';uk='Погашення позики співробітником'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДенежныеСредстваДоходыРасходы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Денежные средства - Доходы/Расходы';uk='Рухи Грошові кошти - Доходи/Витрати'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПогашениеЗаймаСотрудником;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Истина;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ПоступлениеБезналичныхДенежныхСредств");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ПриходныйКассовыйОрдер");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ПогашениеЗаймаСотрудником

		#Область УдержаниеНеизрасходованныхПодотчетныхСумм
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "УдержаниеНеизрасходованныхПодотчетныхСумм";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Зарплата;
		Элемент.Наименование = НСтр("ru='Удержание неизрасходованных подотчетных сумм';uk='Утримання невитрачених підзвітних сум'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДенежныеСредстваДоходыРасходы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Денежные средства - Доходы/Расходы';uk='Рухи Грошові кошти - Доходи/Витрати'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ПрочиеАктивыПассивы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.УдержаниеНеизрасходованныхПодотчетныхСумм;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ОтражениеЗарплатыВФинансовомУчете");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ОтражениеЗарплатыВФинансовомУчете2_5");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //УдержаниеНеизрасходованныхПодотчетныхСумм

	#КонецОбласти //Зарплата

	#Область КредитыИДепозиты
	Элемент = Элементы.Добавить();  // см. СтрокаТЧПредопреденногоЭлемента
	Элемент.ИмяПредопределенныхДанных = "КредитыИДепозиты";
	Элемент.Наименование = НСтр("ru='Кредиты и депозиты';uk='Кредити та депозити'",КодОсновногоЯзыка);

		#Область ВыдачаЗаймов
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ВыдачаЗаймов";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.КредитыИДепозиты;
		Элемент.Наименование = НСтр("ru='Выдача займа контрагенту';uk='Видача позики контрагенту'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДенежныеСредстваКонтрагент";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Денежные средства - Контрагент';uk='Рухи Грошові кошти - Контрагент'",КодОсновногоЯзыка);
		Элемент.Описание = НСтр("ru='Размещение денежных средств в форме выданных займов';uk='Розміщення грошових коштів у формі виданих позик'",КодОсновногоЯзыка);
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыдачаЗаймов;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Истина;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("РасходныйКассовыйОрдер");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("СписаниеБезналичныхДенежныхСредств");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ВыдачаЗаймов

		#Область НачисленияПоДепозитам
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "НачисленияПоДепозитам";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.КредитыИДепозиты;
		Элемент.Наименование = НСтр("ru='Начисления по депозитам';uk='Нарахування за депозитами'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДенежныеСредстваДоходыРасходы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Денежные средства - Доходы/Расходы';uk='Рухи Грошові кошти - Доходи/Витрати'",КодОсновногоЯзыка);
		Элемент.Описание = НСтр("ru='Начисление процентов по депозитам';uk='Нарахування відсотків за депозитами'",КодОсновногоЯзыка);
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.НачисленияПоДепозитам;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("НачисленияКредитовИДепозитов");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //НачисленияПоДепозитам

		#Область НачисленияПоЗаймамВыданным
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "НачисленияПоЗаймамВыданным";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.КредитыИДепозиты;
		Элемент.Наименование = НСтр("ru='Начисления по займам выданным';uk='Нарахування за позиками виданими'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияКонтрагентДоходыРасходы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Контрагент - Доходы/Расходы';uk='Рухи Контрагент - Доходи/Витрати'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.НачисленияПоЗаймамВыданным;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("НачисленияКредитовИДепозитов");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //НачисленияПоЗаймамВыданным

		#Область НачисленияПоКредитам
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "НачисленияПоКредитам";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.КредитыИДепозиты;
		Элемент.Наименование = НСтр("ru='Начисления по кредитам';uk='Нарахування за кредитами'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияКонтрагентДоходыРасходы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Контрагент - Доходы/Расходы';uk='Рухи Контрагент - Доходи/Витрати'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.НачисленияПоКредитам;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("НачисленияКредитовИДепозитов");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //НачисленияПоКредитам

		#Область ОплатаПроцентовПоКредитам
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ОплатаПроцентовПоКредитам";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.КредитыИДепозиты;
		Элемент.Наименование = НСтр("ru='Оплата процентов по кредитам';uk='Оплата відсотків за кредитами'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДенежныеСредстваКонтрагент";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Денежные средства - Контрагент';uk='Рухи Грошові кошти - Контрагент'",КодОсновногоЯзыка);
		Элемент.Описание = НСтр("ru='Оплата процентов по кредитам и займам полученным';uk='Оплата відсотків по кредитах і позиках отриманих'",КодОсновногоЯзыка);
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаПроцентовПоКредитам;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Истина;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("РасходныйКассовыйОрдер");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("СписаниеБезналичныхДенежныхСредств");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ОплатаПроцентовПоКредитам

		#Область ОплатаПоКредитам
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ОплатаПоКредитам";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.КредитыИДепозиты;
		Элемент.Наименование = НСтр("ru='Оплаты по кредитам и займам полученным';uk='Оплати за кредитами і позиками отриманими'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДенежныеСредстваКонтрагент";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Денежные средства - Контрагент';uk='Рухи Грошові кошти - Контрагент'",КодОсновногоЯзыка);
		Элемент.Описание = НСтр("ru='Возврат основной суммы кредитов и займов полученных';uk='Повернення основної суми кредитів та позик отриманих'",КодОсновногоЯзыка);
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаПоКредитам;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Истина;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("РасходныйКассовыйОрдер");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("СписаниеБезналичныхДенежныхСредств");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ОплатаПоКредитам

		#Область ПеречислениеНаДепозиты
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПеречислениеНаДепозиты";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.КредитыИДепозиты;
		Элемент.Наименование = НСтр("ru='Перечисление на депозиты';uk='Перерахування на депозити'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДенежныхСредств";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Денежные средства - Денежные средства';uk='Рухи Грошові кошти - Грошові кошти'",КодОсновногоЯзыка);
		Элемент.Описание = НСтр("ru='Размещение денежных средств на депозитных счетах';uk='Розміщення грошових коштів на депозитних рахунках'",КодОсновногоЯзыка);
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеречислениеНаДепозиты;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Истина;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("РасходныйКассовыйОрдер");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("СписаниеБезналичныхДенежныхСредств");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ПеречислениеНаДепозиты

		#Область ПоступлениеДенежныхСредствПоЗаймамВыданным
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПоступлениеДенежныхСредствПоЗаймамВыданным";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.КредитыИДепозиты;
		Элемент.Наименование = НСтр("ru='Погашение займа контрагентом';uk='Погашення позики контрагентом'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДенежныеСредстваКонтрагент";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Денежные средства - Контрагент';uk='Рухи Грошові кошти - Контрагент'",КодОсновногоЯзыка);
		Элемент.Описание = НСтр("ru='Возврат основной суммы займов выданных';uk='Повернення основної суми позик виданих'",КодОсновногоЯзыка);
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствПоЗаймамВыданным;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Истина;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ПоступлениеБезналичныхДенежныхСредств");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ПриходныйКассовыйОрдер");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ПоступлениеДенежныхСредствПоЗаймамВыданным

		#Область ПоступлениеДенежныхСредствПоДепозитам
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПоступлениеДенежныхСредствПоДепозитам";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.КредитыИДепозиты;
		Элемент.Наименование = НСтр("ru='Поступление ДС по депозитам';uk='Надходження ГК за депозитами'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДенежныхСредств";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Денежные средства - Денежные средства';uk='Рухи Грошові кошти - Грошові кошти'",КодОсновногоЯзыка);
		Элемент.Описание = НСтр("ru='Возврат основной суммы размещенных депозитов';uk='Повернення основної суми розміщених депозитів'",КодОсновногоЯзыка);
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствПоДепозитам;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Истина;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ПоступлениеБезналичныхДенежныхСредств");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ПриходныйКассовыйОрдер");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ПоступлениеДенежныхСредствПоДепозитам

		#Область ПоступлениеДенежныхСредствПоКредитам
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПоступлениеДенежныхСредствПоКредитам";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.КредитыИДепозиты;
		Элемент.Наименование = НСтр("ru='Поступление по кредитам и займам полученным';uk='Надходження за кредитами і позиками отриманими'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДенежныеСредстваКонтрагент";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Денежные средства - Контрагент';uk='Рухи Грошові кошти - Контрагент'",КодОсновногоЯзыка);
		Элемент.Описание = НСтр("ru='Поступление основной суммы кредитов и займов полученных';uk='Надходження основної суми кредитів та позик отриманих'",КодОсновногоЯзыка);
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствПоКредитам;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Истина;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ПоступлениеБезналичныхДенежныхСредств");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ПриходныйКассовыйОрдер");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ПоступлениеДенежныхСредствПоКредитам

		#Область ПоступлениеПроцентовПоЗаймамВыданным
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПоступлениеПроцентовПоЗаймамВыданным";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.КредитыИДепозиты;
		Элемент.Наименование = НСтр("ru='Поступление процентов по займам выданным';uk='Надходження відсотків за виданими позиками'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДенежныеСредстваКонтрагент";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Денежные средства - Контрагент';uk='Рухи Грошові кошти - Контрагент'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеПроцентовПоЗаймамВыданным;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Истина;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ПоступлениеБезналичныхДенежныхСредств");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ПриходныйКассовыйОрдер");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ПоступлениеПроцентовПоЗаймамВыданным

	#КонецОбласти //КредитыИДепозиты

	#Область ПередачаВПереработку
	Элемент = Элементы.Добавить();  // см. СтрокаТЧПредопреденногоЭлемента
	Элемент.ИмяПредопределенныхДанных = "ПередачаВПереработку";
	Элемент.Наименование = НСтр("ru='Передача в переработку';uk='Передача в переробку'",КодОсновногоЯзыка);

		#Область ВозвратОтПереработчика
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ВозвратОтПереработчика";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ПередачаВПереработку;
		Элемент.Наименование = НСтр("ru='Возврат от переработчика';uk='Повернення від переробника'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияНоменклатураНоменклатура";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Номенклатура - Номенклатура';uk='Рухи Номенклатура - Номенклатура'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОтПереработчика;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ВозвратСырьяОтПереработчика");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ВозвратОтПереработчика

		#Область ПередачаПереработчику
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПередачаПереработчику";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ПередачаВПереработку;
		Элемент.Наименование = НСтр("ru='Передача переработчику';uk='Передача переробнику'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияНоменклатураНоменклатура";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Номенклатура - Номенклатура';uk='Рухи Номенклатура - Номенклатура'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаПереработчику;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ПередачаСырьяПереработчику");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;

		Элемент.ФункциональныеОпции = ТабличныеЧасти.ФункциональныеОпции.Скопировать();
		ЭлементТЧ = Элемент.ФункциональныеОпции.Добавить();
		ЭлементТЧ.ИмяФункциональнойОпции = "ИспользоватьПроизводствоНаСтороне";
		#КонецОбласти //ПередачаПереработчику

		#Область ПоступлениеОтПереработчика
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПоступлениеОтПереработчика";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ПередачаВПереработку;
		Элемент.Наименование = НСтр("ru='Поступление от переработчика';uk='Надходження від переробника'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияНоменклатураНоменклатура";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Номенклатура - Номенклатура';uk='Рухи Номенклатура - Номенклатура'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеОтПереработчика;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ПоступлениеОтПереработчика");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;

		Элемент.ФункциональныеОпции = ТабличныеЧасти.ФункциональныеОпции.Скопировать();
		ЭлементТЧ = Элемент.ФункциональныеОпции.Добавить();
		ЭлементТЧ.ИмяФункциональнойОпции = "ИспользоватьПроизводствоНаСтороне";
		#КонецОбласти //ПоступлениеОтПереработчика

		#Область ПоступлениеОтПереработчикаФиксированнаяСтоимость
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПоступлениеОтПереработчикаФиксированнаяСтоимость";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ПередачаВПереработку;
		Элемент.Наименование = НСтр("ru='Поступление от переработчика фиксированная стоимость';uk='Надходження від переробника фіксована вартість'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "";
		Элемент.ПредставлениеИсточникаДанных = "";
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеОтПереработчикаФиксированнаяСтоимость;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;
		#КонецОбласти //ПоступлениеОтПереработчикаФиксированнаяСтоимость

		#Область ПроизводствоУПереработчика
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПроизводствоУПереработчика";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ПередачаВПереработку;
		Элемент.Наименование = НСтр("ru='Производство у переработчика';uk='Виробництво у переробника'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "";
		Элемент.ПредставлениеИсточникаДанных = "";
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПроизводствоУПереработчика;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ЗаказПереработчику");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ОтчетПереработчика");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ЭтапПроизводства2_2");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;

		Элемент.ФункциональныеОпции = ТабличныеЧасти.ФункциональныеОпции.Скопировать();
		ЭлементТЧ = Элемент.ФункциональныеОпции.Добавить();
		ЭлементТЧ.ИмяФункциональнойОпции = "ИспользоватьПроизводствоНаСтороне";
		#КонецОбласти //ПроизводствоУПереработчика

	#КонецОбласти //ПередачаВПереработку

	#Область ПриемВПереработку
	Элемент = Элементы.Добавить();  // см. СтрокаТЧПредопреденногоЭлемента
	Элемент.ИмяПредопределенныхДанных = "ПриемВПереработку";
	Элемент.Наименование = НСтр("ru='Прием в переработку';uk='Приймання в переробку'",КодОсновногоЯзыка);

		#Область ВозвратДавальцу
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ВозвратДавальцу";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ПриемВПереработку;
		Элемент.Наименование = НСтр("ru='Возврат давальцу';uk='Повернення давальцю'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "";
		Элемент.ПредставлениеИсточникаДанных = "";
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДавальцу;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ВозвратСырьяДавальцу");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;

		Элемент.ФункциональныеОпции = ТабличныеЧасти.ФункциональныеОпции.Скопировать();
		ЭлементТЧ = Элемент.ФункциональныеОпции.Добавить();
		ЭлементТЧ.ИмяФункциональнойОпции = "ИспользоватьПроизводствоИзДавальческогоСырья";
		#КонецОбласти //ВозвратДавальцу

		#Область ОтчетДавальцу
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ОтчетДавальцу";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ПриемВПереработку;
		Элемент.Наименование = НСтр("ru='Отчет давальцу';uk='Звіт давальцю'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "";
		Элемент.ПредставлениеИсточникаДанных = "";
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОтчетДавальцу;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ОтчетДавальцу");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;

		Элемент.ФункциональныеОпции = ТабличныеЧасти.ФункциональныеОпции.Скопировать();
		ЭлементТЧ = Элемент.ФункциональныеОпции.Добавить();
		ЭлементТЧ.ИмяФункциональнойОпции = "ИспользоватьПроизводствоИзДавальческогоСырья";
		#КонецОбласти //ОтчетДавальцу

		#Область ПередачаДавальцу
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПередачаДавальцу";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ПриемВПереработку;
		Элемент.Наименование = НСтр("ru='Передача давальцу';uk='Передача давальцю'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "";
		Элемент.ПредставлениеИсточникаДанных = "";
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаДавальцу;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ПередачаДавальцу");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ПередачаДавальцу

		#Область ПоступлениеОтДавальца
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПоступлениеОтДавальца";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ПриемВПереработку;
		Элемент.Наименование = НСтр("ru='Поступление от давальца';uk='Надходження від давальця'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "";
		Элемент.ПредставлениеИсточникаДанных = "";
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеОтДавальца;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ПоступлениеСырьяОтДавальца");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;

		Элемент.ФункциональныеОпции = ТабличныеЧасти.ФункциональныеОпции.Скопировать();
		ЭлементТЧ = Элемент.ФункциональныеОпции.Добавить();
		ЭлементТЧ.ИмяФункциональнойОпции = "ИспользоватьПроизводствоИзДавальческогоСырья";
		#КонецОбласти //ПоступлениеОтДавальца

		#Область ПроизводствоИзДавальческогоСырья
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПроизводствоИзДавальческогоСырья";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ПриемВПереработку;
		Элемент.Наименование = НСтр("ru='Производство из давальческого сырья';uk='Виробництво з давальницької сировини'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "";
		Элемент.ПредставлениеИсточникаДанных = "";
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПроизводствоИзДавальческогоСырья;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ЗаказДавальца");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ЭтапПроизводства2_2");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;

		Элемент.ФункциональныеОпции = ТабличныеЧасти.ФункциональныеОпции.Скопировать();
		ЭлементТЧ = Элемент.ФункциональныеОпции.Добавить();
		ЭлементТЧ.ИмяФункциональнойОпции = "ИспользоватьПроизводствоИзДавальческогоСырья";
		#КонецОбласти //ПроизводствоИзДавальческогоСырья

	#КонецОбласти //ПриемВПереработку

	#Область Продажи
	Элемент = Элементы.Добавить();  // см. СтрокаТЧПредопреденногоЭлемента
	Элемент.ИмяПредопределенныхДанных = "Продажи";
	Элемент.Наименование = НСтр("ru='Продажи';uk='Продажі'",КодОсновногоЯзыка);

		#Область АннулированиеПодарочныхСертификатов
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "АннулированиеПодарочныхСертификатов";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Продажи;
		Элемент.Наименование = НСтр("ru='Аннулирование подарочных сертификатов';uk='Анулювання подарункових сертифікатів'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияКонтрагентДоходыРасходы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Контрагент - Доходы/Расходы';uk='Рухи Контрагент - Доходи/Витрати'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.АннулированиеПодарочныхСертификатов;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("АннулированиеПодарочныхСертификатов");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //АннулированиеПодарочныхСертификатов

		#Область ВозвратДеньВДень
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ВозвратДеньВДень";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Продажи;
		Элемент.Наименование = НСтр("ru='Возврат день в день';uk='Повернення день у день'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "";
		Элемент.ПредставлениеИсточникаДанных = "";
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДеньВДень;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;
		#КонецОбласти //ВозвратДеньВДень

		#Область ВозвратНедопоставленногоТовара
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ВозвратНедопоставленногоТовара";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Продажи;
		Элемент.Наименование = НСтр("ru='(не используется) Возврат недопоставленного товара';uk='(не використовується) Повернення недопоставленого товару'",КодОсновногоЯзыка);
		#КонецОбласти //ВозвратНедопоставленногоТовара

		#Область ВозвратОтКомиссионера
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ВозвратОтКомиссионера";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Продажи;
		Элемент.Наименование = НСтр("ru='Возврат от комиссионера';uk='Повернення від комісіонера'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияНоменклатураНоменклатура";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Номенклатура - Номенклатура';uk='Рухи Номенклатура - Номенклатура'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОтКомиссионера;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("АктОРасхожденияхПослеПриемки");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ВозвратТоваровОтКлиента");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ЗаявкаНаВозвратТоваровОтКлиента");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;

		Элемент.ФункциональныеОпции = ТабличныеЧасти.ФункциональныеОпции.Скопировать();
		ЭлементТЧ = Элемент.ФункциональныеОпции.Добавить();
		ЭлементТЧ.ИмяФункциональнойОпции = "ИспользоватьКомиссиюПриПродажах";
		#КонецОбласти //ВозвратОтКомиссионера

		#Область ВозвратОтРозничногоПокупателя
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ВозвратОтРозничногоПокупателя";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Продажи;
		Элемент.Наименование = НСтр("ru='Возврат от розничного покупателя';uk='Повернення від роздрібного покупця'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "";
		Элемент.ПредставлениеИсточникаДанных = "";
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОтРозничногоПокупателя;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ВозвратТоваровОтКлиента");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ЗаявкаНаВозвратТоваровОтКлиента");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;

		Элемент.ФункциональныеОпции = ТабличныеЧасти.ФункциональныеОпции.Скопировать();
		ЭлементТЧ = Элемент.ФункциональныеОпции.Добавить();
		ЭлементТЧ.ИмяФункциональнойОпции = "ИспользоватьРозничныеПродажи";
		#КонецОбласти //ВозвратОтРозничногоПокупателя

		#Область ВозвратОтХранителя
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ВозвратОтХранителя";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Продажи;
		Элемент.Наименование = НСтр("ru='Возврат от хранителя';uk='Повернення від зберігача'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияНоменклатураНоменклатура";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Номенклатура - Номенклатура';uk='Рухи Номенклатура - Номенклатура'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОтХранителя;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Истина;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("АктОРасхожденияхПослеПриемки");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ЗаявкаНаВозвратТоваровОтКлиента");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ПоступлениеТоваровОтХранителя");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;

		Элемент.ФункциональныеОпции = ТабличныеЧасти.ФункциональныеОпции.Скопировать();
		ЭлементТЧ = Элемент.ФункциональныеОпции.Добавить();
		ЭлементТЧ.ИмяФункциональнойОпции = "ИспользоватьПередачуНаОтветственноеХранениеСПравомПродажи";
		#КонецОбласти //ВозвратОтХранителя

		#Область ВозвратПодарочныхСертификатов
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ВозвратПодарочныхСертификатов";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Продажи;
		Элемент.Наименование = НСтр("ru='Возврат подарочных сертификатов';uk='Повернення подарункових сертифікатів'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДенежныеСредстваКонтрагент";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Денежные средства - Контрагент';uk='Рухи Грошові кошти - Контрагент'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратПодарочныхСертификатов;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ВозвратПодарочныхСертификатов");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ВозвратПодарочныхСертификатов

		#Область ВозвратТарыОтКлиентаПрошлыхПериодов
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ВозвратТарыОтКлиентаПрошлыхПериодов";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Продажи;
		Элемент.Наименование = НСтр("ru='Возврат тары от клиента прошлых периодов';uk='Повернення тари від клієнта минулих періодів'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "";
		Элемент.ПредставлениеИсточникаДанных = "";
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратТарыОтКлиентаПрошлыхПериодов;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;
		#КонецОбласти //ВозвратТарыОтКлиентаПрошлыхПериодов

		#Область ВозвратТоваровОтКлиента
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ВозвратТоваровОтКлиента";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Продажи;
		Элемент.Наименование = НСтр("ru='Возврат товаров от клиента';uk='Повернення товарів від клієнта'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ВыручкаИСебестоимостьПродаж";
		Элемент.ПредставлениеИсточникаДанных = "";
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратТоваровОтКлиента;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("АктОРасхожденияхПослеПриемки");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ВозвратТоваровОтКлиента");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ЗаявкаНаВозвратТоваровОтКлиента");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ВозвратТоваровОтКлиента

		#Область ВозвратТоваровОтКлиентаПрошлыхПериодов
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ВозвратТоваровОтКлиентаПрошлыхПериодов";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Продажи;
		Элемент.Наименование = НСтр("ru='Возврат товаров от клиента прошлых периодов';uk='Повернення товарів від клієнта минулих періодів'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ВыручкаИСебестоимостьПродаж";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Выручка и себестоимость продаж';uk='Виторг і собівартість продажів'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратТоваровОтКлиентаПрошлыхПериодов;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ВозвратТоваровОтКлиента");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("КорректировкаРеализации");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ВозвратТоваровОтКлиентаПрошлыхПериодов

		#Область ВосстановлениеАвансаКлиента
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ВосстановлениеАвансаКлиента";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Продажи;
		Элемент.Наименование = НСтр("ru='Восстановление аванса клиента';uk='Відновлення авансу клієнта'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "РасчетыСКлиентамиПоДокументам";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Расчеты с клиентами по документам';uk='Розрахунки з клієнтами за документами'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВосстановлениеАвансаКлиента;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ВозвратТоваровОтКлиента");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("КорректировкаРеализации");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ВосстановлениеАвансаКлиента

		#Область ВыкупВозвратнойТарыКлиентом
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ВыкупВозвратнойТарыКлиентом";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Продажи;
		Элемент.Наименование = НСтр("ru='Выкуп возвратной тары клиентом';uk='Викуп зворотної тари клієнтом'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияКонтрагентДоходыРасходы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Контрагент - Доходы/Расходы';uk='Рухи Контрагент - Доходи/Витрати'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыкупВозвратнойТарыКлиентом;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ВыкупВозвратнойТарыКлиентом");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ВыкупВозвратнойТарыКлиентом

		#Область ВыкупТоваровПереданныхНаХранение
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ВыкупТоваровПереданныхНаХранение";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Продажи;
		Элемент.Наименование = НСтр("ru='Выкуп товаров переданных на хранение';uk='Викуп товарів переданих на зберігання'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "";
		Элемент.ПредставлениеИсточникаДанных = "";
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыкупТоваровПереданныхНаХранение;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;
		#КонецОбласти //ВыкупТоваровПереданныхНаХранение

		#Область ВыкупТоваровХранителем
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ВыкупТоваровХранителем";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Продажи;
		Элемент.Наименование = НСтр("ru='Выкуп товаров хранителем';uk='Викуп товарів зберігачем'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ВыручкаИСебестоимостьПродаж";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Выручка и себестоимость продаж';uk='Виторг і собівартість продажів'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыкупТоваровХранителем;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Истина;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ВыкупТоваровХранителем");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;

		Элемент.ФункциональныеОпции = ТабличныеЧасти.ФункциональныеОпции.Скопировать();
		ЭлементТЧ = Элемент.ФункциональныеОпции.Добавить();
		ЭлементТЧ.ИмяФункциональнойОпции = "ИспользоватьПередачуНаОтветственноеХранениеСПравомПродажи";
		#КонецОбласти //ВыкупТоваровХранителем

		#Область ДоходыПоОтчетуКомиссионераОСписании
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ДоходыПоОтчетуКомиссионераОСписании";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Продажи;
		Элемент.Наименование = НСтр("ru='Доходы по отчету комиссионера о списании';uk='Доходи за звітом комісіонера про списання'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияКонтрагентДоходыРасходы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Контрагент - Доходы/Расходы';uk='Рухи Контрагент - Доходи/Витрати'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ДоходыПоОтчетуКомиссионераОСписании;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ОтчетКомиссионераОСписании");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ДоходыПоОтчетуКомиссионераОСписании

		#Область ЗачетАвансаКлиента
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ЗачетАвансаКлиента";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Продажи;
		Элемент.Наименование = НСтр("ru='Зачет аванса клиента';uk='Залік авансу клієнта'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "РасчетыСКлиентамиПоДокументам";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Расчеты с клиентами по документам';uk='Розрахунки з клієнтами за документами'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗачетАвансаКлиента;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		#КонецОбласти //ЗачетАвансаКлиента

		#Область ЗачетВознагражденияАвансомКомиссионера
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ЗачетВознагражденияАвансомКомиссионера";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Продажи;
		Элемент.Наименование = НСтр("ru='Зачет вознаграждения в счет аванса комиссионера';uk='Залік винагороди в рахунок авансу комісіонера'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "РасчетыСКлиентамиПоДокументам";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Расчеты с клиентами по документам';uk='Розрахунки з клієнтами за документами'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗачетВознагражденияАвансомКомиссионера;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ОтчетКомиссионера");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ЗачетВознагражденияАвансомКомиссионера

		#Область ЗачетВознагражденияОплатойКомиссионера
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ЗачетВознагражденияОплатойКомиссионера";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Продажи;
		Элемент.Наименование = НСтр("ru='Зачет вознаграждения оплатой комиссионера';uk='Залік винагороди оплатою комісіонера'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "РасчетыСКлиентамиПоДокументам";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Расчеты с клиентами по документам';uk='Розрахунки з клієнтами за документами'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗачетВознагражденияОплатойКомиссионера;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ОтчетПоКомиссииМеждуОрганизациями");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ЗачетВознагражденияОплатойКомиссионера

		#Область ИсправлениеОшибок
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ИсправлениеОшибок";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Продажи;
		Элемент.Наименование = НСтр("ru='(не используется) Исправление ошибок';uk='(не використовується) Виправлення помилок'",КодОсновногоЯзыка);
		#КонецОбласти //ИсправлениеОшибок

		#Область КорректировкаЗадолженности
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "КорректировкаЗадолженности";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Продажи;
		Элемент.Наименование = НСтр("ru='Корректировка задолженности';uk='Коригування заборгованості'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "";
		Элемент.ПредставлениеИсточникаДанных = "";
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.КорректировкаЗадолженности;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		#КонецОбласти //КорректировкаЗадолженности

		#Область КорректировкаОбособленногоУчета
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "КорректировкаОбособленногоУчета";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Продажи;
		Элемент.Наименование = НСтр("ru='Корректировка обособленного учета';uk='Коригування відокремленого обліку'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияНоменклатураНоменклатура";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Номенклатура - Номенклатура';uk='Рухи Номенклатура - Номенклатура'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.КорректировкаОбособленногоУчета;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("КорректировкаНазначенияТоваров");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //КорректировкаОбособленногоУчета

		#Область КорректировкаПоСогласованиюСторон
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "КорректировкаПоСогласованиюСторон";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Продажи;
		Элемент.Наименование = НСтр("ru='(не используется) Корректировка по согласованию сторон';uk='(не використовується) Коригування за погодженням сторін'",КодОсновногоЯзыка);
		#КонецОбласти //КорректировкаПоСогласованиюСторон

		#Область КорректировкаРеализацииСОтражениемНаПрочихДоходах
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "КорректировкаРеализацииСОтражениемНаПрочихДоходах";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Продажи;
		Элемент.Наименование = НСтр("ru='(не используется) Корректировка реализации с отражением на прочих доходах';uk='(не використовується) Коригування реалізації з відображенням на інших доходах'",КодОсновногоЯзыка);
		#КонецОбласти //КорректировкаРеализацииСОтражениемНаПрочихДоходах

		#Область КорректировкаРеализацииСоСписаниемНаРасходы
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "КорректировкаРеализацииСоСписаниемНаРасходы";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Продажи;
		Элемент.Наименование = НСтр("ru='(не используется) Корректировка реализации со списанием на расходы';uk='(не використовується) Коригування реалізації зі списанням на витрати'",КодОсновногоЯзыка);
		#КонецОбласти //КорректировкаРеализацииСоСписаниемНаРасходы
		

		#Область ОприходованиеПоВозврату
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ОприходованиеПоВозврату";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Продажи;
		Элемент.Наименование = НСтр("ru='Оприходование по возврату';uk='Оприбуткування за поверненням'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ВыручкаИСебестоимостьПродаж";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Выручка и себестоимость продаж';uk='Виторг і собівартість продажів'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОприходованиеПоВозврату;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ВозвратТоваровОтКлиента");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ОприходованиеПоВозврату


		#Область ОтчетКомиссионера
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ОтчетКомиссионера";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Продажи;
		Элемент.Наименование = НСтр("ru='Отчет комиссионера';uk='Звіт комісіонера'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ВыручкаИСебестоимостьПродаж";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Выручка и себестоимость продаж';uk='Виторг і собівартість продажів'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОтчетКомиссионера;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ОтчетКомиссионера");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ОтчетПоКомиссииМеждуОрганизациями");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;

		Элемент.ФункциональныеОпции = ТабличныеЧасти.ФункциональныеОпции.Скопировать();
		ЭлементТЧ = Элемент.ФункциональныеОпции.Добавить();
		ЭлементТЧ.ИмяФункциональнойОпции = "ИспользоватьКомиссиюПриПродажах";
		#КонецОбласти //ОтчетКомиссионера

		#Область ОтчетКомиссионераКомиссия
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ОтчетКомиссионераКомиссия";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Продажи;
		Элемент.Наименование = НСтр("ru='Отчет комиссионера (комиссионное вознаграждение)';uk='Звіт комісіонера (комісійна винагорода)'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияКонтрагентДоходыРасходы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Контрагент - Доходы/Расходы';uk='Рухи Контрагент - Доходи/Витрати'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОтчетКомиссионераКомиссия;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ОтчетКомиссионера");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ОтчетКомиссионераКомиссия
		

		#Область ПередачаНаКомиссию
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПередачаНаКомиссию";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Продажи;
		Элемент.Наименование = НСтр("ru='Передача на комиссию';uk='Передача на комісію'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияНоменклатураНоменклатура";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Номенклатура - Номенклатура';uk='Рухи Номенклатура - Номенклатура'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаНаКомиссию;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Истина;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("АктОРасхожденияхПослеОтгрузки");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ЗаказКлиента");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("РеализацияТоваровУслуг");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;

		Элемент.ФункциональныеОпции = ТабличныеЧасти.ФункциональныеОпции.Скопировать();
		ЭлементТЧ = Элемент.ФункциональныеОпции.Добавить();
		ЭлементТЧ.ИмяФункциональнойОпции = "ИспользоватьКомиссиюПриПродажах";
		#КонецОбласти //ПередачаНаКомиссию

		#Область ПередачаНаХранениеСПравомПродажи
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПередачаНаХранениеСПравомПродажи";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Продажи;
		Элемент.Наименование = НСтр("ru='Передача на хранение';uk='Передача на зберігання'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияНоменклатураНоменклатура";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Номенклатура - Номенклатура';uk='Рухи Номенклатура - Номенклатура'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаНаХранениеСПравомПродажи;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Истина;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("АктОРасхожденияхПослеОтгрузки");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ЗаказКлиента");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ПередачаТоваровХранителю");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;

		Элемент.ФункциональныеОпции = ТабличныеЧасти.ФункциональныеОпции.Скопировать();
		ЭлементТЧ = Элемент.ФункциональныеОпции.Добавить();
		ЭлементТЧ.ИмяФункциональнойОпции = "ИспользоватьПередачуНаОтветственноеХранениеСПравомПродажи";
		#КонецОбласти //ПередачаНаХранениеСПравомПродажи

		#Область ПланированиеПоЗаказуКлиента
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПланированиеПоЗаказуКлиента";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Продажи;
		Элемент.Наименование = НСтр("ru='Планирование по заказу клиента';uk='Планування по замовленню клієнта'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "";
		Элемент.ПредставлениеИсточникаДанных = "";
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПланированиеПоЗаказуКлиента;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;
		#КонецОбласти //ПланированиеПоЗаказуКлиента

		#Область ПогашениеЗадолженностиКлиента
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПогашениеЗадолженностиКлиента";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Продажи;
		Элемент.Наименование = НСтр("ru='Погашение задолженности клиента';uk='Погашення заборгованості клієнта'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "";
		Элемент.ПредставлениеИсточникаДанных = "";
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПогашениеЗадолженностиКлиента;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;
		#КонецОбласти //ПогашениеЗадолженностиКлиента
		

		#Область РеализацияВРозницу
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "РеализацияВРозницу";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Продажи;
		Элемент.Наименование = НСтр("ru='Реализация в розницу';uk='Реалізація в роздріб'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ВыручкаИСебестоимостьПродаж";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Выручка и себестоимость продаж';uk='Виторг і собівартість продажів'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияВРозницу;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ОтчетОРозничныхПродажах");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("СводнаяСправкаНДС");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //РеализацияВРозницу

		#Область РеализацияКлиенту
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "РеализацияКлиенту";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Продажи;
		Элемент.Наименование = НСтр("ru='Реализация клиенту';uk='Реалізація клієнту'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ВыручкаИСебестоимостьПродаж";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Выручка и себестоимость продаж';uk='Виторг і собівартість продажів'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияКлиенту;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Истина;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("АктВыполненныхРабот");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("АктОРасхожденияхПослеОтгрузки");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ЗаказКлиента");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("КорректировкаРеализации");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ОтчетДавальцу");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("РеализацияТоваровУслуг");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("РеализацияУслугПрочихАктивов");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //РеализацияКлиенту

		#Область РеализацияКомиссионногоТовара
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "РеализацияКомиссионногоТовара";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Продажи;
		Элемент.Наименование = НСтр("ru='Реализация комиссионного товара';uk='Реалізація комісійного товару'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ВыручкаИСебестоимостьПродаж";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Выручка и себестоимость продаж';uk='Виторг і собівартість продажів'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияКомиссионногоТовара;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("КорректировкаРеализации");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("РеализацияТоваровУслуг");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //РеализацияКомиссионногоТовара

		#Область РеализацияПереданнойВозвратнойТары
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "РеализацияПереданнойВозвратнойТары";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Продажи;
		Элемент.Наименование = НСтр("ru='Реализация переданной возвратной тары';uk='Реалізація переданої зворотної тари'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "";
		Элемент.ПредставлениеИсточникаДанных = "";
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияПереданнойВозвратнойТары;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;
		#КонецОбласти //РеализацияПереданнойВозвратнойТары

		#Область РеализацияПерепоставленногоТовара
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "РеализацияПерепоставленногоТовара";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Продажи;
		Элемент.Наименование = НСтр("ru='(не используется) Реализация перепоставленного товара';uk='(не використовується) Реалізація перепоставленого товару'",КодОсновногоЯзыка);
		#КонецОбласти //РеализацияПерепоставленногоТовара

		#Область РеализацияКлиентуРеглУчет
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "РеализацияКлиентуРеглУчет";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Продажи;
		Элемент.Наименование = НСтр("ru='Реализация по регл. учету';uk='Реалізація по регл. обліку'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ВыручкаИСебестоимостьПродаж";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Выручка и себестоимость продаж';uk='Виторг і собівартість продажів'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияКлиентуРеглУчет;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("АктОРасхожденияхПослеОтгрузки");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("РеализацияТоваровУслуг");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;

		Элемент.ФункциональныеОпции = ТабличныеЧасти.ФункциональныеОпции.Скопировать();
		ЭлементТЧ = Элемент.ФункциональныеОпции.Добавить();
		ЭлементТЧ.ИмяФункциональнойОпции = "ИспользоватьУправленческуюОрганизацию";
		#КонецОбласти //РеализацияКлиентуРеглУчет

		#Область РеализацияПодарочныхСертификатов
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "РеализацияПодарочныхСертификатов";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Продажи;
		Элемент.Наименование = НСтр("ru='Реализация подарочных сертификатов';uk='Реалізація подарункових сертифікатів'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДенежныеСредстваКонтрагент";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Денежные средства - Контрагент';uk='Рухи Грошові кошти - Контрагент'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияПодарочныхСертификатов;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("РеализацияПодарочныхСертификатов");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //РеализацияПодарочныхСертификатов

		#Область СписаниеТоваровУХранителя
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "СписаниеТоваровУХранителя";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Продажи;
		Элемент.Наименование = НСтр("ru='Списание товаров у хранителя';uk='Списання товарів у зберігача'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияНоменклатураДоходыРасходы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Номенклатура - Доходы/Расходы';uk='Рухи Номенклатура - Доходи/Витрати'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СписаниеТоваровУХранителя;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Истина;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("СписаниеТоваровУХранителя");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;

		Элемент.ФункциональныеОпции = ТабличныеЧасти.ФункциональныеОпции.Скопировать();
		ЭлементТЧ = Элемент.ФункциональныеОпции.Добавить();
		ЭлементТЧ.ИмяФункциональнойОпции = "ИспользоватьПередачуНаОтветственноеХранениеСПравомПродажи";
		#КонецОбласти //СписаниеТоваровУХранителя

		#Область СторноПереданнойТары
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "СторноПереданнойТары";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Продажи;
		Элемент.Наименование = НСтр("ru='Сторно переданной тары';uk='Сторно переданої тари'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "";
		Элемент.ПредставлениеИсточникаДанных = "";
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СторноПереданнойТары;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;
		#КонецОбласти //СторноПереданнойТары

		#Область СторноПереданнойТарыВозвратНаДругойСклад
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "СторноПереданнойТарыВозвратНаДругойСклад";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Продажи;
		Элемент.Наименование = НСтр("ru='Сторно переданной тары (возврат на другой склад)';uk='Сторно переданої тари (повернення на інший склад)'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "";
		Элемент.ПредставлениеИсточникаДанных = "";
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СторноПереданнойТарыВозвратНаДругойСклад;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;
		#КонецОбласти //СторноПереданнойТарыВозвратНаДругойСклад

		#Область СторноРеализации
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "СторноРеализации";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Продажи;
		Элемент.Наименование = НСтр("ru='Сторно реализации';uk='Сторно реалізації'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ВыручкаИСебестоимостьПродаж";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Выручка и себестоимость продаж';uk='Виторг і собівартість продажів'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СторноРеализации;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ВозвратТоваровМеждуОрганизациями");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ВозвратТоваровОтКлиента");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("КорректировкаРеализации");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //СторноРеализации

		#Область СторноРеализацииВозвратНаДругойСклад
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "СторноРеализацииВозвратНаДругойСклад";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Продажи;
		Элемент.Наименование = НСтр("ru='Сторно реализации (возврат на другой склад)';uk='Сторно реалізації (повернення на інший склад)'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ВыручкаИСебестоимостьПродаж";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Выручка и себестоимость продаж';uk='Виторг і собівартість продажів'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СторноРеализацииВозвратНаДругойСклад;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ВозвратТоваровМеждуОрганизациями");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ВозвратТоваровОтКлиента");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //СторноРеализацииВозвратНаДругойСклад

		#Область УдержаниеВознагражденияКомиссионера
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "УдержаниеВознагражденияКомиссионера";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Продажи;
		Элемент.Наименование = НСтр("ru='Удержание вознаграждения комиссионера';uk='Утримання винагороди комісіонера'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "";
		Элемент.ПредставлениеИсточникаДанных = "";
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.УдержаниеВознагражденияКомиссионера;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;
		#КонецОбласти //УдержаниеВознагражденияКомиссионера

	#КонецОбласти //Продажи

	#Область ПродажиМеждуОрганизациями
	Элемент = Элементы.Добавить();  // см. СтрокаТЧПредопреденногоЭлемента
	Элемент.ИмяПредопределенныхДанных = "ПродажиМеждуОрганизациями";
	Элемент.Наименование = НСтр("ru='Продажи между организациями';uk='Продажі між організаціями'",КодОсновногоЯзыка);

		#Область ВозвратПоКомиссииМеждуОрганизациями
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ВозвратПоКомиссииМеждуОрганизациями";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ПродажиМеждуОрганизациями;
		Элемент.Наименование = НСтр("ru='Возврат по комиссии между организациями';uk='Повернення по комісії між організаціями'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияНоменклатураНоменклатура";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Номенклатура - Номенклатура';uk='Рухи Номенклатура - Номенклатура'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратПоКомиссииМеждуОрганизациями;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ВозвратТоваровМеждуОрганизациями");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;

		Элемент.ФункциональныеОпции = ТабличныеЧасти.ФункциональныеОпции.Скопировать();
		ЭлементТЧ = Элемент.ФункциональныеОпции.Добавить();
		ЭлементТЧ.ИмяФункциональнойОпции = "ИспользоватьПередачиТоваровМеждуОрганизациями";
		#КонецОбласти //ВозвратПоКомиссииМеждуОрганизациями

		#Область ВозвратТоваровМеждуОрганизациями
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ВозвратТоваровМеждуОрганизациями";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ПродажиМеждуОрганизациями;
		Элемент.Наименование = НСтр("ru='Возврат товаров между организациями';uk='Повернення товарів між організаціями'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "Закупки";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Закупки';uk='Купівлі'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ВозвратТоваровМеждуОрганизациями");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;

		Элемент.ФункциональныеОпции = ТабличныеЧасти.ФункциональныеОпции.Скопировать();
		ЭлементТЧ = Элемент.ФункциональныеОпции.Добавить();
		ЭлементТЧ.ИмяФункциональнойОпции = "ИспользоватьПередачиТоваровМеждуОрганизациями";
		#КонецОбласти //ВозвратТоваровМеждуОрганизациями

		#Область ЗакупкаУДругойОрганизации
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ЗакупкаУДругойОрганизации";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ПродажиМеждуОрганизациями;
		Элемент.Наименование = НСтр("ru='Закупка у другой организации';uk='Купівля в іншій організації'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "Закупки";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Закупки';uk='Купівлі'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаУДругойОрганизации;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ПередачаТоваровМеждуОрганизациями");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ЗакупкаУДругойОрганизации

		#Область ОтчетПоКомиссииМеждуОрганизациями
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ОтчетПоКомиссииМеждуОрганизациями";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ПродажиМеждуОрганизациями;
		Элемент.Наименование = НСтр("ru='Отчет по комиссии между организациями';uk='Звіт з комісії між організаціями'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "";
		Элемент.ПредставлениеИсточникаДанных = "";
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОтчетПоКомиссииМеждуОрганизациями;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ОтчетПоКомиссииМеждуОрганизациями");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;

		Элемент.ФункциональныеОпции = ТабличныеЧасти.ФункциональныеОпции.Скопировать();
		ЭлементТЧ = Элемент.ФункциональныеОпции.Добавить();
		ЭлементТЧ.ИмяФункциональнойОпции = "ИспользоватьПередачиТоваровМеждуОрганизациями";
		#КонецОбласти //ОтчетПоКомиссииМеждуОрганизациями

		#Область ОтчетПоКомиссииМеждуОрганизациямиОСписании
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ОтчетПоКомиссииМеждуОрганизациямиОСписании";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ПродажиМеждуОрганизациями;
		Элемент.Наименование = НСтр("ru='Отчет по комиссии между организациями о списании';uk='Звіт з комісії між організаціями про списання'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "";
		Элемент.ПредставлениеИсточникаДанных = "";
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОтчетПоКомиссииМеждуОрганизациямиОСписании;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ОтчетПоКомиссииМеждуОрганизациямиОСписании");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;

		Элемент.ФункциональныеОпции = ТабличныеЧасти.ФункциональныеОпции.Скопировать();
		ЭлементТЧ = Элемент.ФункциональныеОпции.Добавить();
		ЭлементТЧ.ИмяФункциональнойОпции = "ИспользоватьПередачиТоваровМеждуОрганизациями";
		#КонецОбласти //ОтчетПоКомиссииМеждуОрганизациямиОСписании

		#Область ПередачаНаКомиссиюВДругуюОрганизацию
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПередачаНаКомиссиюВДругуюОрганизацию";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ПродажиМеждуОрганизациями;
		Элемент.Наименование = НСтр("ru='Передача на комиссию в другую организацию';uk='Передача на комісію в іншу організацію'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияНоменклатураНоменклатура";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Номенклатура - Номенклатура';uk='Рухи Номенклатура - Номенклатура'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаНаКомиссиюВДругуюОрганизацию;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ПередачаТоваровМеждуОрганизациями");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;

		Элемент.ФункциональныеОпции = ТабличныеЧасти.ФункциональныеОпции.Скопировать();
		ЭлементТЧ = Элемент.ФункциональныеОпции.Добавить();
		ЭлементТЧ.ИмяФункциональнойОпции = "ИспользоватьПередачиТоваровМеждуОрганизациями";
		#КонецОбласти //ПередачаНаКомиссиюВДругуюОрганизацию

		#Область РеализацияТоваровВДругуюОрганизацию
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "РеализацияТоваровВДругуюОрганизацию";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ПродажиМеждуОрганизациями;
		Элемент.Наименование = НСтр("ru='Реализация товаров в другую организацию';uk='Реалізація товарів в іншу організацію'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ВыручкаИСебестоимостьПродаж";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Выручка и себестоимость продаж';uk='Виторг і собівартість продажів'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ПередачаТоваровМеждуОрганизациями");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;

		Элемент.ФункциональныеОпции = ТабличныеЧасти.ФункциональныеОпции.Скопировать();
		ЭлементТЧ = Элемент.ФункциональныеОпции.Добавить();
		ЭлементТЧ.ИмяФункциональнойОпции = "ИспользоватьПередачиТоваровМеждуОрганизациями";
		#КонецОбласти //РеализацияТоваровВДругуюОрганизацию

	#КонецОбласти //ПродажиМеждуОрганизациями

	#Область Производство
	Элемент = Элементы.Добавить();  // см. СтрокаТЧПредопреденногоЭлемента
	Элемент.ИмяПредопределенныхДанных = "Производство";
	Элемент.Наименование = НСтр("ru='Производство';uk='Виробництво'",КодОсновногоЯзыка);

		#Область ВнутреннееПоступлениеРабот
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ВнутреннееПоступлениеРабот";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Производство;
		Элемент.Наименование = НСтр("ru='(не используется) Внутреннее поступление работ';uk='(не використовується) Внутрішнє надходження робіт'",КодОсновногоЯзыка);
		#КонецОбласти //ВнутреннееПоступлениеРабот

		#Область ВозвратМатериаловИзКладовой
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ВозвратМатериаловИзКладовой";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Производство;
		Элемент.Наименование = НСтр("ru='Возврат материалов из кладовой';uk='Повернення матеріалів з комори'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияНоменклатураНоменклатура";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Номенклатура - Номенклатура';uk='Рухи Номенклатура - Номенклатура'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратМатериаловИзКладовой;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ДвижениеПродукцииИМатериалов");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;

		Элемент.ФункциональныеОпции = ТабличныеЧасти.ФункциональныеОпции.Скопировать();
		ЭлементТЧ = Элемент.ФункциональныеОпции.Добавить();
		ЭлементТЧ.ИмяФункциональнойОпции = "ИспользоватьПроизводство";
		#КонецОбласти //ВозвратМатериаловИзКладовой

		#Область ВозвратМатериаловИзПроизводства
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ВозвратМатериаловИзПроизводства";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Производство;
		Элемент.Наименование = НСтр("ru='Возврат материалов из производства';uk='Повернення матеріалів з виробництва'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияНоменклатураНоменклатура";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Номенклатура - Номенклатура';uk='Рухи Номенклатура - Номенклатура'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратМатериаловИзПроизводства;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ДвижениеПродукцииИМатериалов");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ЭтапПроизводства2_2");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;

		Элемент.ФункциональныеОпции = ТабличныеЧасти.ФункциональныеОпции.Скопировать();
		ЭлементТЧ = Элемент.ФункциональныеОпции.Добавить();
		ЭлементТЧ.ИмяФункциональнойОпции = "ИспользоватьПроизводство";
		ЭлементТЧ = Элемент.ФункциональныеОпции.Добавить();
		ЭлементТЧ.ИмяФункциональнойОпции = "УправлениеПредприятием";
		#КонецОбласти //ВозвратМатериаловИзПроизводства

		#Область ВыпускПродукции
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ВыпускПродукции";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Производство;
		Элемент.Наименование = НСтр("ru='Выпуск продукции';uk='Випуск продукції'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияНоменклатураНоменклатура";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Номенклатура - Номенклатура';uk='Рухи Номенклатура - Номенклатура'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыпускПродукции;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("АктВыполненныхВнутреннихРабот");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ВыпускПродукции");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ДвижениеПродукцииИМатериалов");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ПроизводствоБезЗаказа");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("РаспределениеВозвратныхОтходов");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ЭтапПроизводства2_2");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;

		Элемент.ФункциональныеОпции = ТабличныеЧасти.ФункциональныеОпции.Скопировать();
		ЭлементТЧ = Элемент.ФункциональныеОпции.Добавить();
		ЭлементТЧ.ИмяФункциональнойОпции = "ИспользоватьПроизводство";
		#КонецОбласти //ВыпускПродукции

		#Область ВыпускПродукцииФиксированнаяСтоимость
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ВыпускПродукцииФиксированнаяСтоимость";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Производство;
		Элемент.Наименование = НСтр("ru='Выпуск продукции (фикс. стоимость)';uk='Випуск продукції (фікс. вартість)'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияНоменклатураНоменклатура";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Номенклатура - Номенклатура';uk='Рухи Номенклатура - Номенклатура'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыпускПродукцииФиксированнаяСтоимость;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ВыпускПродукции");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ДвижениеПродукцииИМатериалов");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ПроизводствоБезЗаказа");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("РаспределениеВозвратныхОтходов");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ЭтапПроизводства2_2");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;

		Элемент.ФункциональныеОпции = ТабличныеЧасти.ФункциональныеОпции.Скопировать();
		ЭлементТЧ = Элемент.ФункциональныеОпции.Добавить();
		ЭлементТЧ.ИмяФункциональнойОпции = "ИспользоватьПроизводство";
		#КонецОбласти //ВыпускПродукцииФиксированнаяСтоимость

		#Область ВыпускПродукцииВПодразделение
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ВыпускПродукцииВПодразделение";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Производство;
		Элемент.Наименование = НСтр("ru='Выпуск продукции в подразделение';uk='Випуск продукції в підрозділ'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "";
		Элемент.ПредставлениеИсточникаДанных = "";
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыпускПродукцииВПодразделение;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ВыпускПродукции");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ПроизводствоБезЗаказа");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("РаспределениеВозвратныхОтходов");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ЭтапПроизводства2_2");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;

		Элемент.ФункциональныеОпции = ТабличныеЧасти.ФункциональныеОпции.Скопировать();
		ЭлементТЧ = Элемент.ФункциональныеОпции.Добавить();
		ЭлементТЧ.ИмяФункциональнойОпции = "ИспользоватьПроизводство";
		#КонецОбласти //ВыпускПродукцииВПодразделение

		#Область ВыпускПродукцииНаСклад
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ВыпускПродукцииНаСклад";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Производство;
		Элемент.Наименование = НСтр("ru='Выпуск продукции на склад';uk='Випуск продукції на склад'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "";
		Элемент.ПредставлениеИсточникаДанных = "";
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыпускПродукцииНаСклад;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ВыпускПродукции");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ДвижениеПродукцииИМатериалов");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ПроизводствоБезЗаказа");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("РаспределениеВозвратныхОтходов");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ЭтапПроизводства2_2");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;

		Элемент.ФункциональныеОпции = ТабличныеЧасти.ФункциональныеОпции.Скопировать();
		ЭлементТЧ = Элемент.ФункциональныеОпции.Добавить();
		ЭлементТЧ.ИмяФункциональнойОпции = "ИспользоватьПроизводство";
		#КонецОбласти //ВыпускПродукцииНаСклад

		#Область Модернизация
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "Модернизация";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Производство;
		Элемент.Наименование = НСтр("ru='Модернизация';uk='Модернізація'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "";
		Элемент.ПредставлениеИсточникаДанных = "";
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.Модернизация;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ЗаказНаРемонт");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;

		Элемент.ФункциональныеОпции = ТабличныеЧасти.ФункциональныеОпции.Скопировать();
		ЭлементТЧ = Элемент.ФункциональныеОпции.Добавить();
		ЭлементТЧ.ИмяФункциональнойОпции = "ИспользоватьУправлениеРемонтами";
		#КонецОбласти //Модернизация

		#Область НаработкаОбъектовЭксплуатации
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "НаработкаОбъектовЭксплуатации";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Производство;
		Элемент.Наименование = НСтр("ru='Наработка объектов эксплуатации';uk='Напрацювання об''єктів експлуатації'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "";
		Элемент.ПредставлениеИсточникаДанных = "";
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.НаработкаОбъектовЭксплуатации;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("НаработкаОбъектовЭксплуатации");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //НаработкаОбъектовЭксплуатации

		#Область ПередачаВПроизводство
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПередачаВПроизводство";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Производство;
		Элемент.Наименование = НСтр("ru='Передача в производство';uk='Передача в виробництво'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияНоменклатураНоменклатура";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Номенклатура - Номенклатура';uk='Рухи Номенклатура - Номенклатура'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаВПроизводство;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ДвижениеПродукцииИМатериалов");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ЗаказМатериаловВПроизводство");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("КорректировкаЗаказаМатериаловВПроизводство");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ПередачаМатериаловВПроизводство");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;

		Элемент.ФункциональныеОпции = ТабличныеЧасти.ФункциональныеОпции.Скопировать();
		ЭлементТЧ = Элемент.ФункциональныеОпции.Добавить();
		ЭлементТЧ.ИмяФункциональнойОпции = "ИспользоватьПроизводство";
		#КонецОбласти //ПередачаВПроизводство

		#Область ПередачаМатериаловВКладовую
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПередачаМатериаловВКладовую";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Производство;
		Элемент.Наименование = НСтр("ru='Передача материалов в кладовую';uk='Передача матеріалів у комору'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияНоменклатураНоменклатура";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Номенклатура - Номенклатура';uk='Рухи Номенклатура - Номенклатура'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаМатериаловВКладовую;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ДвижениеПродукцииИМатериалов");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;

		Элемент.ФункциональныеОпции = ТабличныеЧасти.ФункциональныеОпции.Скопировать();
		ЭлементТЧ = Элемент.ФункциональныеОпции.Добавить();
		ЭлементТЧ.ИмяФункциональнойОпции = "ИспользоватьПроизводство";
		#КонецОбласти //ПередачаМатериаловВКладовую

		#Область ПередачаМатериаловВПроизводство
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПередачаМатериаловВПроизводство";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Производство;
		Элемент.Наименование = НСтр("ru='Передача материалов в производство';uk='Передача матеріалів у виробництво'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияНоменклатураНоменклатура";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Номенклатура - Номенклатура';uk='Рухи Номенклатура - Номенклатура'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаМатериаловВПроизводство;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ДвижениеПродукцииИМатериалов");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ПроизводствоБезЗаказа");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;

		Элемент.ФункциональныеОпции = ТабличныеЧасти.ФункциональныеОпции.Скопировать();
		ЭлементТЧ = Элемент.ФункциональныеОпции.Добавить();
		ЭлементТЧ.ИмяФункциональнойОпции = "ИспользоватьПроизводство";
		ЭлементТЧ = Элемент.ФункциональныеОпции.Добавить();
		ЭлементТЧ.ИмяФункциональнойОпции = "УправлениеПредприятием";
		#КонецОбласти //ПередачаМатериаловВПроизводство

		#Область ПередачаПродукцииИзКладовой
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПередачаПродукцииИзКладовой";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Производство;
		Элемент.Наименование = НСтр("ru='Передача продукции из кладовой';uk='Передача продукції з комори'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияНоменклатураНоменклатура";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Номенклатура - Номенклатура';uk='Рухи Номенклатура - Номенклатура'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаПродукцииИзКладовой;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ДвижениеПродукцииИМатериалов");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;

		Элемент.ФункциональныеОпции = ТабличныеЧасти.ФункциональныеОпции.Скопировать();
		ЭлементТЧ = Элемент.ФункциональныеОпции.Добавить();
		ЭлементТЧ.ИмяФункциональнойОпции = "ИспользоватьПроизводство";
		#КонецОбласти //ПередачаПродукцииИзКладовой

		#Область ПередачаПродукцииИзПроизводства
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПередачаПродукцииИзПроизводства";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Производство;
		Элемент.Наименование = НСтр("ru='Передача продукции из производства';uk='Передача продукції з виробництва'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияНоменклатураНоменклатура";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Номенклатура - Номенклатура';uk='Рухи Номенклатура - Номенклатура'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаПродукцииИзПроизводства;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ДвижениеПродукцииИМатериалов");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ПроизводствоБезЗаказа");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("РаспределениеВозвратныхОтходов");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;

		Элемент.ФункциональныеОпции = ТабличныеЧасти.ФункциональныеОпции.Скопировать();
		ЭлементТЧ = Элемент.ФункциональныеОпции.Добавить();
		ЭлементТЧ.ИмяФункциональнойОпции = "ИспользоватьПроизводство";
		ЭлементТЧ = Элемент.ФункциональныеОпции.Добавить();
		ЭлементТЧ.ИмяФункциональнойОпции = "УправлениеПредприятием";
		#КонецОбласти //ПередачаПродукцииИзПроизводства

		#Область ПеремещениеПолуфабрикатов
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПеремещениеПолуфабрикатов";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Производство;
		Элемент.Наименование = НСтр("ru='Перемещение полуфабрикатов';uk='Переміщення напівфабрикатів'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияНоменклатураНоменклатура";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Номенклатура - Номенклатура';uk='Рухи Номенклатура - Номенклатура'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеремещениеПолуфабрикатов;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ДвижениеПродукцииИМатериалов");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;

		Элемент.ФункциональныеОпции = ТабличныеЧасти.ФункциональныеОпции.Скопировать();
		ЭлементТЧ = Элемент.ФункциональныеОпции.Добавить();
		ЭлементТЧ.ИмяФункциональнойОпции = "ИспользоватьПроизводство";
		#КонецОбласти //ПеремещениеПолуфабрикатов
		

		#Область ПоступлениеИзПроизводства
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПоступлениеИзПроизводства";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Производство;
		Элемент.Наименование = НСтр("ru='Поступление из производства';uk='Надходження з виробництва'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияНоменклатураДоходыРасходы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Номенклатура - Доходы/Расходы';uk='Рухи Номенклатура - Доходи/Витрати'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеИзПроизводства;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ПрочееОприходованиеТоваров");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;

		Элемент.ФункциональныеОпции = ТабличныеЧасти.ФункциональныеОпции.Скопировать();
		ЭлементТЧ = Элемент.ФункциональныеОпции.Добавить();
		ЭлементТЧ.ИмяФункциональнойОпции = "УправлениеТорговлей";
		#КонецОбласти //ПоступлениеИзПроизводства

		#Область ПриемПередачаРаботМеждуПодразделениями
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПриемПередачаРаботМеждуПодразделениями";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Производство;
		Элемент.Наименование = НСтр("ru='Прием-передача работ между подразделениями';uk='Приймання-передача робіт між підрозділами'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияНоменклатураНоменклатура";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Номенклатура - Номенклатура';uk='Рухи Номенклатура - Номенклатура'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПриемПередачаРаботМеждуПодразделениями;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("АктВыполненныхВнутреннихРабот");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;

		Элемент.ФункциональныеОпции = ТабличныеЧасти.ФункциональныеОпции.Скопировать();
		ЭлементТЧ = Элемент.ФункциональныеОпции.Добавить();
		ЭлементТЧ.ИмяФункциональнойОпции = "ИспользоватьПроизводство";
		#КонецОбласти //ПриемПередачаРаботМеждуПодразделениями
		

		#Область РегистрацияСдельныхРабот
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "РегистрацияСдельныхРабот";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Производство;
		Элемент.Наименование = НСтр("ru='Регистрация сдельных работ';uk='Реєстрація відрядних робіт'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "";
		Элемент.ПредставлениеИсточникаДанных = "";
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РегистрацияСдельныхРабот;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ВыработкаСотрудников");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;

		Элемент.ФункциональныеОпции = ТабличныеЧасти.ФункциональныеОпции.Скопировать();
		ЭлементТЧ = Элемент.ФункциональныеОпции.Добавить();
		ЭлементТЧ.ИмяФункциональнойОпции = "ИспользоватьПроизводство";
		#КонецОбласти //РегистрацияСдельныхРабот

		#Область Ремонт
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "Ремонт";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Производство;
		Элемент.Наименование = НСтр("ru='Ремонт';uk='Ремонт'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "";
		Элемент.ПредставлениеИсточникаДанных = "";
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.Ремонт;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ЗаказНаРемонт");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;

		Элемент.ФункциональныеОпции = ТабличныеЧасти.ФункциональныеОпции.Скопировать();
		ЭлементТЧ = Элемент.ФункциональныеОпции.Добавить();
		ЭлементТЧ.ИмяФункциональнойОпции = "ИспользоватьУправлениеРемонтами";
		#КонецОбласти //Ремонт

		#Область СобственноеПроизводство
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "СобственноеПроизводство";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Производство;
		Элемент.Наименование = НСтр("ru='Собственное производство';uk='Власне виробництво'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "";
		Элемент.ПредставлениеИсточникаДанных = "";
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СобственноеПроизводство;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ЗаказНаПроизводство2_2");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ЭтапПроизводства2_2");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;

		Элемент.ФункциональныеОпции = ТабличныеЧасти.ФункциональныеОпции.Скопировать();
		ЭлементТЧ = Элемент.ФункциональныеОпции.Добавить();
		ЭлементТЧ.ИмяФункциональнойОпции = "ИспользоватьПроизводство";
		#КонецОбласти //СобственноеПроизводство
		
#Область ВыпускПродукцииНематериальныеЗатраты 

	Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
	Элемент.ИмяПредопределенныхДанных = "ВыпускПродукцииНематериальныеЗатраты";
	Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Производство;
	Элемент.Наименование = НСтр("ru='Выпуск продукции нематериальные затраты';uk='Випуск продукції нематеріальні витрати'",КодОсновногоЯзыка);
	Элемент.ИсточникДанных = "ПрочиеРасходыНезавершенногоПроизводства";
	Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Прочие расходы незавершенного производства';uk='Інші витрати незавершеного виробництва'",КодОсновногоЯзыка);
	Элемент.Описание = "";
	Элемент.Приход = Неопределено;
	Элемент.Расход = Неопределено;
	Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыпускПродукцииНематериальныеЗатраты;
	Элемент.ИспользоватьВБюджетировании = Истина;
	Элемент.ИспользоватьВМеждународномУчете = Истина;
	Элемент.ИспользоватьДляВыбора = Ложь;
	Элемент.ИспользоватьВРеестреДокументов = Ложь;
	Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

	//++ НЕ УТ
	ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
	//-- НЕ УТ
		
#КонецОбласти //ВыпускПродукцииНематериальныеЗатраты

#Область ВыпускПродукцииСдельнаяЗаработнаяПлата     

	Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
	Элемент.ИмяПредопределенныхДанных = "ВыпускПродукцииСдельнаяЗаработнаяПлата";
	Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Производство;
	Элемент.Наименование = НСтр("ru='Выпуск продукции сдельная заработная плата';uk='Випуск продукції відрядна заробітна плата'",КодОсновногоЯзыка);
	Элемент.ИсточникДанных = "ТрудозатратыНезавершенногоПроизводства";
	Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Трудозатраты незавершенного производства';uk='Трудовитрати незавершеного виробництва'",КодОсновногоЯзыка);
	Элемент.Описание = "";
	Элемент.Приход = Неопределено;
	Элемент.Расход = Неопределено;
	Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыпускПродукцииСдельнаяЗаработнаяПлата;
	Элемент.ИспользоватьВБюджетировании = Истина;
	Элемент.ИспользоватьВМеждународномУчете = Истина;
	Элемент.ИспользоватьДляВыбора = Ложь;
	Элемент.ИспользоватьВРеестреДокументов = Ложь;
	Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

	//++ НЕ УТ
	ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
	//-- НЕ УТ

#КонецОбласти //ВыпускПродукцииСдельнаяЗаработнаяПлата


	#КонецОбласти //Производство

	#Область Прочее
	Элемент = Элементы.Добавить();  // см. СтрокаТЧПредопреденногоЭлемента
	Элемент.ИмяПредопределенныхДанных = "Прочее";
	Элемент.Наименование = НСтр("ru='Прочее';uk='Інше'",КодОсновногоЯзыка);

		#Область АвансовыйОтчет
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "АвансовыйОтчет";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Прочее;
		Элемент.Наименование = НСтр("ru='Авансовый отчет';uk='Авансовий звіт'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "";
		Элемент.ПредставлениеИсточникаДанных = "";
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.АвансовыйОтчет;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		#КонецОбласти //АвансовыйОтчет

		#Область ВнутреннееПотреблениеТоваров
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ВнутреннееПотреблениеТоваров";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Прочее;
		Элемент.Наименование = НСтр("ru='Внутреннее потребление товаров';uk='Внутрішнє споживання товарів'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "";
		Элемент.ПредставлениеИсточникаДанных = "";
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВнутреннееПотреблениеТоваров;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;
		#КонецОбласти //ВнутреннееПотреблениеТоваров

		#Область ДополнительныеРасходыБезПартии
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ДополнительныеРасходыБезПартии";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Прочее;
		Элемент.Наименование = НСтр("ru='Дополнительные расходы без указания документа партии';uk='Додаткові витрати без зазначення документа партії'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "";
		Элемент.ПредставлениеИсточникаДанных = "";
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ДополнительныеРасходыБезПартии;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;
		#КонецОбласти //ДополнительныеРасходыБезПартии

		#Область ДополнительныеРасходыСПартией
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ДополнительныеРасходыСПартией";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Прочее;
		Элемент.Наименование = НСтр("ru='Дополнительные расходы с указанием документа партии';uk='Додаткові витрати із зазначенням документа партії'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "";
		Элемент.ПредставлениеИсточникаДанных = "";
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ДополнительныеРасходыСПартией;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;
		#КонецОбласти //ДополнительныеРасходыСПартией

		#Область ИнвентаризацияКомиссионера
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ИнвентаризацияКомиссионера";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Прочее;
		Элемент.Наименование = НСтр("ru='Инвентаризация комиссионера';uk='Інвентаризація комісіонера'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "";
		Элемент.ПредставлениеИсточникаДанных = "";
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ИнвентаризацияКомиссионера;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;
		#КонецОбласти //ИнвентаризацияКомиссионера

		#Область ПеремещениеВЭксплуатации
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПеремещениеВЭксплуатации";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Прочее;
		Элемент.Наименование = НСтр("ru='Перемещение в эксплуатации';uk='Переміщення в експлуатації'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "";
		Элемент.ПредставлениеИсточникаДанных = "";
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеремещениеВЭксплуатации;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ПеремещениеВЭксплуатации");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ПеремещениеВЭксплуатации

		#Область ПланированиеПоЗаявке
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПланированиеПоЗаявке";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Прочее;
		Элемент.Наименование = НСтр("ru='Планирование по заявке';uk='Планування за заявкою'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "";
		Элемент.ПредставлениеИсточникаДанных = "";
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПланированиеПоЗаявке;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;
		#КонецОбласти //ПланированиеПоЗаявке

		#Область ПланированиеПоСчету
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПланированиеПоСчету";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Прочее;
		Элемент.Наименование = НСтр("ru='Планирование по счету';uk='Планування за рахунком'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "";
		Элемент.ПредставлениеИсточникаДанных = "";
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПланированиеПоСчету;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;
		#КонецОбласти //ПланированиеПоСчету

		#Область ПокупкаПолученнойВозвратнойТары
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПокупкаПолученнойВозвратнойТары";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Прочее;
		Элемент.Наименование = НСтр("ru='Покупка полученной возвратной тары';uk='Купівля отриманої зворотної тари'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "";
		Элемент.ПредставлениеИсточникаДанных = "";
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПокупкаПолученнойВозвратнойТары;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;
		#КонецОбласти //ПокупкаПолученнойВозвратнойТары

		#Область ПоступлениеЗатрат
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПоступлениеЗатрат";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Прочее;
		Элемент.Наименование = НСтр("ru='Поступление затрат';uk='Надходження витрат'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "";
		Элемент.ПредставлениеИсточникаДанных = "";
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеЗатрат;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;
		#КонецОбласти //ПоступлениеЗатрат

		#Область ПоступлениеУслугДляПроизводства
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПоступлениеУслугДляПроизводства";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Прочее;
		Элемент.Наименование = НСтр("ru='Поступление услуг для производства';uk='Надходження послуг для виробництва'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "";
		Элемент.ПредставлениеИсточникаДанных = "";
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеУслугДляПроизводства;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		Элемент.ФункциональныеОпции = ТабличныеЧасти.ФункциональныеОпции.Скопировать();
		ЭлементТЧ = Элемент.ФункциональныеОпции.Добавить();
		ЭлементТЧ.ИмяФункциональнойОпции = "ИспользоватьПроизводство";
		#КонецОбласти //ПоступлениеУслугДляПроизводства

		#Область РеализацияПрочихАктивов
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "РеализацияПрочихАктивов";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Прочее;
		Элемент.Наименование = НСтр("ru='Реализация прочих активов';uk='Реалізація інших активів'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "";
		Элемент.ПредставлениеИсточникаДанных = "";
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияПрочихАктивов;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;
		#КонецОбласти //РеализацияПрочихАктивов

	#КонецОбласти //Прочее

	#Область ПрочиеРасчеты
	Элемент = Элементы.Добавить();  // см. СтрокаТЧПредопреденногоЭлемента
	Элемент.ИмяПредопределенныхДанных = "ПрочиеРасчеты";
	Элемент.Наименование = НСтр("ru='Прочие расчеты';uk='Інші розрахунки'",КодОсновногоЯзыка);

		#Область ВзаимозачетДебиторскойЗадолженности
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ВзаимозачетДебиторскойЗадолженности";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ПрочиеРасчеты;
		Элемент.Наименование = НСтр("ru='Взаимозачет дебиторской задолженности';uk='Взаємозалік дебіторської заборгованості'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияКонтрагентКонтрагент";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Контрагент - Контрагент';uk='Рухи Контрагент - Контрагент'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВзаимозачетДебиторскойЗадолженности;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ВзаимозачетЗадолженности");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ВзаимозачетДебиторскойЗадолженности

		#Область ВзаимозачетЗадолженности
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ВзаимозачетЗадолженности";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ПрочиеРасчеты;
		Элемент.Наименование = НСтр("ru='Взаимозачет задолженности';uk='Взаємозалік заборгованості'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияКонтрагентКонтрагент";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Контрагент - Контрагент';uk='Рухи Контрагент - Контрагент'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВзаимозачетЗадолженности;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		#КонецОбласти //ВзаимозачетЗадолженности

		#Область ВзаимозачетКредиторскойЗадолженности
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ВзаимозачетКредиторскойЗадолженности";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ПрочиеРасчеты;
		Элемент.Наименование = НСтр("ru='Взаимозачет кредиторской задолженности';uk='Взаємозалік кредиторської заборгованості'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияКонтрагентКонтрагент";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Контрагент - Контрагент';uk='Рухи Контрагент - Контрагент'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВзаимозачетКредиторскойЗадолженности;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ВзаимозачетЗадолженности");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ВзаимозачетКредиторскойЗадолженности
		

		#Область ПереносАванса
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПереносАванса";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ПрочиеРасчеты;
		Элемент.Наименование = НСтр("ru='Перенос аванса';uk='Перенесення авансу'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "";
		Элемент.ПредставлениеИсточникаДанных = "";
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПереносАванса;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;
		#КонецОбласти //ПереносАванса

		#Область ПоступлениеНМА
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПоступлениеНМА";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ПрочиеРасчеты;
		Элемент.Наименование = НСтр("ru='Поступление НМА';uk='Надходження НМА'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияКонтрагентДоходыРасходы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Контрагент - Доходы/Расходы';uk='Рухи Контрагент - Доходи/Витрати'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеНМА;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ПриобретениеУслугПрочихАктивов");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ПоступлениеНМА

		#Область ПоступлениеОбъектовСтроительства
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПоступлениеОбъектовСтроительства";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ПрочиеРасчеты;
		Элемент.Наименование = НСтр("ru='Поступление объектов строительства';uk='Надходження об''єктів будівництва'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияКонтрагентДоходыРасходы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Контрагент - Доходы/Расходы';uk='Рухи Контрагент - Доходи/Витрати'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеОбъектовСтроительства;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ПриобретениеУслугПрочихАктивов");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ПоступлениеОбъектовСтроительства

		#Область ПоступлениеОС
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПоступлениеОС";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ПрочиеРасчеты;
		Элемент.Наименование = НСтр("ru='Поступление основных средств';uk='Надходження основних засобів'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияКонтрагентДоходыРасходы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Контрагент - Доходы/Расходы';uk='Рухи Контрагент - Доходи/Витрати'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеОС;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ПриобретениеУслугПрочихАктивов");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ПоступлениеОС

		#Область ПоступлениеПрочихАктивов
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПоступлениеПрочихАктивов";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ПрочиеРасчеты;
		Элемент.Наименование = НСтр("ru='Поступление прочих активов';uk='Надходження інших активів'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияКонтрагентДоходыРасходы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Контрагент - Доходы/Расходы';uk='Рухи Контрагент - Доходи/Витрати'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеПрочихАктивов;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ПриобретениеУслугПрочихАктивов");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ПоступлениеПрочихАктивов

		#Область ПоступлениеПрочихУслуг
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПоступлениеПрочихУслуг";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ПрочиеРасчеты;
		Элемент.Наименование = НСтр("ru='Поступление прочих услуг';uk='Надходження інших послуг'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияКонтрагентДоходыРасходы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Контрагент - Доходы/Расходы';uk='Рухи Контрагент - Доходи/Витрати'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеПрочихУслуг;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ПриобретениеУслугПрочихАктивов");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ПоступлениеПрочихУслуг

		#Область РеализацияНМА
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "РеализацияНМА";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ПрочиеРасчеты;
		Элемент.Наименование = НСтр("ru='Реализация НМА';uk='Реалізація НМА'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияКонтрагентДоходыРасходы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Контрагент - Доходы/Расходы';uk='Рухи Контрагент - Доходи/Витрати'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияНМА;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("РеализацияУслугПрочихАктивов");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //РеализацияНМА

		#Область РеализацияОС
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "РеализацияОС";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ПрочиеРасчеты;
		Элемент.Наименование = НСтр("ru='Реализация основных средств';uk='Реалізація основних засобів'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияКонтрагентДоходыРасходы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Контрагент - Доходы/Расходы';uk='Рухи Контрагент - Доходи/Витрати'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияОС;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("РеализацияУслугПрочихАктивов");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //РеализацияОС

		#Область РеализацияПрочихУслуг
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "РеализацияПрочихУслуг";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ПрочиеРасчеты;
		Элемент.Наименование = НСтр("ru='Реализация прочих услуг';uk='Реалізація інших послуг'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияКонтрагентДоходыРасходы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Контрагент - Доходы/Расходы';uk='Рухи Контрагент - Доходи/Витрати'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияПрочихУслуг;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("РеализацияУслугПрочихАктивов");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //РеализацияПрочихУслуг

		#Область СписаниеДебиторскойЗадолженности
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "СписаниеДебиторскойЗадолженности";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ПрочиеРасчеты;
		Элемент.Наименование = НСтр("ru='Списание дебиторской задолженности';uk='Списання дебіторської заборгованості'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияКонтрагентДоходыРасходы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Контрагент - Доходы/Расходы';uk='Рухи Контрагент - Доходи/Витрати'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СписаниеДебиторскойЗадолженности;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("СписаниеЗадолженности");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //СписаниеДебиторскойЗадолженности

		#Область СписаниеДебиторскойЗадолженностиНаАктивыПассивы
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "СписаниеДебиторскойЗадолженностиНаАктивыПассивы";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ПрочиеРасчеты;
		Элемент.Наименование = НСтр("ru='Списание дебиторской задолженности на активы \ пассивы';uk='Списання дебіторської заборгованості на активи \ пасиви'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияКонтрагентДоходыРасходы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Контрагент - Доходы/Расходы';uk='Рухи Контрагент - Доходи/Витрати'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СписаниеДебиторскойЗадолженностиНаАктивыПассивы;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("СписаниеЗадолженности");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //СписаниеДебиторскойЗадолженностиНаАктивыПассивы

		#Область СписаниеДебиторскойЗадолженностиНаРасходы
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "СписаниеДебиторскойЗадолженностиНаРасходы";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ПрочиеРасчеты;
		Элемент.Наименование = НСтр("ru='Списание дебиторской задолженности на расходы';uk='Списання дебіторської заборгованості на витрати'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияКонтрагентДоходыРасходы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Контрагент - Доходы/Расходы';uk='Рухи Контрагент - Доходи/Витрати'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СписаниеДебиторскойЗадолженностиНаРасходы;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("СписаниеЗадолженности");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //СписаниеДебиторскойЗадолженностиНаРасходы

		#Область СписаниеКредиторскойЗадолженности
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "СписаниеКредиторскойЗадолженности";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ПрочиеРасчеты;
		Элемент.Наименование = НСтр("ru='Списание кредиторской задолженности';uk='Списання кредиторської заборгованості'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияКонтрагентДоходыРасходы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Контрагент - Доходы/Расходы';uk='Рухи Контрагент - Доходи/Витрати'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СписаниеКредиторскойЗадолженности;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("СписаниеЗадолженности");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //СписаниеКредиторскойЗадолженности

		#Область СписаниеКредиторскойЗадолженностиВДоходы
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "СписаниеКредиторскойЗадолженностиВДоходы";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ПрочиеРасчеты;
		Элемент.Наименование = НСтр("ru='Списание кредиторской задолженности в доходы';uk='Списання кредиторської заборгованості у доходи'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияКонтрагентДоходыРасходы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Контрагент - Доходы/Расходы';uk='Рухи Контрагент - Доходи/Витрати'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СписаниеКредиторскойЗадолженностиВДоходы;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("СписаниеЗадолженности");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //СписаниеКредиторскойЗадолженностиВДоходы

	#КонецОбласти //ПрочиеРасчеты

	#Область РасчетыПоЗарплате
	Элемент = Элементы.Добавить();  // см. СтрокаТЧПредопреденногоЭлемента
	Элемент.ИмяПредопределенныхДанных = "РасчетыПоЗарплате";
	Элемент.Наименование = НСтр("ru='Расчеты по зарплате';uk='Розрахунки по зарплаті'",КодОсновногоЯзыка);

		#Область ВозвратНеперечисленнойЗарплатыПоЗарплатномуПроекту
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ВозвратНеперечисленнойЗарплатыПоЗарплатномуПроекту";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.РасчетыПоЗарплате;
		Элемент.Наименование = НСтр("ru='Возврат по зарплатному проекту';uk='Повернення по зарплатному проєкту'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДенежныеСредстваДоходыРасходы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Денежные средства - Доходы/Расходы';uk='Рухи Грошові кошти - Доходи/Витрати'",КодОсновногоЯзыка);
		Элемент.Описание = НСтр("ru='Возврат по зарплатному проекту';uk='Повернення по зарплатному проєкту'",КодОсновногоЯзыка);
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратНеперечисленнойЗарплатыПоЗарплатномуПроекту;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Истина;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ПоступлениеБезналичныхДенежныхСредств");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ВозвратНеперечисленнойЗарплатыПоЗарплатномуПроекту

		#Область ВыплатаЗарплаты
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ВыплатаЗарплаты";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.РасчетыПоЗарплате;
		Элемент.Наименование = НСтр("ru='Выплата зарплаты';uk='Виплата зарплати'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДенежныеСредстваДоходыРасходы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Денежные средства - Доходы/Расходы';uk='Рухи Грошові кошти - Доходи/Витрати'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыплатаЗарплаты;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;
		#КонецОбласти //ВыплатаЗарплаты

		#Область ВыплатаЗарплатыНаЛицевыеСчета
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ВыплатаЗарплатыНаЛицевыеСчета";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.РасчетыПоЗарплате;
		Элемент.Наименование = НСтр("ru='Выплата зарплаты на лицевые счета';uk='Виплата зарплати на особові рахунки'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДенежныеСредстваДоходыРасходы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Денежные средства - Доходы/Расходы';uk='Рухи Грошові кошти - Доходи/Витрати'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыНаЛицевыеСчета;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Истина;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("СписаниеБезналичныхДенежныхСредств");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ВыплатаЗарплатыНаЛицевыеСчета

		#Область ВыплатаЗарплатыПоЗарплатномуПроекту
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ВыплатаЗарплатыПоЗарплатномуПроекту";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.РасчетыПоЗарплате;
		Элемент.Наименование = НСтр("ru='Выплата зарплаты по зарплатному проекту';uk='Виплата зарплати за зарплатним проєктом'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДенежныеСредстваДоходыРасходы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Денежные средства - Доходы/Расходы';uk='Рухи Грошові кошти - Доходи/Витрати'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыПоЗарплатномуПроекту;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Истина;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("СписаниеБезналичныхДенежныхСредств");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ВыплатаЗарплатыПоЗарплатномуПроекту

		#Область ВыплатаЗарплатыРаботнику
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ВыплатаЗарплатыРаботнику";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.РасчетыПоЗарплате;
		Элемент.Наименование = НСтр("ru='Выплата зарплаты работнику';uk='Виплата зарплати працівнику'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДенежныеСредстваДоходыРасходы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Денежные средства - Доходы/Расходы';uk='Рухи Грошові кошти - Доходи/Витрати'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыРаботнику;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Истина;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("РасходныйКассовыйОрдер");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ВыплатаЗарплатыРаботнику

		#Область ВыплатаЗарплатыРаздатчиком
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ВыплатаЗарплатыРаздатчиком";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.РасчетыПоЗарплате;
		Элемент.Наименование = НСтр("ru='Выплата зарплаты раздатчиком';uk='Виплата зарплати роздавальником'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДенежныеСредстваДоходыРасходы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Денежные средства - Доходы/Расходы';uk='Рухи Грошові кошти - Доходи/Витрати'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыРаздатчиком;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Истина;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("РасходныйКассовыйОрдер");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ВыплатаЗарплатыРаздатчиком

		#Область ВыплатаЗарплатыЧерезКассу
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ВыплатаЗарплатыЧерезКассу";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.РасчетыПоЗарплате;
		Элемент.Наименование = НСтр("ru='Выплата зарплаты через кассу';uk='Виплата зарплати через касу'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДенежныеСредстваДоходыРасходы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Денежные средства - Доходы/Расходы';uk='Рухи Грошові кошти - Доходи/Витрати'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыЧерезКассу;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Истина;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("РасходныйКассовыйОрдер");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ВыплатаЗарплатыЧерезКассу

		#Область ДепонированиеЗарплаты
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ДепонированиеЗарплаты";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.РасчетыПоЗарплате;
		Элемент.Наименование = НСтр("ru='Депонирование зарплаты';uk='Депонування зарплати'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "";
		Элемент.ПредставлениеИсточникаДанных = "";
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ДепонированиеЗарплаты;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;
		#КонецОбласти //ДепонированиеЗарплаты

		#Область УдержаниеИзЗарплатыВСчетРеализацииСотруднику
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "УдержаниеИзЗарплатыВСчетРеализацииСотруднику";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.РасчетыПоЗарплате;
		Элемент.Наименование = НСтр("ru='Удержание из зарплаты в счет реализации сотруднику';uk='Утримання із зарплати в рахунок реалізації співробітнику'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияКонтрагентДоходыРасходы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Контрагент - Доходы/Расходы';uk='Рухи Контрагент - Доходи/Витрати'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ПрочиеАктивыПассивы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.УдержаниеИзЗарплатыВСчетРеализацииСотруднику;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ОтражениеЗарплатыВФинансовомУчете2_5");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //УдержаниеИзЗарплатыВСчетРеализацииСотруднику

		#Область УдержаниеИзЗарплатыСотрудника
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "УдержаниеИзЗарплатыСотрудника";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.РасчетыПоЗарплате;
		Элемент.Наименование = НСтр("ru='Удержание из зарплаты сотрудника';uk='Утримання із зарплати працівника'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДоходыРасходыПрочиеАктивыПассивы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Доходы/Расходы - Прочие активы/пассивы';uk='Рухи Доходи/Витрати - Інші активи/пасиви'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ПрочиеАктивыПассивы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ПрочиеАктивыПассивы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.УдержаниеИзЗарплатыСотрудника;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ОтражениеЗарплатыВФинансовомУчете");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ОтражениеЗарплатыВФинансовомУчете2_5");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //УдержаниеИзЗарплатыСотрудника

	#КонецОбласти //РасчетыПоЗарплате

	#Область РегламентированныйУчет
	Элемент = Элементы.Добавить();  // см. СтрокаТЧПредопреденногоЭлемента
	Элемент.ИмяПредопределенныхДанных = "РегламентированныйУчет";
	Элемент.Наименование = НСтр("ru='Регламентированный учет';uk='Регламентований облік'",КодОсновногоЯзыка);


		#Область НачислениеРезервовПредстоящихРасходов
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "НачислениеРезервовПредстоящихРасходов";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.РегламентированныйУчет;
		Элемент.Наименование = НСтр("ru='Начисление резервов предстоящих расходов';uk='Нарахування резервів майбутніх витрат'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "";
		Элемент.ПредставлениеИсточникаДанных = "";
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.НачислениеРезервовПредстоящихРасходов;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;
		#КонецОбласти //НачислениеРезервовПредстоящихРасходов


		#Область СписаниеНДСНаРасходы
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "СписаниеНДСНаРасходы";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.РегламентированныйУчет;
		Элемент.Наименование = НСтр("ru='Списание НДС на расходы';uk='Списання ПДВ на витрати'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДоходыРасходыПрочиеАктивыПассивы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Доходы/Расходы - Прочие активы/пассивы';uk='Рухи Доходи/Витрати - Інші активи/пасиви'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СписаниеНДСНаРасходы;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;
		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ 
		#КонецОбласти //СписаниеНДСНаРасходы

		#Область СписаниеРасходовЗаСчетРезервов
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "СписаниеРасходовЗаСчетРезервов";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.РегламентированныйУчет;
		Элемент.Наименование = НСтр("ru='Списание расходов за счет резервов';uk='Списання витрат за рахунок резервів'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "";
		Элемент.ПредставлениеИсточникаДанных = "";
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СписаниеРасходовЗаСчетРезервов;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;
		#КонецОбласти //СписаниеРасходовЗаСчетРезервов

		#Область СписаниеРезервовПредстоящихРасходов
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "СписаниеРезервовПредстоящихРасходов";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.РегламентированныйУчет;
		Элемент.Наименование = НСтр("ru='Списание резервов предстоящих расходов';uk='Списання резервів майбутніх витрат'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "";
		Элемент.ПредставлениеИсточникаДанных = "";
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СписаниеРезервовПредстоящихРасходов;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;
		#КонецОбласти //СписаниеРезервовПредстоящихРасходов
		

#Область НалоговыйКредитПоставка  

	Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
	Элемент.ИмяПредопределенныхДанных = "НалоговыйКредитПоставка";
	Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.РегламентированныйУчет;
	Элемент.Наименование = НСтр("ru='НК поставка';uk='ПК постачання'",КодОсновногоЯзыка);
	Элемент.ИсточникДанных = "НДСРеестрПолученныхНалоговыхДокументов";
	Элемент.ПредставлениеИсточникаДанных = НСтр("ru='НДС: Реестр полученных налоговых документов';uk='ПДВ: Реєстр отриманих податкових документів'",КодОсновногоЯзыка);
	Элемент.Описание = "";
	Элемент.Приход = Неопределено;
	Элемент.Расход = Неопределено;
	Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.НалоговыйКредитПоставка;
	Элемент.ИспользоватьВБюджетировании = Истина;
	Элемент.ИспользоватьВМеждународномУчете = Истина;
	Элемент.ИспользоватьДляВыбора = Ложь;
	Элемент.ИспользоватьВРеестреДокументов = Ложь;
	Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

	//++ НЕ УТ
	ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
	//-- НЕ УТ 
	
#КонецОбласти //НалоговыйКредитПоставка

#Область НалоговыеОбязательстваУсловнаяПродажа 

	Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
	Элемент.ИмяПредопределенныхДанных = "НалоговыеОбязательстваУсловнаяПродажа";
	Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.РегламентированныйУчет;
	Элемент.Наименование = НСтр("ru='НО по использованию в необлагаемых операциях';uk='ПЗ з використання в неоподатковуваних операціях'",КодОсновногоЯзыка);
	Элемент.ИсточникДанных = "НДСРеестрВыданныхНалоговыхДокументов";
	Элемент.ПредставлениеИсточникаДанных = НСтр("ru='НДС: Реестр выданных налоговых документов';uk='ПДВ: Реєстр виданих податкових документів'",КодОсновногоЯзыка);
	Элемент.Описание = "";
	Элемент.Приход = Неопределено;
	Элемент.Расход = Неопределено;
	Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.НалоговыеОбязательстваУсловнаяПродажа;
	Элемент.ИспользоватьВБюджетировании = Истина;
	Элемент.ИспользоватьВМеждународномУчете = Истина;
	Элемент.ИспользоватьДляВыбора = Ложь;
	Элемент.ИспользоватьВРеестреДокументов = Ложь;
	Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

	//++ НЕ УТ
	ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
	//-- НЕ УТ
	
#КонецОбласти //НалоговыеОбязательстваУсловнаяПродажа

#Область НалоговыеОбязательстваПоставка 

	Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
	Элемент.ИмяПредопределенныхДанных = "НалоговыеОбязательстваПоставка";
	Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.РегламентированныйУчет;
	Элемент.Наименование = НСтр("ru='НО поставка';uk='ПЗ поставка'",КодОсновногоЯзыка);
	Элемент.ИсточникДанных = "НДСРеестрВыданныхНалоговыхДокументов";
	Элемент.ПредставлениеИсточникаДанных = НСтр("ru='НДС: Реестр выданных налоговых документов';uk='ПДВ: Реєстр виданих податкових документів'",КодОсновногоЯзыка);
	Элемент.Описание = "";
	Элемент.Приход = Неопределено;
	Элемент.Расход = Неопределено;
	Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.НалоговыеОбязательстваПоставка;
	Элемент.ИспользоватьВБюджетировании = Истина;
	Элемент.ИспользоватьВМеждународномУчете = Истина;
	Элемент.ИспользоватьДляВыбора = Ложь;
	Элемент.ИспользоватьВРеестреДокументов = Ложь;
	Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

	//++ НЕ УТ
	ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
	//-- НЕ УТ
	
#КонецОбласти //НалоговыеОбязательстваПоставка

#Область НалоговыеОбязательстваРозничнаяПродажа

	Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
	Элемент.ИмяПредопределенныхДанных = "НалоговыеОбязательстваРозничнаяПродажа";
	Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.РегламентированныйУчет;
	Элемент.Наименование = НСтр("ru='НО розничная продажа';uk='ПЗ роздрібний продаж'",КодОсновногоЯзыка);
	Элемент.ИсточникДанных = "НДСРеестрВыданныхНалоговыхДокументов";
	Элемент.ПредставлениеИсточникаДанных = НСтр("ru='НДС: Реестр выданных налоговых документов';uk='ПДВ: Реєстр виданих податкових документів'",КодОсновногоЯзыка);
	Элемент.Описание = "";
	Элемент.Приход = Неопределено;
	Элемент.Расход = Неопределено;
	Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.НалоговыеОбязательстваРозничнаяПродажа;
	Элемент.ИспользоватьВБюджетировании = Истина;
	Элемент.ИспользоватьВМеждународномУчете = Истина;
	Элемент.ИспользоватьДляВыбора = Ложь;
	Элемент.ИспользоватьВРеестреДокументов = Ложь;
	Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

	//++ НЕ УТ
	ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
	//-- НЕ УТ
	
#КонецОбласти //НалоговыеОбязательстваРозничнаяПродажа

#Область НалоговыеОбязательстваРаботыОтНерезидента

	Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
	Элемент.ИмяПредопределенныхДанных = "НалоговыеОбязательстваРаботыОтНерезидента";
	Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.РегламентированныйУчет;
	Элемент.Наименование = НСтр("ru='НО работы от нерезидента';uk='ПЗ роботи від нерезидента'",КодОсновногоЯзыка);
	Элемент.ИсточникДанных = "НДСРеестрВыданныхНалоговыхДокументов";
	Элемент.ПредставлениеИсточникаДанных = НСтр("ru='НДС: Реестр выданных налоговых документов';uk='ПДВ: Реєстр виданих податкових документів'",КодОсновногоЯзыка);
	Элемент.Описание = "";
	Элемент.Приход = Неопределено;
	Элемент.Расход = Неопределено;
	Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.НалоговыеОбязательстваРаботыОтНерезидента;
	Элемент.ИспользоватьВБюджетировании = Истина;
	Элемент.ИспользоватьВМеждународномУчете = Истина;
	Элемент.ИспользоватьДляВыбора = Ложь;
	Элемент.ИспользоватьВРеестреДокументов = Ложь;
	Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

	//++ НЕ УТ
	ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
	//-- НЕ УТ
	
#КонецОбласти //НалоговыеОбязательстваРаботыОтНерезидента

#Область НалоговыеОбязательстваПродажаНижеОбычнойЦены

	Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
	Элемент.ИмяПредопределенныхДанных = "НалоговыеОбязательстваПродажаНижеОбычнойЦены";
	Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.РегламентированныйУчет;
	Элемент.Наименование = НСтр("ru='НО превышение базы над ценой поставки';uk='ПЗ перевищення бази над ціною постачання'",КодОсновногоЯзыка);
	Элемент.ИсточникДанных = "НДСРеестрВыданныхНалоговыхДокументов";
	Элемент.ПредставлениеИсточникаДанных = НСтр("ru='НДС: Реестр выданных налоговых документов';uk='ПДВ: Реєстр виданих податкових документів'",КодОсновногоЯзыка);
	Элемент.Описание = "";
	Элемент.Приход = Неопределено;
	Элемент.Расход = Неопределено;
	Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.НалоговыеОбязательстваПродажаНижеОбычнойЦены;
	Элемент.ИспользоватьВБюджетировании = Истина;
	Элемент.ИспользоватьВМеждународномУчете = Истина;
	Элемент.ИспользоватьДляВыбора = Ложь;
	Элемент.ИспользоватьВРеестреДокументов = Ложь;
	Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

	//++ НЕ УТ
	ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
	//-- НЕ УТ
	
#КонецОбласти //НалоговыеОбязательстваПродажаНижеОбычнойЦены

#Область ПредполагаемоеВосстановлениеНДС 

	Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
	Элемент.ИмяПредопределенныхДанных = "ПредполагаемоеВосстановлениеНДС";
	Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.РегламентированныйУчет;
	Элемент.Наименование = НСтр("ru='Предполагаемое восстановление НДС (2.1)';uk='Передбачуване відновлення ПДВ (2.1)'",КодОсновногоЯзыка);
	Элемент.ИсточникДанных = "КорректировкиНДСПартий";
	Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Корректировки НДС партий';uk='Коригування ПДВ партій'",КодОсновногоЯзыка);
	Элемент.Описание = "";
	Элемент.Приход = Неопределено;
	Элемент.Расход = Неопределено;
	Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПредполагаемоеВосстановлениеНДС;
	Элемент.ИспользоватьВБюджетировании = Истина;
	Элемент.ИспользоватьВМеждународномУчете = Истина;
	Элемент.ИспользоватьДляВыбора = Ложь;
	Элемент.ИспользоватьВРеестреДокументов = Ложь;
	Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

	//++ НЕ УТ
	ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
	//-- НЕ УТ
		
#КонецОбласти //ПредполагаемоеВосстановлениеНДС

#Область ПредполагаемаяУсловнаяПродажа

	Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
	Элемент.ИмяПредопределенныхДанных = "ПредполагаемаяУсловнаяПродажа";
	Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.РегламентированныйУчет;
	Элемент.Наименование = НСтр("ru='Предполагаемые НО по использованию в необлагаемых операциях (2.1)';uk='Передбачувані ПЗ щодо використання в неоподатковуваних операціях (2.1)'",КодОсновногоЯзыка);
	Элемент.ИсточникДанных = "КорректировкиНДСПартий";
	Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Корректировки НДС партий';uk='Коригування ПДВ партій'",КодОсновногоЯзыка);
	Элемент.Описание = НСтр("ru='Предполагаемые НО по использованию в необлагаемых операциях';uk='Передбачувані ПЗ з використання в неоподатковуваних операціях'",КодОсновногоЯзыка);
	Элемент.Приход = Неопределено;
	Элемент.Расход = Неопределено;
	Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПредполагаемаяУсловнаяПродажа;
	Элемент.ИспользоватьВБюджетировании = Истина;
	Элемент.ИспользоватьВМеждународномУчете = Истина;
	Элемент.ИспользоватьДляВыбора = Ложь;
	Элемент.ИспользоватьВРеестреДокументов = Ложь;
	Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

	//++ НЕ УТ
	ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
	//-- НЕ УТ  
		
#КонецОбласти //ПредполагаемаяУсловнаяПродажа

#Область ДетализацияПартийТоваровДляНДС 

	Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
	Элемент.ИмяПредопределенныхДанных = "ДетализацияПартийТоваровДляНДС";
	Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.РегламентированныйУчет;
	Элемент.Наименование = НСтр("ru='Детализация партий товаров для НДС (средняя)';uk='Деталізація партій товарів для ПДВ (середня)'",КодОсновногоЯзыка);
	Элемент.ИсточникДанных = "ДетализацияПартийТоваровДляНДС";
	Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Детализация партий товаров для НДС (средняя за месяц)';uk='Деталізація партій товарів для ПДВ (середня за місяць)'",КодОсновногоЯзыка);
	Элемент.Описание = "";
	Элемент.Приход = Неопределено;
	Элемент.Расход = Неопределено;
	Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПустаяСсылка();
	Элемент.ИспользоватьВБюджетировании = Истина;
	Элемент.ИспользоватьВМеждународномУчете = Истина;
	Элемент.ИспользоватьДляВыбора = Ложь;
	Элемент.ИспользоватьВРеестреДокументов = Ложь;
	Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

	//++ НЕ УТ
	ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
	//-- НЕ УТ
		
#КонецОбласти //ДетализацияПартийТоваровДляНДС

#Область ДетализацияПартийТоваровДляНДС2_4 

	Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
	Элемент.ИмяПредопределенныхДанных = "ДетализацияПартийТоваровДляНДС2_4";
	Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.РегламентированныйУчет;
	Элемент.Наименование = НСтр("ru='Детализация партий товаров для НДС (ФИФО)';uk='Деталізація партій товарів для ПДВ (ФІФО)'",КодОсновногоЯзыка);
	Элемент.ИсточникДанных = "ДетализацияПартийТоваровДляНДС2_4";
	Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Детализация партий товаров для НДС (ФИФО скользящая оценка)';uk='Деталізація партій товарів для ПДВ (ФІФО змінна оцінка)'",КодОсновногоЯзыка);
	Элемент.Описание = НСтр("ru='Детализация партий товаров для НДС (ФИФО)';uk='Деталізація партій товарів для ПДВ (ФІФО)'",КодОсновногоЯзыка);
	Элемент.Приход = Неопределено;
	Элемент.Расход = Неопределено;
	Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПустаяСсылка();
	Элемент.ИспользоватьВБюджетировании = Истина;
	Элемент.ИспользоватьВМеждународномУчете = Истина;
	Элемент.ИспользоватьДляВыбора = Ложь;
	Элемент.ИспользоватьВРеестреДокументов = Ложь;
	Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

	//++ НЕ УТ
	ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
	//-- НЕ УТ
		
#КонецОбласти //ДетализацияПартийТоваровДляНДС2_4





#Область АкцизныйНалогРозничныеПродажи       

	Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
	Элемент.ИмяПредопределенныхДанных = "АкцизныйНалогРозничныеПродажи";
	Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.РегламентированныйУчет;
	Элемент.Наименование = НСтр("ru='Акцизный налог с розничных продаж';uk='Акцизний податок із роздрібних продажів'", КодОсновногоЯзыка);
	Элемент.ИсточникДанных = "ДвиженияКонтрагентДоходыРасходы";
	Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Контрагент - Доходы/Расходы';uk='Рухи Контрагент - Доходи/Витрати'",КодОсновногоЯзыка);
	Элемент.Описание = НСтр("ru='Акцизный налог с розничных продаж';uk='Акцизний податок із роздрібних продажів'", КодОсновногоЯзыка);
	Элемент.Приход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
	Элемент.Расход = Перечисления.ТипыДанныхУчета.Контрагенты;
	Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.АкцизныйНалог;
	Элемент.ИспользоватьВБюджетировании = Истина;
	Элемент.ИспользоватьВМеждународномУчете = Истина;
	Элемент.ИспользоватьДляВыбора = Ложь;
	Элемент.ИспользоватьВРеестреДокументов = Ложь;
	Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

	//++ НЕ УТ
	ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
	//-- НЕ УТ          
	
	Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
	Документ = Метаданные.Документы.Найти("ОтчетОРозничныхПродажах");
	Если Документ <> Неопределено Тогда
		ЭлементТЧ = Элемент.Документы.Добавить();
		ЭлементТЧ.ИмяДокумента = Документ.Имя;
		НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
		ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
	КонецЕсли;

#КонецОбласти //АкцизныйНалогРозничныеПродажи

#Область АкцизныйНалогСписаниеНедостач       

	Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
	Элемент.ИмяПредопределенныхДанных = "АкцизныйНалогСписаниеНедостач";
	Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.РегламентированныйУчет;
	Элемент.Наименование = НСтр("ru='Акцизный налог при списании недостач подакцизных товаров';uk='Акцизний податок при списанні нестач підакцизних товарів'", КодОсновногоЯзыка);
	Элемент.ИсточникДанных = "ДвиженияДоходыРасходыПрочиеАктивыПассивы";
	Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Доходы/Расходы - Прочие активы/пассивы';uk='Рухи Доходи/Витрати - Інші активи/пасиви'",КодОсновногоЯзыка);
	Элемент.Описание = НСтр("ru='Акцизный налог при списании недостач подакцизных товаров';uk='Акцизний податок при списанні нестач підакцизних товарів'", КодОсновногоЯзыка);
	Элемент.Приход = Перечисления.ТипыДанныхУчета.ПрочиеАктивыПассивы;
	Элемент.Расход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
	Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.АкцизныйНалог;
	Элемент.ИспользоватьВБюджетировании = Истина;
	Элемент.ИспользоватьВМеждународномУчете = Истина;
	Элемент.ИспользоватьДляВыбора = Ложь;
	Элемент.ИспользоватьВРеестреДокументов = Ложь;
	Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

	//++ НЕ УТ
	ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
	//-- НЕ УТ          
	
	Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
	Документ = Метаданные.Документы.Найти("СписаниеНедостачТоваров");
	Если Документ <> Неопределено Тогда
		ЭлементТЧ = Элемент.Документы.Добавить();
		ЭлементТЧ.ИмяДокумента = Документ.Имя;
		НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
		ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
	КонецЕсли;

#КонецОбласти //АкцизныйНалогСписаниеНедостач

	#КонецОбласти //РегламентированныйУчет

	
	#Область Склад
	Элемент = Элементы.Добавить();  // см. СтрокаТЧПредопреденногоЭлемента
	Элемент.ИмяПредопределенныхДанных = "Склад";
	Элемент.Наименование = НСтр("ru='Склад';uk='Склад'",КодОсновногоЯзыка);

		#Область ВнутреннееПоступлениеТоваров
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ВнутреннееПоступлениеТоваров";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Склад;
		Элемент.Наименование = НСтр("ru='(не используется) Внутреннее поступление товаров';uk='(не використовується) Внутрішнє надходження товарів'",КодОсновногоЯзыка);
		#КонецОбласти //ВнутреннееПоступлениеТоваров

		#Область ВозвратИзПроизводства
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ВозвратИзПроизводства";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Склад;
		Элемент.Наименование = НСтр("ru='Возврат из производства';uk='Повернення з виробництва'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияНоменклатураНоменклатура";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Номенклатура - Номенклатура';uk='Рухи Номенклатура - Номенклатура'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратИзПроизводства;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ВозвратМатериаловИзПроизводства");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ДвижениеПродукцииИМатериалов");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;

		Элемент.ФункциональныеОпции = ТабличныеЧасти.ФункциональныеОпции.Скопировать();
		ЭлементТЧ = Элемент.ФункциональныеОпции.Добавить();
		ЭлементТЧ.ИмяФункциональнойОпции = "ИспользоватьПроизводство";
		#КонецОбласти //ВозвратИзПроизводства
		

		#Область ИнвентаризационнаяОпись
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ИнвентаризационнаяОпись";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Склад;
		Элемент.Наименование = НСтр("ru='Инвентаризационная опись';uk='Інвентаризаційний опис'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "";
		Элемент.ПредставлениеИсточникаДанных = "";
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ИнвентаризационнаяОпись;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ИнвентаризационнаяОпись");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ИнвентаризационнаяОпись
		

		#Область ОприходованиеЗаСчетРасходов
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ОприходованиеЗаСчетРасходов";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Склад;
		Элемент.Наименование = НСтр("ru='Оприходование (за счет расходов)';uk='Оприбуткування (за рахунок витрат)'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияНоменклатураДоходыРасходы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Номенклатура - Доходы/Расходы';uk='Рухи Номенклатура - Доходи/Витрати'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОприходованиеЗаСчетРасходов;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ПрочееОприходованиеТоваров");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ОприходованиеЗаСчетРасходов

		#Область ОприходованиеТоваров
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ОприходованиеТоваров";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Склад;
		Элемент.Наименование = НСтр("ru='Оприходование товаров';uk='Оприбуткування товарів'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияНоменклатураДоходыРасходы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Номенклатура - Доходы/Расходы';uk='Рухи Номенклатура - Доходи/Витрати'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОприходованиеТоваров;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ОприходованиеИзлишковТоваров");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ОприходованиеТоваров

		#Область ПередачаВСоставНМА
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПередачаВСоставНМА";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Склад;
		Элемент.Наименование = НСтр("ru='Передача в состав НМА';uk='Передача до складу НМА'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияНоменклатураДоходыРасходы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Номенклатура - Доходы/Расходы';uk='Рухи Номенклатура - Доходи/Витрати'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаВСоставНМА;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ВнутреннееПотреблениеТоваров");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ПередачаВСоставНМА

		#Область ПередачаВСоставОС
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПередачаВСоставОС";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Склад;
		Элемент.Наименование = НСтр("ru='Передача в состав основных средств';uk='Передача до складу основних засобів'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияНоменклатураДоходыРасходы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Номенклатура - Доходы/Расходы';uk='Рухи Номенклатура - Доходи/Витрати'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаВСоставОС;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ВнутреннееПотреблениеТоваров");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ПередачаВСоставОС

		#Область ПередачаВЭксплуатацию
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПередачаВЭксплуатацию";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Склад;
		Элемент.Наименование = НСтр("ru='Передача в эксплуатацию';uk='Передача в експлуатацію'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияНоменклатураДоходыРасходы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Номенклатура - Доходы/Расходы';uk='Рухи Номенклатура - Доходи/Витрати'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаВЭксплуатацию;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ВнутреннееПотреблениеТоваров");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ЗаказНаВнутреннееПотребление");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;

		Элемент.ФункциональныеОпции = ТабличныеЧасти.ФункциональныеОпции.Скопировать();
		ЭлементТЧ = Элемент.ФункциональныеОпции.Добавить();
		ЭлементТЧ.ИмяФункциональнойОпции = "ИспользоватьВнутреннееПотребление";
		#КонецОбласти //ПередачаВЭксплуатацию

		#Область ПередачаНаПрочиеЦели
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПередачаНаПрочиеЦели";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Склад;
		Элемент.Наименование = НСтр("ru='Передача на прочие цели';uk='Передача на інші цілі'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияНоменклатураДоходыРасходы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Номенклатура - Доходы/Расходы';uk='Рухи Номенклатура - Доходи/Витрати'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаНаПрочиеЦели;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ВнутреннееПотреблениеТоваров");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ПередачаНаПрочиеЦели

		#Область ПеремещениеТоваров
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПеремещениеТоваров";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Склад;
		Элемент.Наименование = НСтр("ru='Перемещение товаров';uk='Переміщення товарів'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияНоменклатураНоменклатура";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Номенклатура - Номенклатура';uk='Рухи Номенклатура - Номенклатура'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеремещениеТоваров;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("АктОРасхожденияхПослеПеремещения");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ЗаказНаПеремещение");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ПеремещениеТоваров");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;

		Элемент.ФункциональныеОпции = ТабличныеЧасти.ФункциональныеОпции.Скопировать();
		ЭлементТЧ = Элемент.ФункциональныеОпции.Добавить();
		ЭлементТЧ.ИмяФункциональнойОпции = "ИспользоватьПеремещениеТоваров";
		#КонецОбласти //ПеремещениеТоваров
		

		#Область ПересортицаТоваров
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПересортицаТоваров";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Склад;
		Элемент.Наименование = НСтр("ru='Пересортица товаров';uk='Пересортиця товарів'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияНоменклатураНоменклатура";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Номенклатура - Номенклатура';uk='Рухи Номенклатура - Номенклатура'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПересортицаТоваров;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ПересортицаТоваров");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ПересортицаТоваров

		#Область ПересортицаТоваровСПереоценкой
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПересортицаТоваровСПереоценкой";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Склад;
		Элемент.Наименование = НСтр("ru='Пересортица товаров с переоценкой';uk='Пересортиця товарів з переоцінкою'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияНоменклатураНоменклатура";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Номенклатура - Номенклатура';uk='Рухи Номенклатура - Номенклатура'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПересортицаТоваровСПереоценкой;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ПересортицаТоваров");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ПересортицаТоваровСПереоценкой

		#Область ПорчаТоваров
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПорчаТоваров";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Склад;
		Элемент.Наименование = НСтр("ru='Порча товаров';uk='Псування товарів'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияНоменклатураНоменклатура";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Номенклатура - Номенклатура';uk='Рухи Номенклатура - Номенклатура'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПорчаТоваров;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ПорчаТоваров");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ПорчаТоваров

		#Область ПорчаТоваровСПереоценкой
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПорчаТоваровСПереоценкой";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Склад;
		Элемент.Наименование = НСтр("ru='Порча товаров с переоценкой';uk='Псування товарів з переоцінкою'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияНоменклатураНоменклатура";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Номенклатура - Номенклатура';uk='Рухи Номенклатура - Номенклатура'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПорчаТоваровСПереоценкой;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ПорчаТоваров");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ПорчаТоваровСПереоценкой

		#Область РазборкаТоваров
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "РазборкаТоваров";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Склад;
		Элемент.Наименование = НСтр("ru='Разборка на комплектующие';uk='Розбирання на комплектуючі'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияНоменклатураНоменклатура";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Номенклатура - Номенклатура';uk='Рухи Номенклатура - Номенклатура'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РазборкаТоваров;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ЗаказНаСборку");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("СборкаТоваров");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;

		Элемент.ФункциональныеОпции = ТабличныеЧасти.ФункциональныеОпции.Скопировать();
		ЭлементТЧ = Элемент.ФункциональныеОпции.Добавить();
		ЭлементТЧ.ИмяФункциональнойОпции = "ИспользоватьСборкуРазборку";
		#КонецОбласти //РазборкаТоваров

		#Область СборкаТоваров
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "СборкаТоваров";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Склад;
		Элемент.Наименование = НСтр("ru='Сборка товаров';uk='Збирання товарів'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияНоменклатураНоменклатура";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Номенклатура - Номенклатура';uk='Рухи Номенклатура - Номенклатура'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СборкаТоваров;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ЗаказНаСборку");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("СборкаТоваров");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;

		Элемент.ФункциональныеОпции = ТабличныеЧасти.ФункциональныеОпции.Скопировать();
		ЭлементТЧ = Элемент.ФункциональныеОпции.Добавить();
		ЭлементТЧ.ИмяФункциональнойОпции = "ИспользоватьСборкуРазборку";
		#КонецОбласти //СборкаТоваров

		#Область СписаниеИзЭксплуатации
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "СписаниеИзЭксплуатации";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Склад;
		Элемент.Наименование = НСтр("ru='Списание из эксплуатации';uk='Списання з експлуатації'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "";
		Элемент.ПредставлениеИсточникаДанных = "";
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СписаниеИзЭксплуатации;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("СписаниеИзЭксплуатации");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //СписаниеИзЭксплуатации

		#Область СписаниеТоваровПоТребованию
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "СписаниеТоваровПоТребованию";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Склад;
		Элемент.Наименование = НСтр("ru='Списание на расходы';uk='Списання на витрати'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияНоменклатураДоходыРасходы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Номенклатура - Доходы/Расходы';uk='Рухи Номенклатура - Доходи/Витрати'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СписаниеТоваровПоТребованию;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ВнутреннееПотреблениеТоваров");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ЗаказНаВнутреннееПотребление");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;

		Элемент.ФункциональныеОпции = ТабличныеЧасти.ФункциональныеОпции.Скопировать();
		ЭлементТЧ = Элемент.ФункциональныеОпции.Добавить();
		ЭлементТЧ.ИмяФункциональнойОпции = "ИспользоватьВнутреннееПотребление";
		#КонецОбласти //СписаниеТоваровПоТребованию

		#Область СписаниеТоваров
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "СписаниеТоваров";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Склад;
		Элемент.Наименование = НСтр("ru='Списание товаров';uk='Списання товарів'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияНоменклатураДоходыРасходы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Номенклатура - Доходы/Расходы';uk='Рухи Номенклатура - Доходи/Витрати'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СписаниеТоваров;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("СписаниеНедостачТоваров");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //СписаниеТоваров

		#Область СторноСписанияНаРасходы
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "СторноСписанияНаРасходы";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.Склад;
		Элемент.Наименование = НСтр("ru='Сторно списания на расходы';uk='Сторно списання на витрати'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияНоменклатураДоходыРасходы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Номенклатура - Доходы/Расходы';uk='Рухи Номенклатура - Доходи/Витрати'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СторноСписанияНаРасходы;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ПрочееОприходованиеТоваров");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //СторноСписанияНаРасходы

	#КонецОбласти //Склад

	#Область ФинансовыйРезультат
	Элемент = Элементы.Добавить();  // см. СтрокаТЧПредопреденногоЭлемента
	Элемент.ИмяПредопределенныхДанных = "ФинансовыйРезультат";
	Элемент.Наименование = НСтр("ru='Финансовый результат';uk='Фінансовий результат'",КодОсновногоЯзыка);

		#Область АмортизацияВнеоборотныхАктивов
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "АмортизацияВнеоборотныхАктивов";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ФинансовыйРезультат;
		Элемент.Наименование = НСтр("ru='Амортизация необоротных активов';uk='Амортизація необоротних активів'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "";
		Элемент.ПредставлениеИсточникаДанных = "";
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.АмортизацияВнеоборотныхАктивов;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;
		
		//++ НЕ УТ
		Элемент.ПоказателиРегистра = ТабличныеЧасти.ПоказателиРегистра.Скопировать();
		ЭлементТЧ = Элемент.ПоказателиРегистра.Добавить();
		ЭлементТЧ.Показатель = Перечисления.ПоказателиАналитическихРегистров.Сумма;
		ЭлементТЧ.Использование = Истина;
		//-- НЕ УТ

		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("АмортизацияНМАМеждународныйУчет");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("АмортизацияОСМеждународныйУчет");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //АмортизацияВнеоборотныхАктивов

		#Область ВнутреннееПоступлениеРасходов
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ВнутреннееПоступлениеРасходов";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ФинансовыйРезультат;
		Элемент.Наименование = НСтр("ru='(не используется) Внутреннее поступление расходов';uk='(не використовується) Внутрішнє надходження витрат'",КодОсновногоЯзыка);
		#КонецОбласти //ВнутреннееПоступлениеРасходов

		#Область ДвижениеАктивовПассивовЗаСчетАктивовПассивов
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ДвижениеАктивовПассивовЗаСчетАктивовПассивов";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ФинансовыйРезультат;
		Элемент.Наименование = НСтр("ru='Движение активов/пассивов за счет активов/пассивов';uk='Рух активів/пасивів за рахунок активів/пасивів'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДоходыРасходыПрочиеАктивыПассивы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Доходы/Расходы - Прочие активы/пассивы';uk='Рухи Доходи/Витрати - Інші активи/пасиви'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ПрочиеАктивыПассивы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ПрочиеАктивыПассивы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ДвижениеАктивовПассивовЗаСчетАктивовПассивов;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ДвижениеПрочихАктивовПассивов");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ДвижениеАктивовПассивовЗаСчетАктивовПассивов

		#Область ДвижениеДоходовЗаСчетАктивовПассивов
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ДвижениеДоходовЗаСчетАктивовПассивов";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ФинансовыйРезультат;
		Элемент.Наименование = НСтр("ru='Движение доходов за счет активов/пассивов';uk='Рух доходів за рахунок активів/пасивів'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДоходыРасходыПрочиеАктивыПассивы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Доходы/Расходы - Прочие активы/пассивы';uk='Рухи Доходи/Витрати - Інші активи/пасиви'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ПрочиеАктивыПассивы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ДвижениеДоходовЗаСчетАктивовПассивов;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ДвижениеПрочихАктивовПассивов");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ДвижениеДоходовЗаСчетАктивовПассивов

		#Область ДвижениеРасходовЗаСчетАктивовПассивов
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ДвижениеРасходовЗаСчетАктивовПассивов";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ФинансовыйРезультат;
		Элемент.Наименование = НСтр("ru='Движение расходов за счет активов/пассивов';uk='Рух витрат за рахунок активів/пасивів'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДоходыРасходыПрочиеАктивыПассивы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Доходы/Расходы - Прочие активы/пассивы';uk='Рухи Доходи/Витрати - Інші активи/пасиви'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ПрочиеАктивыПассивы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ДвижениеРасходовЗаСчетАктивовПассивов;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ДвижениеПрочихАктивовПассивов");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ДвижениеРасходовЗаСчетАктивовПассивов

		#Область ДоходыОтПереоценкиТоваров
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ДоходыОтПереоценкиТоваров";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ФинансовыйРезультат;
		Элемент.Наименование = НСтр("ru='Доходы от переоценки товаров';uk='Доходи від переоцінки товарів'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияНоменклатураДоходыРасходы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Номенклатура - Доходы/Расходы';uk='Рухи Номенклатура - Доходи/Витрати'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ДоходыОтПереоценкиТоваров;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("РасчетСебестоимостиТоваров");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ДоходыОтПереоценкиТоваров

		#Область ЗакрытиеМесяца
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ЗакрытиеМесяца";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ФинансовыйРезультат;
		Элемент.Наименование = НСтр("ru='Закрытие месяца';uk='Закриття місяця'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "";
		Элемент.ПредставлениеИсточникаДанных = "";
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакрытиеМесяца;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;
		#КонецОбласти //ЗакрытиеМесяца

		#Область КурсовыеРазницыДСПрибыль
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "КурсовыеРазницыДСПрибыль";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ФинансовыйРезультат;
		Элемент.Наименование = НСтр("ru='Курсовые разницы по денежным средствам (прибыль)';uk='Курсові різниці по грошовим коштам (прибуток)'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДенежныеСредстваДоходыРасходы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Денежные средства - Доходы/Расходы';uk='Рухи Грошові кошти - Доходи/Витрати'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.КурсовыеРазницыДСПрибыль;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("РасчетКурсовыхРазниц");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //КурсовыеРазницыДСПрибыль

		#Область КурсовыеРазницыДСУбыток
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "КурсовыеРазницыДСУбыток";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ФинансовыйРезультат;
		Элемент.Наименование = НСтр("ru='Курсовые разницы по денежным средствам (убыток)';uk='Курсові різниці по грошовим коштам (збиток)'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДенежныеСредстваДоходыРасходы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Денежные средства - Доходы/Расходы';uk='Рухи Грошові кошти - Доходи/Витрати'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.КурсовыеРазницыДСУбыток;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("РасчетКурсовыхРазниц");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //КурсовыеРазницыДСУбыток

		#Область КурсовыеРазницыДепозитыПрибыль
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "КурсовыеРазницыДепозитыПрибыль";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ФинансовыйРезультат;
		Элемент.Наименование = НСтр("ru='Курсовые разницы по депозитам (прибыль)';uk='Курсові різниці за депозитами (прибуток)'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДенежныеСредстваДоходыРасходы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Денежные средства - Доходы/Расходы';uk='Рухи Грошові кошти - Доходи/Витрати'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.КурсовыеРазницыДепозитыПрибыль;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("РасчетКурсовыхРазниц");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //КурсовыеРазницыДепозитыПрибыль

		#Область КурсовыеРазницыДепозитыУбыток
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "КурсовыеРазницыДепозитыУбыток";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ФинансовыйРезультат;
		Элемент.Наименование = НСтр("ru='Курсовые разницы по депозитам (убыток)';uk='Курсові різниці за депозитами (збиток)'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДенежныеСредстваДоходыРасходы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Денежные средства - Доходы/Расходы';uk='Рухи Грошові кошти - Доходи/Витрати'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.КурсовыеРазницыДепозитыУбыток;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("РасчетКурсовыхРазниц");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //КурсовыеРазницыДепозитыУбыток

		#Область КурсовыеРазницыЗаймыВыданныеПрибыль
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "КурсовыеРазницыЗаймыВыданныеПрибыль";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ФинансовыйРезультат;
		Элемент.Наименование = НСтр("ru='Курсовые разницы по займам выданным (прибыль)';uk='Курсові різниці за виданими позиками (прибуток)'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияКонтрагентДоходыРасходы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Контрагент - Доходы/Расходы';uk='Рухи Контрагент - Доходи/Витрати'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.КурсовыеРазницыЗаймыВыданныеПрибыль;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("РасчетКурсовыхРазниц");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //КурсовыеРазницыЗаймыВыданныеПрибыль

		#Область КурсовыеРазницыЗаймыВыданныеУбыток
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "КурсовыеРазницыЗаймыВыданныеУбыток";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ФинансовыйРезультат;
		Элемент.Наименование = НСтр("ru='Курсовые разницы по займам выданным (убыток)';uk='Курсові різниці за виданими позиками (збиток)'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияКонтрагентДоходыРасходы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Контрагент - Доходы/Расходы';uk='Рухи Контрагент - Доходи/Витрати'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.КурсовыеРазницыЗаймыВыданныеУбыток;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("РасчетКурсовыхРазниц");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //КурсовыеРазницыЗаймыВыданныеУбыток

		#Область КурсовыеРазницыКредитыИЗаймыПрибыль
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "КурсовыеРазницыКредитыИЗаймыПрибыль";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ФинансовыйРезультат;
		Элемент.Наименование = НСтр("ru='Курсовые разницы по кредитам и займам (прибыль)';uk='Курсові різниці за кредитами і позиками (прибуток)'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияКонтрагентДоходыРасходы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Контрагент - Доходы/Расходы';uk='Рухи Контрагент - Доходи/Витрати'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.КурсовыеРазницыКредитыИЗаймыПрибыль;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("РасчетКурсовыхРазниц");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //КурсовыеРазницыКредитыИЗаймыПрибыль

		#Область КурсовыеРазницыКредитыИЗаймыУбыток
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "КурсовыеРазницыКредитыИЗаймыУбыток";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ФинансовыйРезультат;
		Элемент.Наименование = НСтр("ru='Курсовые разницы по кредитам и займам (убыток)';uk='Курсові різниці за кредитами і позиками (збиток)'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияКонтрагентДоходыРасходы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Контрагент - Доходы/Расходы';uk='Рухи Контрагент - Доходи/Витрати'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.КурсовыеРазницыКредитыИЗаймыУбыток;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("РасчетКурсовыхРазниц");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //КурсовыеРазницыКредитыИЗаймыУбыток

		#Область КурсовыеРазницыКлиентыПрибыль
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "КурсовыеРазницыКлиентыПрибыль";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ФинансовыйРезультат;
		Элемент.Наименование = НСтр("ru='Курсовые разницы по расчетам с клиентами (прибыль)';uk='Курсові різниці за розрахунками з клієнтами (прибуток)'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияКонтрагентДоходыРасходы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Контрагент - Доходы/Расходы';uk='Рухи Контрагент - Доходи/Витрати'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.КурсовыеРазницыКлиентыПрибыль;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("РасчетКурсовыхРазниц");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //КурсовыеРазницыКлиентыПрибыль

		#Область КурсовыеРазницыКлиентыУбыток
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "КурсовыеРазницыКлиентыУбыток";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ФинансовыйРезультат;
		Элемент.Наименование = НСтр("ru='Курсовые разницы по расчетам с клиентами (убыток)';uk='Курсові різниці за розрахунками з клієнтами (збиток)'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияКонтрагентДоходыРасходы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Контрагент - Доходы/Расходы';uk='Рухи Контрагент - Доходи/Витрати'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.КурсовыеРазницыКлиентыУбыток;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("РасчетКурсовыхРазниц");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //КурсовыеРазницыКлиентыУбыток
		

		#Область КурсовыеРазницыПоставщикиПрибыль
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "КурсовыеРазницыПоставщикиПрибыль";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ФинансовыйРезультат;
		Элемент.Наименование = НСтр("ru='Курсовые разницы по расчетам с поставщиками (прибыль)';uk='Курсові різниці за розрахунками з постачальниками (прибуток)'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияКонтрагентДоходыРасходы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Контрагент - Доходы/Расходы';uk='Рухи Контрагент - Доходи/Витрати'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.КурсовыеРазницыПоставщикиПрибыль;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("РасчетКурсовыхРазниц");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //КурсовыеРазницыПоставщикиПрибыль

		#Область КурсовыеРазницыПоставщикиУбыток
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "КурсовыеРазницыПоставщикиУбыток";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ФинансовыйРезультат;
		Элемент.Наименование = НСтр("ru='Курсовые разницы по расчетам с поставщиками (убыток)';uk='Курсові різниці за розрахунками з постачальниками (збиток)'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияКонтрагентДоходыРасходы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Контрагент - Доходы/Расходы';uk='Рухи Контрагент - Доходи/Витрати'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Контрагенты;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.КурсовыеРазницыПоставщикиУбыток;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("РасчетКурсовыхРазниц");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //КурсовыеРазницыПоставщикиУбыток

		#Область ОтражениеПрочихАктивовПассивов
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ОтражениеПрочихАктивовПассивов";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ФинансовыйРезультат;
		Элемент.Наименование = НСтр("ru='Отражение прочих активов/пассивов';uk='Відображення інших активів/пасивів'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "";
		Элемент.ПредставлениеИсточникаДанных = "";
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОтражениеПрочихАктивовПассивов;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;
		#КонецОбласти //ОтражениеПрочихАктивовПассивов

		#Область ОтражениеРасходовЗаСчетПрочихАктивовПассивов
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ОтражениеРасходовЗаСчетПрочихАктивовПассивов";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ФинансовыйРезультат;
		Элемент.Наименование = НСтр("ru='Отражение расходов за счет прочих активов/пассивов';uk='Відображення витрат за рахунок інших активів/пасивів'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДоходыРасходыПрочиеАктивыПассивы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Доходы/Расходы - Прочие активы/пассивы';uk='Рухи Доходи/Витрати - Інші активи/пасиви'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ПрочиеАктивыПассивы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОтражениеРасходовЗаСчетПрочихАктивовПассивов;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ПоступлениеПредметовЛизинга");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ОтражениеРасходовЗаСчетПрочихАктивовПассивов
		

		#Область ПереоценкаРасчетовСКлиентами
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПереоценкаРасчетовСКлиентами";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ФинансовыйРезультат;
		Элемент.Наименование = НСтр("ru='Переоценка расчетов с клиентами';uk='Переоцінка розрахунків з клієнтами'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "";
		Элемент.ПредставлениеИсточникаДанных = "";
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПереоценкаРасчетовСКлиентами;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;
		#КонецОбласти //ПереоценкаРасчетовСКлиентами

		#Область ПереоценкаРасчетовСПоставщиками
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПереоценкаРасчетовСПоставщиками";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ФинансовыйРезультат;
		Элемент.Наименование = НСтр("ru='Переоценка расчетов с поставщиками';uk='Переоцінка розрахунків з постачальниками'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "";
		Элемент.ПредставлениеИсточникаДанных = "";
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПереоценкаРасчетовСПоставщиками;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;
		#КонецОбласти //ПереоценкаРасчетовСПоставщиками

		#Область ПереоценкаФинансовыхИнструментов
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПереоценкаФинансовыхИнструментов";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ФинансовыйРезультат;
		Элемент.Наименование = НСтр("ru='Переоценка финансовых инструментов';uk='Переоцінка фінансових інструментів'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "";
		Элемент.ПредставлениеИсточникаДанных = "";
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПереоценкаФинансовыхИнструментов;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;
		#КонецОбласти //ПереоценкаФинансовыхИнструментов

		#Область ПрочиеДоходы
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПрочиеДоходы";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ФинансовыйРезультат;
		Элемент.Наименование = НСтр("ru='Прочие доходы';uk='Інші доходи'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДенежныеСредстваДоходыРасходы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Денежные средства - Доходы/Расходы';uk='Рухи Грошові кошти - Доходи/Витрати'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПрочиеДоходы;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Истина;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ПоступлениеБезналичныхДенежныхСредств");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ПриходныйКассовыйОрдер");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ПрочиеДоходы

		#Область ПрочиеДоходыАктивыПассивы
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПрочиеДоходыАктивыПассивы";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ФинансовыйРезультат;
		Элемент.Наименование = НСтр("ru='Прочие доходы за счет прочих активов/пассивов';uk='Інші доходи за рахунок інших активів/пасивів'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДоходыРасходыПрочиеАктивыПассивы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Доходы/Расходы - Прочие активы/пассивы';uk='Рухи Доходи/Витрати - Інші активи/пасиви'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ПрочиеАктивыПассивы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПрочиеДоходыАктивыПассивы;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ПрочиеДоходыРасходы");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ПрочиеДоходыАктивыПассивы

		#Область ПрочиеРасходы
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПрочиеРасходы";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ФинансовыйРезультат;
		Элемент.Наименование = НСтр("ru='Прочие расходы';uk='Інші витрати'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДенежныеСредстваДоходыРасходы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Денежные средства - Доходы/Расходы';uk='Рухи Грошові кошти - Доходи/Витрати'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДенежныеСредства;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПрочиеРасходы;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Истина;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("РасходныйКассовыйОрдер");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("СписаниеБезналичныхДенежныхСредств");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ПрочиеРасходы

		#Область ПрочиеРасходыАктивыПассивы
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "ПрочиеРасходыАктивыПассивы";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ФинансовыйРезультат;
		Элемент.Наименование = НСтр("ru='Прочие расходы за счет прочих активов/пассивов';uk='Інші витрати за рахунок інших активів/пасивів'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДоходыРасходыПрочиеАктивыПассивы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Доходы/Расходы - Прочие активы/пассивы';uk='Рухи Доходи/Витрати - Інші активи/пасиви'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ПрочиеАктивыПассивы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПрочиеРасходыАктивыПассивы;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ПрочиеДоходыРасходы");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("РеализацияУслугПрочихАктивов");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //ПрочиеРасходыАктивыПассивы

		#Область РаспределениеДоходовПоНаправлениямДеятельности
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "РаспределениеДоходовПоНаправлениямДеятельности";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ФинансовыйРезультат;
		Элемент.Наименование = НСтр("ru='Распределение доходов по направлениям деятельности';uk='Розподіл доходів за напрямами діяльності'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДоходыРасходыПрочиеАктивыПассивы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Доходы/Расходы - Прочие активы/пассивы';uk='Рухи Доходи/Витрати - Інші активи/пасиви'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ПрочиеАктивыПассивы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РаспределениеДоходовПоНаправлениямДеятельности;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		#КонецОбласти //РаспределениеДоходовПоНаправлениямДеятельности

		#Область РаспределениеРБП
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "РаспределениеРБП";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ФинансовыйРезультат;
		Элемент.Наименование = НСтр("ru='Распределение расходов будущих периодов';uk='Розподіл витрат майбутніх періодів'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДоходыРасходыПрочиеАктивыПассивы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Доходы/Расходы - Прочие активы/пассивы';uk='Рухи Доходи/Витрати - Інші активи/пасиви'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РаспределениеРБП;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("РаспределениеРасходовБудущихПериодов");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //РаспределениеРБП

		#Область РаспределениеРасходовНаСебестоимость
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "РаспределениеРасходовНаСебестоимость";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ФинансовыйРезультат;
		Элемент.Наименование = НСтр("ru='Распределение расходов на себестоимость';uk='Розподіл витрат на собівартість'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияНоменклатураДоходыРасходы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Номенклатура - Доходы/Расходы';uk='Рухи Номенклатура - Доходи/Витрати'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РаспределениеРасходовНаСебестоимость;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Истина;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("АвансовыйОтчет");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ВозвратТоваровМеждуОрганизациями");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("КорректировкаРеализации");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("НачислениеОценочныхОбязательствПоОтпускам");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ОтражениеЗарплатыВФинансовомУчете");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ОтражениеЗарплатыВФинансовомУчете2_5");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ПрочиеДоходыРасходы");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ПередачаТоваровМеждуОрганизациями");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ПриобретениеТоваровУслуг");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ПриобретениеУслугПрочихАктивов");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("РаспределениеРасходовБудущихПериодов");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("РасходныйКассовыйОрдер");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("СписаниеБезналичныхДенежныхСредств");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ТаможеннаяДекларацияИмпорт");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //РаспределениеРасходовНаСебестоимость

		#Область РаспределениеРасходовПоНаправлениямДеятельности
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "РаспределениеРасходовПоНаправлениямДеятельности";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ФинансовыйРезультат;
		Элемент.Наименование = НСтр("ru='Распределение расходов по направлениям деятельности';uk='Розподіл витрат за напрямами діяльності'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДоходыРасходыПрочиеАктивыПассивы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Доходы/Расходы - Прочие активы/пассивы';uk='Рухи Доходи/Витрати - Інші активи/пасиви'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ПрочиеАктивыПассивы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РаспределениеРасходовПоНаправлениямДеятельности;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		#КонецОбласти //РаспределениеРасходовПоНаправлениямДеятельности

		#Область РасходыОтПереоценкиТоваров
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "РасходыОтПереоценкиТоваров";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ФинансовыйРезультат;
		Элемент.Наименование = НСтр("ru='Расходы от переоценки товаров';uk='Витрати від переоцінки товарів'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияНоменклатураДоходыРасходы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Номенклатура - Доходы/Расходы';uk='Рухи Номенклатура - Доходи/Витрати'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РасходыОтПереоценкиТоваров;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("РасчетСебестоимостиТоваров");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //РасходыОтПереоценкиТоваров

		#Область РеклассификацияДоходов
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "РеклассификацияДоходов";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ФинансовыйРезультат;
		Элемент.Наименование = НСтр("ru='Реклассификация доходов';uk='Рекласифікація доходів'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДоходыРасходыПрочиеАктивыПассивы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Доходы/Расходы - Прочие активы/пассивы';uk='Рухи Доходи/Витрати - Інші активи/пасиви'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеклассификацияДоходов;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ПрочиеДоходыРасходы");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //РеклассификацияДоходов

		#Область РеклассификацияРасходов
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "РеклассификацияРасходов";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ФинансовыйРезультат;
		Элемент.Наименование = НСтр("ru='Реклассификация расходов';uk='Рекласифікація витрат'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДоходыРасходыПрочиеАктивыПассивы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Доходы/Расходы - Прочие активы/пассивы';uk='Рухи Доходи/Витрати - Інші активи/пасиви'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеклассификацияРасходов;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ПрочиеДоходыРасходы");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //РеклассификацияРасходов

		#Область СписаниеПрочихДоходов
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "СписаниеПрочихДоходов";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ФинансовыйРезультат;
		Элемент.Наименование = НСтр("ru='Списание прочих доходов';uk='Списання інших доходів'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "";
		Элемент.ПредставлениеИсточникаДанных = "";
		Элемент.Описание = "";
		Элемент.Приход = Неопределено;
		Элемент.Расход = Неопределено;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СписаниеПрочихДоходов;
		Элемент.ИспользоватьВБюджетировании = Ложь;
		Элемент.ИспользоватьВМеждународномУчете = Ложь;
		Элемент.ИспользоватьДляВыбора = Ложь;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;
		#КонецОбласти //СписаниеПрочихДоходов

		#Область СписаниеПрочихРасходов
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "СписаниеПрочихРасходов";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ФинансовыйРезультат;
		Элемент.Наименование = НСтр("ru='Списание прочих расходов';uk='Списання інших витрат'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДоходыРасходыПрочиеАктивыПассивы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Доходы/Расходы - Прочие активы/пассивы';uk='Рухи Доходи/Витрати - Інші активи/пасиви'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ПрочиеАктивыПассивы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СписаниеПрочихРасходов;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ПрочиеДоходыРасходы");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		#КонецОбласти //СписаниеПрочихРасходов

		#Область СписаниеРасходовНаПартииПроизводства
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "СписаниеРасходовНаПартииПроизводства";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ФинансовыйРезультат;
		Элемент.Наименование = НСтр("ru='Списание расходов на партии производства';uk='Списання витрат на партії виробництва'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияНоменклатураНоменклатура";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Номенклатура - Номенклатура';uk='Рухи Номенклатура - Номенклатура'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.Номенклатура;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СписаниеРасходовНаПартииПроизводства;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Истина;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;
		
		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		Элемент.Документы = ТабличныеЧасти.Документы.Скопировать();
		Документ = Метаданные.Документы.Найти("ПроизводствоБезЗаказа");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("РаспределениеВозвратныхОтходов");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("РаспределениеПроизводственныхЗатрат");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("РаспределениеПрочихЗатрат");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;
		Документ = Метаданные.Документы.Найти("ЭтапПроизводства2_2");
		Если Документ <> Неопределено Тогда
			ЭлементТЧ = Элемент.Документы.Добавить();
			ЭлементТЧ.ИмяДокумента = Документ.Имя;
			НайденнаяСсылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Документ.ПолноеИмя());
			ЭлементТЧ.ИдентификаторОбъектаМетаданных = НайденнаяСсылка;
		КонецЕсли;

		Элемент.ФункциональныеОпции = ТабличныеЧасти.ФункциональныеОпции.Скопировать();
		ЭлементТЧ = Элемент.ФункциональныеОпции.Добавить();
		ЭлементТЧ.ИмяФункциональнойОпции = "ИспользоватьУправлениеПроизводством2_2";
		#КонецОбласти //СписаниеРасходовНаПартииПроизводства

		#Область СторнированиеПрочихДоходов
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "СторнированиеПрочихДоходов";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ФинансовыйРезультат;
		Элемент.Наименование = НСтр("ru='Сторнирование прочих доходов';uk='Сторнування інших доходів'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДоходыРасходыПрочиеАктивыПассивы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Доходы/Расходы - Прочие активы/пассивы';uk='Рухи Доходи/Витрати - Інші активи/пасиви'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ПрочиеАктивыПассивы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СторнированиеПрочихДоходов;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		#КонецОбласти //СторнированиеПрочихДоходов

		#Область СторнированиеПрочихРасходов
		Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
		Элемент.ИмяПредопределенныхДанных = "СторнированиеПрочихРасходов";
		Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ФинансовыйРезультат;
		Элемент.Наименование = НСтр("ru='Сторнирование прочих расходов';uk='Сторнування інших витрат'",КодОсновногоЯзыка);
		Элемент.ИсточникДанных = "ДвиженияДоходыРасходыПрочиеАктивыПассивы";
		Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Движения Доходы/Расходы - Прочие активы/пассивы';uk='Рухи Доходи/Витрати - Інші активи/пасиви'",КодОсновногоЯзыка);
		Элемент.Описание = "";
		Элемент.Приход = Перечисления.ТипыДанныхУчета.ДоходыРасходы;
		Элемент.Расход = Перечисления.ТипыДанныхУчета.ПрочиеАктивыПассивы;
		Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СторнированиеПрочихРасходов;
		Элемент.ИспользоватьВБюджетировании = Истина;
		Элемент.ИспользоватьВМеждународномУчете = Истина;
		Элемент.ИспользоватьДляВыбора = Истина;
		Элемент.ИспользоватьВРеестреДокументов = Ложь;
		Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

		//++ НЕ УТ
		ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
		//-- НЕ УТ
		#КонецОбласти //СторнированиеПрочихРасходов
		
#Область РаспределениеРасходовНаПрочиеРасходы

	Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
	Элемент.ИмяПредопределенныхДанных = "РаспределениеРасходовНаПрочиеРасходы";
	Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ФинансовыйРезультат;
	Элемент.Наименование = НСтр("ru='Распределение расходов на прочие расходы';uk='Розподіл витрат на інші витрати'",КодОсновногоЯзыка);
	Элемент.ИсточникДанных = "ПрочиеРасходы";
	Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Прочие расходы';uk='Інші витрати'",КодОсновногоЯзыка);
	Элемент.Описание = "";
	Элемент.Приход = Неопределено;
	Элемент.Расход = Неопределено;
	Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РаспределениеРасходовНаПрочиеРасходы;
	Элемент.ИспользоватьВБюджетировании = Истина;
	Элемент.ИспользоватьВМеждународномУчете = Истина;
	Элемент.ИспользоватьДляВыбора = Ложь;
	Элемент.ИспользоватьВРеестреДокументов = Ложь;
	Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

	//++ НЕ УТ
	ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
	//-- НЕ УТ   
		
#КонецОбласти //РаспределениеРасходовНаПрочиеРасходы

#Область РаспределениеКосвенныхПроизводственныхРасходов

	Элемент = Элементы.Добавить(); // см. СтрокаТЧПредопреденногоЭлемента
	Элемент.ИмяПредопределенныхДанных = "РаспределениеКосвенныхПроизводственныхРасходов";
	Элемент.Родитель = Справочники.НастройкиХозяйственныхОпераций.ФинансовыйРезультат;
	Элемент.Наименование = НСтр("ru='Распределение косвенных производственных расходов';uk='Розподіл непрямих виробничих витрат'",КодОсновногоЯзыка);
	Элемент.ИсточникДанных = "ПрочиеРасходыНезавершенногоПроизводства";
	Элемент.ПредставлениеИсточникаДанных = НСтр("ru='Прочие расходы незавершенного производства';uk='Інші витрати незавершеного виробництва'",КодОсновногоЯзыка);
	Элемент.Описание = "";
	Элемент.Приход = Неопределено;
	Элемент.Расход = Неопределено;
	Элемент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РаспределениеКосвенныхПроизводственныхРасходов;
	Элемент.ИспользоватьВБюджетировании = Истина;
	Элемент.ИспользоватьВМеждународномУчете = Истина;
	Элемент.ИспользоватьДляВыбора = Ложь;
	Элемент.ИспользоватьВРеестреДокументов = Ложь;
	Элемент.ИспользоватьДляОграниченийДоступа = Ложь;

	//++ НЕ УТ
	ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, Элемент.ИсточникДанных);
	//-- НЕ УТ   
		
#КонецОбласти //РаспределениеКосвенныхПроизводственныхРасходов

	#КонецОбласти //ФинансовыйРезультат

	#Область Финансы
	Элемент = Элементы.Добавить();  // см. СтрокаТЧПредопреденногоЭлемента
	Элемент.ИмяПредопределенныхДанных = "Финансы";
	Элемент.Наименование = НСтр("ru='Финансы';uk='Фінанси'",КодОсновногоЯзыка);

	#КонецОбласти //Финансы

КонецПроцедуры

// Вызывается при начальном заполнении создаваемого элемента.
//
// Параметры:
//  Объект                  - СправочникОбъект.НастройкиХозяйственныхОпераций - заполняемый объект.
//  Данные                  - СтрокаТаблицыЗначений - данные заполнения.
//  ДополнительныеПараметры - Структура - Дополнительные параметры.
//
Процедура ПриНачальномЗаполненииЭлемента(Объект, Данные, ДополнительныеПараметры) Экспорт
	
	
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли

#Область ОбработчикиСобытий

#КонецОбласти

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

// Возвращаемое значение:
// СправочникОбъект.НастройкиХозяйственныхОпераций, Структура - Содержит колонкти ТЧ:
// * ПоказателиРегистра - ТаблицаЗначений - 
// * Документы - ТаблицаЗначений -
// * ФункциональныеОпции - ТаблицаЗначений - 
Функция СтрокаТЧПредопреденногоЭлемента() Экспорт
	
	Возврат Новый Структура;
	
КонецФункции

#Область ОбработчикЗаполнения
//++ НЕ УТ

// Заполняет табличную часть ПоказателиРегистра по переданому имени регистра.
// 
// Параметры:
// 	Элемент - см. СтрокаТЧПредопреденногоЭлемента - строка таблицы значений описывающей предопределненые элементы спраочника.
// 	                                                Состав строки таблицы колонок соответствует набору реквизитов  справочника.
// 	ТабличныеЧасти - СправочникОбъект.НастройкиХозяйственныхОпераций, Структура - Содержит колонкти ТЧ:
// 	* ПоказателиРегистра - ТаблицаЗначений - 
// 	ИсточникДанных - Строка - Имя регистра источника данных показателей.
//
Процедура ДобавитьПоказателиИсточника(Элемент, ТабличныеЧасти, ИсточникДанных)
	
	ПоказателиРегистра = ПоказателиРегистра(ИсточникДанных);
	Если ПоказателиРегистра <> Неопределено Тогда
		Элемент.ПоказателиРегистра = ТабличныеЧасти.ПоказателиРегистра.Скопировать();
		Для каждого Показатель Из ПоказателиРегистра Цикл
			НоваяСтрока = Элемент.ПоказателиРегистра.Добавить();
			НоваяСтрока.Показатель = Показатель.Ключ;
			НоваяСтрока.Использование = Истина;
		КонецЦикла;
		Элемент.ПоказателиРегистра.Сортировать("Показатель");
	КонецЕсли;
		
Конецпроцедуры
//-- НЕ УТ

Процедура ЗаполнитьПредопределенныеЭлементыПоДанымИзКода()
	Языки = ЯзыкиКонфигурации();
	МетаданныеОбъекта = Метаданные.Справочники.НастройкиХозяйственныхОпераций;
	
	ЛокализуемыеРеквизитыОбъекта = НаименованияЛокализуемыхРеквизитыОбъекта(МетаданныеОбъекта);
	ПредопределенныеДанные = ПредопределенныеДанныеОбъекта(МетаданныеОбъекта, ЛокализуемыеРеквизитыОбъекта);
	
	МультиязычныеСтрокиВРеквизитах = МультиязычныеСтрокиВРеквизитах(МетаданныеОбъекта);
	ПоддерживаетсяИерархия =  ПредопределенныеДанные.Колонки.Найти("ЭтоГруппа") <> Неопределено;
	
	ТабличныеЧасти = Новый Массив;
	ТабличныеЧасти.Добавить("ПоказателиРегистра");
	ТабличныеЧасти.Добавить("Документы");
	ТабличныеЧасти.Добавить("ФункциональныеОпции");
	Для Каждого ДанныеЭлемента Из ПредопределенныеДанные Цикл
		ЭлементСсылка = Справочники.НастройкиХозяйственныхОпераций[ДанныеЭлемента.ИмяПредопределенныхДанных];
		ЭлементОбъект = ЭлементСсылка.ПолучитьОбъект();
		СписокРеквизитов = "Родитель,ИмяПредопределенныхДанных,Наименование";
		Если НЕ ЭлементОбъект.ЭтоГруппа Тогда
			СписокРеквизитов = СписокРеквизитов + ",ИсточникДанных,ПредставлениеИсточникаДанных,Приход,Расход,Описание,ХозяйственнаяОперация,ИспользоватьВБюджетировании,ИспользоватьВМеждународномУчете,ИспользоватьДляВыбора,ИспользоватьВРеестреДокументов,ИспользоватьДляОграниченийДоступа";
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(ЭлементОбъект, ДанныеЭлемента, СписокРеквизитов);
		Если НЕ ЭлементОбъект.ЭтоГруппа Тогда
			Для Каждого ИмяТЧ Из ТабличныеЧасти Цикл
				ЭлементОбъект[ИмяТЧ].Загрузить(ДанныеЭлемента[ИмяТЧ]);
			КонецЦикла;
		КонецЕсли;
		Если ЛокализуемыеРеквизитыОбъекта.Количество() > 0 Тогда
			Если МультиязычныеСтрокиВРеквизитах Тогда
				
				КодЯзыка = ОбщегоНазначения.КодОсновногоЯзыка();
				Если ЗначениеЗаполнено(КодЯзыка) Тогда
					Для каждого ИмяЛокализуемогоРеквизита Из ЛокализуемыеРеквизитыОбъекта Цикл
						ЭлементОбъект[ИмяЛокализуемогоРеквизита.Ключ] = ДанныеЭлемента[ИмяЛокализуемогоРеквизита.Ключ + "_" + КодЯзыка];
					КонецЦикла;
				КонецЕсли;
				
				КодЯзыка = МультиязычностьСервер.КодПервогоДополнительногоЯзыкаИнформационнойБазы();
				Если ЗначениеЗаполнено(КодЯзыка) Тогда
					Для каждого ИмяЛокализуемогоРеквизита Из ЛокализуемыеРеквизитыОбъекта Цикл
						ЭлементОбъект[ИмяЛокализуемогоРеквизита.Ключ + "Язык1"] = ДанныеЭлемента[ИмяЛокализуемогоРеквизита.Ключ + "_" + КодЯзыка];
					КонецЦикла;
				КонецЕсли;
				
				КодЯзыка = МультиязычностьСервер.КодВторогоДополнительногоЯзыкаИнформационнойБазы();
				Если ЗначениеЗаполнено(КодЯзыка) Тогда
					Для каждого ИмяЛокализуемогоРеквизита Из ЛокализуемыеРеквизитыОбъекта Цикл
						ЭлементОбъект[ИмяЛокализуемогоРеквизита.Ключ + "Язык2"] = ДанныеЭлемента[ИмяЛокализуемогоРеквизита.Ключ + "_" + КодЯзыка];
					КонецЦикла;
				КонецЕсли;
				
			ИначеЕсли НЕ (ПоддерживаетсяИерархия И ЭлементОбъект.ЭтоГруппа) Тогда
				
				Для каждого КодЯзыка Из Языки Цикл
					Представления = ЭлементОбъект.Представления; // ТабличнаяЧасть - 
					НовоеПредставление = Представления.Добавить();
					НовоеПредставление.КодЯзыка = КодЯзыка;
					Для каждого ИмяЛокализуемогоРеквизита Из ЛокализуемыеРеквизитыОбъекта Цикл
						Значение = ДанныеЭлемента[ИмяЛокализуемогоРеквизита.Ключ + "_" + КодЯзыка];
						НовоеПредставление[ИмяЛокализуемогоРеквизита.Ключ] = ?(ЗначениеЗаполнено(Значение), Значение, ДанныеЭлемента[ИмяЛокализуемогоРеквизита.Ключ]);
					КонецЦикла;
				КонецЦикла;
				
			КонецЕсли;
		КонецЕсли;
		ЭлементОбъект.ОбменДанными.Загрузка = Истина;
		ЭлементОбъект.Записать();
	КонецЦикла;
	
КонецПроцедуры

// Возвращает предобределенные даные объекта
// 
// Параметры:
// 	МетаданныеОбъекта - ОбъектМетаданныхСправочник - Метаданные заполняемого справочника
// Возвращаемое значение:
// 	ТаблицаЗначений - Описание
Функция ПредопределенныеДанныеОбъекта(МетаданныеОбъекта, ЛокализуемыеРеквизиты = Неопределено) Экспорт
	
	КодыЯзыков = ЯзыкиКонфигурации();
	МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(МетаданныеОбъекта.ПолноеИмя());
	Если Не ЗначениеЗаполнено(ЛокализуемыеРеквизиты) Тогда
		ЛокализуемыеРеквизиты = НаименованияЛокализуемыхРеквизитыОбъекта(МетаданныеОбъекта);
	КонецЕсли;
	ПредопределенныеДанные = Новый ТаблицаЗначений;
	ТабличныеЧасти = Новый Структура;
	
	Для Каждого Реквизит Из МетаданныеОбъекта.СтандартныеРеквизиты Цикл
		ДобавитьКолонкуТаблицыПредопределенныхДанных(ПредопределенныеДанные, Реквизит, ЛокализуемыеРеквизиты, КодыЯзыков);
	КонецЦикла;
	
	Для Каждого Реквизит Из МетаданныеОбъекта.Реквизиты Цикл
		ДобавитьКолонкуТаблицыПредопределенныхДанных(ПредопределенныеДанные, Реквизит, ЛокализуемыеРеквизиты, КодыЯзыков);
	КонецЦикла;
	
	Для Каждого ТабличнаяЧасть Из МетаданныеОбъекта.ТабличныеЧасти Цикл
		
		ПредопределенныеДанные.Колонки.Добавить(ТабличнаяЧасть.Имя, Новый ОписаниеТипов("ТаблицаЗначений"));
		Таблица = Новый ТаблицаЗначений;
		Для Каждого Реквизит Из ТабличнаяЧасть.СтандартныеРеквизиты Цикл
			ДобавитьКолонкуТаблицыПредопределенныхДанных(Таблица, Реквизит, ЛокализуемыеРеквизиты, КодыЯзыков);
		КонецЦикла;
		
		Для Каждого Реквизит Из ТабличнаяЧасть.Реквизиты Цикл
			ДобавитьКолонкуТаблицыПредопределенныхДанных(Таблица, Реквизит, ЛокализуемыеРеквизиты, КодыЯзыков);
		КонецЦикла;
		ТабличныеЧасти.Вставить(ТабличнаяЧасть.Имя, Таблица);
		
	КонецЦикла;
	
	Если ПредопределенныеДанные.Колонки.Найти("ИмяПредопределенныхДанных") <> Неопределено Тогда
		ПредопределенныеДанные.Индексы.Добавить("ИмяПредопределенныхДанных");
	КонецЕсли;
	
	МенеджерОбъекта.ПриНачальномЗаполненииЭлементов(КодыЯзыков, ПредопределенныеДанные, ТабличныеЧасти);
	Возврат ПредопределенныеДанные;
	
КонецФункции

#Область МультиязычностьСервер

Функция ЯзыкиКонфигурации()
	
	Языки = Новый Массив;
	Для каждого Язык Из Метаданные.Языки Цикл
		Языки.Добавить(Язык.КодЯзыка);
	КонецЦикла;
	Возврат Языки;

КонецФункции

Функция МультиязычныеСтрокиВРеквизитах(ОбъектМетаданных) Экспорт
	Возврат ОбъектМетаданных.ТабличныеЧасти.Найти("Представления") = Неопределено;
КонецФункции

// Параметры:
// 	ОбъектМетаданных - ОбъектМетаданныхСправочник - Описание
// 	Префикс - Строка - Описание
// Возвращаемое значение:
// 	Соответствие - Описание
Функция НаименованияЛокализуемыхРеквизитыОбъекта(ОбъектМетаданных, Префикс = "")
	
	СписокРеквизитовОбъекта = Новый Соответствие;
	Если МультиязычныеСтрокиВРеквизитах(ОбъектМетаданных) Тогда
	
		ДлинаСуффиксаЯзыка = СтрДлина("Язык1");
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 0
			|	*
			|ИЗ
			|	" + ОбъектМетаданных.ПолноеИмя();
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Для каждого Колонка Из РезультатЗапроса.Колонки Цикл
			Если СтрЗаканчиваетсяНа(Колонка.Имя, "Язык1") Или СтрЗаканчиваетсяНа(Колонка.Имя, "Язык2") Тогда
				СписокРеквизитовОбъекта.Вставить(Префикс + Лев(Колонка.Имя, СтрДлина(Колонка.Имя) - ДлинаСуффиксаЯзыка), Истина);
			КонецЕсли;
		КонецЦикла;
	Иначе
		
		Реквизиты = ОбъектМетаданных.ТабличныеЧасти.Представления.Реквизиты; // КоллекцияКолонокТаблицыЗначений - 
		Для каждого Реквизит Из Реквизиты Цикл
			Если СтрСравнить(Реквизит.Имя, "КодЯзыка") = 0 Тогда
				Продолжить;
			КонецЕсли;
			СписокРеквизитовОбъекта.Вставить(Префикс + Реквизит.Имя, Истина);
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат СписокРеквизитовОбъекта;
	
КонецФункции

Процедура ДобавитьКолонкуТаблицыПредопределенныхДанных(ПредопределенныеДанные, Реквизит, ЛокализуемыеРеквизиты, Языки)
	
	Если ЛокализуемыеРеквизиты[Реквизит.Имя] = Истина Тогда
		ПредопределенныеДанные.Колонки.Добавить(Реквизит.Имя, Реквизит.Тип, ПризнакЛокализуемогоРеквизита());
		Для каждого Язык Из Языки Цикл
			ПредопределенныеДанные.Колонки.Добавить(Реквизит.Имя + "_" + Язык, Реквизит.Тип, ПризнакЛокализуемогоРеквизита());
		КонецЦикла;
	Иначе
		Если ЭтоЛокализуемыйРеквизит(Реквизит) Тогда
			ИмяБезСуффикса = ИмяБезСуффиксаЯзык(Реквизит);
			ЛокализуемыеРеквизиты.Вставить(ИмяБезСуффикса, Истина);
			Для каждого Язык Из Языки Цикл
				ПредопределенныеДанные.Колонки.Добавить(ИмяБезСуффикса + "_" + Язык, Реквизит.Тип, ПризнакЛокализуемогоРеквизита());
			КонецЦикла;
		Иначе
			ПредопределенныеДанные.Колонки.Добавить(Реквизит.Имя, Реквизит.Тип);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

Функция ИмяБезСуффиксаЯзык(Знач Реквизит)
	
	Возврат Лев(Реквизит.Имя, СтрДлина(Реквизит.Имя) - СтрДлина("Язык1"));

КонецФункции

Функция ЭтоЛокализуемыйРеквизит(Реквизит)
	Возврат СтрЗаканчиваетсяНа(Реквизит.Имя, "Язык1") Или СтрЗаканчиваетсяНа(Реквизит.Имя, "Язык2");
КонецФункции

Функция ПризнакЛокализуемогоРеквизита()
	Возврат "Локализуемый";
КонецФункции

#КонецОбласти

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

// Добавляет в список процедуры-обработчики обновления данных ИБ
// для всех поддерживаемых версий библиотеки или конфигурации.
// Вызывается перед началом обновления данных ИБ для построения плана обновления.
//
//  Обработчики - ТаблицаЗначений - описание полей, см. в процедуре
//                ОбновлениеИнформационнойБазы.НоваяТаблицаОбработчиковОбновления.
//
// Пример добавления процедуры-обработчика в список:
//  Обработчик = Обработчики.Добавить();
//  Обработчик.Версия              = "1.1.0.0";
//  Обработчик.Процедура           = "ОбновлениеИБ.ПерейтиНаВерсию_1_1_0_0";
//  Обработчик.МонопольныйРежим    = Ложь;
//
// Параметры:
//  Обработчики - см. ОбновлениеИнформационнойБазы.НоваяТаблицаОбработчиковОбновления
//
Процедура ОписаниеОбработчиковОбновления(Обработчики) Экспорт

	Обработчик = Обработчики.Добавить();
	Обработчик.Процедура = "Справочники.НастройкиХозяйственныхОпераций.ЗаполнитьПредопределенныеНастройкиХозяйственныхОпераций";
	Обработчик.Версия = "3.5.4.350";
	Обработчик.РежимВыполнения = "Оперативно";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("cd45225d-f1f6-4a31-a02a-c00bf89351c1");
	Обработчик.Комментарий = НСтр("ru='Обновляет реквизиты предопределенных элементов справочника  ""Настройки хозяйственных операций"" согласно заданным настройкам в текстовых макетах.';uk='Оновлює реквізити напередвизначених елементів довідника ""Настройки господарських операцій"" згідно заданим настройкам в текстових макетах.'");
	
	Изменяемые = Новый Массив;
	Изменяемые.Добавить(Метаданные.Справочники.НастройкиХозяйственныхОпераций.ПолноеИмя());
	Обработчик.ИзменяемыеОбъекты = СтрСоединить(Изменяемые, ",");

	Обработчик = Обработчики.Добавить();
	Обработчик.Процедура = "Справочники.НастройкиХозяйственныхОпераций.ЗаполнитьПредопределенныеНастройкиХозяйственныхОпераций";
	Обработчик.Версия = "3.5.4.434";
	Обработчик.РежимВыполнения = "Оперативно";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("fbe6ea0b-957c-4fe2-909d-9a6ccd5b6c02");
	Обработчик.Комментарий = НСтр("ru='Обновляет реквизиты предопределенных элементов справочника  ""Настройки хозяйственных операций"" согласно заданным настройкам в текстовых макетах.';uk='Оновлює реквізити напередвизначених елементів довідника ""Настройки господарських операцій"" згідно заданим настройкам в текстових макетах.'");
	
	Изменяемые = Новый Массив;
	Изменяемые.Добавить(Метаданные.Справочники.НастройкиХозяйственныхОпераций.ПолноеИмя());
	Обработчик.ИзменяемыеОбъекты = СтрСоединить(Изменяемые, ",");
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Процедура = "Справочники.НастройкиХозяйственныхОпераций.ЗаполнитьПредопределенныеНастройкиХозяйственныхОпераций";
	Обработчик.Версия = "3.5.7.5";
	Обработчик.РежимВыполнения = "Оперативно";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("a6c8d1db-2d0b-42aa-aaf1-c9fea580d151");
	Обработчик.Комментарий = НСтр("ru='Обновляет реквизиты предопределенных элементов справочника  ""Настройки хозяйственных операций"" согласно заданным настройкам в текстовых макетах.';uk='Оновлює реквізити напередвизначених елементів довідника ""Настройки господарських операцій"" згідно заданим настройкам в текстових макетах.'");
	
	Изменяемые = Новый Массив;
	Изменяемые.Добавить(Метаданные.Справочники.НастройкиХозяйственныхОпераций.ПолноеИмя());
	Обработчик.ИзменяемыеОбъекты = СтрСоединить(Изменяемые, ",");
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Процедура = "Справочники.НастройкиХозяйственныхОпераций.ЗаполнитьПредопределенныеНастройкиХозяйственныхОпераций";
	Обработчик.Версия = "3.5.10.15";
	Обработчик.РежимВыполнения = "Оперативно";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("9b50b6b1-38d3-4093-ae80-5b1087eb90bb");
	Обработчик.Комментарий = НСтр("ru='Обновляет реквизиты предопределенных элементов справочника  ""Настройки хозяйственных операций"".';uk='Оновлює реквізити напередвизначених елементів довідника ""Настройки господарських операцій"".'");

	Изменяемые = Новый Массив;
	Изменяемые.Добавить(Метаданные.Справочники.НастройкиХозяйственныхОпераций.ПолноеИмя());
	Обработчик.ИзменяемыеОбъекты = СтрСоединить(Изменяемые, ",");
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Процедура = "Справочники.НастройкиХозяйственныхОпераций.ЗаполнитьПредопределенныеНастройкиХозяйственныхОпераций";
	Обработчик.Версия = "3.5.11.6";
	Обработчик.РежимВыполнения = "Оперативно";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("795979cb-a3b5-47c9-a4c8-ecbc27adda4d");
	Обработчик.Комментарий = НСтр("ru='Обновляет реквизиты предопределенных элементов справочника  ""Настройки хозяйственных операций"".';uk='Оновлює реквізити напередвизначених елементів довідника ""Настройки господарських операцій"".'");
	
КонецПроцедуры

// Обработчик первого запуска.
// Заполняет предопределенные элементы справочника "НастройкиХозяйственныхОпераций".
//
Процедура ЗаполнитьПредопределенныеНастройкиХозяйственныхОпераций(Параметры = Неопределено) Экспорт
	
	ЗаполнитьПредопределенныеЭлементыПоДанымИзКода();
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
