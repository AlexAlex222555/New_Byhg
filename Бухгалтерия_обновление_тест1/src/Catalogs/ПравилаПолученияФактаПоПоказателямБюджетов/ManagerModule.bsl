#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область Отчеты

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//   Параметры - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.Параметры
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	//++ НЕ УТ
	Отчеты.РезультатРаботыПравилПолученияФактическихДанных.ДобавитьКомандуОтчетаПоПоказателюБюджетов(КомандыОтчетов);
	//-- НЕ УТ
	
КонецПроцедуры

#КонецОбласти

#Область ОбновлениеИнформационнойБазы


// Добавляет в список процедуры-обработчики обновления данных ИБ
// для всех поддерживаемых версий библиотеки или конфигурации.
// Вызывается перед началом обновления данных ИБ для построения плана обновления.
//
//  Обработчики - ТаблицаЗначений - описание полей, см. в процедуре
//                ОбновлениеИнформационнойБазы.НоваяТаблицаОбработчиковОбновления.
//
// Пример добавления процедуры-обработчика в список:
//  Обработчик = Обработчики.Добавить();
//  Обработчик.Версия              = "1.1.0.0";
//  Обработчик.Процедура           = "ОбновлениеИБ.ПерейтиНаВерсию_1_1_0_0";
//  Обработчик.МонопольныйРежим    = Ложь;
//
// Параметры:
// 	Обработчики - см. ОбновлениеИнформационнойБазы.НоваяТаблицаОбработчиковОбновления
//
Процедура ОписаниеОбработчиковОбновления(Обработчики) Экспорт

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "2.5.4.400";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Справочники.ПравилаПолученияФактаПоПоказателямБюджетов.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("22c19361-ba31-4e74-bd21-f6f1f5a6342f");
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Справочники.ПравилаПолученияФактаПоПоказателямБюджетов.ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию";
	Обработчик.ПроцедураПроверки = "БюджетированиеСервер.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.ЧитаемыеОбъекты = "Справочник.ПравилаПолученияФактаПоПоказателямБюджетов";
	Обработчик.ИзменяемыеОбъекты = "Справочник.ПравилаПолученияФактаПоПоказателямБюджетов";
	Обработчик.БлокируемыеОбъекты = "Документ.ЭкземплярБюджета,"
		+ "Отчет.ПроверкаСвязейПоказателейБюджетов,"
		+ "Отчет.ОборотнаяВедомостьБюджетирования,"
		+ "Отчет.БюджетныйОтчет,"
		+ "Отчет.ОборотноСальдоваяВедомостьБюджетирования";
	Обработчик.Комментарий = НСтр("ru='В справочнике ""Правила получения факта по показателям бюджетов"" заполняет новые реквизиты ХешНастроек и ХешСхемыКомпоновкиДанных с учетом хозяйственной операции, а также заменяет пустые значения аналитики на единое значение пустой аналитики Неопределено.';uk='У довіднику ""Правила отримання факту за показниками бюджетів"" заповнює нові реквізити ХешНастроек та ХешСхемыКомпоновкиДанных з урахуванням господарської операції, а також замінює порожні значення аналітики на єдине значення порожньої аналітики Неопределено.'");
	
КонецПроцедуры

Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Правила.Ссылка
	|ИЗ
	|	Справочник.ПравилаПолученияФактаПоПоказателямБюджетов КАК Правила
	|ГДЕ
	|	Правила.ХешНастроек = """"
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Правила.Ссылка
	|ИЗ
	|	Справочник.ПравилаПолученияФактаПоПоказателямБюджетов КАК Правила
	|ГДЕ
	|	Правила.РазделИсточникаДанных = ЗНАЧЕНИЕ(Перечисление.РазделыИсточниковДанныхБюджетирования.ПроизвольныеДанные)
	|	И Правила.ХешСхемыКомпоновкиДанных = """"
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПравилаПолученияФактаПоПоказателямБюджетов.Ссылка
	|ИЗ
	|	Справочник.ПравилаПолученияФактаПоПоказателямБюджетов КАК ПравилаПолученияФактаПоПоказателямБюджетов
	|ГДЕ
	|	НЕ ПравилаПолученияФактаПоПоказателямБюджетов.РасширенныйРежимНастройкиЗаполненияАналитики
	|	И (ВЫБОР
	|				КОГДА ПравилаПолученияФактаПоПоказателямБюджетов.ПоказательБюджетов.КоличествоИспользуемыхАналитик = 1
	|					ТОГДА (ВЫРАЗИТЬ(ПравилаПолученияФактаПоПоказателямБюджетов.ВыражениеЗаполненияАналитики1 КАК СТРОКА(1))) = """"
	|							И НЕ ПравилаПолученияФактаПоПоказателямБюджетов.ЗаполнятьУказаннымЗначениемАналитику1
	|				ИНАЧЕ ЛОЖЬ
	|			КОНЕЦ
	|			ИЛИ ВЫБОР
	|				КОГДА ПравилаПолученияФактаПоПоказателямБюджетов.ПоказательБюджетов.КоличествоИспользуемыхАналитик = 2
	|					ТОГДА (ВЫРАЗИТЬ(ПравилаПолученияФактаПоПоказателямБюджетов.ВыражениеЗаполненияАналитики2 КАК СТРОКА(1))) = """"
	|							И НЕ ПравилаПолученияФактаПоПоказателямБюджетов.ЗаполнятьУказаннымЗначениемАналитику2
	|				ИНАЧЕ ЛОЖЬ
	|			КОНЕЦ
	|			ИЛИ ВЫБОР
	|				КОГДА ПравилаПолученияФактаПоПоказателямБюджетов.ПоказательБюджетов.КоличествоИспользуемыхАналитик = 3
	|					ТОГДА (ВЫРАЗИТЬ(ПравилаПолученияФактаПоПоказателямБюджетов.ВыражениеЗаполненияАналитики3 КАК СТРОКА(1))) = """"
	|							И НЕ ПравилаПолученияФактаПоПоказателямБюджетов.ЗаполнятьУказаннымЗначениемАналитику3
	|				ИНАЧЕ ЛОЖЬ
	|			КОНЕЦ
	|			ИЛИ ВЫБОР
	|				КОГДА ПравилаПолученияФактаПоПоказателямБюджетов.ПоказательБюджетов.КоличествоИспользуемыхАналитик = 4
	|					ТОГДА (ВЫРАЗИТЬ(ПравилаПолученияФактаПоПоказателямБюджетов.ВыражениеЗаполненияАналитики4 КАК СТРОКА(1))) = """"
	|							И НЕ ПравилаПолученияФактаПоПоказателямБюджетов.ЗаполнятьУказаннымЗначениемАналитику4
	|				ИНАЧЕ ЛОЖЬ
	|			КОНЕЦ
	|			ИЛИ ВЫБОР
	|				КОГДА ПравилаПолученияФактаПоПоказателямБюджетов.ПоказательБюджетов.КоличествоИспользуемыхАналитик = 5
	|					ТОГДА (ВЫРАЗИТЬ(ПравилаПолученияФактаПоПоказателямБюджетов.ВыражениеЗаполненияАналитики5 КАК СТРОКА(1))) = """"
	|							И НЕ ПравилаПолученияФактаПоПоказателямБюджетов.ЗаполнятьУказаннымЗначениемАналитику5
	|				ИНАЧЕ ЛОЖЬ
	|			КОНЕЦ
	|			ИЛИ ВЫБОР
	|				КОГДА ПравилаПолученияФактаПоПоказателямБюджетов.ПоказательБюджетов.КоличествоИспользуемыхАналитик = 6
	|					ТОГДА (ВЫРАЗИТЬ(ПравилаПолученияФактаПоПоказателямБюджетов.ВыражениеЗаполненияАналитики6 КАК СТРОКА(1))) = """"
	|							И НЕ ПравилаПолученияФактаПоПоказателямБюджетов.ЗаполнятьУказаннымЗначениемАналитику6
	|				ИНАЧЕ ЛОЖЬ
	|			КОНЕЦ)
	|	И НЕ ПравилаПолученияФактаПоПоказателямБюджетов.ПоказательБюджетов.ЭтоГруппа";
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
	ПустыеЗначенияДляОбработки = БюджетированиеВызовСервера.ЗаменяемыеПустыеЗначенияАналитики();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	Таблица.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ПравилаПолученияФактаПоПоказателямБюджетов КАК Таблица
	|ГДЕ
	|	(Таблица.ЗначениеАналитики1 В (&ПустыеЗначенияДляОбработки)
	|			ИЛИ Таблица.ЗначениеАналитики2 В (&ПустыеЗначенияДляОбработки)
	|			ИЛИ Таблица.ЗначениеАналитики3 В (&ПустыеЗначенияДляОбработки)
	|			ИЛИ Таблица.ЗначениеАналитики4 В (&ПустыеЗначенияДляОбработки)
	|			ИЛИ Таблица.ЗначениеАналитики5 В (&ПустыеЗначенияДляОбработки)
	|			ИЛИ Таблица.ЗначениеАналитики6 В (&ПустыеЗначенияДляОбработки)
	|			ИЛИ НЕ Таблица.УдалитьХешиПересчитаны_2_5_4)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	Таблица.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ПравилаПолученияФактаПоПоказателямБюджетов КАК Таблица
	|ГДЕ
	|	Таблица.РазделИсточникаДанных <> ЗНАЧЕНИЕ(Перечисление.РазделыИсточниковДанныхБюджетирования.ПроизвольныеДанные)
	|	И Таблица.ХешСхемыКомпоновкиДанных <> """"
	|";
	
	Запрос.УстановитьПараметр("ПустыеЗначенияДляОбработки", ПустыеЗначенияДляОбработки);
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	МетаданныеСправочника = Метаданные.Справочники.ПравилаПолученияФактаПоПоказателямБюджетов;
	ПолноеИмяОбъекта = "Справочник.ПравилаПолученияФактаПоПоказателямБюджетов";
	
	Выборка = ОбновлениеИнформационнойБазы.ВыбратьСсылкиДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта);
	
	ПустыеЗначенияДляОбработки = БюджетированиеВызовСервера.ЗаменяемыеПустыеЗначенияАналитики();
	МаксимальноеКоличествоАналитик = БюджетированиеКлиентСервер.МаксимальноеКоличествоАналитик();
	ЗначениеЗамены = БюджетированиеКлиентСервер.ПустоеЗначениеАналитики();
	
	РеквизитыПоиска = Новый Массив;
	Для Сч = 1 По МаксимальноеКоличествоАналитик Цикл
		РеквизитыПоиска.Добавить("ЗначениеАналитики" + Сч);
	КонецЦикла;
	
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяОбъекта);
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			Блокировка.Заблокировать();
			
			
			СправочникОбъект = Выборка.Ссылка.ПолучитьОбъект();
			Если СправочникОбъект = Неопределено Тогда
				
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выборка.Ссылка);
				
			Иначе
				
				ОбъектИзменен = Ложь;
				
				Если НЕ СправочникОбъект.УдалитьХешиПересчитаны_2_5_4
					ИЛИ (ЗначениеЗаполнено(СправочникОбъект.ХешСхемыКомпоновкиДанных)
					   И СправочникОбъект.РазделИсточникаДанных <> Перечисления.РазделыИсточниковДанныхБюджетирования.ПроизвольныеДанные) Тогда
					
					// Сделаем слепок настроек и схемы для будущего сравнения их между собой без анализа каждого элемента.
					БюджетированиеСервер.ЗаполнитьРеквизитыХешейНастроекИСхемы(СправочникОбъект);
					СправочникОбъект.УдалитьХешиПересчитаны_2_5_4 = Истина;
					ОбъектИзменен = Истина;
				КонецЕсли;
				
				// Заполним настройки заполнения аналитик
				Если Не СправочникОбъект.РасширенныйРежимНастройкиЗаполненияАналитики 
					И НЕ СправочникОбъект.ПоказательБюджетов.ЭтоГруппа Тогда
					БюджетированиеСервер.ЗаполнитьРеквизитыОбъектаНастроекЗаполненияАналитики(СправочникОбъект);
					ОбъектИзменен = Истина;
				КонецЕсли;
				
				БюджетированиеВызовСервера.ВыполнитьЗаменыЗначенийВОбъекте(
					СправочникОбъект,
				    РеквизитыПоиска,
				    ПустыеЗначенияДляОбработки,
				    ЗначениеЗамены,
				    ОбъектИзменен
				);
				
				Если ОбъектИзменен Тогда
					ОбновлениеИнформационнойБазы.ЗаписатьОбъект(СправочникОбъект, Истина);
				Иначе
					ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выборка.Ссылка);
				КонецЕсли;
				
			КонецЕсли;
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			ТекстСообщения = НСтр("ru='Не удалось записать справочник: %Ссылка% по причине: %Причина%';uk='Не вдалося записати довідник: %Ссылка% по причині: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", Выборка.Ссылка);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(
				ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Предупреждение,
				МетаданныеСправочника,
				Выборка.Ссылка,
				ТекстСообщения
			);
		КонецПопытки;
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта);
	
КонецПроцедуры


#КонецОбласти

#КонецЕсли